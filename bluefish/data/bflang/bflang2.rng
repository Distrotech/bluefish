<?xml version="1.0" encoding="utf-8"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0"
         xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
         xmlns:rng="http://relaxng.org/ns/structure/1.0"
         datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
         ns="http://bluefish.openoffice.nl/ns/bflang/2.0">

	<a:documentation>RELAX NG flat schema for Bluefish Language Files (bflang) containing syntax highlighting and autocompletion information for the bluefish <a href="http://bluefish.openoffice.nl">Bluefish</a> editor.</a:documentation>

	<start>
		<element name="bflang">
			<a:documentation>The root tag of a bflang2 file.</a:documentation>
			<attribute name="name">
				<a:documentation>A human readable name of the language that is defined. E.g. C, C++, JavaScript. The name mut be unique regarding the other language files,...</a:documentation>
				<data type="normalizedString"/>
			</attribute>
			<optional>
				<group>
					<attribute name="contexts">
						<a:documentation>The size of the context table. This value is an indication for the compiler how much memory should be allocated. It optimises the loading speed. As illustration: contexts="100" (4.69 Kbytes)</a:documentation>
						<data type="positiveInteger"/>
					</attribute>
					<attribute name="matches">
						<a:documentation>The size of the matches table. This value is an indication for the compiler how much memory should be allocated. It optimises the loading speed. As illustration: matches="1752" (123.19 Kbytes)</a:documentation>
						<data type="positiveInteger"/>
					</attribute>
					<attribute name="table">
						<a:documentation>The size of the DFA table, compiled patterns for each contex. This value is an indication for the compiler how much memory should be allocated. It optimises the loading speed. As illustration: table="7906" (1976.50 Kbytes)</a:documentation>
						<data type="positiveInteger"/>
					</attribute>
				</group>
			</optional>
			<element name="header">
				<oneOrMore>
					<element name="mime">
					<a:documentation>Every language file should have at least one unique mime type (compared to the other language files) in order to be available to the user.</a:documentation>
						<attribute name="type">
							<data type="token"/>
						</attribute>
						<empty/>
					</element><!-- mime -->
				</oneOrMore>
				<zeroOrMore>
					<choice>
						<element name="option">
							<attribute name="name">
								<a:documentation></a:documentation>
								<data type="ID"/>
							</attribute>
							<attribute name="default">
								<a:documentation>Value 0 or 1.</a:documentation>
								<data type="boolean"/>
							</attribute>
							<optional>
								<attribute name="description">
									<a:documentation>Not used (yet).</a:documentation>
									<data type="string"/>
								</attribute>
							</optional>
							<empty/>
						</element><!-- option -->
						<element name="highlight">
							<attribute name="name">
								<data type="ID"/>
								<a:documentation></a:documentation>
							</attribute>
							<attribute name="style">
								<a:documentation></a:documentation>
								<choice>
									<value type="token">attribute</value>
									<a:documentation></a:documentation>
									<value type="token">brackets</value>
									<a:documentation></a:documentation>
									<value type="token">comment</value>
									<a:documentation></a:documentation>
									<value type="token">function</value>
									<value type="token">keyword</value>
									<value type="token">operator</value>
									<value type="token">preprocessor</value>
									<value type="token">special-attribute</value>
									<value type="token">special-function</value>
									<value type="token">special-keyword</value>
									<value type="token">special-tag</value>
									<value type="token">special-tag2</value>
									<value type="token">special-tag3</value>
									<value type="token">special-type</value>
									<value type="token">special-value</value>
									<value type="token">string</value>
									<value type="token">tag</value>
									<value type="token">type</value>
									<value type="token">value</value>
									<value type="token">variable</value>
									<value type="token">warning</value>
								</choice>
							</attribute>
							<empty/>
						</element><!-- highlight -->
					</choice>
				</zeroOrMore>
				<empty/>
			</element><!-- header -->
			<optional>
				<element name="properties">
					<oneOrMore>
						<choice>
							<element name="comment">
			<!--	id is not used				<attribute name="id">
									<data type="ID"/>
								</attribute>-->
								<attribute name="type">
									<choice>
										<value type="token">block</value>
										<value type="token">line</value>
									</choice>
								</attribute>
								<group>
									<attribute name="start">
										<data type="string"/>
									</attribute>
									<optional>
										<attribute name="end">
											<data type="string"/>
										</attribute>
									</optional>
								</group>
								<empty/>
							</element><!-- comment -->
							<element name="smartindent">
								<attribute name="characters">
									<data type="string"/>
								</attribute>
								<empty/>
							</element><!-- smartindent -->
							<element name="default_spellcheck">
								<attribute name="enabled" a:defaultValue="1">
									<data type="boolean"/>
								</attribute>
								<empty/>
							</element><!-- default_spellcheck -->
						</choice>
					</oneOrMore>
					<empty/>
				</element><!-- properties -->
			</optional>
			<element name="definition">
				<oneOrMore>
					<ref name="element.context"/>
				</oneOrMore>
			</element><!-- definition -->
			<empty/>
		</element><!-- bflang -->
	</start>

	<define name="element.context">
		<element name="context">
			<choice>
				<group>
					<attribute name="symbols">
						<a:documentation>A string of characters that are all 'symbol' characters for this context. A 'symbol' character is a character that may start or end the next match. Usually all spacing is a symbol, and in programming languages all operators are symbols.</a:documentation>
						<data type="string"/>
					</attribute>
					<optional>
						<attribute name="highlight">
							<data type="IDREF"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="id">
							<data type="ID"/>
						</attribute>
					</optional>
<!--	DEPRECATED				<optional>
						<attribute name="spellcheck" a:defaultValue="0">
							<data type="boolean"/>
						</attribute>
					</optional>-->
				</group>
				<attribute name="idref">
					<data type="IDREF"/>
				</attribute>
			</choice>
			<oneOrMore>
				<choice>
					<ref name="element.element"/>
					<ref name="element.group"/>
					<ref name="element.tag"/>
				</choice>
			</oneOrMore>
			<empty/>
		</element><!-- context -->
	</define>

	<define name="element.element">
		<element name="element">
			<choice>
				<group>
					<attribute name="pattern">
						<data type="string"/>
					</attribute>
					<ref name="autocomplete.element"/>
					<ref name="autocomplete.extended"/>
					<optional>
						<choice>
							<attribute name="starts_block">
								<data type="boolean"/>
							</attribute>
							<group>
								<attribute name="blockstartelement">
									<data type="IDREF"/>
								</attribute>
								<attribute name="ends_block" a:defaultValue="0">
									<data type="boolean"/>
								</attribute>
							</group>
						</choice>
					</optional>
					<optional>
						<attribute name="case_insens" a:defaultValue="0">
							<data type="boolean"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="ends_context" a:defaultValue="0">
							<data type="boolean"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="highlight">
							<data type="IDREF"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="id">
							<data type="ID"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="is_regex" a:defaultValue="0">
							<data type="boolean"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="mayfold">
							<data type="boolean" a:defaultValue="0"/>
						</attribute>
					</optional>
				</group>
				<attribute name="idref">
					<data type="IDREF"/>
				</attribute>
			</choice>
			<zeroOrMore>
				<choice>
					<ref name="element.context"/>
					<ref name="element.element"/>
					<ref name="element.group"/>
					<ref name="element.reference"/>
				</choice>
			</zeroOrMore>
			<empty/>
		</element><!-- element -->
	</define>

	<define name="element.group">
		<element name="group">
			<ref name="autocomplete.attribute"/>
			<ref name="autocomplete.element"/>
			<ref name="autocomplete.extended"/>
			<optional>
				<attribute name="attribhighlight">
					<data type="IDREF"/>
				</attribute>
			</optional>
			<optional>
				<attribute name="case_insens" a:defaultValue="0">
					<data type="boolean"/>
				</attribute>
			</optional>
			<optional>
				<choice>
					<attribute name="class">
						<data type="IDREF"/>
					</attribute>
					<attribute name="notclass">
						<data type="IDREF"/>
					</attribute>
				</choice>
			</optional>
			<optional>
				<attribute name="highlight">
					<data type="IDREF"/>
				</attribute>
			</optional>
			<optional>
				<attribute name="is_regex" a:defaultValue="0">
					<data type="boolean"/>
				</attribute>
			</optional>
			<oneOrMore>
				<choice>
					<ref name="element.element"/>
					<ref name="element.group"/>
					<ref name="element.tag"/>
				</choice>
			</oneOrMore>
			<empty/>
		</element><!-- group -->
	</define>

	<define name="element.tag">
		<element name="tag">
			<choice>
				<group>
					<attribute name="name">
						<data type="token"/>
					</attribute>
					<ref name="autocomplete.attribute"/>
					<ref name="autocomplete.element"/>
					<ref name="autocomplete.extended"/>
					<optional>
						<attribute name="attributes">
							<data type="string"/><!-- TODO: more like a list with commata? -->
						</attribute>
						<optional>
							<attribute name="attribhighlight">
								<data type="IDREF"/>
							</attribute>
						</optional>
					</optional>
					<optional>
						<attribute name="case_insens" a:defaultValue="0">
							<data type="boolean"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="highlight">
							<data type="IDREF"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="id">
							<data type="ID"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="no_close" a:defaultValue="0">
							<data type="boolean"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="sgml_shorttag" a:defaultValue="0">
							<data type="boolean"/>
						</attribute>
					</optional>
				</group>
				<attribute name="idref">
					<data type="IDREF"/>
				</attribute>
			</choice>
			<zeroOrMore>
				<choice>
					<ref name="element.context"/>
					<ref name="element.group"/>
					<ref name="element.reference"/>
					<ref name="element.tag"/>
				</choice>
			</zeroOrMore>
			<empty/>
		</element><!-- tag -->
	</define>

	<define name="element.reference">
		<element name="reference">
			<zeroOrMore>
				<choice>
					<text/>
					<element name="span">
					<!--	span can have a lot of attributes:
									
						font[1], font_desc
							
						
						A font description string, such as "Sans Italic 12". See pango_font_description_from_string() for a description of the format of the string representation . Note that any other span attributes will override this description. So if you have "Sans Italic" and also a style="normal" attribute, you will get Sans normal, not italic.
						
						font_family, face
							
						
						A font family name
						
						font_size[1], size
							
						
						Font size in 1024ths of a point, or one of the absolute sizes 'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large', or one of the relative sizes 'smaller' or 'larger'. If you want to specify a absolute size, it's usually easier to take advantage of the ability to specify a partial font description using 'font'; you can use font='12.5' rather than size='12800'.
						
						font_style[1], style
							
						
						One of 'normal', 'oblique', 'italic'
						
						font_weight[1], weight
							
						
						One of 'ultralight', 'light', 'normal', 'bold', 'ultrabold', 'heavy', or a numeric weight
						
						font_variant[1], variant
							
						
						One of 'normal' or 'smallcaps'
						
						font_stretch[1], stretch
							
						
						One of 'ultracondensed', 'extracondensed', 'condensed', 'semicondensed', 'normal', 'semiexpanded', 'expanded', 'extraexpanded', 'ultraexpanded'
						
						foreground, fgcolor[1], color
							
						
						An RGB color specification such as '#00FF00' or a color name such as 'red'
						
						background, bgcolor[1]
							
						
						An RGB color specification such as '#00FF00' or a color name such as 'red'
						
						underline
							
						
						One of 'none', 'single', 'double', 'low', 'error'
						
						underline_color
							
						
						The color of underlines; an RGB color specification such as '#00FF00' or a color name such as 'red'
						
						rise
							
						
						Vertical displacement, in 10000ths of an em. Can be negative for subscript, positive for superscript.
						
						strikethrough
							
						
						'true' or 'false' whether to strike through the text
						
						strikethrough_color
							
						
						The color of strikethrough lines; an RGB color specification such as '#00FF00' or a color name such as 'red'
						
						fallback
							
						
						'true' or 'false' whether to enable fallback. If disabled, then characters will only be used from the closest matching font on the system. No fallback will be done to other fonts on the system that might contain the characters in the text. Fallback is enabled by default. Most applications should not disable fallback.
						
						lang
							
						
						A language code, indicating the text language
						
						letter_spacing
							
						
						Inter-letter spacing in 1024ths of a point.
						
						gravity
							
						
						One of 'south', 'east', 'north', 'west', 'auto'.
						
						gravity_hint
							
						
						One of 'natural', 'strong', 'line'. 					
											
										-->
						<text/>
					</element>
					<element name="b">
						<text/>
					</element>
					<element name="i">
						<text/>
					</element>
					<element name="big">
						<text/>
					</element>
					<element name="s">
						<text/>
					</element>
					<element name="sub">
						<text/>
					</element>
					<element name="sup">
						<text/>
					</element>
					<element name="small">
						<text/>
					</element>
					<element name="tt">
						<text/>
					</element>
					<element name="u">
						<text/>
					</element>
				</choice>
			</zeroOrMore>
			<empty/>
		</element><!-- reference -->
	</define>

	<define name="autocomplete.element">
		<optional>
			<attribute name="autocomplete" a:defaultValue="0">
				<data type="boolean"/>
			</attribute>
		</optional>
		<optional>
			<attribute name="autocomplete_append">
				<data type="string"/>
			</attribute>
		</optional>
	</define>

	<define name="autocomplete.attribute">
		<optional>
			<attribute name="attrib_autocomplete" a:defaultValue="0">
				<data type="boolean"/>
			</attribute>
		</optional>
		<optional>
			<attribute name="attrib_autocomplete_append">
				<data type="string"/>
			</attribute>
		</optional>
	</define>

	<define name="autocomplete.extended">
		<optional>
			<attribute name="autocomplete_string">
				<data type="string"/>
			</attribute>
		</optional>
		<optional>
			<attribute name="autocomplete_backup_cursor">
				<data type="positiveInteger"/>
			</attribute>
		</optional>
	</define>

</grammar>
