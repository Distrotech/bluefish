<?xml version="1.0" encoding="UTF-8" ?>
<!--
	Bluefish HTML Editor
	css-rules.bfinc $Revision$

	Copyright (C) 2008-20012 Olivier Sessink

		This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.		
-->
<bfinc>
<element pattern="background-attachment"  highlight="css-property" >
	<autocomplete append=": " />
<reference>Sets whether a background image is fixed or scrolls with the rest of the page
<b>Values:</b> scroll | fixed | inherit
<b>Initial value:</b> scroll
<b>Media group:</b> visual</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<element pattern="scroll"  highlight="css-value" >
	<autocomplete append=";" />
</element>
<element pattern="fixed"  highlight="css-value" >
	<autocomplete append=";" />
</element>
<element pattern="inherit"  highlight="css-value" >
	<autocomplete append=";" />
</element>
<element id="e.css.end" pattern=";" ends_context="1"/>
<element id="e.css.rbrace" pattern="}" ends_block="1" blockstartelement="e.css.lbrace" highlight="css-brackets" ends_context="2"/>
</context>
</element>
<element pattern="background-color"  highlight="css-property" >
	<autocomplete append=": " />
<reference>Sets the background color of an element
<b>Values:</b> &lt;color&gt; | currentColor | transparent | inherit
<b>Initial value:</b> transparent
<b>Media group:</b> visual</reference>
<context id="c.css.color" symbols=" &#9;&#10;&#13;{}.;:">
<element pattern="#([0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f]|[0-9a-f][0-9a-f][0-9a-f])" highlight="css-value" is_regex="1" case_insens="1"/>
<element pattern="(rgba|hsla)\( *[0-9]+%? *, *[0-9]+%? *, *[0-9]+%? *, *(0|1|0.[0-9]) *\)" highlight="css-value" is_regex="1" case_insens="1"/>
<element pattern="(rgb|hsl)\( *[0-9]+%? *, *[0-9]+%? *, *[0-9]+%? *\)" highlight="css-value" is_regex="1" case_insens="1"/>
<group highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="aliceblue"/>
	<element pattern="antiquewhite"/>
	<element pattern="aqua"/>
	<element pattern="aquamarine"/>
	<element pattern="azure"/>
	<element pattern="beige"/>
	<element pattern="bisque"/>
	<element pattern="black"/>
	<element pattern="blanchedalmond"/>
	<element pattern="blue"/>
	<element pattern="blueviolet"/>
	<element pattern="brown"/>
	<element pattern="burlywood"/>
	<element pattern="cadetblue"/>
	<element pattern="chartreuse"/>
	<element pattern="chocolate"/>
	<element pattern="coral"/>
	<element pattern="cornflowerblue"/>
	<element pattern="cornsilk"/>
	<element pattern="crimson"/>
	<element pattern="cyan"/>
	<element pattern="darkblue"/>
	<element pattern="darkcyan"/>
	<element pattern="darkgoldenrod"/>
	<element pattern="darkgray"/>
	<element pattern="darkgreen"/>
	<element pattern="darkgrey"/>
	<element pattern="darkkhaki"/>
	<element pattern="darkmagenta"/>
	<element pattern="darkolivegreen"/>
	<element pattern="darkorange"/>
	<element pattern="darkorchid"/>
	<element pattern="darkred"/>
	<element pattern="darksalmon"/>
	<element pattern="darkseagreen"/>
	<element pattern="darkslateblue"/>
	<element pattern="darkslategray"/>
	<element pattern="darkslategrey"/>
	<element pattern="darkturquoise"/>
	<element pattern="darkviolet"/>
	<element pattern="deeppink"/>
	<element pattern="deepskyblue"/>
	<element pattern="dimgray"/>
	<element pattern="dimgrey"/>
	<element pattern="dodgerblue"/>
	<element pattern="firebrick"/>
	<element pattern="floralwhite"/>
	<element pattern="forestgreen"/>
	<element pattern="fuchsia"/>
	<element pattern="gainsboro"/>
	<element pattern="ghostwhite"/>
	<element pattern="gold"/>
	<element pattern="goldenrod"/>
	<element pattern="gray"/>
	<element pattern="green"/>
	<element pattern="greenyellow"/>
	<element pattern="grey"/>
	<element pattern="honeydew"/>
	<element pattern="hotpink"/>
	<element pattern="indianred"/>
	<element pattern="indigo"/>
	<element pattern="ivory"/>
	<element pattern="khaki"/>
	<element pattern="lavender"/>
	<element pattern="lavenderblush"/>
	<element pattern="lawngreen"/>
	<element pattern="lemonchiffon"/>
	<element pattern="lightblue"/>
	<element pattern="lightcoral"/>
	<element pattern="lightcyan"/>
	<element pattern="lightgoldenrodyellow"/>
	<element pattern="lightgray"/>
	<element pattern="lightgreen"/>
	<element pattern="lightgrey"/>
	<element pattern="lightpink"/>
	<element pattern="lightsalmon"/>
	<element pattern="lightseagreen"/>
	<element pattern="lightskyblue"/>
	<element pattern="lightslategray"/>
	<element pattern="lightslategrey"/>
	<element pattern="lightsteelblue"/>
	<element pattern="lightyellow"/>
	<element pattern="lime"/>
	<element pattern="limegreen"/>
	<element pattern="linen"/>
	<element pattern="magenta"/>
	<element pattern="maroon"/>
	<element pattern="mediumaquamarine"/>
	<element pattern="mediumblue"/>
	<element pattern="mediumorchid"/>
	<element pattern="mediumpurple"/>
	<element pattern="mediumseagreen"/>
	<element pattern="mediumslateblue"/>
	<element pattern="mediumspringgreen"/>
	<element pattern="mediumturquoise"/>
	<element pattern="mediumvioletred"/>
	<element pattern="midnightblue"/>
	<element pattern="mintcream"/>
	<element pattern="mistyrose"/>
	<element pattern="moccasin"/>
	<element pattern="navajowhite"/>
	<element pattern="navy"/>
	<element pattern="oldlace"/>
	<element pattern="olive"/>
	<element pattern="olivedrab"/>
	<element pattern="orange"/>
	<element pattern="orangered"/>
	<element pattern="orchid"/>
	<element pattern="palegoldenrod"/>
	<element pattern="palegreen"/>
	<element pattern="paleturquoise"/>
	<element pattern="palevioletred"/>
	<element pattern="papayawhip"/>
	<element pattern="peachpuff"/>
	<element pattern="peru"/>
	<element pattern="pink"/>
	<element pattern="plum"/>
	<element pattern="powderblue"/>
	<element pattern="purple"/>
	<element pattern="red"/>
	<element pattern="rosybrown"/>
	<element pattern="royalblue"/>
	<element pattern="saddlebrown"/>
	<element pattern="salmon"/>
	<element pattern="sandybrown"/>
	<element pattern="seagreen"/>
	<element pattern="seashell"/>
	<element pattern="sienna"/>
	<element pattern="silver"/>
	<element pattern="skyblue"/>
	<element pattern="slateblue"/>
	<element pattern="slategray"/>
	<element pattern="slategrey"/>
	<element pattern="snow"/>
	<element pattern="springgreen"/>
	<element pattern="steelblue"/>
	<element pattern="tan"/>
	<element pattern="teal"/>
	<element pattern="thistle"/>
	<element pattern="tomato"/>
	<element pattern="turquoise"/>
	<element pattern="violet"/>
	<element pattern="wheat"/>
	<element pattern="white"/>
	<element pattern="whitesmoke"/>
	<element pattern="yellow"/>
	<element pattern="yellowgreen"/>
	<element pattern="currentColor"/>
	<element pattern="transparent"/>
	<element pattern="inherit"/>
</group>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="background-image"  highlight="css-property" >
	<autocomplete append=": " />
<reference>Sets an image as the background
<b>Values:</b> &lt;uri&gt; | none | inherit
<b>Initial value:</b> none
<b>Media groups:</b> visual</reference>
<context symbols=" &#9;&#10;&#13;-{}.;:()">
<element pattern="url"    highlight="css-value">
	<autocomplete append="()" backup_cursor="1" />
	<context id="c.css.uri" symbols="()" highlight="css-value">
	<element pattern="("/>
	<element pattern=")" ends_context="1" highlight="css-value"/>
	</context>
</element>
<group highlight="css-value" >
	<autocomplete append=";" />
<element pattern="none"/>
<element pattern="inherit"/>
</group>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="background-position"  highlight="css-property" >
	<autocomplete append=": " />
<reference>Sets the starting position of a background image
<b>Values:</b> [ [ &lt;percentage&gt; | &lt;length&gt; | left | center | right ]            [ &lt;percentage&gt; | &lt;length&gt; | top | center | bottom ]? ] |          [ [ left | center | right ] || [ top | center | bottom ] ] |          inherit
<b>Initial value:</b> 0% 0%
<b>Percentages:</b> refer to the size of the box itself
<b>Media groups:</b> visual</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<group  highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="top left"/>
	<element pattern="top center"/>
	<element pattern="top right"/>
	<element pattern="center left"/>
	<element pattern="center center"/>
	<element pattern="center right"/>
	<element pattern="bottom left"/>
	<element pattern="bottom center"/>
	<element pattern="bottom right"/>
	<element pattern="left top"/>
	<element pattern="left center"/>
	<element pattern="left bottom"/>
	<element pattern="center top"/>
	<element pattern="center bottom"/>
	<element pattern="right top"/>
	<element pattern="right center"/>
	<element pattern="right bottom"/>
	<element pattern="inherit"/>
	<element pattern="0"/>	
</group>
	<element id="e.css.percent" pattern="[0-9]+\.?[0-9]*%" is_regex="1" highlight="css-value"/>
<element id="e.css.length" pattern="[0-9]+\.?[0-9]*(em|ex|in|cm|mm|pt|pc|px)" is_regex="1" highlight="css-value"/>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="background-repeat"  highlight="css-property" >
	<autocomplete append=": " />
<reference>If a background image is specified, this property specifies whether the image is repeated (tiled), and how.
<b>background-repeat</b> specifies whether the image is repeated (tiled), and how.
<b>Values:</b> repeat | repeat-x | repeat-y | no-repeat | inherit
<b>Initial value:</b> repeat
<b>Media groups:</b> visual</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<group  highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="repeat"/>
	<element pattern="repeat-x"/>
	<element pattern="repeat-y"/>
	<element pattern="no-repeat"/>
	<element pattern="inherit"/>
</group>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="background"  highlight="css-property" >
	<autocomplete append=": " />
<reference>A shorthand property for setting all background properties in one declaration.
<b>Values:</b> ['background-color' || 'background-image' || 'background-repeat' || 'background-attachment' || 'background-position'] | inherit
<b>Initial value:</b> see individual properties
<b>Percentages:</b> allowed on 'background-position'
<b>Media group:</b> visual</reference>
<context idref="c.css.color" />
<context symbols=" &#9;&#10;&#13;-{}.;:()">
<group  highlight="css-value" >
	<autocomplete append=";" />

	<element pattern="repeat"/>
	<element pattern="repeat-x"/>
	<element pattern="repeat-y"/>
	<element pattern="no-repeat"/>
	<element pattern="scroll"/>
	<element pattern="fixed"/>
	<element pattern="top left"/>
	<element pattern="top center"/>
	<element pattern="top right"/>
	<element pattern="center left"/>
	<element pattern="center center"/>
	<element pattern="center right"/>
	<element pattern="bottom left"/>
	<element pattern="bottom center"/>
	<element pattern="bottom right"/>
	<element pattern="left top"/>
	<element pattern="left center"/>
	<element pattern="left bottom"/>
	<element pattern="center top"/>
	<element pattern="center bottom"/>
	<element pattern="right top"/>
	<element pattern="right center"/>
	<element pattern="right bottom"/>
	<element pattern="none"/>
	<element pattern="0"/>	
	<element pattern="inherit"/>
</group>
<element pattern="url"    highlight="css-value">
	<autocomplete append="()" backup_cursor="1" />
	<context idref="c.css.uri"/>
</element>
<element pattern="#([0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f]|[0-9a-f][0-9a-f][0-9a-f])" highlight="css-value" is_regex="1" case_insens="1"/>
<element pattern="rgb\([0-9]+%?,[0-9]+%?,[0-9]+%?\)" highlight="css-value" is_regex="1" case_insens="1"/>
<element idref="e.css.percent"/>
<element idref="e.css.length"/>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/> 
</context>
</element>
<element pattern="border-width"  highlight="css-property" >
	<autocomplete append=": " />
<reference>Sets the width of the top, right, bottom, and left border of a box. 
<b>Values:</b> [ thin | medium | thick | &lt;length&gt; ]{1,4} | inherit
<b>Initial value:</b> see individual properties
<b>Media groups:</b> visual</reference>
<context id="c.css.border_width" symbols=" &#9;&#10;&#13;{}.;:">
<group  highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="thin"/>
	<element pattern="medium"/>
	<element pattern="thick"/>
	<element pattern="inherit"/>
	<element pattern="0"/>
</group>
<element idref="e.css.length"/>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="border-bottom-color"  highlight="css-property" >
	<autocomplete append=": " />
<reference>The border color properties specify the color of a box's border.
<b>Values:</b> &lt;color&gt; | transparent | inherit
<b>Initial value:</b> the value of the 'color' property
<b>Media groups:</b> visual
</reference>
<context idref="c.css.color"/>
</element>
<element pattern="border-bottom-style"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> &lt;border-style&gt; | inherit
<b>Initial value:</b> none
<b>Media groups:</b> visual
</reference>
<context id="c.css.border_style" symbols=" &#9;&#10;&#13;{}.;:">
<group  highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="inherit"/>
	<element pattern="none"/>	
	<element pattern="hidden"/>
	<element pattern="dotted"/>
	<element pattern="dashed"/>
	<element pattern="solid"/>
	<element pattern="double"/>
	<element pattern="groove"/>
	<element pattern="ridge"/>
	<element pattern="inset"/>
	<element pattern="outset"/>
</group>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>	
</element>
<element pattern="border-bottom-width"  highlight="css-property" >
	<autocomplete append=": " />
<reference>set the width of the bottom border of a box. 
<b>Values:</b> [ thin | medium | thick | &lt;length&gt; ] | inherit
<b>Initial value:</b> medium
<b>Media groups:</b> visual
</reference>
<context idref="c.css.border_width"/>
</element>
<element pattern="border-collapse"  highlight="css-property" >
	<autocomplete append=": " />
<reference><b>Initial value:</b> separate
<b>Applies to:</b> 'table' and 'inline-table' elements </reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<group  highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="collapse"/>
	<element pattern="separate"/>
	<element pattern="inherit"/>
</group>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>	
</element>
<element pattern="border-color"  highlight="css-property" >
	<autocomplete append=": " />
<reference>The border color properties specify the color of a box's border.
<b>Values:</b> [ &lt;color&gt; | transparent ]{1,4} | inherit
<b>Initial value:</b> see individual properties
<b>Media groups:</b> visual
</reference>
<context idref="c.css.color"/>
</element>
<element pattern="border-left-color"  highlight="css-property" >
	<autocomplete append=": " />
<reference>The border color properties specify the color of a box's border.
<b>Values:</b> &lt;color&gt; | transparent | inherit
<b>Initial value:</b> the value of the 'color' property
<b>Media groups:</b> visual
</reference>
<context idref="c.css.color"/>
</element>
<element pattern="border-left-style"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> &lt;border-style&gt; | inherit
<b>Initial value:</b> none
<b>Media groups:</b> visual
</reference>
<context idref="c.css.border_style"/>
</element>
<element pattern="border-left-width"  highlight="css-property" >
	<autocomplete append=": " />
<reference>Sets the width of the left border of a box. 
<b>Values:</b> [ thin | medium | thick | &lt;length&gt; ] | inherit
<b>Initial value:</b> medium
<b>Media groups:</b> visual
</reference>
<context idref="c.css.border_width"/>
</element>
<element pattern="border-right-color"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> &lt;color&gt; | transparent | inherit
<b>Initial value:</b> the value of the 'color' property
<b>Media groups:</b> visual
</reference>
<context idref="c.css.color"/>
</element>
<element pattern="border-right-style"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> &lt;border-style&gt; | inherit
<b>Initial value:</b> none
<b>Media groups:</b> visual
</reference>
<context idref="c.css.border_style"/>
</element>
<element pattern="border-right-width"  highlight="css-property" >
	<autocomplete append=": " />
<reference>Sets the width of the right border of a box. 
<b>Values:</b> [ thin | medium | thick | &lt;length&gt; ] | inherit
<b>Initial value:</b> medium
<b>Media groups:</b> visual
</reference>
<context idref="c.css.border_width"/>
</element>
<element pattern="border-spacing"  highlight="css-property" >
	<autocomplete append=": " />
<reference>The lengths specify the distance that separates adjoining cell borders. If one length is specified, it gives both the horizontal and vertical spacing.
<b>Values:</b> &lt;length&gt; &lt;length&gt;? | inherit
<b>Initial value:</b> 0
<b>Applies to:</b> 'table' and 'inline-table' elements
<b>Media groups:</b> visual</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<element pattern="inherit"  highlight="css-value" >
	<autocomplete append=";" />
</element>
<element pattern="0"  highlight="css-value" >
	<autocomplete append=";" />
</element>
<element idref="e.css.length"/>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>	
</element>
<element pattern="border-style"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> &lt;border-style&gt;{1,4} | inherit
<b>Initial value:</b> see individual properties
<b>Media groups:</b> visual
</reference>
<context idref="c.css.border_style"/>
</element>
<element pattern="border-top-color"  highlight="css-property" >
	<autocomplete append=": " />
<reference>The border color properties specify the color of a box's border.
<b>Values:</b> &lt;color&gt; | transparent | inherit
<b>Initial value:</b> the value of the 'color' property
<b>Media groups:</b> visual
</reference>
<context idref="c.css.color"/>
</element>
<element pattern="border-top-style"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> &lt;border-style&gt; | inherit
<b>Initial value:</b> none
<b>Media groups:</b> visual
</reference>
<context idref="c.css.border_style"/>
</element>
<element pattern="border-top-width"  highlight="css-property" >
	<autocomplete append=": " />
<reference>Sets the width of the top border of a box. 
<b>Values:</b> [ thin | medium | thick | &lt;length&gt; ] | inherit
<b>Initial value:</b> medium
<b>Media groups:</b> visual
</reference>
<context idref="c.css.border_width"/>
</element>
<element pattern="border"  highlight="css-property" >
	<autocomplete append=": " />
<reference>A shorthand property for setting the properties border-width, border-style, and border-color for the four borders in one declaration<b>Values:</b> [ [ thin | medium | thick | &lt;length&gt; ] || &lt;border-style&gt; || 'border-top-color' ] | inherit
<b>Initial value:</b> see individual properties
<b>Media groups:</b> visual</reference>
<context id="c.css.border" symbols=" &#9;&#10;&#13;{}.;:">
<element pattern="#([0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f]|[0-9a-f][0-9a-f][0-9a-f])" highlight="css-value" is_regex="1" case_insens="1"/>
<element pattern="(rgba|hsla)\( *[0-9]+%? *, *[0-9]+%? *, *[0-9]+%? *, *(0|1|0.[0-9]) *\)" highlight="css-value" is_regex="1" case_insens="1"/>
<element pattern="(rgb|hsl)\( *[0-9]+%? *, *[0-9]+%? *, *[0-9]+%? *\)" highlight="css-value" is_regex="1" case_insens="1"/>
<group highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="thin"/>
	<element pattern="medium"/>
	<element pattern="thick"/>
	<element pattern="0"/>  
	<element pattern="none"/>	
	<element pattern="hidden"/>
	<element pattern="dotted"/>
	<element pattern="dashed"/>
	<element pattern="solid"/>
	<element pattern="double"/>
	<element pattern="groove"/>
	<element pattern="ridge"/>
	<element pattern="inset"/>
	<element pattern="outset"/>   
	<element pattern="aliceblue"/>
	<element pattern="antiquewhite"/>
	<element pattern="aqua"/>
	<element pattern="aquamarine"/>
	<element pattern="azure"/>
	<element pattern="beige"/>
	<element pattern="bisque"/>
	<element pattern="black"/>
	<element pattern="blanchedalmond"/>
	<element pattern="blue"/>
	<element pattern="blueviolet"/>
	<element pattern="brown"/>
	<element pattern="burlywood"/>
	<element pattern="cadetblue"/>
	<element pattern="chartreuse"/>
	<element pattern="chocolate"/>
	<element pattern="coral"/>
	<element pattern="cornflowerblue"/>
	<element pattern="cornsilk"/>
	<element pattern="crimson"/>
	<element pattern="cyan"/>
	<element pattern="darkblue"/>
	<element pattern="darkcyan"/>
	<element pattern="darkgoldenrod"/>
	<element pattern="darkgray"/>
	<element pattern="darkgreen"/>
	<element pattern="darkgrey"/>
	<element pattern="darkkhaki"/>
	<element pattern="darkmagenta"/>
	<element pattern="darkolivegreen"/>
	<element pattern="darkorange"/>
	<element pattern="darkorchid"/>
	<element pattern="darkred"/>
	<element pattern="darksalmon"/>
	<element pattern="darkseagreen"/>
	<element pattern="darkslateblue"/>
	<element pattern="darkslategray"/>
	<element pattern="darkslategrey"/>
	<element pattern="darkturquoise"/>
	<element pattern="darkviolet"/>
	<element pattern="deeppink"/>
	<element pattern="deepskyblue"/>
	<element pattern="dimgray"/>
	<element pattern="dimgrey"/>
	<element pattern="dodgerblue"/>
	<element pattern="firebrick"/>
	<element pattern="floralwhite"/>
	<element pattern="forestgreen"/>
	<element pattern="fuchsia"/>
	<element pattern="gainsboro"/>
	<element pattern="ghostwhite"/>
	<element pattern="gold"/>
	<element pattern="goldenrod"/>
	<element pattern="gray"/>
	<element pattern="green"/>
	<element pattern="greenyellow"/>
	<element pattern="grey"/>
	<element pattern="honeydew"/>
	<element pattern="hotpink"/>
	<element pattern="indianred"/>
	<element pattern="indigo"/>
	<element pattern="ivory"/>
	<element pattern="khaki"/>
	<element pattern="lavender"/>
	<element pattern="lavenderblush"/>
	<element pattern="lawngreen"/>
	<element pattern="lemonchiffon"/>
	<element pattern="lightblue"/>
	<element pattern="lightcoral"/>
	<element pattern="lightcyan"/>
	<element pattern="lightgoldenrodyellow"/>
	<element pattern="lightgray"/>
	<element pattern="lightgreen"/>
	<element pattern="lightgrey"/>
	<element pattern="lightpink"/>
	<element pattern="lightsalmon"/>
	<element pattern="lightseagreen"/>
	<element pattern="lightskyblue"/>
	<element pattern="lightslategray"/>
	<element pattern="lightslategrey"/>
	<element pattern="lightsteelblue"/>
	<element pattern="lightyellow"/>
	<element pattern="lime"/>
	<element pattern="limegreen"/>
	<element pattern="linen"/>
	<element pattern="magenta"/>
	<element pattern="maroon"/>
	<element pattern="mediumaquamarine"/>
	<element pattern="mediumblue"/>
	<element pattern="mediumorchid"/>
	<element pattern="mediumpurple"/>
	<element pattern="mediumseagreen"/>
	<element pattern="mediumslateblue"/>
	<element pattern="mediumspringgreen"/>
	<element pattern="mediumturquoise"/>
	<element pattern="mediumvioletred"/>
	<element pattern="midnightblue"/>
	<element pattern="mintcream"/>
	<element pattern="mistyrose"/>
	<element pattern="moccasin"/>
	<element pattern="navajowhite"/>
	<element pattern="navy"/>
	<element pattern="oldlace"/>
	<element pattern="olive"/>
	<element pattern="olivedrab"/>
	<element pattern="orange"/>
	<element pattern="orangered"/>
	<element pattern="orchid"/>
	<element pattern="palegoldenrod"/>
	<element pattern="palegreen"/>
	<element pattern="paleturquoise"/>
	<element pattern="palevioletred"/>
	<element pattern="papayawhip"/>
	<element pattern="peachpuff"/>
	<element pattern="peru"/>
	<element pattern="pink"/>
	<element pattern="plum"/>
	<element pattern="powderblue"/>
	<element pattern="purple"/>
	<element pattern="red"/>
	<element pattern="rosybrown"/>
	<element pattern="royalblue"/>
	<element pattern="saddlebrown"/>
	<element pattern="salmon"/>
	<element pattern="sandybrown"/>
	<element pattern="seagreen"/>
	<element pattern="seashell"/>
	<element pattern="sienna"/>
	<element pattern="silver"/>
	<element pattern="skyblue"/>
	<element pattern="slateblue"/>
	<element pattern="slategray"/>
	<element pattern="slategrey"/>
	<element pattern="snow"/>
	<element pattern="springgreen"/>
	<element pattern="steelblue"/>
	<element pattern="tan"/>
	<element pattern="teal"/>
	<element pattern="thistle"/>
	<element pattern="tomato"/>
	<element pattern="turquoise"/>
	<element pattern="violet"/>
	<element pattern="wheat"/>
	<element pattern="white"/>
	<element pattern="whitesmoke"/>
	<element pattern="yellow"/>
	<element pattern="yellowgreen"/>
	<element pattern="currentColor"/>
	<element pattern="transparent"/>
	<element pattern="inherit"/>
</group>
<element idref="e.css.length"/>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="border-bottom"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> [ [ thin | medium | thick | &lt;length&gt; ] || &lt;border-style&gt; || 'border-top-color' ] | inherit
<b>Initial value:</b> see individual properties
<b>Media groups:</b> visual
</reference>
<context idref="c.css.border"/>
</element>
<element pattern="border-top"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> [ [ thin | medium | thick | &lt;length&gt; ] || &lt;border-style&gt; || 'border-top-color' ] | inherit
<b>Initial value:</b> see individual properties
<b>Media groups:</b> visual
</reference>
<context idref="c.css.border"/>
</element>
<element pattern="border-right"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> [ [ thin | medium | thick | &lt;length&gt; ] || &lt;border-style&gt; || 'border-top-color' ] | inherit
<b>Initial value:</b> see individual properties
<b>Media groups:</b> visual
</reference>
<context idref="c.css.border"/>
</element>
<element pattern="border-left"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> [ [ thin | medium | thick | &lt;length&gt; ] || &lt;border-style&gt; || 'border-top-color' ] | inherit
<b>Initial value:</b> see individual properties
<b>Media groups:</b> visual
</reference>
<context idref="c.css.border"/>
</element>
<element pattern="bottom"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> &lt;length&gt; | &lt;percentage&gt; | auto | inherit
<b>Initial value:</b> auto
<b>Applies to:</b> positioned elements
<b>Percentages:</b> refer to height of containing block
<b>Media groups:</b> visual
</reference>
<context id="c.css.box_offsets" symbols=" &#9;&#10;&#13;-{}.;:">
<element pattern="auto"  highlight="css-value" >
	<autocomplete append=";" />
</element>
<element pattern="inherit"  highlight="css-value" >
	<autocomplete append=";" />
</element>
<element pattern="0"  highlight="css-value" >
	<autocomplete append=";" />
</element>
<element id="e.css.length.neg" pattern="-?[0-9]+\.?[0-9]*(em|ex|in|cm|mm|pt|pc|px|%)" is_regex="1" highlight="css-value"/>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>

</element>
<element pattern="caption-side"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> top | bottom | inherit
<b>Initial value:</b> top
<b>Applies to:</b> 'table-caption' elements
<b>Media groups:</b> visual
</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<group highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="top"/>
	<element pattern="bottom"/>
	<element pattern="inherit"/>
</group>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="clear"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> none | left | right | both | inherit
<b>Initial value:</b> none
<b>Applies to:</b> block-level elements
<b>Media groups:</b> visual
</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<group highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="left"/>
	<element pattern="right"/>
	<element pattern="both"/>
	<element pattern="none"/>
	<element pattern="inherit"/>
</group>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="clip"  highlight="css-property" >
	<autocomplete append=": " />
<reference><b>Initial value:</b> auto 
<b>Applies to:</b> absolutely positioned elements</reference>
<context symbols=" &#9;&#10;&#13;-{}.;:,()">
<group  highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="inherit"/>
	<element pattern="auto"/>
</group>
<element pattern="rect"    highlight="css-value">
	<autocomplete append="()" backup_cursor="1" />
	<context symbols="()" highlight="css-value">
	<element pattern="(">
		<context symbols=", )" highlight="css-value">
		<element pattern="0" highlight="css-value"/>
		<element pattern=","/>
		<element idref="e.css.length"/>
		<element pattern=")" ends_context="2" highlight="css-value"/>
		</context>
	</element>
	</context>
</element>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>	
</element>
<element pattern="color"  highlight="css-property" >
	<autocomplete append=": " />
<reference><b>color</b> describes the foreground color of an element's text content.
<b>Values:</b> &lt;color&gt; | inherit
<b>Initial value:</b> depends on user agent
<b>Media groups:</b> visual</reference>
<context idref="c.css.color"/>

</element>
<element pattern="content"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> normal | none | [ &lt;string&gt; | &lt;uri&gt; | &lt;counter&gt; | attr(&lt;identifier&gt;) | open-quote | close-quote | no-open-quote | no-close-quote ]+ | inherit
<b>Initial value:</b> normal
<b>Applies to:</b> :before and :after pseudo-elements
<b>Media groups:</b> all
</reference>
<context symbols=" &#9;&#10;&#13;-{}.;()'&#34;">
<element pattern="'" highlight="css-string">
<context symbols="\'" highlight="css-string">
	<element pattern="\\." is_regex="1" highlight="css-string"/>
	<element pattern="'" highlight="css-string" ends_context="1"/>
</context>
</element>
<element pattern="&quot;" highlight="css-string">
<context symbols="\&quot;" highlight="css-string">
	<element pattern="\\." is_regex="1" highlight="css-string"/>
	<element pattern="&quot;" highlight="css-string" ends_context="1"/>
</context>
</element>
<group highlight="css-value" >
	<autocomplete append=";" />
<element pattern="inherit"/>
<element pattern="none"/>
<element pattern="normal"/>
<element pattern="open-quote"/>
<element pattern="close-quote"/>
<element pattern="no-open-quote"/>
<element pattern="no-close-quote"/>
<element pattern="attr"    highlight="css-value">
	<autocomplete append="()" backup_cursor="1" />
	<context idref="c.css.uri"/>
</element>
<element pattern="url"    highlight="css-value">
	<autocomplete append="()" backup_cursor="1" />
	<context idref="c.css.uri"/>
</element>
<element pattern="counter"    highlight="css-value">
	<autocomplete append="()" backup_cursor="1" />
	<context idref="c.css.uri"/>
</element>
</group>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="counter-increment"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> [ &lt;identifier&gt; &lt;integer&gt;? ]+ | none | inherit
<b>Initial value:</b> none
<b>Media groups:</b> all
</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<group  highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="none"/>
	<element pattern="inherit"/>
</group>
<element pattern="[0-9]+\.?[0-9]*" is_regex="1" highlight="css-value"/>
<element pattern="[a-z_][a-z0-9._-]+" is_regex="1" case_insens="1" highlight="css-value"/>
<element pattern="[-][^0-9][a-z0-9._-]+" is_regex="1" case_insens="1" highlight="css-value"/>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="counter-reset"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> [ &lt;identifier&gt; &lt;integer&gt;? ]+ | none | inherit
<b>Initial value:</b> none
<b>Media groups:</b> all
</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<group  highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="none"/>
	<element pattern="inherit"/>
</group>
<element pattern="[0-9]+\.?[0-9]*" is_regex="1" highlight="css-value"/>
<element pattern="[a-z_][a-z0-9._-]+" is_regex="1" case_insens="1" highlight="css-value"/>
<element pattern="[-][^0-9][a-z0-9._-]+" is_regex="1" case_insens="1" highlight="css-value"/>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="cursor"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> [ [&lt;uri&gt; ,]* [ auto | crosshair | default | pointer | move | e-resize | ne-resize | nw-resize | n-resize | se-resize | sw-resize | s-resize | w-resize | text | wait | help | progress ] ] | inherit
<b>Initial value:</b> auto
<b>Media groups:</b> visual, interactive
</reference>
<context symbols=" &#9;&#10;&#13;-{}.;:()">
<group  highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="auto"/>
	<element pattern="crosshair"/>
	<element pattern="default"/>
	<element pattern="pointer"/>
	<element pattern="move"/>
	<element pattern="e-resize"/>
	<element pattern="ne-resize"/>
	<element pattern="nw-resize"/>
	<element pattern="n-resize"/>
	<element pattern="se-resize"/>
	<element pattern="sw-resize"/>
	<element pattern="s-resize"/>
	<element pattern="w-resize"/>
	<element pattern="text"/>
	<element pattern="wait"/>
	<element pattern="help"/>
	<element pattern="progress"/>
	<element pattern="inherit"/>	
</group>
<element pattern="url"    highlight="css-value">
	<autocomplete append="()" backup_cursor="1" />
	<context idref="c.css.uri"/>
</element>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>		
</element>
<element pattern="direction"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> ltr | rtl | inherit
<b>Initial value:</b> ltr
<b>Applies to:</b> all elements, but see prose
<b>Media groups:</b> visual
</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<group  highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="ltr"/>
	<element pattern="rtl"/>
	<element pattern="inherit"/>
</group>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>  
</context>
</element>
<element pattern="display"  highlight="css-property" >
	<autocomplete append=": " />
<reference>Conforming HTML user agents may ignore the 'display' property. 
<b>Values:</b> inline | block | list-item | run-in | inline-block | table | inline-table | table-row-group | table-header-group | table-footer-group | table-row | table-column-group | table-column | table-cell | table-caption | none | inherit
<b>Initial value:</b> inline
<b>Media groups:</b> all</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<group highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="inline"/>
	<element pattern="block"/>
	<element pattern="list-item"/>
	<element pattern="run-in"/>
	<element pattern="inline-block"/>
	<element pattern="table"/>
	<element pattern="inline-table"/>
	<element pattern="table-row-group"/>
	<element pattern="table-header-group"/>
	<element pattern="table-footer-group"/>
	<element pattern="table-row"/>
	<element pattern="table-column-group"/>
	<element pattern="table-column"/>
	<element pattern="table-cell"/>
	<element pattern="table-caption"/>
	<element pattern="none"/>
	<element pattern="inherit"/>
</group>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="empty-cells"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> show | hide | inherit
<b>Initial value:</b> show
<b>Applies to:</b> 'table-cell' elements
<b>Media groups:</b> visual
</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<group highlight="css-value" >
	<autocomplete append=";" />
<element pattern="show"/>
<element pattern="hide"/>
	<element pattern="inherit"/>
</group>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>					
</element>
<element pattern="float"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> left | right | none | inherit
<b>Initial value:</b> none
<b>Applies to:</b> all, but see 9.7
<b>Media groups:</b> visual
</reference>
<context id="c.css.float" symbols=" &#9;&#10;&#13;-{}.:;">
<group highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="left"/>
	<element pattern="right"/>
	<element pattern="none"/>
	<element pattern="inherit"/>
</group>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="font"  highlight="css-property" >
	<autocomplete append=": " />
<reference><b>font</b> is a convenience option to set font-style, font-variant, font-weight, and font-size
<b>Values:</b> [ [ 'font-style' || 'font-variant' || 'font-weight' ]? 'font-size' [ / 'line-height' ]? 'font-family' ] | caption | icon | menu | message-box | small-caption | status-bar | inherit
<b>Initial value:</b> see individual properties
<b>Percentages:</b> see individual properties
<b>Media groups:</b> visual</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<group  highlight="css-value" >
	<autocomplete append=";" />
	<element pattern=""/>
	<element pattern=""/>
	<element pattern=""/>
	<element pattern=""/>
	<element pattern=""/>
	<element pattern="normal"/>
	<element pattern="italic"/>
	<element pattern="oblique"/>
	<element pattern="small-caps"/>
	<element pattern="bold"/>
	<element pattern="bolder"/>
	<element pattern="lighter"/>
	<element pattern="xx-small"/>
	<element pattern="x-small"/>
	<element pattern="small"/>
	<element pattern="medium"/>
	<element pattern="large"/>
	<element pattern="x-large"/>
	<element pattern="xx-large"/>
	<element pattern="larger"/>
	<element pattern="smaller"/>   
	<element pattern="serif"/>
	<element pattern="Times"/>
	<element pattern="sans-serif"/>
	<element pattern="Helvetica"/>
	<element pattern="cursive"/>
	<element pattern="Zapf-Chancery"/>
	<element pattern="monospace"/>
	<element pattern="Courier"/>
	<element pattern="caption"/>
	<element pattern="icon"/>
	<element pattern="menu"/>
	<element pattern="message-box"/>
	<element pattern="small-caption"/>
	<element pattern="status-bar"/>
	<element pattern="inherit"/>
</group>
<element pattern="(100|200|300|400|500|600|700|800|900)" is_regex="1"  highlight="css-value"/>
<element pattern="[0-9]+\.?[0-9]*" is_regex="1" highlight="css-value"/>
<element pattern="/"/>
<element idref="e.css.length"/>
<element idref="e.css.percent"/>  
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/> 
</context> 
</element>
<element pattern="font-family"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> [[ &lt;family-name&gt; | &lt;generic-family&gt; ] [, &lt;family-name&gt;| &lt;generic-family&gt;]* ] | inherit
<b>Initial value:</b> depends on user agent
<b>Media groups:</b> visual
</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<group  highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="serif"/>
	<element pattern="Times"/>
	<element pattern="sans-serif"/>
	<element pattern="Helvetica"/>
	<element pattern="cursive"/>
	<element pattern="Zapf-Chancery"/>
	<element pattern="monospace"/>
	<element pattern="Courier"/>
	<element pattern="inherit"/>	
</group>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>		
</element>
<element pattern="font-size"  highlight="css-property" >
	<autocomplete append=": " />
<reference><b>font-size</b> describes the size of the font when set solid.
<b>Values:</b> &lt;absolute-size&gt; | &lt;relative-size&gt; | &lt;length&gt; | &lt;percentage&gt; | inherit
<b>Initial value:</b> medium
<b>Percentages:</b> refer to inherited font size
<b>Media groups:</b> visual</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<group highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="xx-small"/>
	<element pattern="x-small"/>
	<element pattern="small"/>
	<element pattern="medium"/>
	<element pattern="large"/>
	<element pattern="x-large"/>
	<element pattern="xx-large"/>
	<element pattern="larger"/>
	<element pattern="smaller"/>
	<element pattern="0"/>
	<element pattern="inherit"/>
</group>
<element idref="e.css.length"/>
<element idref="e.css.percent"/>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="font-style"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> normal | italic | oblique | inherit
<b>Initial value:</b> normal
<b>Media groups:</b> visual
</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<group highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="normal"/>
	<element pattern="italic"/>
	<element pattern="oblique"/>
	<element pattern="inherit"/>
</group>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="font-variant"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> normal | small-caps | inherit
<b>Initial value:</b> normal
<b>Media groups:</b> visual
</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<element pattern="normal"  highlight="css-value" >
	<autocomplete append=";" />
</element>
<element pattern="small-caps"  highlight="css-value" >
	<autocomplete append=";" />
</element>
	<element pattern="inherit"  highlight="css-value" >
		<autocomplete append=";" />
	</element>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>	
<element pattern="font-weight"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900 | inherit
<b>Initial value:</b> normal
<b>Media groups:</b> visual
</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<group highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="normal"/>
	<element pattern="bold"/>
	<element pattern="bolder"/>
	<element pattern="lighter"/>
	<element pattern="inherit"/>
</group>
<element pattern="(100|200|300|400|500|600|700|800|900)" is_regex="1"  highlight="css-value"/>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="left"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> &lt;length&gt; | &lt;percentage&gt; | auto | inherit
<b>Initial value:</b> auto
<b>Applies to:</b> positioned elements
<b>Percentages:</b> refer to width of containing block
<b>Media groups:</b> visual
</reference>
<context idref="c.css.box_offsets"/>
</element>
<element pattern="letter-spacing"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> normal | &lt;length&gt; | inherit
<b>Initial value:</b> normal
<b>Media groups:</b> visual
</reference>
<context symbols=" &#9;&#10;&#13;-{}.;:">
<group  highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="normal"/>
	<element pattern="inherit"/>
	<element pattern="0"/>	
</group>
<element pattern="-?[0-9]+\.?[0-9]*(em|ex|in|cm|mm|pt|pc|px)" is_regex="1" highlight="css-value"/>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>		
</element>
<element pattern="line-height"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> normal | &lt;number&gt; | &lt;length&gt; | &lt;percentage&gt; | inherit
<b>Initial value:</b> normal
<b>Percentages:</b> refer to the font size of the element itself
<b>Media groups:</b> visual
</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<element pattern="normal"  highlight="css-value" >
	<autocomplete append=";" />
</element>
<element pattern="inherit"  highlight="css-value" >
	<autocomplete append=";" />
</element>
<element pattern="[0-9]+\.?[0-9]*" is_regex="1" highlight="css-value"/>
<element idref="e.css.length"/>
<element idref="e.css.percent"/>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>		
</element>
<element pattern="list-style"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> [ 'list-style-type' || 'list-style-position' || 'list-style-image' ] | inherit
<b>Initial value:</b> see individual properties
<b>Applies to:</b> elements with 'display: list-item'
<b>Media groups:</b> visual
</reference>
<context symbols=" &#9;&#10;&#13;-{}.;:()">
<group  highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="disc"/>
	<element pattern="circle"/>
	<element pattern="square"/>
	<element pattern="decimal"/>
	<element pattern="decimal-leading-zero"/>
	<element pattern="lower-roman"/>
	<element pattern="upper-roman"/>
	<element pattern="lower-greek"/>
	<element pattern="lower-latin"/>
	<element pattern="upper-latin"/>
	<element pattern="armenian"/>
	<element pattern="georgian"/>
	<element pattern="lower-alpha"/>
	<element pattern="upper-alpha"/>
	<element pattern="none"/>
	<element pattern="inside"/>
	<element pattern="outside"/>
	<element pattern="inherit"/>
</group>
<element pattern="url"    highlight="css-value">
	<autocomplete append="()" backup_cursor="1" />
	<context idref="c.css.uri"/>
</element>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/> 
</context>	
</element>
<element pattern="list-style-image"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> &lt;uri&gt; | none | inherit
<b>Initial value:</b> none
<b>Applies to:</b> elements with 'display: list-item'
<b>Media groups:</b> visual
</reference>
<reference></reference>
<context symbols=" &#9;&#10;&#13;-{}.;:()">
<group  highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="none"/>
	<element pattern="inherit"/>
</group>
	<element pattern="url"    highlight="css-value">
		<autocomplete append="()" backup_cursor="1" />
	<context idref="c.css.uri"/>
</element>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>		
</element>
<element pattern="list-style-position"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> inside | outside | inherit
<b>Initial value:</b> outside
<b>Applies to:</b> elements with 'display: list-item'
<b>Media groups:</b> visual
</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<element pattern="inside"  highlight="css-value" >
	<autocomplete append=";" />
</element>
<element pattern="outside"  highlight="css-value" >
	<autocomplete append=";" />
</element>
<element pattern="inherit"  highlight="css-value" >
	<autocomplete append=";" />
</element>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="list-style-type"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> disc | circle | square | decimal | decimal-leading-zero | lower-roman | upper-roman | lower-greek | lower-latin | upper-latin | armenian | georgian | lower-alpha | upper-alpha | none | inherit
<b>Initial value:</b> disc
<b>Applies to:</b> elements with 'display: list-item'
<b>Media groups:</b> visual
</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<group  highlight="css-value" >
	<autocomplete append=";" />
<element pattern="disc"/>
<element pattern="circle"/>
<element pattern="square"/>
<element pattern="decimal"/>
<element pattern="decimal-leading-zero"/>
<element pattern="lower-roman"/>
<element pattern="upper-roman"/>
<element pattern="lower-greek"/>
<element pattern="lower-latin"/>
<element pattern="upper-latin"/>
<element pattern="armenian"/>
<element pattern="georgian"/>
<element pattern="lower-alpha"/>
<element pattern="upper-alpha"/>
<element pattern="none"/>
<element pattern="inherit"/>
</group>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="margin"  highlight="css-property" >
	<autocomplete append=": " />
<reference>If there is only one value, it applies to all sides. If there are two values, the top and bottom margins are set to the first value and the right and left margins are set to the second. If there are three values, the top is set to the first value, the left and right are set to the second, and the bottom is set to the third. If there are four values, they apply to the top, right, bottom, and left, respectively. 
<b>Values:</b> &lt;length&gt; &lt;percentage&gt; auto | inherit
<b>Initial value:</b> 0
<b>Applies to:</b> all elements except elements with table display types other than table-caption, table and inline-table
<b>Percentages:</b> refer to width of containing block
<b>Media groups:</b> visual</reference>
<context id="c.css.width" symbols=" &#9;&#10;&#13;{}.;:">
<element pattern="0" highlight="css-value" >
	<autocomplete enable="1" />
</element>
<element pattern="auto" highlight="css-value" >
	<autocomplete enable="1" />
</element>
<element pattern="inherit" highlight="css-value" >
	<autocomplete enable="1" />
</element>
</context>
<context symbols=" &#9;&#10;&#13;-{}.;:">
<element idref="e.css.length.neg"/>
<element idref="e.css.end"/>
<element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="margin-bottom"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> &lt;length&gt; &lt;percentage&gt; auto | inherit
<b>Initial value:</b> 0
<b>Applies to:</b> all elements except elements with table display types other than table-caption, table and inline-table
<b>Percentages:</b> refer to width of containing block
<b>Media groups:</b> visual</reference>
<context idref="c.css.width"/>
<context symbols=" &#9;&#10;&#13;-{}.;:">
<element idref="e.css.length.neg"/>
<element idref="e.css.end"/>
<element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="margin-left"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> &lt;length&gt; &lt;percentage&gt; auto | inherit
<b>Initial value:</b> 0
<b>Applies to:</b> all elements except elements with table display types other than table-caption, table and inline-table
<b>Percentages:</b> refer to width of containing block
<b>Media groups:</b> visual</reference>
<context idref="c.css.width"/>
<context symbols=" &#9;&#10;&#13;-{}.;:">
<element idref="e.css.length.neg"/>
<element idref="e.css.end"/>
<element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="margin-right"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> &lt;length&gt; &lt;percentage&gt; auto | inherit
<b>Initial value:</b> 0
<b>Applies to:</b> all elements except elements with table display types other than table-caption, table and inline-table
<b>Percentages:</b> refer to width of containing block
<b>Media groups:</b> visual</reference>
<context idref="c.css.width"/>
<context symbols=" &#9;&#10;&#13;-{}.;:">
<element idref="e.css.length.neg"/>
<element idref="e.css.end"/>
<element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="margin-top"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> &lt;length&gt; &lt;percentage&gt; auto | inherit
<b>Initial value:</b> 0
<b>Applies to:</b> all elements except elements with table display types other than table-caption, table and inline-table
<b>Percentages:</b> refer to width of containing block
<b>Media groups:</b> visual</reference>
<context idref="c.css.width"/>
<context symbols=" &#9;&#10;&#13;-{}.;:">
<element idref="e.css.length.neg"/>
<element idref="e.css.end"/>
<element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="max-height"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> &lt;length&gt; | &lt;percentage&gt; | none | inherit
<b>Initial value:</b> none
<b>Applies to:</b> all elements but non-replaced inline elements, table columns, and column groups
<b>Percentages:</b> see prose
<b>Media groups:</b> visual
</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<element pattern="0" highlight="css-value" >
	<autocomplete enable="1" />
</element>
<element pattern="none" highlight="css-value" >
	<autocomplete enable="1" />
</element>
<element pattern="inherit" highlight="css-value" >
	<autocomplete enable="1" />
</element>
<element idref="e.css.length"/>
<element idref="e.css.percent"/>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="max-width"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> &lt;length&gt; | &lt;percentage&gt; | none | inherit
<b>Initial value:</b> none
<b>Applies to:</b> all elements but non-replaced inline elements, table rows, and row groups
<b>Percentages:</b> refer to width of containing block
<b>Media groups:</b> visual
</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<element pattern="0" highlight="css-value" >
	<autocomplete enable="1" />
</element>
<element pattern="none" highlight="css-value" >
	<autocomplete enable="1" />
</element>
<element pattern="inherit" highlight="css-value" >
	<autocomplete enable="1" />
</element>
<element idref="e.css.length"/>
<element idref="e.css.percent"/>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="min-height"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> &lt;length&gt; | &lt;percentage&gt; | inherit
<b>Initial value:</b> 0
<b>Applies to:</b> all elements but non-replaced inline elements, table columns, and column groups
<b>Percentages:</b> see prose
<b>Media groups:</b> visual
</reference>
<context id="c.css.length_percentage" symbols=" &#9;&#10;&#13;{}.;:">
<element pattern="0" highlight="css-value" >
	<autocomplete enable="1" />
</element>
<element pattern="inherit" highlight="css-value" >
	<autocomplete enable="1" />
</element>
<element idref="e.css.length"/>
<element idref="e.css.percent"/>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="min-width"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> &lt;length&gt; | &lt;percentage&gt; | inherit
<b>Initial value:</b> 0
<b>Applies to:</b> all elements but non-replaced inline elements, table rows, and row groups
<b>Percentages:</b> refer to width of containing block
<b>Media groups:</b> visual
</reference>
<context idref="c.css.length_percentage"/>
</element>
<element pattern="opacity"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> range [0.0,1.0] | inherit 
<b>Initial value:</b> 1
<b>Media groups:</b> visual
</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<element pattern="0|1|0.[0-9]" highlight="css-value" is_regex="1" />
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/> 
</context>
</element>

<element pattern="outline"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> [ 'outline-color' || 'outline-style' || 'outline-width' ] | inherit
<b>Initial value:</b> see individual properties
<b>Media groups:</b> visual, interactive
</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<element pattern="#([0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f]|[0-9a-f][0-9a-f][0-9a-f])" highlight="css-value" is_regex="1" case_insens="1"/>
<element pattern="(rgba|hsla)\( *[0-9]+%? *, *[0-9]+%? *, *[0-9]+%? *, *(0|1|0.[0-9]) *\)" highlight="css-value" is_regex="1" case_insens="1"/>
<element pattern="(rgb|hsl)\( *[0-9]+%? *, *[0-9]+%? *, *[0-9]+%? *\)" highlight="css-value" is_regex="1" case_insens="1"/>
<group highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="invert"/>
	<element pattern="none"/>
	<element pattern="hidden"/>
	<element pattern="dotted"/>
	<element pattern="dashed"/>
	<element pattern="solid"/>
	<element pattern="double"/>
	<element pattern="groove"/>
	<element pattern="ridge"/>
	<element pattern="inset"/>
	<element pattern="outset"/>
	<element pattern="thin"/>
	<element pattern="medium"/>
	<element pattern="0"/>
	<element pattern="aliceblue"/>
	<element pattern="antiquewhite"/>
	<element pattern="aqua"/>
	<element pattern="aquamarine"/>
	<element pattern="azure"/>
	<element pattern="beige"/>
	<element pattern="bisque"/>
	<element pattern="black"/>
	<element pattern="blanchedalmond"/>
	<element pattern="blue"/>
	<element pattern="blueviolet"/>
	<element pattern="brown"/>
	<element pattern="burlywood"/>
	<element pattern="cadetblue"/>
	<element pattern="chartreuse"/>
	<element pattern="chocolate"/>
	<element pattern="coral"/>
	<element pattern="cornflowerblue"/>
	<element pattern="cornsilk"/>
	<element pattern="crimson"/>
	<element pattern="cyan"/>
	<element pattern="darkblue"/>
	<element pattern="darkcyan"/>
	<element pattern="darkgoldenrod"/>
	<element pattern="darkgray"/>
	<element pattern="darkgreen"/>
	<element pattern="darkgrey"/>
	<element pattern="darkkhaki"/>
	<element pattern="darkmagenta"/>
	<element pattern="darkolivegreen"/>
	<element pattern="darkorange"/>
	<element pattern="darkorchid"/>
	<element pattern="darkred"/>
	<element pattern="darksalmon"/>
	<element pattern="darkseagreen"/>
	<element pattern="darkslateblue"/>
	<element pattern="darkslategray"/>
	<element pattern="darkslategrey"/>
	<element pattern="darkturquoise"/>
	<element pattern="darkviolet"/>
	<element pattern="deeppink"/>
	<element pattern="deepskyblue"/>
	<element pattern="dimgray"/>
	<element pattern="dimgrey"/>
	<element pattern="dodgerblue"/>
	<element pattern="firebrick"/>
	<element pattern="floralwhite"/>
	<element pattern="forestgreen"/>
	<element pattern="fuchsia"/>
	<element pattern="gainsboro"/>
	<element pattern="ghostwhite"/>
	<element pattern="gold"/>
	<element pattern="goldenrod"/>
	<element pattern="gray"/>
	<element pattern="green"/>
	<element pattern="greenyellow"/>
	<element pattern="grey"/>
	<element pattern="honeydew"/>
	<element pattern="hotpink"/>
	<element pattern="indianred"/>
	<element pattern="indigo"/>
	<element pattern="ivory"/>
	<element pattern="khaki"/>
	<element pattern="lavender"/>
	<element pattern="lavenderblush"/>
	<element pattern="lawngreen"/>
	<element pattern="lemonchiffon"/>
	<element pattern="lightblue"/>
	<element pattern="lightcoral"/>
	<element pattern="lightcyan"/>
	<element pattern="lightgoldenrodyellow"/>
	<element pattern="lightgray"/>
	<element pattern="lightgreen"/>
	<element pattern="lightgrey"/>
	<element pattern="lightpink"/>
	<element pattern="lightsalmon"/>
	<element pattern="lightseagreen"/>
	<element pattern="lightskyblue"/>
	<element pattern="lightslategray"/>
	<element pattern="lightslategrey"/>
	<element pattern="lightsteelblue"/>
	<element pattern="lightyellow"/>
	<element pattern="lime"/>
	<element pattern="limegreen"/>
	<element pattern="linen"/>
	<element pattern="magenta"/>
	<element pattern="maroon"/>
	<element pattern="mediumaquamarine"/>
	<element pattern="mediumblue"/>
	<element pattern="mediumorchid"/>
	<element pattern="mediumpurple"/>
	<element pattern="mediumseagreen"/>
	<element pattern="mediumslateblue"/>
	<element pattern="mediumspringgreen"/>
	<element pattern="mediumturquoise"/>
	<element pattern="mediumvioletred"/>
	<element pattern="midnightblue"/>
	<element pattern="mintcream"/>
	<element pattern="mistyrose"/>
	<element pattern="moccasin"/>
	<element pattern="navajowhite"/>
	<element pattern="navy"/>
	<element pattern="oldlace"/>
	<element pattern="olive"/>
	<element pattern="olivedrab"/>
	<element pattern="orange"/>
	<element pattern="orangered"/>
	<element pattern="orchid"/>
	<element pattern="palegoldenrod"/>
	<element pattern="palegreen"/>
	<element pattern="paleturquoise"/>
	<element pattern="palevioletred"/>
	<element pattern="papayawhip"/>
	<element pattern="peachpuff"/>
	<element pattern="peru"/>
	<element pattern="pink"/>
	<element pattern="plum"/>
	<element pattern="powderblue"/>
	<element pattern="purple"/>
	<element pattern="red"/>
	<element pattern="rosybrown"/>
	<element pattern="royalblue"/>
	<element pattern="saddlebrown"/>
	<element pattern="salmon"/>
	<element pattern="sandybrown"/>
	<element pattern="seagreen"/>
	<element pattern="seashell"/>
	<element pattern="sienna"/>
	<element pattern="silver"/>
	<element pattern="skyblue"/>
	<element pattern="slateblue"/>
	<element pattern="slategray"/>
	<element pattern="slategrey"/>
	<element pattern="snow"/>
	<element pattern="springgreen"/>
	<element pattern="steelblue"/>
	<element pattern="tan"/>
	<element pattern="teal"/>
	<element pattern="thistle"/>
	<element pattern="tomato"/>
	<element pattern="turquoise"/>
	<element pattern="violet"/>
	<element pattern="wheat"/>
	<element pattern="white"/>
	<element pattern="whitesmoke"/>
	<element pattern="yellow"/>
	<element pattern="yellowgreen"/>
	<element pattern="currentColor"/>
	<element pattern="transparent"/>
	<element pattern="inherit"/>
</group>
<element idref="e.css.length"/>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/> 
</context>
</element>
<element pattern="outline-color"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> &lt;color&gt; | invert | inherit
<b>Initial value:</b> invert
<b>Media groups:</b> visual, interactive
</reference>
<context idref="c.css.color"/>
</element>
<element pattern="outline-style"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> &lt;border-style&gt; | inherit
<b>Initial value:</b> none
<b>Media groups:</b> visual, interactive
</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<group  highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="none"/>
	<element pattern="hidden"/>
	<element pattern="dotted"/>
	<element pattern="dashed"/>
	<element pattern="solid"/>
	<element pattern="double"/>
	<element pattern="groove"/>
	<element pattern="ridge"/>
	<element pattern="inset"/>
	<element pattern="outset"/>
	<element pattern="inherit"/>	
</group>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>		
</element>
<element pattern="outline-width"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> [ thin | medium | thick | &lt;length&gt; ] | inherit
<b>Initial value:</b> medium
<b>Media groups:</b> visual, interactive
</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<group  highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="thin"/>
	<element pattern="medium"/>
	<element pattern="inherit"/>
	<element pattern="0"/>	
</group>
<element idref="e.css.length"/>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>		
</element>
<element pattern="overflow"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> visible | hidden | scroll | auto | inherit
<b>Initial value:</b> visible
<b>Applies to:</b> non-replaced block-level elements, table cells, inline-table, and inline-block elements
<b>Media groups:</b> visual
</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<element pattern="visible" highlight="css-value" >
	<autocomplete append=";" />
</element>
<element pattern="hidden" highlight="css-value" >
	<autocomplete append=";" />
</element>
<element pattern="scroll" highlight="css-value" >
	<autocomplete append=";" />
</element>
<element pattern="auto" highlight="css-value" >
	<autocomplete append=";" />
</element>
<element pattern="inherit" highlight="css-value" >
	<autocomplete append=";" />
</element>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="padding"  highlight="css-property" >
	<autocomplete append=": " />
<reference>If there is only one value, it applies to all sides. If there are two values, the top and bottom paddings are set to the first value and the right and left paddings are set to the second. If there are three values, the top is set to the first value, the left and right are set to the second, and the bottom is set to the third. If there are four values, they apply to the top, right, bottom, and left, respectively.
<b>Values:</b> [&lt;length&gt; | &lt;percentage&gt;]{1,4} | inherit
<b>Initial value:</b> see individual properties
<b>Applies to:</b> all elements except table-row-group, table-header-group, table-footer-group, table-row, table-column-group and table-column
<b>Percentages:</b> refer to width of containing block
<b>Media groups:</b> visual</reference>
<context idref="c.css.length_percentage"/>
</element>
<element pattern="padding-bottom"  highlight="css-property" >
	<autocomplete append=": " />
<context idref="c.css.length_percentage"/>
</element>
<element pattern="padding-left"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> &lt;length&gt; | &lt;percentage&gt; | inherit
<b>Initial value:</b> 0
<b>Applies to:</b> all elements except table-row-group, table-header-group, table-footer-group, table-row, table-column-group and table-column
<b>Percentages:</b> refer to width of containing block
<b>Media groups:</b> visual
</reference>
<context idref="c.css.length_percentage"/>
</element>
<element pattern="padding-right"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> &lt;length&gt; | &lt;percentage&gt; | inherit
<b>Initial value:</b> 0
<b>Applies to:</b> all elements except table-row-group, table-header-group, table-footer-group, table-row, table-column-group and table-column
<b>Percentages:</b> refer to width of containing block
<b>Media groups:</b> visual
</reference>
<context idref="c.css.length_percentage"/>
</element>
<element pattern="padding-top"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> &lt;length&gt; | &lt;percentage&gt; | inherit
<b>Initial value:</b> 0
<b>Applies to:</b> all elements except table-row-group, table-header-group, table-footer-group, table-row, table-column-group and table-column
<b>Percentages:</b> refer to width of containing block
<b>Media groups:</b> visual
</reference>
<context idref="c.css.length_percentage"/>
</element>
<element pattern="position"  highlight="css-property" >
	<autocomplete append=": " />
<reference><b>position</b>: The 'position' and 'float' properties determine which of the CSS2 positioning algorithms is used to calculate the position of a box
<b>Values:</b> static | relative | absolute | fixed | inherit
<b>Initial value:</b> static
<b>Media groups:</b> visual</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<element pattern="static"  highlight="css-value" >
	<autocomplete append=";" />
<reference><b>static</b>: The box is a normal box, laid out according to the normal flow. The 'left' and 'top' properties do not apply. 
relative </reference>
</element>
<element pattern="relative"  highlight="css-value" >
	<autocomplete append=";" />
<reference><b>relative</b>: The box's position is calculated according to the normal flow (this is called the position in normal flow). Then the box is offset relative to its normal position. When a box B is relatively positioned, the position of the following box is calculated as though B were not offset. </reference>
</element>
<element pattern="absolute"  highlight="css-value" >
	<autocomplete append=";" />
<reference><b>absolute</b>: The box's position (and possibly size) is specified with the 'left', 'right', 'top', and 'bottom' properties. These properties specify offsets with respect to the box's containing block. Absolutely positioned boxes are taken out of the normal flow. This means they have no impact on the layout of later siblings. Also, though absolutely positioned boxes have margins, they do not collapse with any other margins. </reference>
</element>
<element pattern="fixed"  highlight="css-value" >
	<autocomplete append=";" />
<reference><b>fixed</b>: The box's position is calculated according to the 'absolute' model, but in addition, the box is fixed with respect to some reference. In the case of continuous media, the box is fixed with respect to the viewport (and doesn't move when scrolled). In the case of paged media, the box is fixed with respect to the page, even if that page is seen through a viewport (in the case of a print-preview, for example). Authors may wish to specify 'fixed' in a media-dependent way. For instance, an author may want a box to remain at the top of the viewport on the screen, but not at the top of each printed page.</reference>
</element>
<element pattern="inherit"  highlight="css-value" >
	<autocomplete append=";" />
</element>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="quotes"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> [&lt;string&gt; &lt;string&gt;]+ | none | inherit
<b>Initial value:</b> depends on user agent
<b>Media groups:</b> visual
</reference>
<context symbols=" &#9;&#10;&#13;-{}.;:'&#34;">
<group  highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="none"/>
	<element pattern="inherit"/>
</group>
<element pattern="'" highlight="css-string">
<context symbols="\'" highlight="css-string">
	<element pattern="\\." is_regex="1" highlight="css-string"/>
	<element pattern="'" highlight="css-string" ends_context="1"/>
</context>
</element>
<element pattern="&quot;" highlight="css-string">
<context symbols="\&quot;" highlight="css-string">
	<element pattern="\\." is_regex="1" highlight="css-string"/>
	<element pattern="&quot;" highlight="css-string" ends_context="1"/>
</context>
</element>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>		
</element>
<element pattern="right"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> &lt;length&gt; | &lt;percentage&gt; | auto | inherit
<b>Initial value:</b> auto
<b>Applies to:</b> positioned elements
<b>Percentages:</b> refer to width of containing block
<b>Media groups:</b> visual
</reference>
<context idref="c.css.box_offsets"/>
</element>
<element pattern="table-layout"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> auto | fixed | inherit
<b>Initial value:</b> auto
<b>Applies to:</b> 'table' and 'inline-table' elements
<b>Media groups:</b> visual
</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<group highlight="css-value" >
	<autocomplete append=";" />
<element pattern="fixed"/>
<element pattern="auto"/>
<element pattern="inherit"/>
</group>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="text-align"  highlight="css-property" >
	<autocomplete append=": " />
<reference>describes how inline content of a block is aligned.
<b>Values:</b> left | right | center | justify | inherit
<b>Initial value:</b> a nameless value that acts as 'left' if 'direction' is 'ltr',   'right' if 'direction' is 'rtl'
<b>Applies to:</b> block containers
<b>Media groups:</b> visual</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<group  highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="left"/>
	<element pattern="right"/>
	<element pattern="center"/>
	<element pattern="justify"/>
	<element pattern="inherit"/>
</group>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="text-decoration"  highlight="css-property" >
	<autocomplete append=": " />
<reference><b>text-decoration</b> describes decorations that are added to the text of an element. If the property is specified for a block-level element, it affects all inline-level descendants of the element. If it is specified for (or affects) an inline-level element, it affects all boxes generated by the element. If the element has no content or no text content (e.g., the IMG element in HTML), user agents must ignore this property
<b>Values:</b> none | [ underline || overline || line-through || blink ] | inherit
<b>Initial value:</b> none
<b>Initial value :</b> (see prose)
<b>Media groups:</b> visual</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<group  highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="none"/>
	<element pattern="underline"/>
	<element pattern="overline"/>
	<element pattern="line-through"/>
	<element pattern="blink">
	<reference>Text blinks (alternates between visible and invisible). Conforming user agents are not required to support this value.</reference>
	</element>
	<element pattern="inherit"/>
</group>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="text-indent"  highlight="css-property" >
	<autocomplete append=": " />
<reference><b>text-indent</b> specifies the indentation of the first line of text in a block. More precisely, it specifies the indentation of the first box that flows into the block's first line box. The box is indented with respect to the left (or right, for right-to-left layout) edge of the line box. User agents should render this indentation as blank space. 
<b>Values:</b> &lt;length&gt; | &lt;percentage&gt; | inherit
<b>Initial value:</b> 0
<b>Applies to:</b> block containers
<b>Percentages:</b> refer to width of containing block
<b>Media groups:</b> visual</reference>
<context symbols=" &#9;&#10;&#13;{}.;:"> 
<element pattern="0" highlight="css-value" >
	<autocomplete enable="1" />
</element>
<element pattern="inherit" highlight="css-value" >
	<autocomplete enable="1" />
</element>
<element idref="e.css.length"/>
<element idref="e.css.percent"/>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context> 
</element>
<element pattern="text-transform"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> capitalize | uppercase | lowercase | none | inherit
<b>Initial value:</b> none
<b>Media groups:</b> visual
</reference>
<reference><b>text-transform</b> controls capitalization effects of an element's text.</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<group  highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="none"/>
	<element pattern="capitalize"/>
	<element pattern="uppercase"/>
	<element pattern="lowercase"/>
	<element pattern="inherit"/>
</group>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>	
</element>
<element pattern="top"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> &lt;length&gt; | &lt;percentage&gt; | auto | inherit
<b>Initial value:</b> auto
<b>Applies to:</b> positioned elements
<b>Percentages:</b> refer to height of containing block
<b>Media groups:</b> visual
</reference>
<context idref="c.css.box_offsets"/>
</element>
<element pattern="unicode-bidi"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> normal | embed | bidi-override | inherit
<b>Initial value:</b> normal
<b>Applies to:</b> all elements, but see prose
<b>Media groups:</b> visual
</reference> 
<context symbols=" &#9;&#10;&#13;{}.;:">
<group  highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="normal"/>
	<element pattern="embed"/>
	<element pattern="bidi-override"/>
	<element pattern="inherit"/>
</group>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>  
</context>
</element>
<element pattern="vertical-align"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> baseline | sub | super | top | text-top | middle | bottom | text-bottom | &lt;percentage&gt; | &lt;length&gt; | inherit
<b>Initial value:</b> baseline
<b>Applies to:</b> inline-level and 'table-cell' elements
<b>Percentages:</b> refer to the 'line-height' of the element itself
<b>Media groups:</b> visual
</reference>
<context symbols=" &#9;&#10;&#13;-{}.;:">
<group  highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="baseline"/>
	<element pattern="sub"/>
	<element pattern="super"/>
	<element pattern="top"/>
	<element pattern="text-top"/>
	<element pattern="middle"/>
	<element pattern="bottom"/>
	<element pattern="text-bottom"/>
	<element pattern="inherit"/>
	<element pattern="0"/>
</group>
<element idref="e.css.length.neg"/>
<element idref="e.css.end"/>
<element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="visibility"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> visible | hidden | collapse | inherit
<b>Initial value:</b> visible
<b>Media groups:</b> visual
</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<group  highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="visible"/>
	<element pattern="hidden"/>
	<element pattern="collapse"/>
	<element pattern="inherit"/>
</group>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>
</element>
<element pattern="white-space"  highlight="css-property" >
	<autocomplete append=": " />
<reference><b>white-space</b> declares how whitespace inside the element is handled. Conforming user agents may ignore the 'white-space' property in author and user style sheets but must specify a value for it in the default style sheet
<b>Values:</b> normal | pre | nowrap | pre-wrap | pre-line | inherit
<b>Initial value:</b> normal
<b>Media groups:</b> visual.</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<element pattern="normal"  highlight="css-value" >
	<autocomplete append=";" />
</element>
<element pattern="pre"  highlight="css-value" >
	<autocomplete append=";" />
</element>
<element pattern="nowrap"  highlight="css-value" >
	<autocomplete append=";" />
</element>
<element pattern="pre-wrap"  highlight="css-value" >
	<autocomplete append=";" />
</element>
<element pattern="pre-line"  highlight="css-value" >
	<autocomplete append=";" />
</element>
<element pattern="inherit"  highlight="css-value" >
	<autocomplete append=";" />
</element>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>		
</element>
<element pattern="width"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> &lt;length&gt; | &lt;percentage&gt; | auto | inherit
<b>Initial value:</b> auto
<b>Applies to:</b> all elements but non-replaced inline elements, table rows, and row groups
<b>Percentages:</b> refer to width of containing block
<b>Media groups:</b> visual
</reference>
<context idref="c.css.width"/>
<context symbols=" &#9;&#10;&#13;{}.;:">
<element idref="e.css.percent"/>
<element idref="e.css.length"/>
<element idref="e.css.end"/>
<element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>	
</element>	
<element pattern="height"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> &lt;length&gt; | &lt;percentage&gt; | auto | inherit
<b>Initial value:</b> auto
<b>Applies to:</b> all elements but non-replaced inline elements, table columns, and column groups
<b>Percentages:</b> see prose
<b>Media groups:</b> visual
</reference>
<context idref="c.css.width"/>
<context symbols=" &#9;&#10;&#13;{}.;:">
<element idref="e.css.percent"/>
<element idref="e.css.length"/>
<element idref="e.css.end"/>
<element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>		
</element>
<element pattern="word-spacing"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> normal | &lt;length&gt; | inherit
<b>Initial value:</b> normal
<b>Media groups:</b> visual
</reference>
<context symbols=" &#9;&#10;&#13;-{}.;:">
<group  highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="normal"/>
	<element pattern="inherit"/>
	<element pattern="0"/>	
</group>
<element pattern="-?[0-9]+\.?[0-9]*(em|ex|in|cm|mm|pt|pc|px)" is_regex="1" highlight="css-value"/>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>		
</element>
<element pattern="word-wrap"  highlight="css-property" >
	<autocomplete append=": " />
<reference><span foreground="red">Draft</span> The word-wrap CSS property is used to to specify whether or not the browser is allowed to break lines within words in order to prevent overflow when an otherwise unbreakable string is too long to fit.
<b>Values:</b> normal | break-word
<b>Initial value:</b> normal
<b>Media groups:</b> visual.</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="normal" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Break words only at allowed break points
			</reference>
		</element>
		<element pattern="break-word" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Allows unbreakable words to be broken
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="z-index"  highlight="css-property" >
	<autocomplete append=": " />
<reference>
<b>Values:</b> auto | &lt;integer&gt; | inherit
<b>Initial value:</b> auto
<b>Applies to:</b> positioned elements
<b>Media groups:</b> visual
</reference>
<context symbols=" &#9;&#10;&#13;{}.;:">
<group  highlight="css-value" >
	<autocomplete append=";" />
	<element pattern="auto"/>
	<element pattern="inherit"/>
</group>
<element pattern="[0-9]+\.?[0-9]*" is_regex="1" highlight="css-value"/>
<element idref="e.css.length"/>
<element idref="e.css.end"/><element idref="e.css.lcomment"/>
<element idref="e.css.rbrace"/>
</context>		
</element>
<!-- YEOWORKS ADDITIONS CSS PROPERTIES AND VALUES http://www.ywscorp.com yeoworks@gmail.com -->
<element pattern="overflow-x"  highlight="css-property" >
	<autocomplete append=": " />
	<reference>
<b>Values:</b> visible | hidden | scroll | auto | inherit
<b>Initial value:</b> visible
<b>Applies to:</b> non-replaced block-level elements, table cells, inline-table, and inline-block elements
<b>Media groups:</b> visual
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="visible" highlight="css-value" >
			<autocomplete append=";" />
		</element>
		<element pattern="hidden" highlight="css-value" >
			<autocomplete append=";" />
		</element>
		<element pattern="scroll" highlight="css-value" >
			<autocomplete append=";" />
		</element>
		<element pattern="auto" highlight="css-value" >
			<autocomplete append=";" />
		</element>
		<element pattern="inherit" highlight="css-value" >
			<autocomplete append=";" />
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="overflow-y"  highlight="css-property" >
	<autocomplete append=": " />
	<reference>
<b>Values:</b> visible | hidden | scroll | auto | inherit
<b>Initial value:</b> visible
<b>Applies to:</b> non-replaced block-level elements, table cells, inline-table, and inline-block elements
<b>Media groups:</b> visual
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="visible" highlight="css-value" >
			<autocomplete append=";" />
		</element>
		<element pattern="hidden" highlight="css-value" >
			<autocomplete append=";" />
		</element>
		<element pattern="scroll" highlight="css-value" >
			<autocomplete append=";" />
		</element>
		<element pattern="auto" highlight="css-value" >
			<autocomplete append=";" />
		</element>
		<element pattern="inherit" highlight="css-value" >
			<autocomplete append=";" />
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="border-image"  highlight="css-property" >
	<autocomplete append=": " />
	<reference>
CSS3 border-image property you can use an image to create a border
	</reference>
</element>
<element pattern="border-radius"  highlight="css-property" >
	<autocomplete append=": " />
	<reference>
<b>Length:</b> Defines the shape of the corners
<b>%:</b> Defines the shape of the corners in %
	</reference>
</element>
<element pattern="border-top-left-radius"  highlight="css-property" >
	<autocomplete append=": " />
	<reference>
<b>Length:</b> Defines the shape of the corners
<b>%:</b> Defines the shape of the corners in %
	</reference>
</element>
<element pattern="border-top-right-radius"  highlight="css-property" >
	<autocomplete append=": " />
	<reference>
<b>Length:</b> Defines the shape of the corners
<b>%:</b> Defines the shape of the corners in %
	</reference>
</element>
<element pattern="border-bottom-left-radius"  highlight="css-property" >
	<autocomplete append=": " />
	<reference>
<b>Length:</b> Defines the shape of the corners
<b>%:</b> Defines the shape of the corners in %
	</reference>
</element>
<element pattern="border-bottom-right-radius"  highlight="css-property" >
	<autocomplete append=": " />
	<reference>
<b>Length:</b> Defines the shape of the corners
<b>%:</b> Defines the shape of the corners in %
	</reference>
</element>
<element pattern="box-shadow"  highlight="css-property" >
	<autocomplete append=": " />
	<reference>
box-shadow: h-shadow v-shadow blur spread color inset;

<b>Example:</b>
box-shadow: 10px 10px 5px #888888;
	</reference>
</element>
<element pattern="@keyframes" highlight="css-property" >
	<autocomplete append=" " />
	<reference>
The @keyframes rule is where the animation is created. Specify a CSS style inside the @keyframes rule and the animation will gradually change from the current style to the new style.

<b>Example(s):</b>
@keyframes myfirst
{
	from {background: red;}
	to {background: yellow;}
}

@keyframes myfirst
{
	0%   {background: red;}
	25%  {background: yellow;}
	50%  {background: blue;}
	100% {background: green;}
}
	</reference>
</element>
<element pattern="animation" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
When the animation is created in the @keyframe, bind it to a selector, otherwise the animation will have no effect.

animation: name duration timing-function delay iteration-count direction;

<b>Example(s):</b>
div
{
	animation: myfirst 5s;
	-ms-animation: myfirst 5s; /* Internet Explorer */
	-moz-animation: myfirst 5s; /* Firefox */
	-webkit-animation: myfirst 5s; /* Safari and Chrome */
	-o-animation: myfirst 5s; /* Opera */
} 
	</reference>
</element>
<element pattern="animation-name" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies a name for the @keyframes animation

animation-name: keyframename|none;

<b>Example(s):</b>
animation-name:mymove;
-ms-animation-name:mymove; /* Internet Explorer */
-moz-animation-name:mymove; /* Firefox */
-webkit-animation-name:mymove; /* Safari and Chrome */
-o-animation-name:mymove; /* Opera */ 
	</reference>
</element>
<element pattern="animation-duration" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies how many seconds or milliseconds an animation takes to complete one cycle

animation-duration: time;

<b>Example(s):</b>
animation-duration:1s;
-ms-animation-duration:1s; /* Internet Explorer */
-moz-animation-duration:1s; /* Firefox */
-webkit-animation-duration:1s; /* Safari and Chrome */
-o-animation-duration:1s; /* Opera */
	</reference>
</element>
<element pattern="animation-timing-function" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the speed curve of the animation

animation-timing-function: value;

<b>Example(s):</b>
animation-timing-function:linear;
-ms-animation-timing-function:linear; /* Internet Explorer */
-moz-animation-timing-function:linear; /* Firefox */
-webkit-animation-timing-function:linear; /* Safari and Chrome */
-o-animation-timing-function:linear; /* Opera */
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="linear" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The animation has the same speed from start to end
			</reference>
		</element>
		<element pattern="ease" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Default. The animation has a slow start, then fast, before it ends slowly
			</reference>
		</element>
		<element pattern="ease-in" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The animation has a slow start
			</reference>
		</element>
		<element pattern="ease-out" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The animation has a slow end
			</reference>
		</element>
		<element pattern="ease-in-out" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The animation has both a slow start and a slow end
			</reference>
		</element>
		<element pattern="cubic-bezier(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
cubic-bezier(n,n,n,n). Define your own values in the cubic-bezier function
Possible values are numeric values from 0 to 1
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="animation-delay" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies when the animation will start

animation-delay: time;

<b>Example(s):</b>
animation-delay:2s;
-ms-animation-delay:2s; /* Internet Explorer */
-moz-animation-delay:2s; /* Firefox */
-webkit-animation-delay:2s; /* Safari and Chrome */
-o-animation-delay:2s; /* Opera */ 
	</reference>
</element>
<element pattern="animation-iteration-count" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the number of times an animation should be played

animation-iteration-count: value;

<b>Example(s):</b>
animation-iteration-count:3;
-ms-animation-iteration-count:3; /* Internet Explorer */
-moz-animation-iteration-count:3; /* Firefox */
-webkit-animation-iteration-count:3; /*Safari and Chrome*/
-o-animation-iteration-count:3; /* Opera */ 
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="n" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
A number that defines how many times an animation should be played
			</reference>
		</element>
		<element pattern="infinite" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies that the animation should be played infinite times (for ever)
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="animation-play-state" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies whether the animation is running or paused

animation-play-state: paused|running;

<b>Example(s):</b>
animation-play-state:paused;
-ms-animation-play-state:paused; /* Internet Explorer */
-moz-animation-play-state:paused; /* Firefox */
-webkit-animation-play-state:paused; /* Safari and Chrome */
-o-animation-play-state:paused; /* Opera */ 
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="paused" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies that the animation is paused
			</reference>
		</element>
		<element pattern="running" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies that the animation is running
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="transform" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
<b>2D</b> translate(); rotate(); scale(); skew(); matrix();
<b>matrix(n,n,n,n,n,n)</b> Defines a 2D transformation, using a matrix of six values
<b>translate(x,y)</b> Defines a 2D translation, moving the element along the X- and the Y-axis
<b>translateX(n)</b> Defines a 2D translation, moving the element along the X-axis
<b>translateY(n)</b> Defines a 2D translation, moving the element along the Y-axis
<b>scale(x,y)</b> Defines a 2D scale transformation, changing the elements width and height
<b>scaleX(n)</b> Defines a 2D scale transformation, changing the element's width
<b>scaleY(n)</b> Defines a 2D scale transformation, changing the element's height
<b>rotate(angle)</b> Defines a 2D rotation, the angle is specified in the parameter
<b>skew(x-angle,y-angle)</b> Defines a 2D skew transformation along the X- and the Y-axis
<b>skewX(angle)</b> Defines a 2D skew transformation along the X-axis
<b>skewY(angle)</b> Defines a 2D skew transformation along the Y-axis
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="matrix(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>matrix(n,n,n,n,n,n)</b> Defines a 2D transformation, using a matrix of six values
			</reference>
		</element>
		<element pattern="translate(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>translate(x,y)</b> Defines a 2D translation, moving the element along the X- and the Y-axis
			</reference>
		</element>
		<element pattern="translateX(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>translateX(n)</b> Defines a 2D translation, moving the element along the X-axis
			</reference>
		</element>
		<element pattern="translateY(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>translateY(n)</b> Defines a 2D translation, moving the element along the Y-axis
			</reference>
		</element>
		<element pattern="scale(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>scale(x,y)</b> Defines a 2D scale transformation, changing the elements width and height
			</reference>
		</element>
		<element pattern="scaleX(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>scaleX(n)</b> Defines a 2D scale transformation, changing the element's width
			</reference>
		</element>
		<element pattern="scaleY(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>scaleY(n)</b> Defines a 2D scale transformation, changing the element's height
			</reference>
		</element>
		<element pattern="rotate(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>rotate(angle)</b> Defines a 2D rotation, the angle is specified in the parameter
			</reference>
		</element>
		<element pattern="skew(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>skew(x-angle,y-angle)</b> Defines a 2D skew transformation along the X- and the Y-axis
			</reference>
		</element>
		<element pattern="skewX(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>skewX(angle)</b> Defines a 2D skew transformation along the X-axis
			</reference>
		</element>
		<element pattern="skewY(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>skewY(angle)</b> Defines a 2D skew transformation along the Y-axis
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="transform-origin" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
transform-origin: x-axis y-axis z-axis;
<b>x-axis</b> Defining where the view is placed at the x-axis. Possible values: left, center, right, length, and %.
<b>y-axis</b> Defining where the view is placed at the y-axis. Possible values: top, center, bottom, length, and %.
<b>z-axis</b> Defining where the view is placed at the z-axis. Possible values: length.
	</reference>
</element>
<element pattern="transform-style" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies how nested elements are rendered in 3D space

transform-style: flat|preserve-3d;

<b>Example</b>
div
{
	transform: rotateY(60deg);
	transform-style: preserve-3d;
	-webkit-transform: rotateY(60deg); /* Safari and Chrome */
	-webkit-transform-style: preserve-3d; /* Safari and Chrome */
}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="flat" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The child elements will NOT preserve its 3D position
			</reference>
		</element>
		<element pattern="preserve-3d" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The child elements will preserve its 3D position
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="perspective" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the perspective on how 3D elements are viewed

perspective: number|none;

<b>Example</b>
div
{
	perspective: 500;
	-webkit-perspective: 500; /* Safari and Chrome */
}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="number" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
How many pixels the element is placed from the view
			</reference>
		</element>
		<element pattern="none" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Default value. Same as 0. The perspective is not set
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="perspective-origin" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the bottom position of 3D elements

perspective-origin: x-axis y-axis;

<b>Example</b>
div
{
	perspective:150;
	perspective-origin: 10% 10%;
	-webkit-perspective:150; /* Safari and Chrome */
	-webkit-perspective-origin: 10% 10%; /* Safari and Chrome */
}
	</reference>
</element>
<element pattern="backface-visibility" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Defines whether or not an element should be visible when not facing the screen

backface-visibility: visible|hidden;

<b>Example</b>
div
{
	backface-visibility:hidden;
	-webkit-backface-visibility:hidden; /* Chrome and Safari */
	-moz-backface-visibility:hidden; /* Firefox */
}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="visible" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The backside is visible
			</reference>
		</element>
		<element pattern="hidden" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The backside is not visible
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="transition" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
A shorthand property for setting the four transition properties into a single property

<b>Example</b>
div
{
	width:100px;
	transition: width 2s;
	-ms-transition: width 2s; /* Internet Explorer */
	-moz-transition: width 2s; /* Firefox */
	-webkit-transition: width 2s; /* Safari and Chrome */
	-o-transition: width 2s; /* Opera */
}
div:hover {width:300px;} 
	</reference>
</element>
<element pattern="transition-property" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the name of the CSS property to which the transition is applied

transition-property: none|all|property;

<b>Example</b>
div
{
	transition-property:width;
	-ms-transition-property: width; /* Internet Explorer */
	-moz-transition-property: width; /* Firefox */
	-webkit-transition-property:width; /* Safari and Chrome */
	-o-transition-property:width; /* Opera */
}

div:hover {width:300px;}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="none" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
No property will get a transition effect
			</reference>
		</element>
		<element pattern="all" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
All properties will get a transition effect
			</reference>
		</element>
		<element pattern="property" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Defines a comma separated list of CSS property names the transition effect is for
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="transition-duration" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Defines the length of time that a transition takes. Default 0

transition-duration: time;

<b>Example</b>
transition-duration: 5s;
-ms-transition-duration: 5s; /* Internet Explorer */
-moz-transition-duration: 5s; /* Firefox */
-webkit-transition-duration: 5s; /* Safari and Chrome */
-o-transition-duration: 5s; /* Opera */
	</reference>
</element>
<element pattern="transition-timing-function" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Describes how the speed during a transition will be calculated. Default "ease"

transition-timing-function: linear|ease|ease-in|ease-out|ease-in-out|cubic-bezier(n,n,n,n);

<b>Example</b>
transition-timing-function: linear;
-ms-transition-timing-function: linear; /* Internet Explorer */
-moz-transition-timing-function: linear; /* Firefox */
-webkit-transition-timing-function: linear; /* Safari and Chrome */
-o-transition-timing-function: linear; /* Opera */
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="linear" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a transition effect with the same speed from start to end (equivalent to cubic-bezier(0,0,1,1))
			</reference>
		</element>
		<element pattern="ease" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a transition effect with a slow start, then fast, then end slowly (equivalent to cubic-bezier(0.25,0.1,0.25,1))
			</reference>
		</element>
		<element pattern="ease-in" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a transition effect with a slow start (equivalent to cubic-bezier(0.42,0,1,1))
			</reference>
		</element>
		<element pattern="ease-out" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a transition effect with a slow end (equivalent to cubic-bezier(0,0,0.58,1))
			</reference>
		</element>
		<element pattern="ease-in-out" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a transition effect with a slow start and end (equivalent to cubic-bezier(0.42,0,0.58,1))
			</reference>
		</element>
		<element pattern="cubic-bezier(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
cubic-bezier(n,n,n,n). Define your own values in the cubic-bezier function. Possible values are numeric values from 0 to 1
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="transition-delay" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Defines when the transition will start. Default 0

transition-delay: time;

<b>Example</b>
transition-delay: 2s;
-ms-transition-delay: 2s; /* Internet Explorer */
-moz-transition-delay: 2s; /* Firefox */
-webkit-transition-delay: 2s; /* Safari and Chrome */
-o-transition-delay: 2s; /* Opera */
	</reference>
</element>
<element pattern="-ms-"  highlight="css-property" >
	<autocomplete append="" />
	<reference>
<b>Internet Explorer</b> prefix
	</reference>
</element>
<element pattern="@-ms-keyframes" highlight="css-property" >
	<autocomplete append=" " />
	<reference>
The @keyframes rule is where the animation is created. Specify a CSS style inside the @keyframes rule and the animation will gradually change from the current style to the new style.

<b>Example(s):</b>
@-ms-keyframes myfirst
{
	from {background: red;}
	to {background: yellow;}
}

@-ms-keyframes myfirst
{
	0%   {background: red;}
	25%  {background: yellow;}
	50%  {background: blue;}
	100% {background: green;}
}
	</reference>
</element>
<element pattern="-ms-animation" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
When the animation is created in the @keyframe, bind it to a selector, otherwise the animation will have no effect.

-ms-animation: name duration timing-function delay iteration-count direction;

<b>Example(s):</b>
div
{
	animation: myfirst 5s;
	-ms-animation: myfirst 5s; /* Internet Explorer */
	-moz-animation: myfirst 5s; /* Firefox */
	-webkit-animation: myfirst 5s; /* Safari and Chrome */
	-o-animation: myfirst 5s; /* Opera */
} 
	</reference>
</element>
<element pattern="-ms-animation-name" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies a name for the @keyframes animation

-ms-animation-name: keyframename|none;

<b>Example(s):</b>
animation-name:mymove;
-ms-animation-name:mymove; /* Internet Explorer */
-moz-animation-name:mymove; /* Firefox */
-webkit-animation-name:mymove; /* Safari and Chrome */
-o-animation-name:mymove; /* Opera */ 
	</reference>
</element>
<element pattern="-ms-animation-duration" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies how many seconds or milliseconds an animation takes to complete one cycle

-ms-animation-duration: time;

<b>Example(s):</b>
animation-duration:1s;
-ms-animation-duration:1s; /* Internet Explorer */
-moz-animation-duration:1s; /* Firefox */
-webkit-animation-duration:1s; /* Safari and Chrome */
-o-animation-duration:1s; /* Opera */
	</reference>
</element>
<element pattern="-ms-animation-timing-function" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the speed curve of the animation

-ms-animation-timing-function: value;

<b>Example(s):</b>
animation-timing-function:linear;
-ms-animation-timing-function:linear; /* Internet Explorer */
-moz-animation-timing-function:linear; /* Firefox */
-webkit-animation-timing-function:linear; /* Safari and Chrome */
-o-animation-timing-function:linear; /* Opera */
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="linear" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The animation has the same speed from start to end
			</reference>
		</element>
		<element pattern="ease" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Default. The animation has a slow start, then fast, before it ends slowly
			</reference>
		</element>
		<element pattern="ease-in" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The animation has a slow start
			</reference>
		</element>
		<element pattern="ease-out" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The animation has a slow end
			</reference>
		</element>
		<element pattern="ease-in-out" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The animation has both a slow start and a slow end
			</reference>
		</element>
		<element pattern="cubic-bezier(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
cubic-bezier(n,n,n,n). Define your own values in the cubic-bezier function
Possible values are numeric values from 0 to 1
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-ms-animation-delay" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies when the animation will start

-ms-animation-delay: time;

<b>Example(s):</b>
animation-delay:2s;
-ms-animation-delay:2s; /* Internet Explorer */
-moz-animation-delay:2s; /* Firefox */
-webkit-animation-delay:2s; /* Safari and Chrome */
-o-animation-delay:2s; /* Opera */ 
	</reference>
</element>
<element pattern="-ms-animation-iteration-count" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the number of times an animation should be played

-ms-animation-iteration-count: value;

<b>Example(s):</b>
animation-iteration-count:3;
-ms-animation-iteration-count:3; /* Internet Explorer */
-moz-animation-iteration-count:3; /* Firefox */
-webkit-animation-iteration-count:3; /*Safari and Chrome*/
-o-animation-iteration-count:3; /* Opera */ 
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="n" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
A number that defines how many times an animation should be played
			</reference>
		</element>
		<element pattern="infinite" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies that the animation should be played infinite times (for ever)
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="animation-direction" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies whether or not the animation should play in reverse on alternate cycles

animation-direction: value;

<b>Example(s):</b>
animation-direction:alternate;
-ms-animation-direction:alternate; /* Internet Explorer */
-moz-animation-direction:alternate; /* Firefox */
-webkit-animation-direction:alternate; /* Safari and Chrome */
-o-animation-direction:alternate; /* Opera */ 
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="normal" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Default value. The animation should be played as normal
			</reference>
		</element>
		<element pattern="alternate" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The animation should play in reverse on alternate cycles
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-ms-animation-play-state" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies whether the animation is running or paused

-ms-animation-play-state: paused|running;

<b>Example(s):</b>
animation-play-state:paused;
-ms-animation-play-state:paused; /* Internet Explorer */
-moz-animation-play-state:paused; /* Firefox */
-webkit-animation-play-state:paused; /* Safari and Chrome */
-o-animation-play-state:paused; /* Opera */ 
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="paused" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies that the animation is paused
			</reference>
		</element>
		<element pattern="running" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies that the animation is running
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-ms-transform" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
<b>2D</b> translate(); rotate(); scale(); skew(); matrix();
<b>matrix(n,n,n,n,n,n)</b> Defines a 2D transformation, using a matrix of six values
<b>translate(x,y)</b> Defines a 2D translation, moving the element along the X- and the Y-axis
<b>translateX(n)</b> Defines a 2D translation, moving the element along the X-axis
<b>translateY(n)</b> Defines a 2D translation, moving the element along the Y-axis
<b>scale(x,y)</b> Defines a 2D scale transformation, changing the elements width and height
<b>scaleX(n)</b> Defines a 2D scale transformation, changing the element's width
<b>scaleY(n)</b> Defines a 2D scale transformation, changing the element's height
<b>rotate(angle)</b> Defines a 2D rotation, the angle is specified in the parameter
<b>skew(x-angle,y-angle)</b> Defines a 2D skew transformation along the X- and the Y-axis
<b>skewX(angle)</b> Defines a 2D skew transformation along the X-axis
<b>skewY(angle)</b> Defines a 2D skew transformation along the Y-axis
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="matrix(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>matrix(n,n,n,n,n,n)</b> Defines a 2D transformation, using a matrix of six values
			</reference>
		</element>
		<element pattern="translate(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>translate(x,y)</b> Defines a 2D translation, moving the element along the X- and the Y-axis
			</reference>
		</element>
		<element pattern="translateX(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>translateX(n)</b> Defines a 2D translation, moving the element along the X-axis
			</reference>
		</element>
		<element pattern="translateY(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>translateY(n)</b> Defines a 2D translation, moving the element along the Y-axis
			</reference>
		</element>
		<element pattern="scale(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>scale(x,y)</b> Defines a 2D scale transformation, changing the elements width and height
			</reference>
		</element>
		<element pattern="scaleX(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>scaleX(n)</b> Defines a 2D scale transformation, changing the element's width
			</reference>
		</element>
		<element pattern="scaleY(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>scaleY(n)</b> Defines a 2D scale transformation, changing the element's height
			</reference>
		</element>
		<element pattern="rotate(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>rotate(angle)</b> Defines a 2D rotation, the angle is specified in the parameter
			</reference>
		</element>
		<element pattern="skew(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>skew(x-angle,y-angle)</b> Defines a 2D skew transformation along the X- and the Y-axis
			</reference>
		</element>
		<element pattern="skewX(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>skewX(angle)</b> Defines a 2D skew transformation along the X-axis
			</reference>
		</element>
		<element pattern="skewY(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>skewY(angle)</b> Defines a 2D skew transformation along the Y-axis
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-ms-transform-origin" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
transform-origin: x-axis y-axis z-axis;
<b>x-axis</b> Defining where the view is placed at the x-axis. Possible values: left, center, right, length, and %.
<b>y-axis</b> Defining where the view is placed at the y-axis. Possible values: top, center, bottom, length, and %.
<b>z-axis</b> Defining where the view is placed at the z-axis. Possible values: length.
	</reference>
</element>
<element pattern="-ms-transform-style" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies how nested elements are rendered in 3D space

-ms-transform-style: flat|preserve-3d;

<b>Example</b>
div
{
	transform: rotateY(60deg);
	transform-style: preserve-3d;
	-webkit-transform: rotateY(60deg); /* Safari and Chrome */
	-webkit-transform-style: preserve-3d; /* Safari and Chrome */
}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="flat" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The child elements will NOT preserve its 3D position
			</reference>
		</element>
		<element pattern="preserve-3d" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The child elements will preserve its 3D position
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-ms-perspective" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the perspective on how 3D elements are viewed

-ms-perspective: number|none;

<b>Example</b>
div
{
	perspective: 500;
	-webkit-perspective: 500; /* Safari and Chrome */
}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="number" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
How many pixels the element is placed from the view
			</reference>
		</element>
		<element pattern="none" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Default value. Same as 0. The perspective is not set
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-ms-perspective-origin" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the bottom position of 3D elements

-ms-perspective-origin: x-axis y-axis;

<b>Example</b>
div
{
	perspective:150;
	perspective-origin: 10% 10%;
	-webkit-perspective:150; /* Safari and Chrome */
	-webkit-perspective-origin: 10% 10%; /* Safari and Chrome */
}
	</reference>
</element>
<element pattern="-ms-backface-visibility" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Defines whether or not an element should be visible when not facing the screen

-ms-backface-visibility: visible|hidden;

<b>Example</b>
div
{
	backface-visibility:hidden;
	-webkit-backface-visibility:hidden; /* Chrome and Safari */
	-moz-backface-visibility:hidden; /* Firefox */
}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="visible" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The backside is visible
			</reference>
		</element>
		<element pattern="hidden" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The backside is not visible
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-ms-transition" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
A shorthand property for setting the four transition properties into a single property

<b>Example</b>
div
{
	width:100px;
	transition: width 2s;
	-ms-transition: width 2s; /* Internet Explorer */
	-moz-transition: width 2s; /* Firefox */
	-webkit-transition: width 2s; /* Safari and Chrome */
	-o-transition: width 2s; /* Opera */
}
div:hover {width:300px;} 
	</reference>
</element>
<element pattern="-ms-transition-property" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the name of the CSS property to which the transition is applied

-ms-transition-property: none|all|property;

<b>Example</b>
div
{
	transition-property:width;
	-ms-transition-property: width; /* Internet Explorer */
	-moz-transition-property: width; /* Firefox */
	-webkit-transition-property:width; /* Safari and Chrome */
	-o-transition-property:width; /* Opera */
}

div:hover {width:300px;}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="none" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
No property will get a transition effect
			</reference>
		</element>
		<element pattern="all" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
All properties will get a transition effect
			</reference>
		</element>
		<element pattern="property" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Defines a comma separated list of CSS property names the transition effect is for
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-ms-transition-duration" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Defines the length of time that a transition takes. Default 0

-ms-transition-duration: time;

<b>Example</b>
transition-duration: 5s;
-ms-transition-duration: 5s; /* Internet Explorer */
-moz-transition-duration: 5s; /* Firefox */
-webkit-transition-duration: 5s; /* Safari and Chrome */
-o-transition-duration: 5s; /* Opera */
	</reference>
</element>
<element pattern="-ms-transition-timing-function" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Describes how the speed during a transition will be calculated. Default "ease"

-ms-transition-timing-function: linear|ease|ease-in|ease-out|ease-in-out|cubic-bezier(n,n,n,n);

<b>Example</b>
transition-timing-function: linear;
-ms-transition-timing-function: linear; /* Internet Explorer */
-moz-transition-timing-function: linear; /* Firefox */
-webkit-transition-timing-function: linear; /* Safari and Chrome */
-o-transition-timing-function: linear; /* Opera */
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="linear" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a transition effect with the same speed from start to end (equivalent to cubic-bezier(0,0,1,1))
			</reference>
		</element>
		<element pattern="ease" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a transition effect with a slow start, then fast, then end slowly (equivalent to cubic-bezier(0.25,0.1,0.25,1))
			</reference>
		</element>
		<element pattern="ease-in" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a transition effect with a slow start (equivalent to cubic-bezier(0.42,0,1,1))
			</reference>
		</element>
		<element pattern="ease-out" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a transition effect with a slow end (equivalent to cubic-bezier(0,0,0.58,1))
			</reference>
		</element>
		<element pattern="ease-in-out" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a transition effect with a slow start and end (equivalent to cubic-bezier(0.42,0,0.58,1))
			</reference>
		</element>
		<element pattern="cubic-bezier(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
cubic-bezier(n,n,n,n). Define your own values in the cubic-bezier function. Possible values are numeric values from 0 to 1
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-ms-transition-delay" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Defines when the transition will start. Default 0

-ms-transition-delay: time;

<b>Example</b>
transition-delay: 2s;
-ms-transition-delay: 2s; /* Internet Explorer */
-moz-transition-delay: 2s; /* Firefox */
-webkit-transition-delay: 2s; /* Safari and Chrome */
-o-transition-delay: 2s; /* Opera */
	</reference>
</element>
<element pattern="-moz-"  highlight="css-property" >
	<autocomplete append=" " />
	<reference>
<b>Mozilla Firefox</b> prefix
	</reference>
</element>
<element pattern="@-moz-keyframes" highlight="css-property" >
	<autocomplete append=" " />
	<reference>
The @-moz-keyframes rule is where the animation is created. Specify a CSS style inside the @keyframes rule and the animation will gradually change from the current style to the new style.

<b>Example(s):</b>
@-moz-keyframes myfirst
{
	from {background: red;}
	to {background: yellow;}
}

@-moz-keyframes myfirst
{
	0%   {background: red;}
	25%  {background: yellow;}
	50%  {background: blue;}
	100% {background: green;}
}
	</reference>
</element>
<element pattern="-moz-animation" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
When the animation is created in the @keyframe, bind it to a selector, otherwise the animation will have no effect.

-moz-animation: name duration timing-function delay iteration-count direction;

<b>Example(s):</b>
div
{
	animation: myfirst 5s;
	-ms-animation: myfirst 5s; /* Internet Explorer */
	-moz-animation: myfirst 5s; /* Firefox */
	-webkit-animation: myfirst 5s; /* Safari and Chrome */
	-o-animation: myfirst 5s; /* Opera */
} 
	</reference>
</element>
<element pattern="-moz-animation-name" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies a name for the @keyframes animation

-moz-animation-name: keyframename|none;

<b>Example(s):</b>
animation-name:mymove;
-ms-animation-name:mymove; /* Internet Explorer */
-moz-animation-name:mymove; /* Firefox */
-webkit-animation-name:mymove; /* Safari and Chrome */
-o-animation-name:mymove; /* Opera */ 
	</reference>
</element>
<element pattern="-moz-animation-duration" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies how many seconds or milliseconds an animation takes to complete one cycle

-moz-animation-duration: time;

<b>Example(s):</b>
animation-duration:1s;
-ms-animation-duration:1s; /* Internet Explorer */
-moz-animation-duration:1s; /* Firefox */
-webkit-animation-duration:1s; /* Safari and Chrome */
-o-animation-duration:1s; /* Opera */
	</reference>
</element>
<element pattern="-moz-animation-timing-function" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the speed curve of the animation

-moz-animation-timing-function: value;

<b>Example(s):</b>
animation-timing-function:linear;
-ms-animation-timing-function:linear; /* Internet Explorer */
-moz-animation-timing-function:linear; /* Firefox */
-webkit-animation-timing-function:linear; /* Safari and Chrome */
-o-animation-timing-function:linear; /* Opera */
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="linear" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The animation has the same speed from start to end
			</reference>
		</element>
		<element pattern="ease" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Default. The animation has a slow start, then fast, before it ends slowly
			</reference>
		</element>
		<element pattern="ease-in" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The animation has a slow start
			</reference>
		</element>
		<element pattern="ease-out" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The animation has a slow end
			</reference>
		</element>
		<element pattern="ease-in-out" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The animation has both a slow start and a slow end
			</reference>
		</element>
		<element pattern="cubic-bezier(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
cubic-bezier(n,n,n,n). Define your own values in the cubic-bezier function
Possible values are numeric values from 0 to 1
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-moz-animation-delay" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies when the animation will start

-moz-animation-delay: time;

<b>Example(s):</b>
animation-delay:2s;
-ms-animation-delay:2s; /* Internet Explorer */
-moz-animation-delay:2s; /* Firefox */
-webkit-animation-delay:2s; /* Safari and Chrome */
-o-animation-delay:2s; /* Opera */ 
	</reference>
</element>
<element pattern="-moz-animation-iteration-count" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the number of times an animation should be played

-moz-animation-iteration-count: value;

<b>Example(s):</b>
animation-iteration-count:3;
-ms-animation-iteration-count:3; /* Internet Explorer */
-moz-animation-iteration-count:3; /* Firefox */
-webkit-animation-iteration-count:3; /*Safari and Chrome*/
-o-animation-iteration-count:3; /* Opera */ 
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="n" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
A number that defines how many times an animation should be played
			</reference>
		</element>
		<element pattern="infinite" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies that the animation should be played infinite times (for ever)
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-moz-animation-direction" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies whether or not the animation should play in reverse on alternate cycles

-moz-animation-direction: value;

<b>Example(s):</b>
animation-direction:alternate;
-ms-animation-direction:alternate; /* Internet Explorer */
-moz-animation-direction:alternate; /* Firefox */
-webkit-animation-direction:alternate; /* Safari and Chrome */
-o-animation-direction:alternate; /* Opera */ 
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="normal" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Default value. The animation should be played as normal
			</reference>
		</element>
		<element pattern="alternate" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The animation should play in reverse on alternate cycles
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-moz-animation-play-state" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies whether the animation is running or paused

-moz-animation-play-state: paused|running;

<b>Example(s):</b>
animation-play-state:paused;
-ms-animation-play-state:paused; /* Internet Explorer */
-moz-animation-play-state:paused; /* Firefox */
-webkit-animation-play-state:paused; /* Safari and Chrome */
-o-animation-play-state:paused; /* Opera */ 
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="paused" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies that the animation is paused
			</reference>
		</element>
		<element pattern="running" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies that the animation is running
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-moz-transform" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
<b>2D</b> translate(); rotate(); scale(); skew(); matrix();
<b>matrix(n,n,n,n,n,n)</b> Defines a 2D transformation, using a matrix of six values
<b>translate(x,y)</b> Defines a 2D translation, moving the element along the X- and the Y-axis
<b>translateX(n)</b> Defines a 2D translation, moving the element along the X-axis
<b>translateY(n)</b> Defines a 2D translation, moving the element along the Y-axis
<b>scale(x,y)</b> Defines a 2D scale transformation, changing the elements width and height
<b>scaleX(n)</b> Defines a 2D scale transformation, changing the element's width
<b>scaleY(n)</b> Defines a 2D scale transformation, changing the element's height
<b>rotate(angle)</b> Defines a 2D rotation, the angle is specified in the parameter
<b>skew(x-angle,y-angle)</b> Defines a 2D skew transformation along the X- and the Y-axis
<b>skewX(angle)</b> Defines a 2D skew transformation along the X-axis
<b>skewY(angle)</b> Defines a 2D skew transformation along the Y-axis
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="matrix(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>matrix(n,n,n,n,n,n)</b> Defines a 2D transformation, using a matrix of six values
			</reference>
		</element>
		<element pattern="translate(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>translate(x,y)</b> Defines a 2D translation, moving the element along the X- and the Y-axis
			</reference>
		</element>
		<element pattern="translateX(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>translateX(n)</b> Defines a 2D translation, moving the element along the X-axis
			</reference>
		</element>
		<element pattern="translateY(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>translateY(n)</b> Defines a 2D translation, moving the element along the Y-axis
			</reference>
		</element>
		<element pattern="scale(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>scale(x,y)</b> Defines a 2D scale transformation, changing the elements width and height
			</reference>
		</element>
		<element pattern="scaleX(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>scaleX(n)</b> Defines a 2D scale transformation, changing the element's width
			</reference>
		</element>
		<element pattern="scaleY(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>scaleY(n)</b> Defines a 2D scale transformation, changing the element's height
			</reference>
		</element>
		<element pattern="rotate(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>rotate(angle)</b> Defines a 2D rotation, the angle is specified in the parameter
			</reference>
		</element>
		<element pattern="skew(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>skew(x-angle,y-angle)</b> Defines a 2D skew transformation along the X- and the Y-axis
			</reference>
		</element>
		<element pattern="skewX(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>skewX(angle)</b> Defines a 2D skew transformation along the X-axis
			</reference>
		</element>
		<element pattern="skewY(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>skewY(angle)</b> Defines a 2D skew transformation along the Y-axis
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-moz-transform-origin" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
-moz-transform-origin: x-axis y-axis z-axis;
<b>x-axis</b> Defining where the view is placed at the x-axis. Possible values: left, center, right, length, and %.
<b>y-axis</b> Defining where the view is placed at the y-axis. Possible values: top, center, bottom, length, and %.
<b>z-axis</b> Defining where the view is placed at the z-axis. Possible values: length.
	</reference>
</element>
<element pattern="-moz-transform-style" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies how nested elements are rendered in 3D space

-moz-transform-style: flat|preserve-3d;

<b>Example</b>
div
{
	transform: rotateY(60deg);
	transform-style: preserve-3d;
	-webkit-transform: rotateY(60deg); /* Safari and Chrome */
	-webkit-transform-style: preserve-3d; /* Safari and Chrome */
}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="flat" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The child elements will NOT preserve its 3D position
			</reference>
		</element>
		<element pattern="preserve-3d" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The child elements will preserve its 3D position
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-moz-perspective" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the perspective on how 3D elements are viewed

-moz-perspective: number|none;

<b>Example</b>
div
{
	perspective: 500;
	-webkit-perspective: 500; /* Safari and Chrome */
}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="number" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
How many pixels the element is placed from the view
			</reference>
		</element>
		<element pattern="none" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Default value. Same as 0. The perspective is not set
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-moz-perspective-origin" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the bottom position of 3D elements

-moz-perspective-origin: x-axis y-axis;

<b>Example</b>
div
{
	perspective:150;
	perspective-origin: 10% 10%;
	-webkit-perspective:150; /* Safari and Chrome */
	-webkit-perspective-origin: 10% 10%; /* Safari and Chrome */
}
	</reference>
</element>
<element pattern="-moz-backface-visibility" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Defines whether or not an element should be visible when not facing the screen

-moz-backface-visibility: visible|hidden;

<b>Example</b>
div
{
	backface-visibility:hidden;
	-webkit-backface-visibility:hidden; /* Chrome and Safari */
	-moz-backface-visibility:hidden; /* Firefox */
}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="visible" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The backside is visible
			</reference>
		</element>
		<element pattern="hidden" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The backside is not visible
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-moz-transition" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
A shorthand property for setting the four transition properties into a single property

<b>Example</b>
div
{
	width:100px;
	transition: width 2s;
	-ms-transition: width 2s; /* Internet Explorer */
	-moz-transition: width 2s; /* Firefox */
	-webkit-transition: width 2s; /* Safari and Chrome */
	-o-transition: width 2s; /* Opera */
}
div:hover {width:300px;} 
	</reference>
</element>
<element pattern="-moz-transition-property" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the name of the CSS property to which the transition is applied

-moz-transition-property: none|all|property;

<b>Example</b>
div
{
	transition-property:width;
	-ms-transition-property: width; /* Internet Explorer */
	-moz-transition-property: width; /* Firefox */
	-webkit-transition-property:width; /* Safari and Chrome */
	-o-transition-property:width; /* Opera */
}

div:hover {width:300px;}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="none" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
No property will get a transition effect
			</reference>
		</element>
		<element pattern="all" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
All properties will get a transition effect
			</reference>
		</element>
		<element pattern="property" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Defines a comma separated list of CSS property names the transition effect is for
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-moz-transition-duration" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Defines the length of time that a transition takes. Default 0

-moz-transition-duration: time;

<b>Example</b>
transition-duration: 5s;
-ms-transition-duration: 5s; /* Internet Explorer */
-moz-transition-duration: 5s; /* Firefox */
-webkit-transition-duration: 5s; /* Safari and Chrome */
-o-transition-duration: 5s; /* Opera */
	</reference>
</element>
<element pattern="-moz-transition-timing-function" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Describes how the speed during a transition will be calculated. Default "ease"

-moz-transition-timing-function: linear|ease|ease-in|ease-out|ease-in-out|cubic-bezier(n,n,n,n);

<b>Example</b>
transition-timing-function: linear;
-ms-transition-timing-function: linear; /* Internet Explorer */
-moz-transition-timing-function: linear; /* Firefox */
-webkit-transition-timing-function: linear; /* Safari and Chrome */
-o-transition-timing-function: linear; /* Opera */
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="linear" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a transition effect with the same speed from start to end (equivalent to cubic-bezier(0,0,1,1))
			</reference>
		</element>
		<element pattern="ease" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a transition effect with a slow start, then fast, then end slowly (equivalent to cubic-bezier(0.25,0.1,0.25,1))
			</reference>
		</element>
		<element pattern="ease-in" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a transition effect with a slow start (equivalent to cubic-bezier(0.42,0,1,1))
			</reference>
		</element>
		<element pattern="ease-out" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a transition effect with a slow end (equivalent to cubic-bezier(0,0,0.58,1))
			</reference>
		</element>
		<element pattern="ease-in-out" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a transition effect with a slow start and end (equivalent to cubic-bezier(0.42,0,0.58,1))
			</reference>
		</element>
		<element pattern="cubic-bezier(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
cubic-bezier(n,n,n,n). Define your own values in the cubic-bezier function. Possible values are numeric values from 0 to 1
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-moz-transition-delay" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Defines when the transition will start. Default 0

-moz-transition-delay: time;

<b>Example</b>
transition-delay: 2s;
-ms-transition-delay: 2s; /* Internet Explorer */
-moz-transition-delay: 2s; /* Firefox */
-webkit-transition-delay: 2s; /* Safari and Chrome */
-o-transition-delay: 2s; /* Opera */
	</reference>
</element>

<element pattern="-webkit-"  highlight="css-property" >
	<autocomplete append=" " />
	<reference>
<b>Webkit Browser</b> prefix (Safari/Chrome)
	</reference>
</element>
<element pattern="@-webkit-keyframes" highlight="css-property" >
	<autocomplete append=" " />
	<reference>
The @-webkit-keyframes rule is where the animation is created. Specify a CSS style inside the @keyframes rule and the animation will gradually change from the current style to the new style.

<b>Example(s):</b>
@-webkit-keyframes myfirst
{
	from {background: red;}
	to {background: yellow;}
}

@-webkit-keyframes myfirst
{
	0%   {background: red;}
	25%  {background: yellow;}
	50%  {background: blue;}
	100% {background: green;}
}
	</reference>
</element>
<element pattern="-webkit-animation" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
When the animation is created in the @keyframe, bind it to a selector, otherwise the animation will have no effect.

-webkit-animation: name duration timing-function delay iteration-count direction;

<b>Example(s):</b>
div
{
	animation: myfirst 5s;
	-ms-animation: myfirst 5s; /* Internet Explorer */
	-moz-animation: myfirst 5s; /* Firefox */
	-webkit-animation: myfirst 5s; /* Safari and Chrome */
	-o-animation: myfirst 5s; /* Opera */
} 
	</reference>
</element>
<element pattern="-webkit-animation-name" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies a name for the @keyframes animation

-webkit-animation-name: keyframename|none;

<b>Example(s):</b>
animation-name:mymove;
-ms-animation-name:mymove; /* Internet Explorer */
-moz-animation-name:mymove; /* Firefox */
-webkit-animation-name:mymove; /* Safari and Chrome */
-o-animation-name:mymove; /* Opera */ 
	</reference>
</element>
<element pattern="-webkit-animation-duration" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies how many seconds or milliseconds an animation takes to complete one cycle

-webkit-animation-duration: time;

<b>Example(s):</b>
animation-duration:1s;
-ms-animation-duration:1s; /* Internet Explorer */
-moz-animation-duration:1s; /* Firefox */
-webkit-animation-duration:1s; /* Safari and Chrome */
-o-animation-duration:1s; /* Opera */
	</reference>
</element>
<element pattern="-webkit-animation-timing-function" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the speed curve of the animation

-webkit-animation-timing-function: value;

<b>Example(s):</b>
animation-timing-function:linear;
-ms-animation-timing-function:linear; /* Internet Explorer */
-moz-animation-timing-function:linear; /* Firefox */
-webkit-animation-timing-function:linear; /* Safari and Chrome */
-o-animation-timing-function:linear; /* Opera */
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="linear" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The animation has the same speed from start to end
			</reference>
		</element>
		<element pattern="ease" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Default. The animation has a slow start, then fast, before it ends slowly
			</reference>
		</element>
		<element pattern="ease-in" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The animation has a slow start
			</reference>
		</element>
		<element pattern="ease-out" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The animation has a slow end
			</reference>
		</element>
		<element pattern="ease-in-out" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The animation has both a slow start and a slow end
			</reference>
		</element>
		<element pattern="cubic-bezier(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
cubic-bezier(n,n,n,n). Define your own values in the cubic-bezier function
Possible values are numeric values from 0 to 1
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-webkit-animation-delay" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies when the animation will start

-webkit-animation-delay: time;

<b>Example(s):</b>
animation-delay:2s;
-ms-animation-delay:2s; /* Internet Explorer */
-moz-animation-delay:2s; /* Firefox */
-webkit-animation-delay:2s; /* Safari and Chrome */
-o-animation-delay:2s; /* Opera */ 
	</reference>
</element>
<element pattern="-webkit-animation-iteration-count" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the number of times an animation should be played

-webkit-animation-iteration-count: value;

<b>Example(s):</b>
animation-iteration-count:3;
-ms-animation-iteration-count:3; /* Internet Explorer */
-moz-animation-iteration-count:3; /* Firefox */
-webkit-animation-iteration-count:3; /*Safari and Chrome*/
-o-animation-iteration-count:3; /* Opera */ 
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="n" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
A number that defines how many times an animation should be played
			</reference>
		</element>
		<element pattern="infinite" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies that the animation should be played infinite times (for ever)
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-webkit-animation-direction" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies whether or not the animation should play in reverse on alternate cycles

-webkit-animation-direction: value;

<b>Example(s):</b>
animation-direction:alternate;
-ms-animation-direction:alternate; /* Internet Explorer */
-moz-animation-direction:alternate; /* Firefox */
-webkit-animation-direction:alternate; /* Safari and Chrome */
-o-animation-direction:alternate; /* Opera */ 
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="normal" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Default value. The animation should be played as normal
			</reference>
		</element>
		<element pattern="alternate" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The animation should play in reverse on alternate cycles
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-webkit-animation-play-state" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies whether the animation is running or paused

-webkit-animation-play-state: paused|running;

<b>Example(s):</b>
animation-play-state:paused;
-ms-animation-play-state:paused; /* Internet Explorer */
-moz-animation-play-state:paused; /* Firefox */
-webkit-animation-play-state:paused; /* Safari and Chrome */
-o-animation-play-state:paused; /* Opera */ 
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="paused" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies that the animation is paused
			</reference>
		</element>
		<element pattern="running" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies that the animation is running
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-webkit-transform" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
<b>2D</b> translate(); rotate(); scale(); skew(); matrix();
<b>matrix(n,n,n,n,n,n)</b> Defines a 2D transformation, using a matrix of six values
<b>translate(x,y)</b> Defines a 2D translation, moving the element along the X- and the Y-axis
<b>translateX(n)</b> Defines a 2D translation, moving the element along the X-axis
<b>translateY(n)</b> Defines a 2D translation, moving the element along the Y-axis
<b>scale(x,y)</b> Defines a 2D scale transformation, changing the elements width and height
<b>scaleX(n)</b> Defines a 2D scale transformation, changing the element's width
<b>scaleY(n)</b> Defines a 2D scale transformation, changing the element's height
<b>rotate(angle)</b> Defines a 2D rotation, the angle is specified in the parameter
<b>skew(x-angle,y-angle)</b> Defines a 2D skew transformation along the X- and the Y-axis
<b>skewX(angle)</b> Defines a 2D skew transformation along the X-axis
<b>skewY(angle)</b> Defines a 2D skew transformation along the Y-axis
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="matrix(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>matrix(n,n,n,n,n,n)</b> Defines a 2D transformation, using a matrix of six values
			</reference>
		</element>
		<element pattern="translate(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>translate(x,y)</b> Defines a 2D translation, moving the element along the X- and the Y-axis
			</reference>
		</element>
		<element pattern="translateX(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>translateX(n)</b> Defines a 2D translation, moving the element along the X-axis
			</reference>
		</element>
		<element pattern="translateY(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>translateY(n)</b> Defines a 2D translation, moving the element along the Y-axis
			</reference>
		</element>
		<element pattern="scale(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>scale(x,y)</b> Defines a 2D scale transformation, changing the elements width and height
			</reference>
		</element>
		<element pattern="scaleX(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>scaleX(n)</b> Defines a 2D scale transformation, changing the element's width
			</reference>
		</element>
		<element pattern="scaleY(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>scaleY(n)</b> Defines a 2D scale transformation, changing the element's height
			</reference>
		</element>
		<element pattern="rotate(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>rotate(angle)</b> Defines a 2D rotation, the angle is specified in the parameter
			</reference>
		</element>
		<element pattern="skew(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>skew(x-angle,y-angle)</b> Defines a 2D skew transformation along the X- and the Y-axis
			</reference>
		</element>
		<element pattern="skewX(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>skewX(angle)</b> Defines a 2D skew transformation along the X-axis
			</reference>
		</element>
		<element pattern="skewY(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>skewY(angle)</b> Defines a 2D skew transformation along the Y-axis
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-webkit-transform-origin" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
-webkit-transform-origin: x-axis y-axis z-axis;
<b>x-axis</b> Defining where the view is placed at the x-axis. Possible values: left, center, right, length, and %.
<b>y-axis</b> Defining where the view is placed at the y-axis. Possible values: top, center, bottom, length, and %.
<b>z-axis</b> Defining where the view is placed at the z-axis. Possible values: length.
	</reference>
</element>
<element pattern="-webkit-transform-style" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies how nested elements are rendered in 3D space

-webkit-transform-style: flat|preserve-3d;

<b>Example</b>
div
{
	transform: rotateY(60deg);
	transform-style: preserve-3d;
	-webkit-transform: rotateY(60deg); /* Safari and Chrome */
	-webkit-transform-style: preserve-3d; /* Safari and Chrome */
}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="flat" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The child elements will NOT preserve its 3D position
			</reference>
		</element>
		<element pattern="preserve-3d" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The child elements will preserve its 3D position
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-webkit-perspective" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the perspective on how 3D elements are viewed

-webkit-perspective: number|none;

<b>Example</b>
div
{
	perspective: 500;
	-webkit-perspective: 500; /* Safari and Chrome */
}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="number" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
How many pixels the element is placed from the view
			</reference>
		</element>
		<element pattern="none" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Default value. Same as 0. The perspective is not set
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-webkit-perspective-origin" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the bottom position of 3D elements

-webkit-perspective-origin: x-axis y-axis;

<b>Example</b>
div
{
	perspective:150;
	perspective-origin: 10% 10%;
	-webkit-perspective:150; /* Safari and Chrome */
	-webkit-perspective-origin: 10% 10%; /* Safari and Chrome */
}
	</reference>
</element>
<element pattern="-webkit-backface-visibility" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Defines whether or not an element should be visible when not facing the screen

-webkit-backface-visibility: visible|hidden;

<b>Example</b>
div
{
	backface-visibility:hidden;
	-webkit-backface-visibility:hidden; /* Chrome and Safari */
	-moz-backface-visibility:hidden; /* Firefox */
}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="visible" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The backside is visible
			</reference>
		</element>
		<element pattern="hidden" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The backside is not visible
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-webkit-transition" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
A shorthand property for setting the four transition properties into a single property

<b>Example</b>
div
{
	width:100px;
	transition: width 2s;
	-ms-transition: width 2s; /* Internet Explorer */
	-moz-transition: width 2s; /* Firefox */
	-webkit-transition: width 2s; /* Safari and Chrome */
	-o-transition: width 2s; /* Opera */
}
div:hover {width:300px;} 
	</reference>
</element>
<element pattern="-webkit-transition-property" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the name of the CSS property to which the transition is applied

-webkit-transition-property: none|all|property;

<b>Example</b>
div
{
	transition-property:width;
	-ms-transition-property: width; /* Internet Explorer */
	-moz-transition-property: width; /* Firefox */
	-webkit-transition-property:width; /* Safari and Chrome */
	-o-transition-property:width; /* Opera */
}

div:hover {width:300px;}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="none" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
No property will get a transition effect
			</reference>
		</element>
		<element pattern="all" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
All properties will get a transition effect
			</reference>
		</element>
		<element pattern="property" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Defines a comma separated list of CSS property names the transition effect is for
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-webkit-transition-duration" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Defines the length of time that a transition takes. Default 0

-webkit-transition-duration: time;

<b>Example</b>
transition-duration: 5s;
-ms-transition-duration: 5s; /* Internet Explorer */
-moz-transition-duration: 5s; /* Firefox */
-webkit-transition-duration: 5s; /* Safari and Chrome */
-o-transition-duration: 5s; /* Opera */
	</reference>
</element>
<element pattern="-webkit-transition-timing-function" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Describes how the speed during a transition will be calculated. Default "ease"

-webkit-transition-timing-function: linear|ease|ease-in|ease-out|ease-in-out|cubic-bezier(n,n,n,n);

<b>Example</b>
transition-timing-function: linear;
-ms-transition-timing-function: linear; /* Internet Explorer */
-moz-transition-timing-function: linear; /* Firefox */
-webkit-transition-timing-function: linear; /* Safari and Chrome */
-o-transition-timing-function: linear; /* Opera */
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="linear" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a transition effect with the same speed from start to end (equivalent to cubic-bezier(0,0,1,1))
			</reference>
		</element>
		<element pattern="ease" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a transition effect with a slow start, then fast, then end slowly (equivalent to cubic-bezier(0.25,0.1,0.25,1))
			</reference>
		</element>
		<element pattern="ease-in" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a transition effect with a slow start (equivalent to cubic-bezier(0.42,0,1,1))
			</reference>
		</element>
		<element pattern="ease-out" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a transition effect with a slow end (equivalent to cubic-bezier(0,0,0.58,1))
			</reference>
		</element>
		<element pattern="ease-in-out" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a transition effect with a slow start and end (equivalent to cubic-bezier(0.42,0,0.58,1))
			</reference>
		</element>
		<element pattern="cubic-bezier(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
cubic-bezier(n,n,n,n). Define your own values in the cubic-bezier function. Possible values are numeric values from 0 to 1
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-webkit-transition-delay" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Defines when the transition will start. Default 0

-webkit-transition-delay: time;

<b>Example</b>
transition-delay: 2s;
-ms-transition-delay: 2s; /* Internet Explorer */
-moz-transition-delay: 2s; /* Firefox */
-webkit-transition-delay: 2s; /* Safari and Chrome */
-o-transition-delay: 2s; /* Opera */
	</reference>
</element>

<element pattern="-o-"  highlight="css-property" >
	<autocomplete append=" " />
	<reference>
<b>Opera Browser</b> prefix
	</reference>
</element>
<element pattern="@-o-keyframes" highlight="css-property" >
	<autocomplete append=" " />
	<reference>
The @-o-keyframes rule is where the animation is created. Specify a CSS style inside the @keyframes rule and the animation will gradually change from the current style to the new style.

<b>Example(s):</b>
@-o-keyframes myfirst
{
	from {background: red;}
	to {background: yellow;}
}

@-o-keyframes myfirst
{
	0%   {background: red;}
	25%  {background: yellow;}
	50%  {background: blue;}
	100% {background: green;}
}
	</reference>
</element>
<element pattern="-o-animation" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
When the animation is created in the @keyframe, bind it to a selector, otherwise the animation will have no effect.

-o-animation: name duration timing-function delay iteration-count direction;

<b>Example(s):</b>
div
{
	animation: myfirst 5s;
	-ms-animation: myfirst 5s; /* Internet Explorer */
	-moz-animation: myfirst 5s; /* Firefox */
	-webkit-animation: myfirst 5s; /* Safari and Chrome */
	-o-animation: myfirst 5s; /* Opera */
} 
	</reference>
</element>
<element pattern="-o-animation-name" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies a name for the @keyframes animation

-o-animation-name: keyframename|none;

<b>Example(s):</b>
animation-name:mymove;
-ms-animation-name:mymove; /* Internet Explorer */
-moz-animation-name:mymove; /* Firefox */
-webkit-animation-name:mymove; /* Safari and Chrome */
-o-animation-name:mymove; /* Opera */ 
	</reference>
</element>
<element pattern="-o-animation-duration" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies how many seconds or milliseconds an animation takes to complete one cycle

-o-animation-duration: time;

<b>Example(s):</b>
animation-duration:1s;
-ms-animation-duration:1s; /* Internet Explorer */
-moz-animation-duration:1s; /* Firefox */
-webkit-animation-duration:1s; /* Safari and Chrome */
-o-animation-duration:1s; /* Opera */
	</reference>
</element>
<element pattern="-o-animation-timing-function" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the speed curve of the animation

-o-animation-timing-function: value;

<b>Example(s):</b>
animation-timing-function:linear;
-ms-animation-timing-function:linear; /* Internet Explorer */
-moz-animation-timing-function:linear; /* Firefox */
-webkit-animation-timing-function:linear; /* Safari and Chrome */
-o-animation-timing-function:linear; /* Opera */
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="linear" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The animation has the same speed from start to end
			</reference>
		</element>
		<element pattern="ease" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Default. The animation has a slow start, then fast, before it ends slowly
			</reference>
		</element>
		<element pattern="ease-in" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The animation has a slow start
			</reference>
		</element>
		<element pattern="ease-out" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The animation has a slow end
			</reference>
		</element>
		<element pattern="ease-in-out" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The animation has both a slow start and a slow end
			</reference>
		</element>
		<element pattern="cubic-bezier(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
cubic-bezier(n,n,n,n). Define your own values in the cubic-bezier function
Possible values are numeric values from 0 to 1
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-o-animation-delay" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies when the animation will start

-o-animation-delay: time;

<b>Example(s):</b>
animation-delay:2s;
-ms-animation-delay:2s; /* Internet Explorer */
-moz-animation-delay:2s; /* Firefox */
-webkit-animation-delay:2s; /* Safari and Chrome */
-o-animation-delay:2s; /* Opera */ 
	</reference>
</element>
<element pattern="-o-animation-iteration-count" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the number of times an animation should be played

-o-animation-iteration-count: value;

<b>Example(s):</b>
animation-iteration-count:3;
-ms-animation-iteration-count:3; /* Internet Explorer */
-moz-animation-iteration-count:3; /* Firefox */
-webkit-animation-iteration-count:3; /*Safari and Chrome*/
-o-animation-iteration-count:3; /* Opera */ 
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="n" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
A number that defines how many times an animation should be played
			</reference>
		</element>
		<element pattern="infinite" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies that the animation should be played infinite times (for ever)
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-o-animation-direction" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies whether or not the animation should play in reverse on alternate cycles

-o-animation-direction: value;

<b>Example(s):</b>
animation-direction:alternate;
-ms-animation-direction:alternate; /* Internet Explorer */
-moz-animation-direction:alternate; /* Firefox */
-webkit-animation-direction:alternate; /* Safari and Chrome */
-o-animation-direction:alternate; /* Opera */ 
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="normal" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Default value. The animation should be played as normal
			</reference>
		</element>
		<element pattern="alternate" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The animation should play in reverse on alternate cycles
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-o-animation-play-state" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies whether the animation is running or paused

-o-animation-play-state: paused|running;

<b>Example(s):</b>
animation-play-state:paused;
-ms-animation-play-state:paused; /* Internet Explorer */
-moz-animation-play-state:paused; /* Firefox */
-webkit-animation-play-state:paused; /* Safari and Chrome */
-o-animation-play-state:paused; /* Opera */ 
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="paused" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies that the animation is paused
			</reference>
		</element>
		<element pattern="running" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies that the animation is running
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-o-transform" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
<b>2D</b> translate(); rotate(); scale(); skew(); matrix();
<b>matrix(n,n,n,n,n,n)</b> Defines a 2D transformation, using a matrix of six values
<b>translate(x,y)</b> Defines a 2D translation, moving the element along the X- and the Y-axis
<b>translateX(n)</b> Defines a 2D translation, moving the element along the X-axis
<b>translateY(n)</b> Defines a 2D translation, moving the element along the Y-axis
<b>scale(x,y)</b> Defines a 2D scale transformation, changing the elements width and height
<b>scaleX(n)</b> Defines a 2D scale transformation, changing the element's width
<b>scaleY(n)</b> Defines a 2D scale transformation, changing the element's height
<b>rotate(angle)</b> Defines a 2D rotation, the angle is specified in the parameter
<b>skew(x-angle,y-angle)</b> Defines a 2D skew transformation along the X- and the Y-axis
<b>skewX(angle)</b> Defines a 2D skew transformation along the X-axis
<b>skewY(angle)</b> Defines a 2D skew transformation along the Y-axis
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="matrix(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>matrix(n,n,n,n,n,n)</b> Defines a 2D transformation, using a matrix of six values
			</reference>
		</element>
		<element pattern="translate(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>translate(x,y)</b> Defines a 2D translation, moving the element along the X- and the Y-axis
			</reference>
		</element>
		<element pattern="translateX(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>translateX(n)</b> Defines a 2D translation, moving the element along the X-axis
			</reference>
		</element>
		<element pattern="translateY(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>translateY(n)</b> Defines a 2D translation, moving the element along the Y-axis
			</reference>
		</element>
		<element pattern="scale(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>scale(x,y)</b> Defines a 2D scale transformation, changing the elements width and height
			</reference>
		</element>
		<element pattern="scaleX(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>scaleX(n)</b> Defines a 2D scale transformation, changing the element's width
			</reference>
		</element>
		<element pattern="scaleY(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>scaleY(n)</b> Defines a 2D scale transformation, changing the element's height
			</reference>
		</element>
		<element pattern="rotate(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>rotate(angle)</b> Defines a 2D rotation, the angle is specified in the parameter
			</reference>
		</element>
		<element pattern="skew(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>skew(x-angle,y-angle)</b> Defines a 2D skew transformation along the X- and the Y-axis
			</reference>
		</element>
		<element pattern="skewX(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>skewX(angle)</b> Defines a 2D skew transformation along the X-axis
			</reference>
		</element>
		<element pattern="skewY(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
<b>skewY(angle)</b> Defines a 2D skew transformation along the Y-axis
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-o-transform-origin" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
-o-transform-origin: x-axis y-axis z-axis;
<b>x-axis</b> Defining where the view is placed at the x-axis. Possible values: left, center, right, length, and %.
<b>y-axis</b> Defining where the view is placed at the y-axis. Possible values: top, center, bottom, length, and %.
<b>z-axis</b> Defining where the view is placed at the z-axis. Possible values: length.
	</reference>
</element>
<element pattern="-o-transform-style" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies how nested elements are rendered in 3D space

-o-transform-style: flat|preserve-3d;

<b>Example</b>
div
{
	transform: rotateY(60deg);
	transform-style: preserve-3d;
	-webkit-transform: rotateY(60deg); /* Safari and Chrome */
	-webkit-transform-style: preserve-3d; /* Safari and Chrome */
}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="flat" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The child elements will NOT preserve its 3D position
			</reference>
		</element>
		<element pattern="preserve-3d" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The child elements will preserve its 3D position
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-o-perspective" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the perspective on how 3D elements are viewed

-o-perspective: number|none;

<b>Example</b>
div
{
	perspective: 500;
	-webkit-perspective: 500; /* Safari and Chrome */
}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="number" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
How many pixels the element is placed from the view
			</reference>
		</element>
		<element pattern="none" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Default value. Same as 0. The perspective is not set
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-o-perspective-origin" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the bottom position of 3D elements

-o-perspective-origin: x-axis y-axis;

<b>Example</b>
div
{
	perspective:150;
	perspective-origin: 10% 10%;
	-webkit-perspective:150; /* Safari and Chrome */
	-webkit-perspective-origin: 10% 10%; /* Safari and Chrome */
}
	</reference>
</element>
<element pattern="-o-backface-visibility" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Defines whether or not an element should be visible when not facing the screen

-o-backface-visibility: visible|hidden;

<b>Example</b>
div
{
	backface-visibility:hidden;
	-webkit-backface-visibility:hidden; /* Chrome and Safari */
	-moz-backface-visibility:hidden; /* Firefox */
}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="visible" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The backside is visible
			</reference>
		</element>
		<element pattern="hidden" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The backside is not visible
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-o-transition" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
A shorthand property for setting the four transition properties into a single property

<b>Example</b>
div
{
	width:100px;
	transition: width 2s;
	-ms-transition: width 2s; /* Internet Explorer */
	-moz-transition: width 2s; /* Firefox */
	-webkit-transition: width 2s; /* Safari and Chrome */
	-o-transition: width 2s; /* Opera */
}
div:hover {width:300px;} 
	</reference>
</element>
<element pattern="-o-transition-property" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the name of the CSS property to which the transition is applied

-o-transition-property: none|all|property;

<b>Example</b>
div
{
	transition-property:width;
	-ms-transition-property: width; /* Internet Explorer */
	-moz-transition-property: width; /* Firefox */
	-webkit-transition-property:width; /* Safari and Chrome */
	-o-transition-property:width; /* Opera */
}

div:hover {width:300px;}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="none" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
No property will get a transition effect
			</reference>
		</element>
		<element pattern="all" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
All properties will get a transition effect
			</reference>
		</element>
		<element pattern="property" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Defines a comma separated list of CSS property names the transition effect is for
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-o-transition-duration" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Defines the length of time that a transition takes. Default 0

-o-transition-duration: time;

<b>Example</b>
transition-duration: 5s;
-ms-transition-duration: 5s; /* Internet Explorer */
-moz-transition-duration: 5s; /* Firefox */
-webkit-transition-duration: 5s; /* Safari and Chrome */
-o-transition-duration: 5s; /* Opera */
	</reference>
</element>
<element pattern="-o-transition-timing-function" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Describes how the speed during a transition will be calculated. Default "ease"

-o-transition-timing-function: linear|ease|ease-in|ease-out|ease-in-out|cubic-bezier(n,n,n,n);

<b>Example</b>
transition-timing-function: linear;
-ms-transition-timing-function: linear; /* Internet Explorer */
-moz-transition-timing-function: linear; /* Firefox */
-webkit-transition-timing-function: linear; /* Safari and Chrome */
-o-transition-timing-function: linear; /* Opera */
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="linear" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a transition effect with the same speed from start to end (equivalent to cubic-bezier(0,0,1,1))
			</reference>
		</element>
		<element pattern="ease" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a transition effect with a slow start, then fast, then end slowly (equivalent to cubic-bezier(0.25,0.1,0.25,1))
			</reference>
		</element>
		<element pattern="ease-in" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a transition effect with a slow start (equivalent to cubic-bezier(0.42,0,1,1))
			</reference>
		</element>
		<element pattern="ease-out" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a transition effect with a slow end (equivalent to cubic-bezier(0,0,0.58,1))
			</reference>
		</element>
		<element pattern="ease-in-out" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a transition effect with a slow start and end (equivalent to cubic-bezier(0.42,0,0.58,1))
			</reference>
		</element>
		<element pattern="cubic-bezier(" highlight="css-value" >
			<autocomplete append=");" />
			<reference>
cubic-bezier(n,n,n,n). Define your own values in the cubic-bezier function. Possible values are numeric values from 0 to 1
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-o-transition-delay" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Defines when the transition will start. Default 0

-o-transition-delay: time;

<b>Example</b>
transition-delay: 2s;
-ms-transition-delay: 2s; /* Internet Explorer */
-moz-transition-delay: 2s; /* Firefox */
-webkit-transition-delay: 2s; /* Safari and Chrome */
-o-transition-delay: 2s; /* Opera */
	</reference>
</element>
<element pattern="background-clip" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the painting area of the background images

background-clip: border-box|padding-box|content-box;

<b>Example</b>
div
{
	background-color:yellow;
	background-clip:content-box;
	-ms-background-clip:content-box; /* Internet Explorer */
	-moz-background-clip:content-box; /* Firefox */
	-o-background-clip:content-box; /* Opera */
	-webkit-background-clip:content-box; /* Safari */
}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="border-box" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The background is clipped to the border box
			</reference>
		</element>
		<element pattern="padding-box" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The background is clipped to the padding box
			</reference>
		</element>
		<element pattern="content-box" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The background is clipped to the content box
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-ms-background-clip" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the painting area of the background images

-ms-background-clip: border-box|padding-box|content-box;

<b>Example</b>
div
{
	background-color:yellow;
	background-clip:content-box;
	-ms-background-clip:content-box; /* Internet Explorer */
	-moz-background-clip:content-box; /* Firefox */
	-o-background-clip:content-box; /* Opera */
	-webkit-background-clip:content-box; /* Safari */
}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="border-box" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The background is clipped to the border box
			</reference>
		</element>
		<element pattern="padding-box" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The background is clipped to the padding box
			</reference>
		</element>
		<element pattern="content-box" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The background is clipped to the content box
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-moz-background-clip" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the painting area of the background images

-moz-background-clip: border-box|padding-box|content-box;

<b>Example</b>
div
{
	background-color:yellow;
	background-clip:content-box;
	-ms-background-clip:content-box; /* Internet Explorer */
	-moz-background-clip:content-box; /* Firefox */
	-o-background-clip:content-box; /* Opera */
	-webkit-background-clip:content-box; /* Safari */
}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="border-box" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The background is clipped to the border box
			</reference>
		</element>
		<element pattern="padding-box" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The background is clipped to the padding box
			</reference>
		</element>
		<element pattern="content-box" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The background is clipped to the content box
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-o-background-clip" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the painting area of the background images

-o-background-clip: border-box|padding-box|content-box;

<b>Example</b>
div
{
	background-color:yellow;
	background-clip:content-box;
	-ms-background-clip:content-box; /* Internet Explorer */
	-moz-background-clip:content-box; /* Firefox */
	-o-background-clip:content-box; /* Opera */
	-webkit-background-clip:content-box; /* Safari */
}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="border-box" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The background is clipped to the border box
			</reference>
		</element>
		<element pattern="padding-box" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The background is clipped to the padding box
			</reference>
		</element>
		<element pattern="content-box" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The background is clipped to the content box
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="-webkit-background-clip" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the painting area of the background images

-webkit-background-clip: border-box|padding-box|content-box;

<b>Example</b>
div
{
	background-color:yellow;
	background-clip:content-box;
	-ms-background-clip:content-box; /* Internet Explorer */
	-moz-background-clip:content-box; /* Firefox */
	-o-background-clip:content-box; /* Opera */
	-webkit-background-clip:content-box; /* Safari */
}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="border-box" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The background is clipped to the border box
			</reference>
		</element>
		<element pattern="padding-box" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The background is clipped to the padding box
			</reference>
		</element>
		<element pattern="content-box" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The background is clipped to the content box
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="background-origin" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
The background-origin property specifies the positioning area of the background images. The background image can be placed within the content-box, padding-box, or border-box area.

<b>padding-box</b> The background image is positioned relative to the padding box
<b>border-box</b> The background image is positioned relative to the border box
<b>content-box</b> The background image is positioned relative to the content box
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="padding-box" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The background image is positioned relative to the padding box
			</reference>
		</element>
		<element pattern="border-box" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The background image is positioned relative to the border box
			</reference>
		</element>
		<element pattern="content-box" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The background image is positioned relative to the content box
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="background-size" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the size of the background images

background-size: length|percentage|cover|contain;
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="length" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Sets the height and width of the background image. The first value sets the width, the second value sets the height. If only one value is given, the second is set to "auto"
			</reference>
		</element>
		<element pattern="percentage" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Sets the height and width of the background image in percent of the parent element. The first value sets the width, the second value sets the height. If only one value is given, the second is set to "auto"
			</reference>
		</element>
		<element pattern="cover" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Scale the image to the smallest size such that both its width and its height can fit inside the content area
			</reference>
		</element>
		<element pattern="contain" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Scale the image to the largest size such that both its width and its height can fit inside the content area
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="resize" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies whether or not an element is resizable by the user

<b>Example</b>
div
{
	resize:both;
	overflow:auto;
}
	</reference>
</element>
<element pattern="outline-offset" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Offsets an outline, and draws it beyond the border edge

<b>Example</b>
div
{
	border:2px solid black;
	outline:2px solid red;
	outline-offset:15px;
}
	</reference>
</element>
<element pattern="box-sizing" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Allows you to define certain elements to fit an area in a certain way

<b>Example</b>
div
{
	box-sizing:border-box;
	-moz-box-sizing:border-box; /* Firefox */
	-webkit-box-sizing:border-box; /* Safari */
	width:50%;
	float:left;
}
	</reference>
</element>
<element pattern="appearance" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Allows you to make an element look like a standard user interface element

<b>Example</b>
div
{
	appearance:button;
	-moz-appearance:button; /* Firefox */
	-webkit-appearance:button; /* Safari and Chrome */
}
	</reference>
</element>
<element pattern="icon" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Provides the author the ability to style an element with an iconic equivalent

<b>Example</b>
img
{
	content:icon;
	icon:url(imgicon.png);
}
	</reference>
</element>
<element pattern="nav-down" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies where to navigate when using the arrow-down navigation key

<b>Example</b>
button#b1
{
	top:20%;left:25%;
	nav-index:1;
	nav-right:#b2;nav-left:#b4;
	nav-down:#b2;nav-up:#b4;
}

button#b2
{
	top:40%;left:50%;
	nav-index:2;
	nav-right:#b3;nav-left:#b1;
	nav-down:#b3;nav-up:#b1;
}
	</reference>
</element>
<element pattern="nav-index" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the tabbing order for an element

<b>Example</b>
button#b1
{
	top:20%;left:25%;
	nav-index:1;
	nav-right:#b2;nav-left:#b4;
	nav-down:#b2;nav-up:#b4;
}

button#b2
{
	top:40%;left:50%;
	nav-index:2;
	nav-right:#b3;nav-left:#b1;
	nav-down:#b3;nav-up:#b1;
}
	</reference>
</element>
<element pattern="nav-left" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies where to navigate when using the arrow-left navigation key

<b>Example</b>
button#b1
{
	top:20%;left:25%;
	nav-index:1;
	nav-right:#b2;nav-left:#b4;
	nav-down:#b2;nav-up:#b4;
}

button#b2
{
	top:40%;left:50%;
	nav-index:2;
	nav-right:#b3;nav-left:#b1;
	nav-down:#b3;nav-up:#b1;
}
	</reference>
</element>
<element pattern="nav-right" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies where to navigate when using the arrow-right navigation key

<b>Example</b>
button#b1
{
	top:20%;left:25%;
	nav-index:1;
	nav-right:#b2;nav-left:#b4;
	nav-down:#b2;nav-up:#b4;
}

button#b2
{
	top:40%;left:50%;
	nav-index:2;
	nav-right:#b3;nav-left:#b1;
	nav-down:#b3;nav-up:#b1;
}
	</reference>
</element>
<element pattern="nav-up" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies where to navigate when using the arrow-up navigation key

<b>Example</b>
button#b1
{
	top:20%;left:25%;
	nav-index:1;
	nav-right:#b2;nav-left:#b4;
	nav-down:#b2;nav-up:#b4;
}

button#b2
{
	top:40%;left:50%;
	nav-index:2;
	nav-right:#b3;nav-left:#b1;
	nav-down:#b3;nav-up:#b1;
}
	</reference>
</element>
<element pattern="column-count" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the number of columns an element should be divided into

<b>Example</b>
div
{
	-moz-column-count:3; /* Firefox */
	-webkit-column-count:3; /* Safari and Chrome */
	column-count:3;
}
	</reference>
</element>
<element pattern="column-fill" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies how to fill columns

<b>Example</b>
div
{
	column-fill:auto;
}
	</reference>
</element>
<element pattern="column-gap" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the gap between the columns

<b>Example</b>
div
{
	-moz-column-gap:40px; /* Firefox */
	-webkit-column-gap:40px; /* Safari and Chrome */
	column-gap:40px;
}
	</reference>
</element>
<element pattern="column-rule" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
A shorthand property for setting all the column-rule-* properties

<b>Example</b>
div
{
	-moz-column-rule:3px outset #ff00ff; /* Firefox */
	-webkit-column-rule:3px outset #ff00ff; /* Safari and Chrome */
	column-rule:3px outset #ff00ff;
}
	</reference>
</element>
<element pattern="column-rule-color" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the color of the rule between columns

<b>Example</b>
div
{
	-moz-column-rule-color:#ff0000; /* Firefox */
	-webkit-column-rule-color:#ff0000; /* Safari and Chrome */
	column-rule-color:#ff0000;
}
	</reference>
</element>
<element pattern="column-rule-style" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the style of the rule between columns

column-rule-style: none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset;

<b>Example</b>
div
{
-moz-column-rule-style:dotted; /* Firefox */
-webkit-column-rule-style:dotted; /* Safari and Chrome */
column-rule-style:dotted;
}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="none" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Defines no rule
			</reference>
		</element>
		<element pattern="hidden" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Defines a hidden rule
			</reference>
		</element>
		<element pattern="dotted" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Defines a dotted rule
			</reference>
		</element>
		<element pattern="dashed" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Defines a dashed rule
			</reference>
		</element>
		<element pattern="solid" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Defines a solid rule
			</reference>
		</element>
		<element pattern="double" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Defines a double rule
			</reference>
		</element>
		<element pattern="groove" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a 3D grooved rule. The effect depends on the width and color values
			</reference>
		</element>
		<element pattern="ridge" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a 3D ridged rule. The effect depends on the width and color values
			</reference>
		</element>
		<element pattern="inset" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a 3D inset rule. The effect depends on the width and color values
			</reference>
		</element>
		<element pattern="outset" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Specifies a 3D outset rule. The effect depends on the width and color values
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="column-rule-width" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the width of the rule between columns

<b>Example</b>
div
{
	-moz-column-rule-width:1px; /* Firefox */
	-webkit-column-rule-width:1px; /* Safari and Chrome */
	column-rule-width:1px;
}
	</reference>
</element>
<element pattern="column-span" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies how many columns an element should span across

<b>Example</b>
h2
{
	-webkit-column-span:all; /* Chrome */
	column-span:all;
}
	</reference>
</element>
<element pattern="column-width" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the width of the columns

<b>Example</b>
div
{
	-moz-column-width:100px; /* Firefox */
	-webkit-column-width:100px; /* Safari and Chrome */
	column-width:100px;
}
	</reference>
</element>
<element pattern="columns" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
A shorthand property for setting column-width and column-count

<b>Example</b>
div
{
	columns:100px 3;
	-webkit-columns:100px 3; /* Safari and Chrome */
	-moz-columns:100px 3; /* Firefox */
}
	</reference>
</element>
<element pattern="hanging-punctuation" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies whether a punctuation character may be placed outside the line box

hanging-punctuation: none|first|last|allow-end|force-end;

<b>Example</b>
p
{
	hanging-punctuation:first;
} 
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="none" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
No punctuation mark may be placed outside the line box at the start or at the end of a full line of text
			</reference>
		</element>
		<element pattern="first" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Punctuation may hang outside the start edge of the first line
			</reference>
		</element>
		<element pattern="last" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Punctuation may hang outside the end edge of the last line
			</reference>
		</element>
		<element pattern="allow-end" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Punctuation may hang outside the end edge of all lines if the punctuation does not otherwise fit prior to justification
			</reference>
		</element>
		<element pattern="force-end" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Punctuation may hang outside the end edge of all lines. If justification is enabled on this line, then it will force the punctuation to hang
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="punctuation-trim" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies whether a punctuation character should be trimmed

punctuation-trim: none|start|end|allow-end|adjacent;

<b>Example</b>
p
{
	punctuation-trim:start;
}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="none" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Do not trim opening or closing punctuation marks
			</reference>
		</element>
		<element pattern="start" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Trim opening punctuation at the beginning of each line
			</reference>
		</element>
		<element pattern="end" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Trim closing punctuation at the end of each line
			</reference>
		</element>
		<element pattern="allow-end" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Trim closing punctuation at the end of each line if it does not otherwise fit prior to justification
			</reference>
		</element>
		<element pattern="adjacent" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Trim opening punctuation if its previous adjacent character is a fullwidth opening, middle, or closing punctuation, or ideographic space. Trim closing punctuation if its next adjacent character is a fullwidth closing or middle dot punctuation, or ideographic space
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="text-align-last" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Describes how the last line of a block or a line right before a forced line break is aligned when text-align is "justify"
	</reference>
</element>
<element pattern="text-emphasis" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Applies emphasis marks, and the foreground color of the emphasis marks, to the element's text

text-emphasis: text-emphasis-style text-emphasis-color;
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="text-emphasis-style" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Applies emphasis marks to the element's text
			</reference>
		</element>
		<element pattern="text-emphasis-color" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Defines the foreground color of the emphasis marks
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="text-justify" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies the justification method used when text-align is "justify"

text-justify: auto|inter-word|inter-ideograph|inter-cluster|distribute|kashida|trim;
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="auto" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The browser determines the justification algorithm
			</reference>
		</element>
		<element pattern="inter-word" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Increases/Decreases the space between words
			</reference>
		</element>
		<element pattern="inter-ideograph" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Justifies content with ideographic text
			</reference>
		</element>
		<element pattern="inter-cluster" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Only content that does not contain any inter-word spacing (such as Asian languages) is justified
			</reference>
		</element>
		<element pattern="distribute" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Like the newspaper value, except that in East Asian languages (such as Thai) the last line is not justified
			</reference>
		</element>
		<element pattern="kashida" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Justifies content by elongating characters
			</reference>
		</element>
		<element pattern="none" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
The justification is disabled
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="text-outline" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies a text outline

text-outline: thickness blur color;

<b>Example</b>
p.test
{
	text-outline: 2px 2px #ff0000;
}
	</reference>
</element>
<element pattern="text-overflow" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies what should happen when text overflows the containing element

text-overflow: clip|ellipsis|string;

<b>Example</b>
div.test
{
	text-overflow:ellipsis;
}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="clip" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Clips the text
			</reference>
		</element>
		<element pattern="ellipsis" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Render an ellipsis ("...") to represent clipped text
			</reference>
		</element>
		<element pattern="string" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Render the given string to represent clipped text
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="text-shadow" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Adds shadow to text

text-shadow: h-shadow v-shadow blur color;

<b>Example</b>
h1
{
	text-shadow: 2px 2px 2px #ff0000;
}
	</reference>
</element>
<element pattern="text-wrap" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies line breaking rules for text

text-wrap: normal|none|unrestricted|suppress;

<b>Example</b>
p.test
{
	text-wrap:none;
}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="normal" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Lines may break only at allowed break points
			</reference>
		</element>
		<element pattern="none" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Lines may not break. Text that does not fit in the element, overflows it
			</reference>
		</element>
		<element pattern="unrestricted" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Lines may break between any two characters
			</reference>
		</element>
		<element pattern="suppress" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Line breaking is suppressed within the element. The browser may only break lines within the element if there are no other valid break points in the line
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<element pattern="word-break" highlight="css-property" >
	<autocomplete append=": " />
	<reference>
Specifies line breaking rules for non-CJK scripts

word-break: normal|break-all|hyphenate;

<b>Example</b>
p.test
{
	word-break:hyphenate;
}
	</reference>
	<context symbols=" &#9;&#10;&#13;{}.;:">
		<element pattern="normal" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Breaks non-CJK scripts according to their own rules
			</reference>
		</element>
		<element pattern="break-all" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Lines may break between any two characters for non-CJK scripts
			</reference>
		</element>
		<element pattern="hyphenate" highlight="css-value" >
			<autocomplete append=";" />
			<reference>
Words may be broken at an appropriate hyphenation point
			</reference>
		</element>
		<element idref="e.css.end"/><element idref="e.css.lcomment"/>
		<element idref="e.css.rbrace"/>
	</context>
</element>
<!-- END OF YEOWORKS ADDITIONS -->

<!-- YEOWORKS CSS RULES ADDITIONS http://www.ywscorp.com yeoworks@gmail.com -->
	<element pattern="@font-face">
		<reference>
A rule that allows websites to download and use fonts other than the "web-safe" fonts

@font-face
{
	font-family: myFirstFont;
	src: url('Sansation_Light.ttf'),
	url('Sansation_Light.eot'); /* IE9+ */
}

div
{
	font-family:myFirstFont;
}
		</reference>
	</element>
<!-- END OF YEOWORKS ADDITIONS -->
</bfinc>
