<?xml version="1.0"?>
<!--
		Bluefish HTML Editor
		java.bflang2 $Revision$
 
		Copyright (C) 2008-2009 Olivier Sessink

		This program is free software; you can redistribute it and/or modify
		it under the terms of the GNU General Public License as published by
		the Free Software Foundation; either version 2 of the License, or
		(at your option) any later version.

		This program is distributed in the hope that it will be useful,
		but WITHOUT ANY WARRANTY; without even the implied warranty of
		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
		GNU General Public License for more details.

		You should have received a copy of the GNU General Public License
		along with this program; if not, write to the Free Software
		Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.		
-->

<bflang name="Java" matches="75" contexts="6" table="297">
<header>
	<mime type="text/x-java"/>
	<highlight name="keyword" style="keyword" />
	<highlight name="OO-keyword" style="special-keyword"  />
	<highlight name="brackets" style="brackets"  />
	<highlight name="type" style="type"  />
	<highlight name="comment" style="comment"  />
	<highlight name="string" style="string"  />
	<highlight name="value" style="value"   />
	<highlight name="imports" style="preprocessor"  />
</header>
<definition>
<context symbols=" ;(){}[]:\&#34;\\',&gt;&lt;*&amp;^%!+=-|/?#&#9;&#10;&#13;">

<group autocomplete="1" highlight="keyword"> 
	<element pattern="assert" />
	<element pattern="break" />
	<element pattern="case" />
	<element pattern="catch" />
	<element pattern="const" />
	<element pattern="continue" />
	<element pattern="do" />
	<element pattern="else" />
	<element pattern="finally" />
	<element pattern="for" />
	<element pattern="goto" />
	<element pattern="if" />
	<element pattern="package" />
	<element pattern="return" />
	<element pattern="strictfp" />
	<element pattern="switch" />
	<element pattern="throw" />
	<element pattern="throws" />
	<element pattern="try" />
	<element pattern="where" />
	<element pattern="while" />
</group>

<group autocomplete="1" highlight="OO-keyword">
	<element pattern="abstract" />
	<element pattern="class" />
	<element pattern="default" />
	<element pattern="extends" />
	<element pattern="final" />
	<element pattern="implements" />
	<element pattern="instanceof" />
	<element pattern="interface" />
	<element pattern="native" />
	<element pattern="new" />
	<element pattern="private" />
	<element pattern="protected" />
	<element pattern="public" />
	<element pattern="static" />
	<element pattern="super" />
	<element pattern="synchronized" />
	<element pattern="this" />
	<element pattern="transient" />
	<element pattern="volatile" />
</group>

<group autocomplete="1" highlight="type">
	<element pattern="boolean" />
	<element pattern="byte" />
	<element pattern="char" />
	<element pattern="double" />
	<element pattern="enum" />
	<element pattern="float" />
	<element pattern="int" />
	<element pattern="long" />
	<element pattern="short" />
	<element pattern="void" />
</group>

<element pattern="String" autocomplete="1" highlight="type" />
<element pattern="Rectangle" autocomplete="1" highlight="type" />
<element pattern="Color" autocomplete="1" highlight="type" />

<element pattern="import" is_regex="1" highlight="imports">
	<context symbols=";" highlight="imports">
		<element pattern=";" highlight="imports" ends_context="1" />
	</context>
</element>

<element pattern="&#34;" highlight="string">
	<context symbols="\&#34;" highlight="string">
		<element pattern="\&#34;" highlight="string" />
		<element pattern="&#34;" highlight="string" ends_context="1" />
	</context>
</element>
<element pattern="'" highlight="string">
	<context symbols="\'" highlight="string">
		<element pattern="\\." is_regex="1" highlight="string" />
		<element pattern="'" highlight="string" ends_context="1" />
	</context>
</element>

<element pattern="{" starts_block="1" mayfold="1" highlight="brackets" />
<element pattern="}" ends_block="1" blockstartelement="{" highlight="brackets" />
<element pattern="[" starts_block="1" mayfold="1" highlight="brackets" />
<element pattern="]" ends_block="1" blockstartelement="[" highlight="brackets" />
<element pattern="(" starts_block="1" mayfold="1" highlight="brackets" />
<element pattern=")" ends_block="1" blockstartelement="(" highlight="brackets" />
<element pattern="/*" starts_block="1" highlight="comment">
	<context symbols="*/&#9;&#10;&#13;" highlight="comment">
		<element pattern="*/" ends_block="1" blockstartelement="/*" highlight="comment" mayfold="1" ends_context="1" />
	</context>
</element>

<element pattern="true" highlight="value"/>
<element pattern="false" highlight="value"/>
<element pattern="null" highlight="value"/>
<element pattern="[0-9.]+" is_regex="1" highlight="value"/>
<element pattern="//[^&#10;]+" is_regex="1" highlight="comment"/>
		
</context>
</definition>
</bflang>
