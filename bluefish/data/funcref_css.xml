<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ref name="CSS2 tmp0.4.2" description="CSS 2.0 properties complete, tested, but comma problem for font-family, font, text-shadow and voice-family">
  <tag name="Conventions (see Notes)">
    <description> value types and arrangements (see Notes)</description>
    <info title="Conventions">
 *: 0 or more
 +: 1 or more
 ?: 0 or 1
 a b:Several juxtaposed words mean that all of them must occur, in the given order.
 |: separates two or more alternatives: exactly one of them must occur.
 ||: separates two or more options: one or more of them must occur, in any order.
 [ ]: grouping.
 &lt;type&gt;: basic data types.

 For a complete manual, please see http://www.w3.org/TR/REC-CSS2/propidx.html
    </info>
   </tag>
 
   <tag name="quick selectors">
    <description>insert selectors, using Dialog</description>
    <attribute name="selectors" required="1" vallist="1" default="">
<vallist>,a:link,a:visited,a:active,a,abbr,acronym,address,applet,area,b,bdo,blockquote,body,br,button,caption,cite,code,col,colgroup,dd,del,dfn,div,dl,dt,em,embed,fieldset,form,h1,h2,h3,h4,h5,h6,hr,i,iframe,img,input,ins,kbd,label,legend,li,map,noframes,noscript,object,ol,optgroup,option,p,pre,q,samp,select,small,span,strong,table,tbody,td,textarea,tfoot,th,thead,tr,tt,ul,var</vallist>insert selector, using Dialog
    </attribute>
    <dialog title="selector">%0 {

    }
    </dialog> 
   </tag>
 
   <tag name="quick properties">
    <description>insert properties, using Dialog</description>
    <attribute name="properties" required="1" vallist="1" default="">
<vallist>azimuth,background,background-attachment,background-color,background-image,background-position,background-repeat,border,border-bottom,border-bottom-color,border-bottom-style,border-bottom-width,'border-collapse',border-color,border-left,border-left-color,border-left-style,border-left-width,border-right,border-right-color,border-right-style,border-right-width,'border-spacing',border-style,border-top,border-top-color,border-top-style,border-top-width,border-width,bottom,caption-side,clear,clip,color,content,counter-increment,counter-reset,cue,cue-after,cue-before,cursor,direction,display,elevation,empty-cells,float,font,font-family,font-size,font-size-adjust,font-stretch,font-style,font-variant,font-weight,height,left,letter-spacing,line-height,list-style,list-style-image,list-style-position,list-style-type,margin,margin-bottom,margin-left,margin-right,margin-top,marker-offset,marks,max-height,max-width,min-height,min-width,orphans,outline,outline-color,outline-style,outline-width,overflow,padding,padding-bottom,padding-left,padding-right,padding-top,page,page-break-after,page-break-before,page-break-inside,pause,pause-after,pause-before,pitch,pitch-range,play-during,position,quotes,richness,right,size,speak,speak-header,speak-numeral,speak-punctuation,speech-rate,stress,table-layout,text-align,text-decoration,text-indent,text-shadow,text-transform,top,unicode-bidi,vertical-align,visibility,voice-family,volume,white-space,widows,width,word-spacing,z-index</vallist>insert property, using Dialog
    </attribute>
    <dialog title="properties">%0: ;
    </dialog> 
   </tag>
 
   <tag name="property: inherit;">
    <description>insert inherit value for selected property, using Dialog</description>
    <attribute name="properties" required="1" vallist="1" default="">
<vallist>azimuth,background,background-attachment,background-color,background-image,background-position,background-repeat,border,border-bottom,border-bottom-color,border-bottom-style,border-bottom-width,border-collapse,border-color,border-left,border-left-color,border-left-style,border-left-width,border-right,border-right-color,border-right-style,border-right-width,border-spacing,border-style,border-top,border-top-color,border-top-style,border-top-width,border-width,bottom,caption-side,clear,clip,color,content,counter-increment,counter-reset,cue,cue-after,cue-before,cursor,direction,display,elevation,empty-cells,float,font,font-family,font-size,font-size-adjust,font-stretch,font-style,font-variant,font-weight,height,left,letter-spacing,line-height,list-style,list-style-image,list-style-position,list-style-type,margin,margin-bottom,margin-left,margin-right,margin-top,marker-offset,marks,max-height,max-width,min-height,min-width,orphans,outline,outline-color,outline-style,outline-width,overflow,padding,padding-bottom,padding-left,padding-right,padding-top,page-break-after,page-break-before,page-break-inside,pause,pause-after,pause-before,pitch,pitch-range,play-during,position,quotes,richness,right,size,speak,speak-header,speak-numeral,speak-punctuation,speech-rate,stress,table-layout,text-align,text-decoration,text-indent,text-shadow,text-transform,top,unicode-bidi,vertical-align,visibility,voice-family,volume,white-space,widows,width,word-spacing,z-index</vallist>insert inherit value  for selected property, using Dialog
    </attribute>
    <dialog title="properties">%0: inherit;
    </dialog> 
   </tag>


   <tag name="Length">
    <description>insert length values, using Dialog</description>
    <attribute name="property" required="1" vallist="1" default="">
     <vallist>background-position,border-spacing,bottom,font-size,height,left,letter-spacing,line-height,marker-offset,max-height,max-width,min-width,right,size,text-indent,top,vertical-align,width,word-spacing</vallist>insert length values and units 
    </attribute>
    <attribute name="value" required="1" vallist="0" default="">
     &lt;number&gt;   
    </attribute>
    <attribute name="unit" required="0" vallist="1" default="">
     <vallist>%,em,ex,px,in,cm,mm,pt,pc</vallist> % | em | ex | px | in | cm | mm | pt | pc  
    </attribute>
    <attribute name="value2" required="0" vallist="0" default="">
     &lt;number&gt;   
    </attribute>
    <attribute name="unit2" required="0" vallist="1" default="">
     <vallist>%,em,ex,px,in,cm,mm,pt,pc</vallist> % | em | ex | px | in | cm | mm | pt | pc     
    </attribute>
    <dialog title="length">%0: %1%2 %3%4;</dialog>   
    <insert></insert>
    <info title="Length">
 Relative units are:

    * em: the 'font-size' of the relevant font
    * ex: the 'x-height' of the relevant font
  
    ( px: pixels, relative to the viewing device )  
    
     Absolute length units are only useful when the physical properties of the output medium are known. The absolute units are:

    * in: inches -- 1 inch is equal to 2.54 centimeters.
    * cm: centimeters
    * mm: millimeters
    * pt: points -- the points used by CSS2 are equal to 1/72th of an inch.
    * pc: picas -- 1 pica is equal to 12 points.  </info>

background-position: [ % | em | ex | px | in | cm | mm | pt | pc ]{1,2}
border-spacing: [ em | ex | px | in | cm | mm | pt | pc ]{1,2}
bottom: % | em | ex | px | in | cm | mm | pt | pc 
font-size: % | em | ex | px | in | cm | mm | pt | pc 
height: % | em | ex | px | in | cm | mm | pt | pc 
left: % | em | ex | px | in | cm | mm | pt | pc 
letter-spacing: em | ex | px | in | cm | mm | pt | pc 
line-height: &lt;number&gt; | em | ex | px | in | cm | mm | pt | pc 
marker-offset: em | ex | px | in | cm | mm | pt | pc 
max-height: % | em | ex | px | in | cm | mm | pt | pc 
max-width: % | em | ex | px | in | cm | mm | pt | pc
min-width: % | em | ex | px | in | cm | mm | pt | pc 
right: % | em | ex | px | in | cm | mm | pt | pc 
size: [ em | ex | px | in | cm | mm | pt | pc ]{1,2}
text-indent: % | em | ex | px | in | cm | mm | pt | pc 
top: % | em | ex | px | in | cm | mm | pt | pc 
vertical-align: % | em | ex | px | in | cm | mm | pt | pc 
width: % | em | ex | px | in | cm | mm | pt | pc 
word-spacing: em | ex | px | in | cm | mm | pt | pc 
   </tag>

  <group name="Visual">
    <group name="background">
      <tag name="background">
        <description>Shorthand for setting the individual background properties.</description>
        <attribute name="color" title="color:" required="0" vallist="1" default="transparent">
         <vallist>transparent,#,rgb( ),aqua,black,blue,fuchsia,gray,green,lime, maroon,navy,olive,purple,red,silver,teal,white,yellow,inherit</vallist> &lt;color&gt; | transparent
       </attribute>
       <attribute name="image" title="image:" required="0" vallist="1" default="none">
        <vallist>none,url()</vallist>
Value: 	&lt;uri&gt; | none
       </attribute>
       <attribute name="repeat" title="repeat:" required="0" vallist="1" default="repeat">
        <vallist>repeat,repeat-x,repeat-y,no-repeat,inherit</vallist>	repeat | repeat-x | repeat-y | no-repeat
       </attribute>
        <attribute name="attachment" title="attachment:" required="0" vallist="1" default="scroll">
        <vallist>scroll,fixed,inherit</vallist> scroll | fixed
       </attribute>
       <attribute name="position" title="position:" required="0" vallist="1" default="0% 0%">
        <vallist> 0% 0%, ,top left,top,top right,left,center,right,bottom left,bottom,bottom right</vallist> [ [&lt;percentage&gt; | &lt;length&gt; ]{1,2} | [ [top | center | bottom] || [left | center | right] ] ]
       </attribute>
       <attribute name="position2" title="position2:" required="0" vallist="1" default="0% 0%">
        <vallist>0% 0%, </vallist> &lt;percentage&gt; | &lt;length&gt;
       </attribute>
       <dialog title="Background">background: %0 %1 %2 %3 %4 %5;</dialog>
       <insert>background: ;</insert>
       <info title="background">[&lt;'background-color'&gt; || &lt;'background-image'&gt; || &lt;'background-repeat'&gt; || &lt;'background-attachment'&gt; || &lt;'background-position'&gt;] | inherit
Initial:  	not defined for shorthand properties
Applies to:  	all elements
Inherited:  	no
Percentages:  	allowed on 'background-position'
more info: http://www.w3.org/TR/REC-CSS2/colors.html#propdef-background
       </info>
      </tag>

      <tag name="background-attachment">
        <description>Specifies if the background is fixed to the viewport or if it scrolls, which is the default.</description>
        <attribute name="attachment" title="attachment:" required="0" vallist="1" default="scroll">
         <vallist>scroll,fixed,inherit</vallist> scroll | fixed | inherit
Initial:  	scroll
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="background-attachment">background-attachment: %0;</dialog>
        <info title="background-attachment">
If a background image is specified, this property specifies whether it is fixed with regard to the viewport ('fixed') or scrolls along with the document ('scroll').

Even if the image is fixed, it is still only visible when it is in the background or padding area of the element. Thus, unless the image is tiled ('background-repeat: repeat'), it may be invisible.
        </info>
        <insert>background-attachment: ;</insert>
      </tag>
 
     <tag name="background-color">
        <description>Sets the background colour.</description>
        <attribute name="color" title="color:" required="0" vallist="1" default="transparent">
         <vallist>transparent,#,rgb( ),aqua,black,blue,fuchsia,gray,green,lime,maroon,navy,olive,purple,red,silver,teal,white,yellow,inherit,ActiveBorder,ActiveCaption,AppWorkspace,Background,ButtonFace,ButtonHighlight,ButtonShadow,ButtonText,CaptionText,GrayText,Highlight,HighlightText,InactiveBorder,InactiveCaption,InactiveCaptionText,InfoBackground,InfoText,Menu,MenuText,Scrollbar,ThreeDDarkShadow,ThreeDFace,ThreeDHighlight,ThreeDLightShadow,ThreeDShadow,Window,WindowFrame,WindowText</vallist> &lt;color&gt; | transparent | inherit
Initial:  	transparent
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="background-color">background-color: %0;</dialog>
        <info title="background-color">
This property sets the background color of an element, either a &lt;color&gt; value or the keyword 'transparent', to make the underlying colors shine through.
        </info>
        <insert>background-color: ;</insert>
      </tag>
 
     <tag name="background-image">
        <description>Sets an image to use as the background.</description>
        <attribute name="image" title="image:" required="0" vallist="1" default="none">
        <vallist>none,url(),inherit</vallist> &lt;uri&gt; | none | inherit
Initial:  	none
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
       </attribute>
       <dialog title="Background-image">background-image: %0;</dialog>
       <info title="Background-image">When setting a background image, authors should also specify a background color that will be used when the image is unavailable. When the image is available, it is rendered on top of the background color. (Thus, the color is visible in the transparent parts of the image).

Values for this property are either &lt;uri&gt;, to specify the image, or 'none', when no image is used. </info>
       <insert>background-image: ;</insert>
      </tag>
 
     <tag name="background-position">
        <description>Specifies the position of a background image if one is given.</description>
        <attribute name="position" title="position:" required="0" vallist="1" default="0% 0%">
         <vallist> 0% 0%, ,top left,top,top right,left,center,right,bottom left,bottom,bottom right</vallist> [ [&lt;percentage&gt; | &lt;length&gt; ]{1,2} | [ [top | center | bottom] || [left | center | right] ] ] | inherit
Initial:  	0% 0%
Applies to:  	block-level and replaced elements
Inherited:  	no
Percentages:  	refer to the size of the box itself
        </attribute>
        <dialog title="Background-position">background-position: %0;</dialog>
        <info title="Background-position"> If a background image has been specified, this property specifies its initial position.
 If only one percentage or length value is given, it sets the horizontal position only, the vertical position will be 50%. If two values are given, the horizontal position comes first. Combinations of length and percentage values are allowed, (e.g., '50% 2cm'). Negative positions are allowed. Keywords cannot be combined with percentage values or length values
        </info>
        <insert>background-position: ;</insert>
      </tag>
 
     <tag name="background-repeat">
        <description>Controls tiling of background images.</description>
        <attribute name="repeat" title="repeat:" required="0" vallist="1" default="repeat">
         <vallist>repeat,repeat-x,repeat-y,no-repeat,inherit</vallist>repeat | repeat-x | repeat-y | no-repeat | inherit
Initial:  	repeat
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="background-repeat">background-repeat: %0;</dialog>
        <info title="background-repeat">
If a background image is specified, this property specifies whether the image is repeated (tiled), and how. All tiling covers the content and padding areas of a box. Values have the following meanings:

repeat
    The image is repeated both horizontally and vertically. 
repeat-x
    The image is repeated horizontally only. 
repeat-y
    The image is repeated vertically only. 
no-repeat
    The image is not repeated: only one copy of the image is drawn. 
        </info>
        <insert>background-repeat: ;</insert>
      </tag>
    </group>
 

   <group name="border">
      <tag name="border">
        <description>Shorthand for setting the individual border properties on all four borders.</description>
        <attribute name="border-color" title="color:" required="0" vallist="1" default="">
         <vallist>transparent,#,rgb( ),aqua,black,blue,fuchsia,gray,green,lime,maroon,navy,olive,purple,red,silver,teal,white,yellow,ActiveBorder,ActiveCaption,AppWorkspace,Background,ButtonFace,ButtonHighlight,ButtonShadow,ButtonText,CaptionText,GrayText,Highlight,HighlightText,InactiveBorder,InactiveCaption,InactiveCaptionText,InfoBackground,InfoText,Menu,MenuText,Scrollbar,ThreeDDarkShadow,ThreeDFace,ThreeDHighlight,ThreeDLightShadow,ThreeDShadow,Window,WindowFrame,WindowText</vallist> &lt;color&gt; | transparent
        </attribute>
        <attribute name="border-style" title="style:" required="0" vallist="1" default="none">
<vallist>none,hidden,dotted,dashed,solid,double,groove,ridge,inset,outset</vallist>none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset
        </attribute>
        <attribute name="border-width" title="width:" required="0" vallist="1" default="">
         <vallist>thin,medium,thick,0, %</vallist>thin | medium | thick | &lt;length&gt;
        </attribute>
        <dialog title="border">border: %0 %1 %2;</dialog>
        <info title="border">
[ &lt;border-width&gt; || &lt;border-style&gt; || [ &lt;color&gt; | transparent ] ] | inherit
 The 'border' property is a shorthand property for setting the same width, color, and style for all four borders of a box. Unlike the shorthand 'margin' and 'padding' properties, the 'border' property cannot set different values on the four borders. To do so, one or more of the other border properties must be used.
        </info>
        <insert>border: ;</insert>
      </tag>

     <tag name="border-collapse">
        <description>Controls how borders are handled in tables.</description>
        <attribute name="collapse" title="collapse:" required="0" vallist="1" default="collapse">
         <vallist>collapse,separate,inherit</vallist>collapse | separate | inherit
Initial:  	collapse
Applies to:  	'table' and 'inline-table' elements
Inherited:  	yes
Percentages:  	N/A
        </attribute>
        <dialog title="border-collapse">border-collapse: %0;</dialog>
        <info title="collapse">
This property selects a table's border model. The value 'separate' selects the separated borders border model. The value 'collapse' selects the collapsing borders model. The models are described at http://www.w3.org/TR/REC-CSS2/tables.html#propdef-border-collapse
        </info>
        <insert>border-collapse: ;</insert>
      </tag>
 
     <tag name="border-color">
        <description>Shorthand for setting the colour of all four borders.</description>
        <attribute name="color1" title="color:1" required="1" vallist="1" default="">
         <vallist>transparent,#,rgb( ),aqua,black,blue,fuchsia,gray,green,lime,maroon,navy,olive,purple,red,silver,teal,white,yellow,ActiveBorder,ActiveCaption,AppWorkspace,Background,ButtonFace,ButtonHighlight,ButtonShadow,ButtonText,CaptionText,GrayText,Highlight,HighlightText,InactiveBorder,InactiveCaption,InactiveCaptionText,InfoBackground,InfoText,Menu,MenuText,Scrollbar,ThreeDDarkShadow,ThreeDFace,ThreeDHighlight,ThreeDLightShadow,ThreeDShadow,Window,WindowFrame,WindowText</vallist> [&lt;color&gt; | transparent]{1,4} | inherit
Initial:  	depends on user agent
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <attribute name="color2" title="color2:" required="0" vallist="1" default="">
         <vallist>transparent,#,rgb( ),aqua,black,blue,fuchsia,gray,green,lime,maroon,navy,olive,purple,red,silver,teal,white,yellow,ActiveBorder,ActiveCaption,AppWorkspace,Background,ButtonFace,ButtonHighlight,ButtonShadow,ButtonText,CaptionText,GrayText,Highlight,HighlightText,InactiveBorder,InactiveCaption,InactiveCaptionText,InfoBackground,InfoText,Menu,MenuText,Scrollbar,ThreeDDarkShadow,ThreeDFace,ThreeDHighlight,ThreeDLightShadow,ThreeDShadow,Window,WindowFrame,WindowText</vallist> &lt;color&gt; | transparent
        </attribute>
        <attribute name="color3" title="color:3" required="0" vallist="1" default="">
         <vallist>transparent,#,rgb( ),aqua,black,blue,fuchsia,gray,green,lime,maroon,navy,olive,purple,red,silver,teal,white,yellow,ActiveBorder,ActiveCaption,AppWorkspace,Background,ButtonFace,ButtonHighlight,ButtonShadow,ButtonText,CaptionText,GrayText,Highlight,HighlightText,InactiveBorder,InactiveCaption,InactiveCaptionText,InfoBackground,InfoText,Menu,MenuText,Scrollbar,ThreeDDarkShadow,ThreeDFace,ThreeDHighlight,ThreeDLightShadow,ThreeDShadow,Window,WindowFrame,WindowText</vallist> &lt;color&gt; | transparent
        </attribute>
        <attribute name="color4" title="color:4" required="0" vallist="1" default="">
         <vallist>transparent,#,rgb( ),aqua,black,blue,fuchsia,gray,green,lime,maroon,navy,olive,purple,red,silver,teal,white,yellow,ActiveBorder,ActiveCaption,AppWorkspace,Background,ButtonFace,ButtonHighlight,ButtonShadow,ButtonText,CaptionText,GrayText,Highlight,HighlightText,InactiveBorder,InactiveCaption,InactiveCaptionText,InfoBackground,InfoText,Menu,MenuText,Scrollbar,ThreeDDarkShadow,ThreeDFace,ThreeDHighlight,ThreeDLightShadow,ThreeDShadow,Window,WindowFrame,WindowText</vallist> &lt;color&gt; | transparent
        </attribute>
        <dialog title="border-color">border-color: %0 %1 %2 %3;</dialog>
        <info title="color">
The 'border-color' property sets the color of the four borders. Values have the following meanings:
&lt;color&gt;: Specifies a color value. 
transparent: The border is transparent (though it may have width). 

The 'border-color' property can have from one to four values, and the values are set on the different sides as for 'border-width'.
 If there is only one value, it applies to all sides. If there are two values, the top and bottom borders are set to the first value and the right and left are set to the second. If there are three values, the top is set to the first value, the left and right are set to the second, and the bottom is set to the third. If there are four values, they apply to the top, right, bottom, and left, respectively.
If an element's border color is not specified with a border property, user agents must use the value of the element's 'color' property as the computed value for the border color. 
        </info>
        <insert>border-color: ;</insert>
      </tag>
 
     <tag name="border-spacing">
        <description>Controls the spacing between cell borders in tables.</description>
        <attribute name="spacing" title="spacing:" required="1" vallist="1" default="0">
         <vallist>0,inherit</vallist> &lt;length&gt; &lt;length&gt;? | inherit
Initial:  	0
Applies to:  	'table' and 'inline-table' elements
Inherited:  	yes
Percentages:  	N/A
        </attribute>
        <dialog title="border-spacing">border-spacing: %0;</dialog>
        <info title="spacing">
The lengths specify the distance that separates adjacent cell borders. If one length is specified, it gives both the horizontal and vertical spacing. If two are specified, the first gives the horizontal spacing and the second the vertical spacing. Lengths may not be negative.
        </info>
        <insert>border-spacing: ;</insert>
      </tag>
 
     <tag name="border-style">
        <description>Shorthand for setting the style of all four borders.</description>
        <attribute name="style" title="style:" required="1" vallist="1" default=""> <vallist>none,hidden,dotted,dashed,solid,double,groove,ridge,inset,outset</vallist> [none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset]{1,4}
Initial:  	see individual properties
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="border-style">border-style: %0;</dialog>
        <info title="border-style">
 The 'border-style' property sets the style of the four borders. It can have from one to four values, and the values are set on the different sides as for 'border-width' above.
  Since the initial value of the border styles is 'none', no borders will be visible unless the border style is set.

none: No border. This value forces the computed value of 'border-width' to be '0'. 
hidden: Same as 'none', except in terms of border conflict resolution for table elements. 
dotted: The border is a series of dots. 
dashed: The border is a series of short line segments. 
solid:  The border is a single line segment. 
double: The border is two solid lines. The sum of the two lines and the space between them equals the value of 'border-width'. 
groove: The border looks as though it were carved into the canvas. 
ridge:  The opposite of 'grove': the border looks as though it were coming out of the canvas. 
inset: The border makes the entire box look as though it were embedded in the canvas. 
outset: The opposite of 'inset': the border makes the entire box look as though it were coming out of the canvas. 

All borders are drawn on top of the box's background. The color of borders drawn for values of 'groove', 'ridge', 'inset', and 'outset' depends on the element's 'color' property.

Conforming HTML user agents may interpret 'dotted', 'dashed', 'double', 'groove', 'ridge', 'inset', and 'outset' to be 'solid'. 
        </info>
        <insert>border-style: ;</insert>
      </tag>
 
     <tag name="border-top">
        <description>Shorthand for setting the style, colour and width of the top border.</description>
        <attribute name="style" title="style:" required="0" vallist="1" default="none"> <vallist>none,hidden,dotted,dashed,solid,double,groove,ridge,inset,outset</vallist>none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset
        </attribute>
        <attribute name="colour" title="color:" required="0" vallist="1" default="">
         <vallist>transparent,#,rgb( ),aqua,black,blue,fuchsia,gray,green,lime,maroon,navy,olive,purple,red,silver,teal,white,yellow,inherit,ActiveBorder,ActiveCaption,AppWorkspace,Background,ButtonFace,ButtonHighlight,ButtonShadow,ButtonText,CaptionText,GrayText,Highlight,HighlightText,InactiveBorder,InactiveCaption,InactiveCaptionText,InfoBackground,InfoText,Menu,MenuText,Scrollbar,ThreeDDarkShadow,ThreeDFace,ThreeDHighlight,ThreeDLightShadow,ThreeDShadow,Window,WindowFrame,WindowText</vallist> &lt;color&gt; | transparent
        </attribute>
        <attribute name="width" title="width:" required="0" vallist="1" default="">
         <vallist>thin,medium,thick,0, %</vallist>thin | medium | thick | &lt;length&gt;
        </attribute>   
        <dialog title="border-top">border-top: %0 %1 %2;</dialog>
        <info title="border-top">
Value:  	[ &lt;'border-width'&gt; || &lt;'border-style'&gt; || &lt;color&gt; ] | inherit
Initial:  	see individual properties
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
        </info>
        <insert>border-top: ;</insert>
      </tag>
 
     <tag name="border-right">
        <description>Shorthand for setting the style, colour and width of the right hand border.</description>
        <attribute name="style" title="style:" required="0" vallist="1" default="none"> <vallist>none,hidden,dotted,dashed,solid,double,groove,ridge,inset,outset</vallist>none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset
        </attribute>
        <attribute name="colour" title="color:" required="0" vallist="1" default="">
         <vallist>transparent,#,rgb( ),aqua,black,blue,fuchsia,gray,green,lime,maroon,navy,olive,purple,red,silver,teal,white,yellow,inherit,ActiveBorder,ActiveCaption,AppWorkspace,Background,ButtonFace,ButtonHighlight,ButtonShadow,ButtonText,CaptionText,GrayText,Highlight,HighlightText,InactiveBorder,InactiveCaption,InactiveCaptionText,InfoBackground,InfoText,Menu,MenuText,Scrollbar,ThreeDDarkShadow,ThreeDFace,ThreeDHighlight,ThreeDLightShadow,ThreeDShadow,Window,WindowFrame,WindowText</vallist> &lt;color&gt; | transparent
        </attribute>
        <attribute name="width" title="width:" required="0" vallist="1" default="">
         <vallist>thin,medium,thick,0, %</vallist>thin | medium | thick | &lt;length&gt;
        </attribute>
        <dialog title="border-right">border-right: %0 %1 %2;</dialog>
        <info title="border-right">
Value:  	[ &lt;'border-width'&gt; || &lt;'border-style'&gt; || &lt;color&gt; ] | inherit
Initial:  	see individual properties
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
        </info>
        <insert>border-right: ;</insert>
      </tag>
 
     <tag name="border-bottom">
        <description>Shorthand for setting the style, colour and width of the bottom border.</description>
        <attribute name="style" title="style:" required="0" vallist="1" default="none"> <vallist>none,hidden,dotted,dashed,solid,double,groove,ridge,inset,outset</vallist>none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset
        </attribute>
        <attribute name="colour" title="color:" required="0" vallist="1" default="">
         <vallist>transparent,#,rgb( ),aqua,black,blue,fuchsia,gray,green,lime,maroon,navy,olive,purple,red,silver,teal,white,yellow,inherit,ActiveBorder,ActiveCaption,AppWorkspace,Background,ButtonFace,ButtonHighlight,ButtonShadow,ButtonText,CaptionText,GrayText,Highlight,HighlightText,InactiveBorder,InactiveCaption,InactiveCaptionText,InfoBackground,InfoText,Menu,MenuText,Scrollbar,ThreeDDarkShadow,ThreeDFace,ThreeDHighlight,ThreeDLightShadow,ThreeDShadow,Window,WindowFrame,WindowText</vallist> &lt;color&gt; | transparent
        </attribute>
        <attribute name="width" title="width:" required="0" vallist="1" default="">
         <vallist>thin,medium,thick,0, %</vallist>thin | medium | thick | &lt;length&gt;
        </attribute>
        <dialog title="border-bottom">border-bottom: %0 %1 %2;</dialog>
        <info title="border-bottom">
Value:  	[ &lt;'border-width'&gt; || &lt;'border-style'&gt; || &lt;color&gt; ] | inherit
Initial:  	see individual properties
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
        </info>
        <insert>border-bottom: ;</insert>
      </tag>
 
     <tag name="border-left">
        <description>Shorthand for setting the style, colour and width of the left hand border.</description>
        <attribute name="style" title="style:" required="0" vallist="1" default="none"> <vallist>none,hidden,dotted,dashed,solid,double,groove,ridge,inset,outset</vallist>none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset
        </attribute>
        <attribute name="colour" title="color:" required="0" vallist="1" default="">
         <vallist>transparent,#,rgb( ),aqua,black,blue,fuchsia,gray,green,lime,maroon,navy,olive,purple,red,silver,teal,white,yellow,inherit,ActiveBorder,ActiveCaption,AppWorkspace,Background,ButtonFace,ButtonHighlight,ButtonShadow,ButtonText,CaptionText,GrayText,Highlight,HighlightText,InactiveBorder,InactiveCaption,InactiveCaptionText,InfoBackground,InfoText,Menu,MenuText,Scrollbar,ThreeDDarkShadow,ThreeDFace,ThreeDHighlight,ThreeDLightShadow,ThreeDShadow,Window,WindowFrame,WindowText</vallist> &lt;color&gt; | transparent
        </attribute>
        <attribute name="width" title="width:" required="0" vallist="1" default="">
         <vallist>thin,medium,thick,0, %</vallist>thin | medium | thick | &lt;length&gt;
        </attribute>
        <dialog title="border-left">border-left: %0 %1 %2;</dialog>
        <info title="border-left">
Value:  	[ &lt;'border-width'&gt; || &lt;'border-style'&gt; || &lt;color&gt; ] | inherit
Initial:  	see individual properties
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
        </info>
        <insert>border-left: ;</insert>
      </tag>
 
     <tag name="border-top-color">
        <description>Sets the colour of the top border.</description>
        <attribute name="top-color" title="top-color:" required="1" vallist="1" default="">
         <vallist>#,rgb( ),aqua,black,blue,fuchsia,gray,green,lime,maroon,navy,olive,purple,red,silver,teal,white,yellow,inherit,ActiveBorder,ActiveCaption,AppWorkspace,Background,ButtonFace,ButtonHighlight,ButtonShadow,ButtonText,CaptionText,GrayText,Highlight,HighlightText,InactiveBorder,InactiveCaption,InactiveCaptionText,InfoBackground,InfoText,Menu,MenuText,Scrollbar,ThreeDDarkShadow,ThreeDFace,ThreeDHighlight,ThreeDLightShadow,ThreeDShadow,Window,WindowFrame,WindowText</vallist> &lt;color&gt; | inherit
Initial:  	the value of the 'color' property
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="top-color">border-top-color: %0;</dialog>
        <info title="top-color">

        </info>
        <insert>border-top-color: ;</insert>
      </tag>
 
     <tag name="border-right-color">
        <description>Sets the colour of the right hand border.</description>
        <attribute name="right-color" title="right-color:" required="1" vallist="1" default="">
         <vallist>#,rgb( ),aqua,black,blue,fuchsia,gray,green,lime,maroon,navy,olive,purple,red,silver,teal,white,yellow,inherit,ActiveBorder,ActiveCaption,AppWorkspace,Background,ButtonFace,ButtonHighlight,ButtonShadow,ButtonText,CaptionText,GrayText,Highlight,HighlightText,InactiveBorder,InactiveCaption,InactiveCaptionText,InfoBackground,InfoText,Menu,MenuText,Scrollbar,ThreeDDarkShadow,ThreeDFace,ThreeDHighlight,ThreeDLightShadow,ThreeDShadow,Window,WindowFrame,WindowText</vallist> &lt;color&gt; | inherit
Initial:  	the value of the 'color' property
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="right-color">border-right-color: %0;</dialog>
        <info title="right-color">

        </info>
        <insert>border-right-color: ;</insert>
      </tag>
 
     <tag name="border-bottom-color">
        <description>Sets the colour of the bottom border.</description>
        <attribute name="bottom-color" title="bottom-color:" required="1" vallist="1" default="">
         <vallist>#,rgb( ),aqua,black,blue,fuchsia,gray,green,lime,maroon,navy,olive,purple,red,silver,teal,white,yellow,inherit,ActiveBorder,ActiveCaption,AppWorkspace,Background,ButtonFace,ButtonHighlight,ButtonShadow,ButtonText,CaptionText,GrayText,Highlight,HighlightText,InactiveBorder,InactiveCaption,InactiveCaptionText,InfoBackground,InfoText,Menu,MenuText,Scrollbar,ThreeDDarkShadow,ThreeDFace,ThreeDHighlight,ThreeDLightShadow,ThreeDShadow,Window,WindowFrame,WindowText</vallist> &lt;color&gt; | inherit
Initial:  	the value of the 'color' property
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="bottom-color">border-bottom-color: %0;</dialog>
        <info title="bottom-color">

        </info>
        <insert>border-bottom-color: ;</insert>
      </tag>
 
     <tag name="border-left-color">
        <description>Sets the colour of the left hand border.</description>
        <attribute name="left-color" title="left-color:" required="1" vallist="1" default="">
         <vallist>#,rgb( ),aqua,black,blue,fuchsia,gray,green,lime,maroon,navy,olive,purple,red,silver,teal,white,yellow,inherit,ActiveBorder,ActiveCaption,AppWorkspace,Background,ButtonFace,ButtonHighlight,ButtonShadow,ButtonText,CaptionText,GrayText,Highlight,HighlightText,InactiveBorder,InactiveCaption,InactiveCaptionText,InfoBackground,InfoText,Menu,MenuText,Scrollbar,ThreeDDarkShadow,ThreeDFace,ThreeDHighlight,ThreeDLightShadow,ThreeDShadow,Window,WindowFrame,WindowText</vallist> &lt;color&gt; | inherit
Initial:  	the value of the 'color' property
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="left-color">border-left-color: %0;</dialog>
        <info title="left-color">

        </info>
        <insert>border-left-color: ;</insert>
      </tag>
 
     <tag name="border-top-style">
        <description>Sets the style of the top border.</description>
        <attribute name="" title=":" required="1" vallist="1" default="none">
<vallist>none,hidden,dotted,dashed,solid,double,groove,ridge,inset,outset</vallist>none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset
Initial:  	none
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="border-top-style">border-top-style: %0;</dialog>
        <info title="">
see please border-style.
        </info>
        <insert>border-top-style: ;</insert>
      </tag>
 
     <tag name="border-right-style">
        <description>Sets the style of the right hand border.</description>
        <attribute name="right-style" title="right-style:" required="1" vallist="1" default="none"> <vallist>none,hidden,dotted,dashed,solid,double,groove,ridge,inset,outset</vallist>none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset
Initial:  	none
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="border-right-style">border-right-style: %0;</dialog>
        <info title="right-style">
see please border-style.
        </info>
        <insert>border-right-style: ;</insert>
      </tag>
 
     <tag name="border-bottom-style">
        <description>Sets the style of the bottom border.</description>
        <attribute name="bottom-style" title="bottom-style:" required="1" vallist="1" default="none">
<vallist>none,hidden,dotted,dashed,solid,double,groove,ridge,inset,outset</vallist>none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset
Initial:  	none
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="border-bottom-style">border-bottom-style: %0;</dialog>
        <info title="bottom-style">
see please border-style.
        </info>
        <insert>border-bottom-style: ;</insert>
      </tag>
 
     <tag name="border-left-style">
        <description>Sets the style of the left hand border.</description>
        <attribute name="left-style" title="left-style:" required="1" vallist="1" default="none"> <vallist>none,hidden,dotted,dashed,solid,double,groove,ridge,inset,outset</vallist>none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset
Initial:  	none
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="border-left-style">border-left-style: %0;</dialog>
        <info title="border-left-style">
see please border-style.
        </info>
        <insert>border-left-style: ;</insert>
      </tag>
 
     <tag name="border-top-width">
        <description>Sets the width of the top border.</description>
        <attribute name="top-width" title="top-width:" required="1" vallist="1" default="medium">
         <vallist>thin,medium,thick,0, %,inherit</vallist>thin | medium | thick | &lt;length&gt; | inherit
Initial:  	medium
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="top-width">border-top-width: %0;</dialog>
        <info title="border-top-width">
see please border-width.
        </info>
        <insert>border-top-width: ;</insert>
      </tag>
 
     <tag name="border-right-width">
        <description>Sets the width of the right hand border.</description>
        <attribute name="right-width" title="right-width:" required="1" vallist="1" default="medium">
         <vallist>thin,medium,thick,0, %,inherit</vallist>thin | medium | thick | &lt;length&gt; | inherit
Initial:  	medium
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="right-width">border-right-width: %0;</dialog>
        <info title="right-width">
see please border-width.
        </info>
        <insert>border-right-width: ;</insert>
      </tag>
 
     <tag name="border-bottom-width">
        <description>Sets the width of the bottom border.</description>
        <attribute name="bottom-width" title="bottom-width:" required="1" vallist="1" default="medium">
         <vallist>thin,medium,thick,0, %,inherit</vallist>thin | medium | thick | &lt;length&gt; | inherit
Initial:  	medium
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="bottom-width">border-bottom-width: %0;</dialog>
        <info title="bottom-width">
see please border-width.
        </info>
        <insert>border-bottom-width: ;</insert>
      </tag>
 
     <tag name="border-left-width">
        <description>Sets the width of the left hand border.</description>
        <attribute name="left-width" title="left-width:" required="1" vallist="1" default="medium">
         <vallist>thin,medium,thick,0 %,inherit</vallist>thin | medium | thick | &lt;length&gt; | inherit
Initial:  	medium
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="left-width">border-left-width: %0;</dialog>
        <info title="left-width">
see please border-width.
        </info>
        <insert>border-left-width: ;</insert>
      </tag>
 
     <tag name="border-width">
        <description>Shorthand for setting the width of all four borders.</description>
        <attribute name="border-width1" title="width:" required="1" vallist="1" default="">
         <vallist>thin,medium,thick,0, %</vallist>thin | medium | thick | &lt;length&gt;
        </attribute>
        <attribute name="border-width2" title="width:" required="1" vallist="1" default="">
         <vallist>thin,medium,thick,0, %</vallist>thin | medium | thick | &lt;length&gt; 
        </attribute>
        <attribute name="border-width3" title="width:" required="1" vallist="1" default="">
         <vallist>thin,medium,thick,0, %</vallist>thin | medium | thick | &lt;length&gt; 
        </attribute>
        <attribute name="border-width4" title="width:" required="1" vallist="1" default="">
         <vallist>thin,medium,thick,0, %</vallist>thin | medium | thick | &lt;length&gt; 
        </attribute>
        <dialog title="border-width">border-width: %0 %1 %2 %3;</dialog>
        <info title="border-width"> This property is a shorthand property for setting 'border-top-width', 'border-right-width', 'border-bottom-width', and 'border-left-width' at the same place in the style sheet.

If there is only one value, it applies to all sides. If there are two values, the top and bottom borders are set to the first value and the right and left are set to the second. If there are three values, the top is set to the first value, the left and right are set to the second, and the bottom is set to the third. If there are four values, they apply to the top, right, bottom, and left, respectively. 
The interpretation of the first three values depends on the user agent. The following relationships must hold, however:
'thin' &lt;='medium' &lt;= 'thick'.
        </info>
        <insert>border-width: ;</insert>
      </tag>
    </group>
 

   <group name="Bottom - Float">
      <tag name="bottom">
        <description>Specifies the offset from the bottom edge of the containing block.</description>
        <attribute name="bottom" title="bottom:" required="1" vallist="1" default="">
         <vallist>0, %,auto,inherit</vallist> &lt;length&gt; | &lt;percentage&gt; | auto | inherit
Initial:  	auto
Applies to:  	positioned elements
Inherited:  	no
Percentages:  	refer to height of containing block
        </attribute>
        <dialog title="bottom">bottom: %0;</dialog>
        <info title="bottom">
&lt;length&gt;: The offset is a fixed distance from the reference edge. 
&lt;percentage&gt;: The offset is a percentage of the containing block's width (for 'left' or 'right') or height (for 'top' and 'bottom'). For 'top' and 'bottom', if the height of the containing block is not specified explicitly (i.e., it depends on content height), the percentage value is interpreted like 'auto'. 
auto: The effect of this value depends on which of related properties have the value 'auto' as well. See the sections on the width and height of absolutely positioned, non-replaced elements for details. 

For absolutely positioned boxes, the offsets are with respect to the box's containing block. For relatively positioned boxes, the offsets are with respect to the outer edges of the box itself (i.e., the box is given a position in the normal flow, then offset from that position according to these properties). 
        </info>
        <insert>bottom: ;</insert>
      </tag>
 
     <tag name="caption-side">
        <description>Specifies where a table caption will appear.</description>
        <attribute name="caption-side" title="caption-side:" required="1" vallist="1" default="top">
         <vallist>top,bottom,left,right,inherit</vallist>top | bottom | left | right | inherit
Initial:  	top
Applies to:  	'table-caption' elements
Inherited:  	yes
Percentages:  	N/A
        </attribute>
        <dialog title="caption-side">caption-side: %0;</dialog>
        <info title="caption-side">
This property specifies the position of the caption box with respect to the table box. Values have the following meanings:

top: Positions the caption box above the table box. 
bottom: Positions the caption box below the table box. 
left: Positions the caption box to the left of the table box. 
right: Positions the caption box to the right of the table box. 

Captions above or below a 'table' element are formatted very much as if they were a block element before or after the table, except that (1) they inherit inheritable properties from the table, and (2) they are not considered to be a block box for the purposes of any 'compact' or 'run-in' element that may precede the table.

A caption that is above or below a table box also behaves like a block box for width calculations; the width is computed with respect to the width of the table box's containing block.

For a caption that is on the left or right side of a table box, on the other hand, a value other than 'auto' for 'width' sets the width explicitly, but 'auto' tells the user agent to chose a "reasonable width". This may vary between "the narrowest possible box" to "a single line", so we recommend that users do not specify 'auto' for left and right caption widths.

To align caption content horizontally within the caption box, use the 'text-align' property. For vertical alignment of a left or right caption box with respect to the table box, use the 'vertical-align' property. The only meaningful values in this case are 'top', 'middle', and 'bottom'. All other values are treated the same as 'top'. 
        </info>
        <insert>caption-side: ;</insert>
      </tag>
 
     <tag name="clear">
        <description>Specifies which sides of an element may not have a earlier floating element next to them.</description>
        <attribute name="clear" title="clear:" required="1" vallist="1" default="">
         <vallist>none,left,right,both,inherit</vallist>none | left | right | both | inherit
Initial:  	none
Applies to:  	block-level elements
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="clear">clear: %0;</dialog>
        <info title="clear">
This property may only be specified for block-level elements (including floats). For compact and run-in boxes, this property applies to the final block box to which the compact or run-in box belongs.

Values have the following meanings when applied to non-floating block boxes:

left: The top margin of the generated box is increased enough that the top border edge is below the bottom outer edge of any left-floating boxes that resulted from elements earlier in the source document. 
right: The top margin of the generated box is increased enough that the top border edge is below the bottom outer edge of any right-floating boxes that resulted from elements earlier in the source document. 
both: The generated box is moved below all floating boxes of earlier elements in the source document.. 
none: No constraint on the box's position with respect to floats. 

When the property is set on floating elements, it results in a modification of the rules for positioning the float. An extra constraint (#10) is added: The top outer edge of the float must be below the bottom outer edge of all earlier left-floating boxes (in the case of 'clear: left'), or all earlier right-floating boxes (in the case of 'clear: right'), or both ('clear: both').
        </info>
        <insert>clear: ;</insert>
      </tag>
 
     <tag name="clip">
        <description>Specifies the clipping rectangle for the element.</description>
        <attribute name="clip" title="clip:" required="1" vallist="1" default="auto">
         <vallist>rect( ),auto,inherit</vallist> &lt;shape&gt; | auto | inherit
Initial:  	auto
Applies to:  	block-level and replaced elements
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="clip">clip: %0;</dialog>
        <info title="clip">
The 'clip' property applies to elements that have a 'overflow' property with a value other than 'visible'. Values have the following meanings:

auto: The clipping region has the same size and location as the element's box(es). 
&lt;shape&gt;: In CSS2, the only valid &lt;shape&gt; value is: rect (&lt;top&gt; &lt;right&gt; &lt;bottom&gt; &lt;left&gt;) where &lt;top&gt;, &lt;bottom&gt; &lt;right&gt;, and &lt;left&gt; specify offsets from the respective sides of the box.

    &lt;top&gt;, &lt;right&gt;, &lt;bottom&gt;, and &lt;left&gt; may either have a &lt;length&gt; value or 'auto'. Negative lengths are permitted. The value 'auto' means that a given edge of the clipping region will be the same as the edge of the element's generated box (i.e., 'auto' means the same as '0'.)

    When coordinates are rounded to pixel coordinates, care should be taken that no pixels remain visible when &lt;left&gt; + &lt;right&gt; is equal to the element's width (or &lt;top&gt; + &lt;bottom&gt; equals the element's height), and conversely that no pixels remain hidden when these values are 0. 

The element's ancestors may also have clipping regions (in case their 'overflow' property is not 'visible'); what is rendered is the intersection of the various clipping regions.

If the clipping region exceeds the bounds of the UA's document window, content may be clipped to that window by the native operating environment. 
        </info>
        <insert>clip: ;</insert>
      </tag>
 
     <tag name="color">
        <description>Specifies the foreground colour to be used for text.</description>
        <attribute name="color" title="color:" required="1" vallist="1" default="">
         <vallist>#,rgb( ),aqua,black,blue,fuchsia,gray,green,lime,maroon,navy,olive,purple,red,silver,teal,white,yellow,inherit,ActiveBorder,ActiveCaption,AppWorkspace,Background,ButtonFace,ButtonHighlight,ButtonShadow,ButtonText,CaptionText,GrayText,Highlight,HighlightText,InactiveBorder,InactiveCaption,InactiveCaptionText,InfoBackground,InfoText,Menu,MenuText,Scrollbar,ThreeDDarkShadow,ThreeDFace,ThreeDHighlight,ThreeDLightShadow,ThreeDShadow,Window,WindowFrame,WindowText</vallist> &lt;color&gt; | inherit
Initial:  	depends on user agent
Applies to:  	all elements
Inherited:  	yes
Percentages:  	N/A
        </attribute>
        <dialog title="color">color: %0;</dialog>
        <info title="color">
The following lists additional values for color-related CSS attributes and their general meaning. Any color property (e.g., 'color' or 'background-color') can take one of the following names. Although these are case-insensitive, it is recommended that the mixed capitalization shown below be used, to make the names more legible.
ActiveBorder: Active window border. 
ActiveCaption: Active window caption. 
AppWorkspace: Background color of multiple document interface. 
Background: Desktop background. 
ButtonFace: Face color for three-dimensional display elements. 
ButtonHighlight: Dark shadow for three-dimensional display elements (for edges facing away from the light source). 
ButtonShadow: Shadow color for three-dimensional display elements. 
ButtonText: Text on push buttons. 
CaptionText: Text in caption, size box, and scrollbar arrow box. 
GrayText: Grayed (disabled) text. This color is set to #000 if the current display driver does not support a solid gray color. 
Highlight: Item(s) selected in a control. 
HighlightText: Text of item(s) selected in a control. 
InactiveBorder: Inactive window border. 
InactiveCaption: Inactive window caption. 
InactiveCaptionText: Color of text in an inactive caption. 
InfoBackground: Background color for tooltip controls. 
InfoText: Text color for tooltip controls. 
Menu: Menu background. 
MenuText: Text in menus. 
Scrollbar: Scroll bar gray area. 
ThreeDDarkShadow: Dark shadow for three-dimensional display elements. 
ThreeDFace: Face color for three-dimensional display elements. 
ThreeDHighlight: Highlight color for three-dimensional display elements. 
ThreeDLightShadow: Light color for three-dimensional display elements (for edges facing the light source). 
ThreeDShadow: Dark shadow for three-dimensional display elements. 
Window: Window background. 
WindowFrame: Window frame. 
WindowText: Text in windows.
        </info>
        <insert>color: ;</insert>
      </tag>
 
     <tag name="content">
        <description>Provides a way of inserting extra content into the document.</description>
        <attribute name="content" title="content:" required="1" vallist="1" default="">
         <vallist>"",url(),counter(),attr(),open-quote,close-quote,no-open-quote,no-close-quote,inherit</vallist> [ &lt;string&gt; | &lt;uri&gt; | &lt;counter&gt; | attr(X) | open-quote | close-quote | no-open-quote | no-close-quote ]+ | inherit
 Initial:  	empty string
 Applies to:  	:before and :after pseudo-elements
 Inherited:  	no
 Percentages:  	N/A
 Media:  	all
        </attribute>
        <dialog title="content">content: %0;</dialog>
        <info title="content">
&lt;string&gt;: Text content (see the section on strings). 
&lt;uri&gt;: The value is a URI that designates an external resource. If a user agent cannot support the resource because of the media types it supports, it must ignore the resource. Note. CSS2 offers no mechanism to change the size of the embedded object, or to provide a textual description, like the &quot;alt&quot; or &quot;longdesc&quot; attributes do for images in HTML. This may change in future levels of CSS. 
&lt;counter&gt;: Counters may be specified with two different functions: 'counter()' or 'counters()'. The former has two forms: 'counter(name)' or 'counter(name, style)'. The generated text is the value of the named counter at this point in the formatting structure; it is formatted in the indicated style ('decimal' by default). The latter function also has two forms: 'counter(name, string)' or 'counter(name, string, style)'. The generated text is the value of all counters with the given name at this point in the formatting structure, separated by the specified string. The counters are rendered in the indicated style ('decimal' by default). See the section on automatic counters and numbering for more information. 
open-quote and close-quote: These values are replaced by the appropriate string from the 'quotes' property. 
no-open-quote and no-close-quote: Inserts nothing (the empty string), but increments (decrements) the level of nesting for quotes. 
attr(X): This function returns as a string the value of attribute X for the subject of the selector. The string is not parsed by the CSS processor. If the subject of the selector doesn't have an attribute X, an empty string is returned. The case-sensitivity of attribute names depends on the document language. Note. In CSS2, it is not possible to refer to attribute values for other elements of the selector. 

The 'display' property controls whether the content is placed in a block, inline, or marker box. 
see: http://www.w3.org/TR/REC-CSS2/generate.html#propdef-content
        </info>
        <insert>content: ;</insert>
      </tag>
 
     <tag name="counter-increment">
        <description>Increment a named counter.</description>
        <attribute name="counter-increment" title="counter-increment:" required="1" vallist="1" default="">
         <vallist>,none,inherit</vallist> [ &lt;identifier&gt; &lt;integer&gt;? ]+ | none | inherit
Initial:  	none
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="counter-increment">counter-increment: %0;</dialog>
        <info title="counter-increment">
The 'counter-increment' property accepts one or more names of counters (identifiers), each one optionally followed by an integer. The integer indicates by how much the counter is incremented for every occurrence of the element. The default increment is 1. Zero and negative integers are allowed.

The 'counter-reset' property also contains a list of one or more names of counters, each one optionally followed by an integer. The integer gives the value that the counter is set to on each occurrence of the element. The default is 0.

If 'counter-increment' refers to a counter that is not in the scope (see below) of any 'counter-reset', the counter is assumed to have been reset to 0 by the root element.
see http://www.w3.org/TR/REC-CSS2/generate.html
        </info>
        <insert>counter-increment: ;</insert>
      </tag>
 
     <tag name="counter-reset">
        <description>Reset a named counter to 0, or a specified value.</description>
        <attribute name="counter-reset" title="counter-reset:" required="1" vallist="1" default="">
         <vallist>,none,inherit</vallist> [ &lt;identifier&gt; &lt;integer>? ]+ | none | inherit
Initial:  	none
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="counter-reset">counter-reset: %0;</dialog>
        <info title="counter-reset">
The 'counter-increment' property accepts one or more names of counters (identifiers), each one optionally followed by an integer. The integer indicates by how much the counter is incremented for every occurrence of the element. The default increment is 1. Zero and negative integers are allowed.

The 'counter-reset' property also contains a list of one or more names of counters, each one optionally followed by an integer. The integer gives the value that the counter is set to on each occurrence of the element. The default is 0.

If 'counter-increment' refers to a counter that is not in the scope (see below) of any 'counter-reset', the counter is assumed to have been reset to 0 by the root element.
see http://www.w3.org/TR/REC-CSS2/generate.html
        </info>
        <insert>counter-reset: ;</insert>
      </tag>
 
     <tag name="cursor">
        <description>Set the mouse pointer to the specified type.</description>
        <attribute name="url" title="url:" required="0" vallist="1" default="">
         <vallist>url(),</vallist> [ [&lt;uri&gt; ,]* [ auto | crosshair | default | pointer | move | e-resize | ne-resize | nw-resize | n-resize | se-resize | sw-resize | s-resize | w-resize| text | wait | help ] ] | inherit
        </attribute>
        <attribute name="url2" title="url:" required="0" vallist="1" default="">
         <vallist>url(),</vallist> [ [&lt;uri&gt; ,]* [ auto | crosshair | default | pointer | move | e-resize | ne-resize | nw-resize | n-resize | se-resize | sw-resize | s-resize | w-resize| text | wait | help ] ] | inherit
        </attribute>
        <attribute name="cursor " title="cursor:" required="1" vallist="1" default="auto">
         <vallist>auto,crosshair,default,pointer,move,e-resize,ne-resize,nw-resize,n-resize,se-resize,sw-resize,s-resize,w-resize, text,wait,help</vallist> [ [&lt;uri&gt; ,]* [ auto | crosshair | default | pointer | move | e-resize | ne-resize | nw-resize | n-resize | se-resize | sw-resize | s-resize | w-resize| text | wait | help ] ] | inherit
        </attribute>
        <dialog title="cursor">cursor: %0 %1;</dialog>
        <info title="cursor">
This property specifies the type of cursor to be displayed for the pointing device. Values have the following meanings:

auto: The UA determines the cursor to display based on the current context. 
crosshair: A simple crosshair (e.g., short line segments resembling a "+" sign). 
default: The platform-dependent default cursor. Often rendered as an arrow. 
pointer: The cursor is a pointer that indicates a link. 
move: Indicates something is to be moved. 
e-resize, ne-resize, nw-resize, n-resize, se-resize, sw-resize, s-resize, w-resize: Indicate that some edge is to be moved. For example, the 'se-resize' cursor is used when the movement starts from the south-east corner of the box. 
text: Indicates text that may be selected. Often rendered as an I-bar. 
wait
    Indicates that the program is busy and the user should wait. Often rendered as a watch or hourglass. 
help
    Help is available for the object under the cursor. Often rendered as a question mark or a balloon. 
&lt;uri&gt;: The user agent retrieves the cursor from the resource designated by the URI. If the user agent cannot handle the first cursor of a list of cursors, it should attempt to handle the second, etc. If the user agent cannot handle any user-defined cursor, it must use the generic cursor at the end of the list. 
        </info>
        <insert>cursor: ;</insert>
      </tag>
 
     <tag name="direction">
        <description>Sets the text direction, left to right, right to left, etc.</description>
        <attribute name="direction" title="direction:" required="1" vallist="1" default="ltr">
         <vallist>ltr,rtl,inherit</vallist> ltr | rtl | inherit
Initial:  	ltr
Applies to:  	all elements, but see Notes
Inherited:  	yes
Percentages:  	N/A
        </attribute>
        <dialog title="direction">direction: %0;</dialog>
        <info title="direction">
This property specifies the base writing direction of blocks and the direction of embeddings and overrides (see 'unicode-bidi') for the Unicode bidirectional algorithm. In addition, it specifies the direction of table column layout, the direction of horizontal overflow, and the position of an incomplete last line in a block in case of 'text-align: justify'.

Values for this property have the following meanings:

ltr: Left-to-right direction. 
rtl: Right-to-left direction. 

For the 'direction' property to have any effect on inline-level elements, the 'unicode-bidi' property's value must be 'embed' or 'override'.
        </info>
        <insert>direction: ;</insert>
      </tag>
 
     <tag name="display">
        <description>Controls how an element is rendered, if at all.</description>
        <attribute name="display" title="display:" required="1" vallist="1" default="inline">
         <vallist>inline,block,list-item,run-in,compact,marker,table,inline-table,table-row-group,table-header-group,table-footer-group,table-row,table-column-group,table-column,table-cell,table-caption,none,inherit</vallist>inline | block | list-item | run-in | compact | marker | table | inline-table | table-row-group | table-header-group | table-footer-group | table-row | table-column-group | table-column | table-cell | table-caption | none | inherit
Initial:  	inline
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
Media:  	all
        </attribute>
        <dialog title="display">display: %0;</dialog>
        <info title="display">
The values of this property have the following meanings:

block: This value causes an element to generate a principal block box. 
inline: This value causes an element to generate one or more inline boxes. 
list-item: This value causes an element (e.g., LI in HTML) to generate a principal block box and a list-item inline box. For information about lists and examples of list formatting, please consult the section on lists. 
marker: This value declares generated content before or after a box to be a marker. This value should only be used with :before and :after pseudo-elements attached to block-level elements. In other cases, this value is interpreted as 'inline'. Please consult the section on markers for more information. 
none: This value causes an element to generate no boxes in the formatting structure (i.e., the element has no effect on layout). Descendant elements do not generate any boxes either; this behavior cannot be overridden by setting the 'display' property on the descendants.

    Please note that a display of 'none' does not create an invisible box; it creates no box at all. CSS includes mechanisms that enable an element to generate boxes in the formatting structure that affect formatting but are not visible themselves. Please consult the section on visibility for details. 
run-in and compact: These values create either block or inline boxes, depending on context. Properties apply to run-in and compact boxes based on their final status (inline-level or block-level). For example, the 'white-space' property only applies if the box becomes a block box. 
table, inline-table, table-row-group, table-column, table-column-group, table-header-group, table-footer-group, table-row, table-cell, and table-caption: These values cause an element to behave like a table element (subject to restrictions described in the chapter on tables). 

Note that although the initial value of 'display' is 'inline', rules in the user agent's default style sheet may override this value. 
        </info>
        <insert>display: ;</insert>
      </tag>
 
     <tag name="empty-cells">
        <description>Controls if empty cells in tables should be shown or not.</description>
        <attribute name="empty-cells" title="empty-cells:" required="1" vallist="1" default="show">
         <vallist>show,hide,inherit</vallist>show | hide | inherit
Initial:  	show
Applies to:  	'table-cell' elements
Inherited:  	yes
Percentages:  	N/A
        </attribute>
        <dialog title="empty-cells">empty-cells: %0;</dialog>
        <info title="empty-cells">
In the separated borders model, this property controls the rendering of borders around cells that have no visible content. Empty cells and cells with the 'visibility' property set to 'hidden' are considered to have no visible content. Visible content includes "&amp;nbsp;" and other whitespace except ASCII CR ("\0D"), LF ("\0A"), tab ("\09"), and space ("\20").

When this property has the value 'show', borders are drawn around empty cells (like normal cells).

A value of 'hide' means that no borders are drawn around empty cells. Furthermore, if all the cells in a row have a value of 'hide' and have no visible content, the entire row behaves as if it had 'display: none'. 
        </info>
        <insert>empty-cells: ;</insert>
      </tag>
 
     <tag name="float">
        <description>Specifies if an element should float to the left or right, or not at all.</description>
        <attribute name="float" title="float:" required="1" vallist="1" default="none">
         <vallist>left,right,none,inherit
</vallist>left | right | none | inherit
Initial:  	none
Applies to:  	all but positioned elements and generated content
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="float">float: %0;</dialog>
        <info title="float">
This property specifies whether a box should float to the left, right, or not at all. It may be set for elements that generate boxes that are not absolutely positioned. The values of this property have the following meanings:

left: The element generates a block box that is floated to the left. Content flows on the right side of the box, starting at the top (subject to the 'clear' property). The 'display' is ignored, unless it has the value 'none'. 
right: Same as 'left', but content flows on the left side of the box, starting at the top. 
none: The box is not floated. 

Here are the precise rules that govern the behavior of floats:

   1. The left outer edge of a left-floating box may not be to the left of the left edge of its containing block. An analogous rule holds for right-floating elements.
   2. If the current box is left-floating, and there are any left floating boxes generated by elements earlier in the source document, then for each such earlier box, either the left outer edge of the current box must be to the right of the right outer edge of the earlier box, or its top must be lower than the bottom of the earlier box. Analogous rules hold for right-floating boxes.
   3. The right outer edge of a left-floating box may not be to the right of the left outer edge of any right-floating box that is to the right of it. Analogous rules hold for right-floating elements.
   4. A floating box's outer top may not be higher than the top of its containing block.
   5. The outer top of a floating box may not be higher than the outer top of any block or floated box generated by an element earlier in the source document.
   6. The outer top of an element's floating box may not be higher than the top of any line-box containing a box generated by an element earlier in the source document.
   7. A left-floating box that has another left-floating box to its left may not have its right outer edge to the right of its containing block's right edge. (Loosely: a left float may not stick out at the right edge, unless it is already as far to the left as possible.) An analogous rule holds for right-floating elements.
   8. A floating box must be placed as high as possible.
   9. A left-floating box must be put as far to the left as possible, a right-floating box as far to the right as possible. A higher position is preferred over one that is further to the left/right
        </info>
        <insert>float: ;</insert>
      </tag>
    </group>
 

   <group name="font">
      <tag name="font">
        <description>Shorthand for setting the individual font properties.</description>
        <attribute name="font-style" title="font-style:" required="0" vallist="1" default="">
         <vallist>,normal,italic,oblique</vallist> normal | italic | oblique 
        </attribute>
        <attribute name="font-variant" title="font-variant:" required="0" vallist="1" default="">
         <vallist>,normal,small-caps</vallist> normal | small-caps
        </attribute>
        <attribute name="font-weight" title="font-weight:" required="0" vallist="1" default="">         <vallist>,normal,bold,bolder,lighter,100,200,300,400,500,600,700,800,900</vallist> normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900
        </attribute>
        <attribute name="font-size" title="font-size:" required="0" vallist="1" default="">
         <vallist>,%,xx-small,x-small,small,medium,large,x-large,xx-large,larger,smaller</vallist> &lt;absolute-size&gt; | &lt;relative-size&gt; | &lt;length&gt; | &lt;percentage&gt;
        </attribute>
        <attribute name="line-height" title="line-height:" required="0" vallist="1" default="">
         <vallist>/</vallist> / &lt;number&gt; | &lt;length&gt; | &lt;percentage&gt; see Notes
        </attribute>
        <attribute name="font-family" title="font-family:" required="0" vallist="1" default="">
         <vallist></vallist> [[ &lt;family-name&gt; | &lt;generic-family&gt; ],]* [&lt;family-name&gt; | &lt;generic-family&gt;]
        </attribute>
        <dialog title="font">font: %0 %1 %2 %3 %4 %5;</dialog>
        <info title="font">Value:  	[ [ &lt;'font-style'&gt; || &lt;'font-variant'&gt; || &lt;'font-weight'&gt; ]? &lt;'font-size'&gt; [ / &lt;'line-height'&gt; ]? &lt;'font-family'&gt; ] | caption | icon | menu | message-box | small-caption | status-bar | inherit
Initial:  	see individual properties
Applies to:  	all elements
Inherited:  	yes
Percentages:  	allowed on 'font-size' and 'line-height'

 The 'font' property is, except as described below, a shorthand property for setting 'font-style', 'font-variant', 'font-weight', 'font-size', 'line-height', and 'font-family', at the same place in the style sheet. The syntax of this property is based on a traditional typographical shorthand notation to set multiple properties related to fonts.

All font-related properties are first reset to their initial values, including those listed in the preceding paragraph plus 'font-stretch' and 'font-size-adjust'. Then, those properties that are given explicit values in the 'font' shorthand are set to those values. For a definition of allowed and initial values, see the previously defined properties. For reasons of backwards compatibility, it is not possible to set 'font-stretch' and 'font-size-adjust' to other than their initial values using the 'font' shorthand property; instead, set the individual properties. 

caption: The font used for captioned controls (e.g., buttons, drop-downs, etc.). 
icon: The font used to label icons. 
menu: The font used in menus (e.g., dropdown menus and menu lists). 
message-box: The font used in dialog boxes. 
small-caption: The font used for labeling small controls. 
status-bar: The font used in window status bars.
        </info>
        <insert>font: ;</insert>
      </tag>

      <tag name="font system">
        <description>Shorthand for setting the individual font properties.</description>
        <attribute name="font-style" title="font-style:" required="0" vallist="1" default="">
         <vallist>,normal,italic,oblique</vallist> normal | italic | oblique 
        </attribute>
        <attribute name="font-variant" title="font-variant:" required="0" vallist="1" default="">
         <vallist>,normal,small-caps</vallist> normal | small-caps
        </attribute>
        <attribute name="font-weight" title="font-weight:" required="0" vallist="1" default="">         <vallist>,normal,bold,bolder,lighter,100,200,300,400,500,600,700,800,900</vallist> normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900
        </attribute>
        <attribute name="font-size" title="font-size:" required="0" vallist="1" default="">
         <vallist>,%,xx-small,x-small,small,medium,large,x-large,xx-large,larger,smaller</vallist> 	&lt;absolute-size&gt; | &lt;relative-size&gt; | &lt;length&gt; | &lt;percentage&gt;
        </attribute>
        <attribute name="line-height" title="line-height:" required="0" vallist="1" default="">
         <vallist>/</vallist> / &lt;number&gt; | &lt;length&gt; | &lt;percentage&gt; see Notes
        </attribute>
        <attribute name="system fonts" title="system fonts:" required="1" vallist="1" default="">
         <vallist>,caption,icon,menu,message-box,small-caption,status-bar</vallist> caption | icon | menu | message-box | small-caption | status-bar
        </attribute>
        <dialog title="font">font: %0 %1 %2 %3 %4 %5;</dialog>
        <info title="font">Value:  	[ [ &lt;'font-style'&gt; || &lt;'font-variant'&gt; || &lt;'font-weight'&gt; ]? &lt;'font-size'&gt; [ / &lt;'line-height'&gt; ]? &lt;'font-family'&gt; ] | caption | icon | menu | message-box | small-caption | status-bar | inherit
Initial:  	see individual properties
Applies to:  	all elements
Inherited:  	yes
Percentages:  	allowed on 'font-size' and 'line-height'

 The 'font' property is, except as described below, a shorthand property for setting 'font-style', 'font-variant', 'font-weight', 'font-size', 'line-height', and 'font-family', at the same place in the style sheet. The syntax of this property is based on a traditional typographical shorthand notation to set multiple properties related to fonts.

All font-related properties are first reset to their initial values, including those listed in the preceding paragraph plus 'font-stretch' and 'font-size-adjust'. Then, those properties that are given explicit values in the 'font' shorthand are set to those values. For a definition of allowed and initial values, see the previously defined properties. For reasons of backwards compatibility, it is not possible to set 'font-stretch' and 'font-size-adjust' to other than their initial values using the 'font' shorthand property; instead, set the individual properties. 

caption: The font used for captioned controls (e.g., buttons, drop-downs, etc.). 
icon: The font used to label icons. 
menu: The font used in menus (e.g., dropdown menus and menu lists). 
message-box: The font used in dialog boxes. 
small-caption: The font used for labeling small controls. 
status-bar: The font used in window status bars.
        </info>
        <insert>font: ;</insert>
      </tag>
 
     <tag name="font-family">
        <description>The name of the font, or font family to use.</description>
        <attribute title="family-name" name="family-name" required="0" vallist="1" default="">
         <vallist>,arial, helvetica,verdana,Georgia,"Trebuchet MS","new century schoolbook",roman,"times new roman",times,courier, fixed,western,"Commic Sans MS",Zapf-Chancery,Baskerville,"Heisi Mincho W3",Symbol</vallist> &lt;family-name&gt; 
        </attribute>
        <attribute title="generic-family" name="generic-family" required="1" vallist="1" default="">
         <vallist>serif,sans-serif,cursive,fantasy,monospace</vallist> &lt;generic-family&gt;
Value:  	[[ &lt;family-name&gt; | &lt;generic-family&gt; ],]* [&lt;family-name&gt; | &lt;generic-family&gt;] | inherit
Initial:  	depends on user agent
Applies to:  	all elements
Inherited:  	yes
Percentages:  	N/A
        </attribute>
        <dialog title="font-family">font-family: %0,%1;</dialog>
        <info title="font-family">
The generic font family will be used if one or more of the other fonts in a font set is unavailable. Although many fonts provide the "missing character" glyph, typically an open box, as its name implies this should not be considered a match except for the last font in a font set.

There are two types of font family names:

&lt;family-name&gt;
    The name of a font family of choice. In the previous example, &quot;Baskerville&quot;, &quot;Heisi Mincho W3&quot;, and &quot;Symbol&quot; are font families. Font family names containing whitespace should be quoted. If quoting is omitted, any whitespace characters before and after the font name are ignored and any sequence of whitespace characters inside the font name is converted to a single space. 
&lt;generic-family&gt;
    The following generic families are defined: 'serif', 'sans-serif', 'cursive', 'fantasy', and 'monospace'. Please see the section on generic font families for descriptions of these families. Generic font family names are keywords, and therefore must not be quoted.

    Authors are encouraged to offer a generic font family as a last alternative, for improved robustness.
http://www.w3.org/TR/REC-CSS2/fonts.html#propdef-font-family
        </info>
        <insert>font-family: ;</insert>
      </tag>
 
     <tag name="font-size">
        <description>Specifies how big the font should be.</description>
        <attribute name="font-size" title="font-size:" required="1" vallist="1" default="medium">
         <vallist>,%,xx-small,x-small,small,medium,large,x-large,xx-large,larger,smaller,inherit</vallist> &lt;absolute-size&gt; | &lt;relative-size&gt; | &lt;length&gt; | &lt;percentage&gt; | inherit
Initial:  	medium
Applies to:  	all elements
Inherited:  	yes, the computed value is inherited
Percentages:  	refer to parent element's font size
        </attribute>
        <dialog title="font-size">font-size: %0;</dialog>
        <info title="font-size">
    The font size refers to the size of the font from baseline to baseline, when set solid (in CSS terms, this is when the 'font-size' and 'line-height' properties have the same value).
        </info>
        <insert>font-size: ;</insert>
      </tag>
 
     <tag name="font-size-adjust">
        <description>Set the aspect ratio of the font.</description>
        <attribute name="font-size-adjust" title="font-size-adjust:" required="1" vallist="1" default="none">
         <vallist>,none,inherit</vallist> &lt;number&gt; | none | inherit
Initial:  	none
Applies to:  	all elements
Inherited:  	yes
Percentages:  	N/A
        </attribute>
        <dialog title="font-size-adjust">font-size-adjust: %0;</dialog>
        <info title="font-size-adjust">
http://www.w3.org/TR/REC-CSS2/fonts.html#propdef-font-size-adjust
        </info>
        <insert>font-size-adjust: ;</insert>
      </tag>
 
     <tag name="font-stretch">
        <description>Provides a way to stretch / squash the font.</description>
        <attribute name="font-stretch" title="font-stretch:" required="1" vallist="1" default="normal">
         <vallist>normal,wider,narrower,ultra-condensed,extra-condensed,condensed,semi-condensed,semi-expanded,expanded,extra-expanded,ultra-expanded,inherit</vallist> normal | wider | narrower | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded | inherit
Initial:  	normal
Applies to:  	all elements
Inherited:  	yes
Percentages:  	N/A
        </attribute>
        <dialog title="font-stretch">font-stretch: %0;</dialog>
        <info title="font-stretch">
The font stretch indicates the desired amount of condensing or expansion in the glyphs used to render the text, relative to other fonts in the same font family.
        </info>
        <insert>font-stretch: ;</insert>
      </tag>
 
     <tag name="font-style">
        <description>Specifies if the font should be italic, oblique, etc.</description>
        <attribute name="font-style" title="font-style:" required="1" vallist="1" default="">
         <vallist>normal,italic,oblique,inherit</vallist> normal | italic | oblique | inherit
Initial:  	normal
Applies to:  	all elements
Inherited:  	yes
Percentages:  	N/A
        </attribute>
        <dialog title="font-style">font-style: %0;</dialog>
        <info title="font-style">
The font style specifies whether the text is to be rendered using a normal, italic, or oblique face. Italic is a more cursive companion face to the normal face, but not so cursive as to make it a script face. Oblique is a slanted form of the normal face, and is more commonly used as a companion face to sans-serif. This definition avoids having to label slightly slanted normal faces as oblique, or normal Greek faces as italic.
        </info>
        <insert>font-style: ;</insert>
      </tag>
 
     <tag name="font-variant">
        <description>Enables a variant of the font to be used, such as small-caps.</description>
        <attribute name="font-variant" title="font-variant:" required="1" vallist="1" default="normal">
         <vallist>normal,small-caps,inherit</vallist> normal | small-caps | inherit
Initial:  	normal
Applies to:  	all elements
Inherited:  	yes
Percentages:  	N/A
        </attribute>
        <dialog title="font-variant">font-variant: %0;</dialog>
        <info title="font-variant">
The font variant indicates whether the text is to be rendered using the normal glyphs for lowercase characters or using small-caps glyphs for lowercase characters. A particular font may contain only normal, only small-caps, or both types of glyph; this property is used to request an appropriate font and, if the font contains both variants, the appropriate glyphs.
        </info>
        <insert>font-variant: ;</insert>
      </tag>
 
     <tag name="font-weight">
        <description>Specifies the weight of the font.</description>
        <attribute name="font-weight" title="font-weight:" required="1" vallist="1" default="normal">
         <vallist>normal,bold,bolder,lighter,100,200,300,400,500,600,700,800,900,inherit</vallist> normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900 | inherit
Initial:  	normal
Applies to:  	all elements
Inherited:  	yes
Percentages:  	N/A
        </attribute>
        <dialog title="font-weight">font-weight: %0;</dialog>
        <info title="font-weight">
The font weight refers to the boldness or lightness of the glyphs used to render the text, relative to other fonts in the same font family
        </info>
        <insert>font-weight: ;</insert>
      </tag>
    </group>
 

   <group name="Height - Line-height">
      <tag name="height">
        <description>Provides a height for an element.</description>
        <attribute name="height" title="height:" required="1" vallist="1" default="auto">
         <vallist>0, %,auto,inherit</vallist> &lt;length&gt; | &lt;percentage&gt; | auto | inherit
Initial:  	auto
Applies to:  	all elements but non-replaced inline elements, table columns, and column groups
Inherited:  	no
Percentages:  	see Notes
        </attribute>
        <dialog title="height">height: %0;</dialog>
        <info title="height">
This property specifies the content height of boxes generated by block-level and replaced elements.

This property does not apply to non-replaced inline-level elements. The height of a non-replaced inline element's boxes is given by the element's (possibly inherited) 'line-height' value.

Values have the following meanings:

&lt;length&gt;: Specifies a fixed height. 
&lt;percentage&gt;: Specifies a percentage height. The percentage is calculated with respect to the height of the generated box's containing block. If the height of the containing block is not specified explicitly (i.e., it depends on content height), the value is interpreted like 'auto'. 
auto
    The height depends on the values of other properties. See the prose below.
Negative values for 'height' are illegal.
see http://www.w3.org/TR/REC-CSS2/visudet.html#propdef-height
        </info>
        <insert>height: ;</insert>
      </tag>
 
     <tag name="left">
        <description>Specifies the offset of the left hand side of a positioned element.</description>
        <attribute name="left" title="left:" required="1" vallist="1" default="auto">
         <vallist>0, %,auto,inherit</vallist> &lt;length&gt; | &lt;percentage&gt; | auto | inherit
Initial:  	auto
Applies to:  	positioned elements
Inherited:  	no
Percentages:  	refer to width of containing block
        </attribute>
        <dialog title="left">left: %0;</dialog>
        <info title="left">
&lt;length&gt;: The offset is a fixed distance from the reference edge. 
&lt;percentage&gt;: The offset is a percentage of the containing block's width (for 'left' or 'right') or height (for 'top' and 'bottom'). For 'top' and 'bottom', if the height of the containing block is not specified explicitly (i.e., it depends on content height), the percentage value is interpreted like 'auto'. 
auto: The effect of this value depends on which of related properties have the value 'auto' as well. See the sections on the width and height of absolutely positioned, non-replaced elements for details. 

For absolutely positioned boxes, the offsets are with respect to the box's containing block. For relatively positioned boxes, the offsets are with respect to the outer edges of the box itself (i.e., the box is given a position in the normal flow, then offset from that position according to these properties). 
        </info>
        <insert>left: ;</insert>
      </tag>
 
     <tag name="letter-spacing">
        <description>Specifies the spacing between letters.</description>
        <attribute name="letter-spacing" title="letter-spacing:" required="1" vallist="1" default="normal">
         <vallist>normal,0,inherit</vallist>normal | &lt;length&gt; | inherit
Initial:  	normal
Applies to:  	all elements
Inherited:  	yes
Percentages:  	N/A
        </attribute>
        <dialog title="letter-spacing">letter-spacing: %0;</dialog>
        <info title="letter-spacing">
This property specifies spacing behavior between words. Values have the following meanings:

normal: The normal inter-word space, as defined by the current font and/or the UA. 
&lt;length&gt;: This value indicates inter-word space in addition to the default space between words. Values may be negative, but there may be implementation-specific limits. 

Word spacing algorithms are user agent-dependent. Word spacing is also influenced by justification (see the 'text-align' property)
        </info>
        <insert>letter-spacing: ;</insert>
      </tag>
 
     <tag name="line-height">
        <description>Specifies the minimal height of each generated inline box.</description>
        <attribute name="line-height" title="line-height:" required="1" vallist="1" default="normal">
         <vallist>normal,0, %,inherit</vallist>normal | &lt;number&gt; | &lt;length&gt; | &lt;percentage&gt; | inherit
Initial:  	normal
Applies to:  	all elements
Inherited:  	yes
Percentages:  	refer to the font size of the element itself
        </attribute>
        <dialog title="line-height">line-height: %0;</dialog>
        <info title="line-height">
If the property is set on a block-level element whose content is composed of inline-level elements, it specifies the minimal height of each generated inline box.

If the property is set on an inline-level element, it specifies the exact height of each box generated by the element. (Except for inline replaced elements, where the height of the box is given by the 'height' property.)

Values for this property have the following meanings:

normal: Tells user agents to set the computed value to a "reasonable" value based on the font size of the element. The value has the same meaning as &lt;number&gt;. We recommend a computed value for 'normal' between 1.0 to 1.2. 
&lt;length&gt;: The box height is set to this length. Negative values are illegal. 
&lt;number&gt;: The computed value of the property is this number multiplied by the element's font size. Negative values are illegal. However, the number, not the computed value, is inherited. 
&lt;percentage&gt;: The computed value of the property is this percentage multiplied by the element's computed font size. Negative values are illegal. 
        </info>
        <insert>line-height: ;</insert>
      </tag>
    </group>
 

   <group name="list">
      <tag name="list-style">
        <description>Shorthand method of applying the list-style properties.</description>
        <attribute name="style-type" title="style-type:" required="0" vallist="1" default="">
         <vallist>,disc,circle,square,decimal,decimal-leading-zero,lower-roman,upper-roman,lower-greek,lower-alpha,lower-latin,upper-alpha,upper-latin,hebrew,armenian,georgian,cjk-ideographic,hiragana,katakana,hiragana-iroha,katakana-iroha,none</vallist> disc | circle | square | decimal | decimal-leading-zero | lower-roman | upper-roman | lower-greek | lower-alpha | lower-latin | upper-alpha | upper-latin | hebrew | armenian | georgian | cjk-ideographic | hiragana | katakana | hiragana-iroha | katakana-iroha | none
        </attribute>
        <attribute name="style-position" title="style-position:" required="0" vallist="1" default="">
         <vallist>,inside,outside</vallist> inside | outside
        </attribute>
        <attribute name="style-image" title=":" required="0" vallist="1" default="">
         <vallist>,url(""),none,inherit</vallist> &lt;uri&gt; | none
        </attribute>
        <dialog title="list-style">list-style: %0 %1 %2;</dialog>
        <info title="list-style">
    Value:  	[ &lt;'list-style-type'&gt; || &lt;'list-style-position'&gt; || &lt;'list-style-image'&gt; ] | inherit
    Initial:  	not defined for shorthand properties
    Applies to:  	elements with 'display: list-item'
    Inherited:  	yes
    Percentages:  	N/A

The 'list-style' property is a shorthand notation for setting the three properties 'list-style-type', 'list-style-image', and 'list-style-position' at the same place in the style sheet. 
        </info>
        <insert>list-style: ;</insert>
      </tag>
 
     <tag name="list-style-image">
        <description>Specifies an image that should be used as the marker in a list or list item.</description>
        <attribute name="style-image" title="style-image:" required="1" vallist="1" default="none">
         <vallist>url(),none,inherit</vallist> &lt;uri&gt; | none | inherit
Initial:  	none
Applies to:  	elements with 'display: list-item'
Inherited:  	yes
Percentages:  	N/A
        </attribute>
        <dialog title="list-style-image">list-style-image: %0;</dialog>
        <info title="list-style-image">
 This property sets the image that will be used as the list item marker. When the image is available, it will replace the marker set with the 'list-style-type' marker.
        </info>
        <insert>list-style-image: ;</insert>
      </tag>
 
     <tag name="list-style-position">
        <description>Used to control if the list marker is rendered inside or outside the actual list item.</description>
        <attribute name="style-position" title="style-position:" required="1" vallist="1" default="outside">
         <vallist>inside,outside,inherit</vallist> inside | outside | inherit
Initial:  	outside
Applies to:  	elements with 'display: list-item'
Inherited:  	yes
Percentages:  	N/A
        </attribute>
        <dialog title="list-style-position">list-style-position: %0;</dialog>
        <info title="list-style-position">
 This property specifies the position of the marker box in the principal block box. Values have the following meanings:
outside: The marker box is outside the principal block box. Note. CSS1 did not specify the precise location of the marker box and for reasons of compatibility, CSS2 remains equally ambiguous. For more precise control of marker boxes, please use markers. 
inside: The marker box is the first inline box in the principal block box, after which the element's content flows. 
        </info>
        <insert>list-style-position: ;</insert>
      </tag>
 
     <tag name="list-style-type">
        <description>Specifies the type of marker to display, circle, square etc.</description>
        <attribute name="style-type" title="style-type:" required="1" vallist="1" default="disc">
         <vallist>disc,circle,square,decimal,decimal-leading-zero,lower-roman,upper-roman,lower-greek,lower-alpha,lower-latin,upper-alpha,upper-latin,hebrew,armenian,georgian,cjk-ideographic,hiragana,katakana,hiragana-iroha,katakana-iroha,none,inherit</vallist> disc | circle | square | decimal | decimal-leading-zero | lower-roman | upper-roman | lower-greek | lower-alpha | lower-latin | upper-alpha | upper-latin | hebrew | armenian | georgian | cjk-ideographic | hiragana | katakana | hiragana-iroha | katakana-iroha | none | inherit
Initial:  	disc
Applies to:  	elements with 'display: list-item'
Inherited:  	yes
Percentages:  	N/A
        </attribute>
        <dialog title="list-style-type">list-style-type: %0;</dialog>
        <info title="list-style-type">
see please http://www.w3.org/TR/REC-CSS2/generate.html#propdef-list-style-type
        </info>
        <insert>list-style-type: ;</insert>
      </tag>
    </group>
 

   <group name="margin">
      <tag name="margin">
        <description>Shorthand method for specifying the top, right, bottom, left margin widths / heights.</description>
        <attribute name="margin" title="margin:" required="1" vallist="1" default="">
         <vallist>0,auto,inherit</vallist> &lt;margin-width&gt;{1,4} | inherit
Initial:  	not defined for shorthand properties
Applies to:  	all elements
Inherited:  	no
Percentages:  	refer to width of containing block

        </attribute>
        <dialog title="margin">margin: %0;</dialog>
        <info title="margin">
 The 'margin' property is a shorthand property for setting 'margin-top', 'margin-right', 'margin-bottom', and 'margin-left' at the same place in the style sheet.

If there is only one value, it applies to all sides. If there are two values, the top and bottom margins are set to the first value and the right and left margins are set to the second. If there are three values, the top is set to the first value, the left and right are set to the second, and the bottom is set to the third. If there are four values, they apply to the top, right, bottom, and left, respectively. 
        </info>
        <insert>margin: ;</insert>
      </tag>
 
     <tag name="margin-top">
        <description>Specifies the height of the top margin on an element.</description>
        <attribute name="margin-top" title="margin-top:" required="1" vallist="1" default="0">
         <vallist>0,auto,inherit</vallist> &lt;margin-width&gt; | inherit
Initial:  	0
Applies to:  	all elements
Inherited:  	no
Percentages:  	refer to width of containing block
        </attribute>
        <dialog title="margin-top">margin-top: %0;</dialog>
        <info title="margin-top">
Margin properties specify the width of the margin area of a box. The 'margin' shorthand property sets the margin for all four sides while the other margin properties only set their respective side.
The properties defined in this section refer to the &lt;margin-width&gt; value type, which may take one of the following values:
&lt;length&gt;
    Specifies a fixed width. 
&lt;percentage&gt;
    The percentage is calculated with respect to the width of the generated box's containing block. This is true for 'margin-top' and 'margin-bottom', except in the page context, where percentages refer to page box height. 
auto
    See the section on computing widths and margins for behavior.
 http://www.w3.org/TR/REC-CSS2/visudet.html#Computing_widths_and_margins
Negative values for margin properties are allowed, but there may be implementation-specific limits. 
        </info>
        <insert>margin-top: ;</insert>
      </tag>
 
     <tag name="margin-right">
        <description>Specifies the width of the right hand margin on an element.</description>
        <attribute name="margin-right" title="margin-right:" required="1" vallist="1" default="0">
         <vallist>0,auto,inherit</vallist> &lt;margin-width&gt; | inherit
Initial:  	0
Applies to:  	all elements
Inherited:  	no
Percentages:  	refer to width of containing block
        </attribute>
        <dialog title="margin-right">margin-right: %0;</dialog>
        <info title="margin-right">
see please margin-top
        </info>
        <insert>margin-right: ;</insert>
      </tag>
 
     <tag name="margin-bottom">
        <description>Specifies the height of the bottom margin on an element.</description>
        <attribute name="margin-bottom" title="margin-bottom:" required="1" vallist="1" default="0">
         <vallist>0,auto,inherit</vallist> &lt;margin-width&gt; | inherit
Initial:  	0
Applies to:  	all elements
Inherited:  	no
Percentages:  	refer to width of containing block
        </attribute>
        <dialog title="margin-bottom">margin-bottom: %0;</dialog>
        <info title="margin-bottom">
see please margin-top
        </info>
        <insert>margin-bottom: ;</insert>
      </tag>
 
     <tag name="margin-left">
        <description>Specifies the width of the left hand margin on an element.</description>
        <attribute name="margin-left" title="margin-left:" required="1" vallist="1" default="0">
         <vallist>0,auto,inherit</vallist> &lt;margin-width&gt; | inherit
Initial:  	0
Applies to:  	all elements
Inherited:  	no
Percentages:  	refer to width of containing block
        </attribute>
        <dialog title="margin-left">margin-left: %0;</dialog>
        <info title="margin-left">
see please margin-top
        </info>
        <insert>margin-left: ;</insert>
      </tag>
    </group>
 

   <group name="Marker-offset - Overflow">
      <tag name="marker-offset">
        <description>Specifies the distance between the nearest border edges of a marker box and its associated principal box
		 .</description>
        <attribute name="marker-offset" title="marker-offset:" required="1" vallist="1" default="">
         <vallist>0,auto,inherit</vallist> &lt;length&gt; | auto | inherit
Initial:  	auto
Applies to:  	elements with 'display: marker'
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="marker-offset">marker-offset: %0;</dialog>
        <info title="marker-offset">
This property specifies the distance between the nearest border edges of a marker box and its associated principal box. The offset may either be a user-specified (&lt;length&gt;) or chosen by the UA ('auto'). Lengths may be negative, but there may be implementation-specific limits.
        </info>
        <insert>marker-offset: ;</insert>
      </tag>
 
     <tag name="marks">
        <description>Specifies whether cross marks or crop marks or both should be rendered just outside the page box edge
		 .</description>
        <attribute name="marks" title="marks:" required="1" vallist="1" default="">
         <vallist>crop,cross,crop cross,none,inherit</vallist> [ crop || cross ] | none | inherit
Initial:  	none
Applies to:  	page context
Inherited:  	N/A
Percentages:  	N/A
Media:  	visual, paged
        </attribute>
        <dialog title="marks">marks: %0;</dialog>
        <info title="marks">
In high-quality printing, marks are often added outside the page box. This property specifies whether cross marks or crop marks or both should be rendered just outside the page box edge.

Crop marks indicate where the page should be cut. Cross marks (also known as register marks or registration marks) are used to align sheets.

Marks are visible only on absolute page boxes (see the 'size' property). In relative page boxes, the page box will be aligned with the target and the marks will be outside the printable area.

The size, style, and position of cross marks depend on the user agent. 
        </info>
        <insert>marks: ;</insert>
      </tag>
 
     <tag name="max-height">
        <description>Specifies a maximum height for an element, does not apply to table elements.</description>
        <attribute name="max-height" title="max-height:" required="1" vallist="1" default="">
         <vallist>0, %,none,inherit</vallist> &lt;length&gt; | &lt;percentage&gt; | none | inherit
Initial:  	none
Applies to:  	all elements except non-replaced inline elements and table elements
Inherited:  	no
Percentages:  	refer to height of containing block
        </attribute>
        <dialog title="max-height">max-height: %0;</dialog>
        <info title="max-height">
allow authors to constrain box heights to a certain range. Values have the following meanings:

&lt;length&gt;: Specifies a fixed minimum or maximum computed height. 
&lt;percentage&gt;: Specifies a percentage for determining the computed value. The percentage is calculated with respect to the height of the generated box's containing block. If the height of the containing block is not specified explicitly (i.e., it depends on content height), the percentage value is interpreted like 'auto'. 
none
    (Only on 'max-height') No limit on the height of the box. 

The following algorithm describes how the two properties influence the computed value of the 'height' property:

   1. The height is computed (without 'min-height' and 'max-height') following the rules under "Computing heights and margins" above.
   2. If the computed value of 'min-height' is greater than the value of 'max-height', 'max-height' is set to the value of 'min-height'.
   3. If the computed height is greater than 'max-height', the rules above are applied again, but this time using the value of 'max-height' as the specified value for 'height'.
   4. If the computed height is smaller than 'min-height', the rules above are applied again, but this time using the value of 'min-height' as the specified value for 'height'.
        </info>
        <insert>max-height: ;</insert>
      </tag>
 
     <tag name="max-width">
        <description>Specifies a maximum width for an element, does not apply to table elements.</description>
        <attribute name="max-width" title="max-width:" required="1" vallist="1" default="">
         <vallist>0, %,none,inherit</vallist> &lt;length&gt; | &lt;percentage&gt; | none | inherit
Initial:  	none
Applies to:  	all elements except non-replaced inline elements and table elements
Inherited:  	no
Percentages:  	refer to width of containing block
        </attribute>
        <dialog title="max-width">max-width: %0;</dialog>
        <info title="max-width">
allow authors to constrain box widths to a certain range. Values have the following meanings:

&lt;length&gt;: Specifies a fixed minimum or maximum computed width. 
&lt;percentage&gt;: Specifies a percentage for determining the computed value. The percentage is calculated with respect to the width of the generated box's containing block. 
none: (Only on 'max-width') No limit on the width of the box. 

The following algorithm describes how the two properties influence the computed value of the 'width' property:

   1. The width is computed (without 'min-width' and 'max-width') following the rules under "Computing widths and margins" above.
   2. If the computed value of 'min-width' is greater than the value of 'max-width', 'max-width' is set to the value of 'min-width'.
   3. If the computed width is greater than 'max-width', the rules above are applied again, but this time using the value of 'max-width' as the specified value for 'width'.
   4. If the computed width is smaller than 'min-width', the rules above are applied again, but this time using the value of 'min-width' as the specified value for 'width'. 

The user agent may define a non-negative minimum value for the 'min-width' property, which may vary from element to element and even depend on other properties. If 'min-width' goes below this limit, either because it was set explicitly, or because it was 'auto' and the rules below would make it too small, the user agent may use the minimum value as the computed value. 
        </info>
        <insert>max-width: ;</insert>
      </tag>
 
     <tag name="min-height">
        <description>Specifies a minimum height for an element, does not apply to table elements.</description>
        <attribute name="min-height" title="min-height:" required="1" vallist="1" default="">
         <vallist>0, %,inherit</vallist> &lt;length&gt; | &lt;percentage&gt; | inherit
Initial:  	0
Applies to:  	all elements except non-replaced inline elements and table elements
Inherited:  	no
Percentages:  	refer to height of containing block
        </attribute>
        <dialog title="min-height">min-height: %0;</dialog>
        <info title="min-height">
allow authors to constrain box heights to a certain range. Values have the following meanings:

&lt;length&gt;: Specifies a fixed minimum or maximum computed height. 
&lt;percentage&gt;: Specifies a percentage for determining the computed value. The percentage is calculated with respect to the height of the generated box's containing block. If the height of the containing block is not specified explicitly (i.e., it depends on content height), the percentage value is interpreted like 'auto'. 
none
    (Only on 'max-height') No limit on the height of the box. 

The following algorithm describes how the two properties influence the computed value of the 'height' property:

   1. The height is computed (without 'min-height' and 'max-height') following the rules under "Computing heights and margins" above.
   2. If the computed value of 'min-height' is greater than the value of 'max-height', 'max-height' is set to the value of 'min-height'.
   3. If the computed height is greater than 'max-height', the rules above are applied again, but this time using the value of 'max-height' as the specified value for 'height'.
   4. If the computed height is smaller than 'min-height', the rules above are applied again, but this time using the value of 'min-height' as the specified value for 'height'. 
        </info>
        <insert>min-height: ;</insert>
      </tag>
 
     <tag name="min-width">
        <description>Specifies a minimum width for an element, does not apply to table elements.</description>
        <attribute name="min-width" title="min-width:" required="1" vallist="1" default="">
         <vallist>0, %,inherit</vallist> &lt;length&gt; | &lt;percentage&gt; | inherit
Initial:  	UA dependent
Applies to:  	all elements except non-replaced inline elements and table elements
Inherited:  	no
Percentages:  	refer to width of containing block
        </attribute>
        <dialog title="min-width">min-width: %0;</dialog>
        <info title="min-width">
allow authors to constrain box widths to a certain range. Values have the following meanings:

&lt;length&gt;: Specifies a fixed minimum or maximum computed width. 
&lt;percentage&gt;: Specifies a percentage for determining the computed value. The percentage is calculated with respect to the width of the generated box's containing block. 
none: (Only on 'max-width') No limit on the width of the box. 

The following algorithm describes how the two properties influence the computed value of the 'width' property:

   1. The width is computed (without 'min-width' and 'max-width') following the rules under "Computing widths and margins" above.
   2. If the computed value of 'min-width' is greater than the value of 'max-width', 'max-width' is set to the value of 'min-width'.
   3. If the computed width is greater than 'max-width', the rules above are applied again, but this time using the value of 'max-width' as the specified value for 'width'.
   4. If the computed width is smaller than 'min-width', the rules above are applied again, but this time using the value of 'min-width' as the specified value for 'width'. 

The user agent may define a non-negative minimum value for the 'min-width' property, which may vary from element to element and even depend on other properties. If 'min-width' goes below this limit, either because it was set explicitly, or because it was 'auto' and the rules below would make it too small, the user agent may use the minimum value as the computed value.
        </info>
        <insert>min-width: ;</insert>
      </tag>
 
     <tag name="orphans">
        <description>Specifies the minimum number of lines of a paragraph that must be left at the bottom of a page.
		  </description>
        <attribute name="orphans" title="orphans:" required="1" vallist="1" default="">
         <vallist>2,inherit</vallist> &lt;integer&gt; | inherit
Initial:  	2
Applies to:  	block-level elements
Inherited:  	yes
Percentages:  	N/A
Media:  	visual, paged
        </attribute>
        <dialog title="orphans">orphans: %0;</dialog>
        <info title="orphans">
The 'orphans' property specifies the minimum number of lines of a paragraph that must be left at the bottom of a page. The 'widows' property specifies the minimum number of lines of a paragraph that must be left at the top of a page. Examples of how they are used to control page breaks are given below.

For information about paragraph formatting, please consult the section on line boxes. http://www.w3.org/TR/REC-CSS2/visuren.html#line-box
        </info>
        <insert>orphans: ;</insert>
      </tag>
 
     <tag name="outline">
        <description>Shorthand for setting the individual outline properties on all sides of the box.</description>
        <attribute name="outline-color" title="outline-color:" required="0" vallist="1" default="">
         <vallist>#,rgb( ),invert,aqua,black,blue,fuchsia,gray,green,lime,maroon,navy,olive,purple,red,silver,teal,white,yellow,ActiveBorder,ActiveCaption,AppWorkspace,Background,ButtonFace,ButtonHighlight,ButtonShadow,ButtonText,CaptionText,GrayText,Highlight,HighlightText,InactiveBorder,InactiveCaption,InactiveCaptionText,InfoBackground,InfoText,Menu,MenuText,Scrollbar,ThreeDDarkShadow,ThreeDFace,ThreeDHighlight,ThreeDLightShadow,ThreeDShadow,Window,WindowFrame,WindowText</vallist> &lt;color&gt; | invert 
        </attribute>
        <attribute name="outline-style" title="outline-style:" required="0" vallist="1" default="">         <vallist>none,dotted,dashed,solid,double,groove,ridge,inset,outset</vallist> none | dotted | dashed | solid | double | groove | ridge | inset | outset
        </attribute>
        <attribute name="outline-width" title="outline-width:" required="0" vallist="1" default="">
         <vallist>thin,medium,thick,0</vallist> thin | medium | thick | &lt;lenght&gt;
        </attribute> 
        <dialog title="outline">outline: %0 %1 %2;</dialog>
        <info title="outline">
At times, style sheet authors may want to create outlines around visual objects such as buttons, active form fields, image maps, etc., to make them stand out. CSS2 outlines differ from borders in the following ways:

   1. Outlines do not take up space.
   2. Outlines may be non-rectangular. 

The outline properties control the style of these dynamic outlines. 
more info at :
http://www.w3.org/TR/REC-CSS2/ui.html#propdef-outline
        </info>
        <insert>outline: ;</insert>
      </tag>
 
     <tag name="outline-color">
        <description>Sets the colour of the outline on all sides of the box.</description>
        <attribute name="outline-color" title="outline-color:" required="1" vallist="1" default="">
         <vallist>#,rgb( ),invert,aqua,black,blue,fuchsia,gray,green,lime,maroon,navy,olive,purple,red,silver,teal,white,yellow,ActiveBorder,ActiveCaption,AppWorkspace,Background,ButtonFace,ButtonHighlight,ButtonShadow,ButtonText,CaptionText,GrayText,Highlight,HighlightText,InactiveBorder,InactiveCaption,InactiveCaptionText,InfoBackground,InfoText,Menu,MenuText,Scrollbar,ThreeDDarkShadow,ThreeDFace,ThreeDHighlight,ThreeDLightShadow,ThreeDShadow,Window,WindowFrame,WindowText,inherit</vallist> &lt;color&gt; | invert | inherit
Initial:  	invert
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
Media:  	visual, interactive
        </attribute>
        <dialog title="outline-color">outline-color: %0;</dialog>
        <info title="outline-color">
The 'outline-color' accepts all colors, as well as the keyword 'invert'. 'Invert' is expected to perform a color inversion on the pixels on the screen. This is a common trick to ensure the focus border is visible, regardless of color background.
sea please outline.
        </info>
        <insert>outline-color: ;</insert>
      </tag>
 
     <tag name="outline-style">
        <description>Sets the style of the outline on all sides of the box.</description>
        <attribute name="outline-style" title="outline-style:" required="1" vallist="1" default="none">         <vallist>none,dotted,dashed,solid,double,groove,ridge,inset,outset,inherit</vallist> &lt;border-style&gt; | inherit
Initial:  	none
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
Media:  	visual, interactive
        </attribute>
        <dialog title="outline-style">outline-style: %0;</dialog>
        <info title="outline-style">
The 'outline-style' property accepts the same values as 'border-style', except that 'hidden' is not a legal outline style.
sea please outline.
        </info>
        <insert>outline-style: ;</insert>
      </tag>
 
     <tag name="outline-width">
        <description>Sets the width of the outline on all sides of the box.</description>
        <attribute name="outline-width" title="outline-width:" required="1" vallist="1" default="medium">
         <vallist>thin,medium,thick,0,inherit</vallist>  thin | medium | thick | &lt;lenght&gt; | inherit
Initial:  	medium
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
Media:  	visual, interactive
        </attribute>
        <dialog title="outline-width">outline-width: %0;</dialog>
        <info title="outline-width">
The 'outline-width' property accepts the same values as 'border-width'.
sea please outline.
        </info>
        <insert>outline-width: ;</insert>
      </tag>
 
     <tag name="overflow">
        <description>Controls how content that does not fit inside its element should be handled.</description>
        <attribute name="overflow" title="overflow:" required="1" vallist="1" default="visible">
         <vallist>visible,hidden,scroll,auto,inherit</vallist>visible | hidden | scroll | auto | inherit
Initial:  	visible
Applies to:  	block-level and replaced elements
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="overflow">overflow: %0;</dialog>
        <info title="overflow">
This property specifies whether the content of a block-level element is clipped when it overflows the element's box (which is acting as a containing block for the content). Values have the following meanings:

visible: This value indicates that content is not clipped, i.e., it may be rendered outside the block box. 
hidden: This value indicates that the content is clipped and that no scrolling mechanism should be provided to view the content outside the clipping region; users will not have access to clipped content. The size and shape of the clipping region is specified by the 'clip' property. 
scroll: This value indicates that the content is clipped and that if the user agent uses scrolling mechanism that is visible on the screen (such as a scroll bar or a panner), that mechanism should be displayed for a box whether or not any of its content is clipped. This avoids any problem with scrollbars appearing and disappearing in a dynamic environment. When this value is specified and the target medium is 'print' or 'projection', overflowing content should be printed. 
auto: The behavior of the 'auto' value is user agent-dependent, but should cause a scrolling mechanism to be provided for overflowing boxes. 

Even if 'overflow' is set to 'visible', content may be clipped to a UA's document window by the native operating environment. 
        </info>
        <insert>overflow: ;</insert>
      </tag>
    </group>
 

   <group name="padding">
      <tag name="padding">
        <description>Specifies the width of the padding area of a box. The 'padding' shorthand property sets the padding for all four sides while the other padding properties only set their respective side. 
        If there is only one value, it applies to all sides. If there are two values, the top and bottom paddings are set to the first value and the right and left paddings are set to the second. If there are three values, the top is set to the first value, the left and right are set to the second, and the bottom is set to the third. If there are four values, they apply to the top, right, bottom, and left, respectively.</description>
        <attribute name="padding" title="padding:" required="1" vallist="1" default="0">
         <vallist>0, %</vallist> &lt;padding-width&gt;{1,4} | inherit
Initial:  	not defined for shorthand properties
Applies to:  	all elements
Inherited:  	no
Percentages:  	refer to width of containing block
        </attribute>
        <attribute name="padding1" title="padding:" required="0" vallist="1" default="">
         <vallist>0, %</vallist> &lt;length&gt; | &lt;percentage&gt;
        </attribute>
        <attribute name="padding2" title="padding:" required="0" vallist="1" default="">
         <vallist>0, %</vallist> &lt;length&gt; | &lt;percentage&gt;
        </attribute>
        <attribute name="padding3" title="padding:" required="0" vallist="1" default="">
         <vallist>0, %</vallist> &lt;length&gt; | &lt;percentage&gt;
        </attribute>
        <dialog title="padding">padding: %0 %1 %2 %3;</dialog>
        <info title="padding">
The padding properties specify the width of the padding area of a box. The 'padding' shorthand property sets the padding for all four sides while the other padding properties only set their respective side.

The properties defined in this section refer to the &lt;padding-width&gt; value type, which may take one of the following values:

&lt;length&gt;: Specifies a fixed width. 
&lt;percentage&gt;: The percentage is calculated with respect to the width of the generated box's containing block, even for 'padding-top' and 'padding-bottom'.
 
 The 'padding' property is a shorthand property for setting 'padding-top', 'padding-right', 'padding-bottom', and 'padding-left' at the same place in the style sheet.

If there is only one value, it applies to all sides. If there are two values, the top and bottom paddings are set to the first value and the right and left paddings are set to the second. If there are three values, the top is set to the first value, the left and right are set to the second, and the bottom is set to the third. If there are four values, they apply to the top, right, bottom, and left, respectively.

The surface color or image of the padding area is specified via the 'background' property: 
Unlike margin properties, values for padding values cannot be negative. Like margin properties, percentage values for padding properties refer to the width of the generated box's containing block.  

The surface color or image of the padding area is specified via the 'background' property
        </info>
        <insert>padding: ;</insert>
      </tag>
 
     <tag name="padding-top">
        <description>Set the top padding of a box.</description>
        <attribute name="padding-top" title="padding-top:" required="1" vallist="1" default="0">
         <vallist>0, %,inherit</vallist> &lt;padding-width&gt; | inherit
Initial:  	0
Applies to:  	all elements
Inherited:  	no
Percentages:  	refer to width of containing block
        </attribute>
        <dialog title="padding-top">padding-top: %0;</dialog>
        <info title="padding-top">
see please padding
        </info>
        <insert>padding-top: ;</insert>
      </tag>
 
     <tag name="padding-right">
        <description>Set the right padding of a box.</description>
        <attribute name="padding-right" title="padding-right:" required="1" vallist="1" default="0">
         <vallist>0, %,inherit</vallist> &lt;padding-width&gt; | inherit
Initial:  	0
Applies to:  	all elements
Inherited:  	no
Percentages:  	refer to width of containing block
        </attribute>
        <dialog title="padding-right">padding-right: %0;</dialog>
        <info title="padding-right">
see please padding
        </info>
        <insert>padding-right: ;</insert>
      </tag>
 
     <tag name="padding-bottom">
        <description>Set the bottom padding of a box.</description>
        <attribute name="padding-bottom" title="padding-bottom:" required="1" vallist="1" default="0">
         <vallist>0, %,inherit</vallist> &lt;padding-width&gt; | inherit
Initial:  	0
Applies to:  	all elements
Inherited:  	no
Percentages:  	refer to width of containing block
        </attribute>
        <dialog title="padding-bottom">padding-bottom: %0;</dialog>
        <info title="padding-bottom">
see please padding
        </info>
        <insert>padding-bottom: ;</insert>
      </tag>
 
     <tag name="padding-left">
        <description>Set the left padding of a box.</description>
        <attribute name="padding-left" title="padding-left:" required="1" vallist="1" default="0">
         <vallist>0, %,inherit</vallist> &lt;padding-width&gt; | inherit
Initial:  	0
Applies to:  	all elements
Inherited:  	no
Percentages:  	refer to width of containing block
        </attribute>
        <dialog title="padding-left">padding-left: %0;</dialog>
        <info title="padding-left">
see please padding
        </info>
        <insert>padding-left: ;</insert>
      </tag>
    </group>
 

   <group name="page">
      <tag name="page">
        <description>Specifies a particular type of page where an element should be displayed.</description>
        <attribute name="page" title="page:" required="1" vallist="1" default="auto">
         <vallist>,auto</vallist> &lt;identifier&gt; | auto
Initial:  	auto
Applies to:  	block-level elements
Inherited:  	yes
Percentages:  	N/A
Media:  	visual, paged
        </attribute>
        <dialog title="page">page: %0;</dialog>
        <info title="page">
The 'page' property can be used to specify a particular type of page where an element should be displayed.

This example will put all tables on a right-hand side landscape page (named "rotated"):

@page rotated {size: landscape}
TABLE {page: rotated; page-break-before: right}

The 'page' property works as follows: If a block box with inline content has a 'page' property that is different from the preceding block box with inline content, then one or two page breaks are inserted between them, and the boxes after the break are rendered on a page box of the named type.
See http://www.w3.org/TR/REC-CSS2/page.html#propdef-page
        </info>
        <insert>page: ;</insert>
      </tag>
 
     <tag name="page-break-after">
        <description>Page break after.</description>
        <attribute name="page-break-after" title="page-break-after:" required="1" vallist="1" default="auto">
         <vallist>auto,always,avoid,left,right,inherit</vallist> auto | always | avoid | left | right | inherit
Initial:  	auto
Applies to:  	block-level elements
Inherited:  	no
Percentages:  	N/A
Media:  	visual, paged
        </attribute>
        <dialog title="page-break-after">page-break-after: %0;</dialog>
        <info title="page-break-after">
auto: Neither force nor forbid a page break before (after, inside) the generated box. 
always: Always force a page break before (after) the generated box.
avoid: Avoid a page break before (after, inside) the generated box. 
left: Force one or two page breaks before (after) the generated box so that the next page is formatted as a left page.
right: Force one or two page breaks before (after) the generated box so that the next page is formatted as a right page. 
        </info>
        <insert>page-break-after: ;</insert>
      </tag>
 
     <tag name="page-break-before">
        <description>Page break before.</description>
        <attribute name="page-break-before" title="page-break-before:" required="1" vallist="1" default="auto">
         <vallist>auto,always,avoid,left,right,inherit</vallist> auto | always | avoid | left | right | inherit
Initial:  	auto
Applies to:  	block-level elements
Inherited:  	no
Percentages:  	N/A
Media:  	visual, paged
        </attribute>
        <dialog title="page-break-before">page-break-before: %0;</dialog>
        <info title="page-break-before">
see please page-break-after
        </info>
        <insert>page-break-before: ;</insert>
      </tag>
 
     <tag name="page-break-inside">
        <description>Page break inside.</description>
        <attribute name="page-break-inside" title="page-break-inside:" required="1" vallist="1" default="auto">
         <vallist>avoid,auto,inherit</vallist> avoid | auto | inherit
Initial:  	auto
Applies to:  	block-level elements
Inherited:  	yes
Percentages:  	N/A
Media:  	visual, paged
        </attribute>
        <dialog title="page-break-inside">page-break-inside: %0;</dialog>
        <info title="page-break-inside">
see please page-break-after
        </info>
        <insert>page-break-inside: ;</insert>
      </tag>
    </group>
 

   <group name="Position - Table-layout">
      <tag name="position">
        <description>The 'position' and 'float' properties determine which of the CSS2 positioning algorithms is used to calculate the position of a box.</description>
        <attribute name="position" title="position:" required="1" vallist="1" default="static">
         <vallist>static,relative,absolute,fixed,inherit</vallist>static | relative | absolute | fixed | inherit
Initial:  	static
Applies to:  	all elements, but not to generated content
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="position">position: %0;</dialog>
        <info title="position">
The values of this property have the following meanings:

static: The box is a normal box, laid out according to the normal flow. The 'left' and 'top' properties do not apply. 
relative: The box's position is calculated according to the normal flow (this is called the position in normal flow). Then the box is offset relative to its normal position. When a box B is relatively positioned, the position of the following box is calculated as though B were not offset. 
absolute: The box's position (and possibly size) is specified with the 'left', 'right', 'top', and 'bottom' properties. These properties specify offsets with respect to the box's containing block. Absolutely positioned boxes are taken out of the normal flow. This means they have no impact on the layout of later siblings. Also, though absolutely positioned boxes have margins, they do not collapse with any other margins. 
fixed: The box's position is calculated according to the 'absolute' model, but in addition, the box is fixed with respect to some reference. In the case of continuous media, the box is fixed with respect to the viewport (and doesn't move when scrolled). In the case of paged media, the box is fixed with respect to the page, even if that page is seen through a viewport (in the case of a print-preview, for example). Authors may wish to specify 'fixed' in a media-dependent way. For instance, an author may want a box to remain at the top of the viewport on the screen, but not at the top of each printed page. The two specifications may be separated by using an @media rule, as in:

@media screen { 
  H1#first { position: fixed } 
}
        </info>
        <insert>position: ;</insert>
      </tag>
 
     <tag name="quotes">
        <description>Specifies pairs of quotation marks for each level of embedded quotation. The 'content' property gives access to those quotation marks and causes them to be inserted before and after a quotation.</description>
        <attribute name="quotes" title="quotes:" required="1" vallist="1" default="">
         <vallist>"",none,inherit</vallist> [&lt;string&gt; &lt;string&gt;]+ | none | inherit
Initial:  	depends on user agent
Applies to:  	all elements
Inherited:  	yes
Percentages:  	N/A
        </attribute>
        <dialog title="quotes">quotes: %0;</dialog>
        <info title="quotes">
This property specifies quotation marks for any number of embedded quotations. Values have the following meanings:

none
    The 'open-quote' and 'close-quote' values of the 'content' property produce no quotations marks. 
[&lt;string&gt;  &lt;string&gt;]+: Values for the 'open-quote' and 'close-quote' values of the 'content' property are taken from this list of pairs of quotation marks (opening and closing). The first (leftmost) pair represents the outermost level of quotation, the second pair the first level of embedding, etc. The user agent must apply the appropriate pair of quotation marks according to the level of embedding.
        </info>
        <insert>quotes: ;</insert>
      </tag>
 
     <tag name="right">
        <description>Specifies how far a box's right content edge is offset to the left of the right edge of the box's containing block.</description>
        <attribute name="right" title="right:" required="1" vallist="1" default="auto">
         <vallist>0, %,auto,inherit</vallist> &lt;length&gt; | &lt;percentage&gt; | auto | inherit
Initial:  	auto
Applies to:  	positioned elements
Inherited:  	no
Percentages:  	refer to width of containing block
        </attribute>
        <dialog title="right">right: %0;</dialog>
        <info title="right">
&lt;length&gt;: The offset is a fixed distance from the reference edge. 
&lt;percentage&gt;: The offset is a percentage of the containing block's width (for 'left' or 'right') or height (for 'top' and 'bottom'). For 'top' and 'bottom', if the height of the containing block is not specified explicitly (i.e., it depends on content height), the percentage value is interpreted like 'auto'. 
auto: The effect of this value depends on which of related properties have the value 'auto' as well. See the sections on the width and height of absolutely positioned, non-replaced elements for details. 

For absolutely positioned boxes, the offsets are with respect to the box's containing block. For relatively positioned boxes, the offsets are with respect to the outer edges of the box itself (i.e., the box is given a position in the normal flow, then offset from that position according to these properties). 
        </info>
        <insert>right: ;</insert>
      </tag>
 
     <tag name="size">
        <description>Specifies the size and orientation of a page box.</description>
        <attribute name="size" title="size:" required="1" vallist="1" default="">
         <vallist>0,auto,portrait,landscape,inherit</vallist> &lt;length&gt;{1,2} | auto | portrait | landscape | inherit
Initial:  	auto
Applies to:  	the page context
Inherited:  	N/A
Percentages:  	N/A
Media:  	visual, paged
        </attribute>
        <dialog title="size">size: %0;</dialog>
        <info title="size">
This property specifies the size and orientation of a page box.

The size of a page box may either be "absolute" (fixed size) or "relative" (scalable, i.e., fitting available sheet sizes). Relative page boxes allow user agents to scale a document and make optimal use of the target size.

Three values for the 'size' property create a relative page box:

auto: The page box will be set to the size and orientation of the target sheet. 
landscape: Overrides the target's orientation. The page box is the same size as the target, and the longer sides are horizontal. 
portrait: Overrides the target's orientation. The page box is the same size as the target, and the shorter sides are horizontal. 
see http://www.w3.org/TR/REC-CSS2/page.html#propdef-size
        </info>
        <insert>size: ;</insert>
      </tag>
 
     <tag name="table-layout">
        <description>Controls the algorithm used to lay out the table cells, rows, and columns.</description>
        <attribute name="table-layout" title="table-layout:" required="1" vallist="1" default="auto">
         <vallist>auto,fixed,inherit</vallist> auto | fixed | inherit
Initial:  	auto
Applies to:  	'table' and 'inline-table' elements
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="table-layout">table-layout: %0;</dialog>
        <info title="table-layout">
The 'table-layout' property controls the algorithm used to lay out the table cells, rows, and columns. Values have the following meaning:

fixed: Use the fixed table layout algorithm 
auto: Use any automatic table layout algorithm 

see http://www.w3.org/TR/REC-CSS2/tables.html#propdef-table-layout
        </info>
        <insert>table-layout: ;</insert>
      </tag>
    </group>
 

   <group name="text">
      <tag name="text-align">
        <description>Describes how inline content of a block is aligned.</description>
        <attribute name="text-align" title="text-align:" required="1" vallist="1" default="">
         <vallist>"",left,right,center,justify,inherit</vallist>left | right | center | justify | &lt;string&gt; | inherit
Initial:  	depends on user agent and writing direction
Applies to:  	block-level elements
Inherited:  	yes
Percentages:  	N/A
        </attribute>
        <dialog title="text-align">text-align: %0;</dialog>
        <info title="text-align">
This property describes how inline content of a block is aligned. Values have the following meanings:

left, right, center, and justify: Left, right, center, and double justify text, respectively. 
&lt;string&gt;: Specifies a string on which cells in a table column will align (see the section on horizontal alignment in a column for details and an example). This value applies only to table cells. If set on other elements, it will be treated as 'left' or 'right', depending on whether 'direction' is 'ltr', or 'rtl', respectively. 

A block of text is a stack of line boxes. In the case of 'left', 'right' and 'center', this property specifies how the inline boxes within each line box align with respect to the line box's left and right sides; alignment is not with respect to the viewport. In the case of 'justify', the UA may stretch the inline boxes in addition to adjusting their positions. (See also 'letter-spacing' and 'word-spacing'.) 
        </info>
        <insert>text-align: ;</insert>
      </tag>
 text-decoration
     <tag name="text-decoration">
        <description>Describes decorations that are added to the text of an element.</description>
        <attribute name="text-decoration" title="text-decoration:" required="0" vallist="1" default="">
         <vallist>none,underline,overline,underline overline,line-through,blink,inherit</vallist>none | [ underline || overline || line-through || blink ] | inherit
Initial:  	none
Applies to:  	all elements
Inherited:  	no (see Notes)
Percentages:  	N/A
        </attribute>
        <dialog title="text-decoration">text-decoration: %0;</dialog>
        <info title="text-decoration">
 This property describes decorations that are added to the text of an element. If the property is specified for a block-level element, it affects all inline-level descendants of the element. If it is specified for (or affects) an inline-level element, it affects all boxes generated by the element. If the element has no content or no text content (e.g., the IMG element in HTML), user agents must ignore this property.

Values have the following meanings:

none: Produces no text decoration. 
underline: Each line of text is underlined. 
overline: Each line of text has a line above it. 
line-through: Each line of text has a line through the middle 
blink: Text blinks (alternates between visible and invisible). Conforming user agents are not required to support this value. 

The color(s) required for the text decoration should be derived from the 'color' property value.

This property is not inherited, but descendant boxes of a block box should be formatted with the same decoration (e.g., they should all be underlined). The color of decorations should remain the same even if descendant elements have different 'color' values. 
        </info>
        <insert>text-decoration: ;</insert>
      </tag>
 
     <tag name="text-indent">
        <description>Specifies the indentation of the first line of text in a block.</description>
        <attribute name="text-indent" title="text-indent:" required="1" vallist="1" default="">
         <vallist>0, %,inherit</vallist> &lt;length&gt; | &lt;percentage&gt; | inherit
Initial:  	0
Applies to:  	block-level elements
Inherited:  	yes
Percentages:  	refer to width of containing block
        </attribute>
        <dialog title="text-indent">: %0;</dialog>
        <info title="text-indent">
This property specifies the indentation of the first line of text in a block. More precisely, it specifies the indentation of the first box that flows into the block's first line box. The box is indented with respect to the left (or right, for right-to-left layout) edge of the line box. User agents should render this indentation as blank space.

Values have the following meanings:

&lt;length&gt;: The indentation is a fixed length. 
&lt;percentage&gt;: The indentation is a percentage of the containing block width. 

The value of 'text-indent' may be negative, but there may be implementation-specific limits. 
        </info>
        <insert>text-indent: ;</insert>
      </tag>
 
     <tag name="text-shadow">
        <description>Accepts a comma-separated list of shadow effects to be applied to the text of the element.</description>
        <attribute name="text-shadow" title="text-shadow:" required="1" vallist="1" default="none">
         <vallist>,none,inherit</vallist>none | [&lt;color&gt; || &lt;length&gt; &lt;length&gt; &lt;length&gt;? ,]* [&lt;color&gt; || &lt;length&gt; &lt;length&gt; &lt;length&gt;?] | inherit
Initial:  	none
Applies to:  	all elements
Inherited:  	no (see Notes)
Percentages:  	N/A
        </attribute>
        <dialog title="text-shadow">text-shadow: %0;</dialog>
        <info title="text-shadow">
This property accepts a comma-separated list of shadow effects to be applied to the text of the element. The shadow effects are applied in the order specified and may thus overlay each other, but they will never overlay the text itself. Shadow effects do not alter the size of a box, but may extend beyond its boundaries. The stack level of the shadow effects is the same as for the element itself.

Each shadow effect must specify a shadow offset and may optionally specify a blur radius and a shadow color.

A shadow offset is specified with two &lt;length&gt; values that indicate the distance from the text. The first length value specifies the horizontal distance to the right of the text. A negative horizontal length value places the shadow to the left of the text. The second length value specifies the vertical distance below the text. A negative vertical length value places the shadow above the text.

A blur radius may optionally be specified after the shadow offset. The blur radius is a length value that indicates the boundaries of the blur effect. The exact algorithm for computing the blur effect is not specified.

A color value may optionally be specified before or after the length values of the shadow effect. The color value will be used as the basis for the shadow effect. If no color is specified, the value of the 'color' property will be used instead.

Text shadows may be used with the :first-letter and :first-line pseudo-elements. 
        </info>
        <insert>text-shadow: ;</insert>
      </tag>
 
     <tag name="text-transform">
        <description>Controls capitalization effects of an element's text.</description>
        <attribute name="text-transform" title="text-transform:" required="1" vallist="1" default="">
         <vallist>capitalize,uppercase,lowercase,none,inherit</vallist>capitalize | uppercase | lowercase | none | inherit
Initial:  	none
Applies to:  	all elements
Inherited:  	yes
Percentages:  	N/A
        </attribute>
        <dialog title="text-transform">text-transform: %0;</dialog>
        <info title="text-transform">
This property controls capitalization effects of an element's text. Values have the following meanings:

capitalize: Puts the first character of each word in uppercase. 
uppercase: Puts all characters of each word in uppercase. 
lowercase: Puts all characters of each word in lowercase. 
none: No capitalization effects. 
        </info>
        <insert>text-transform: ;</insert>
      </tag>
   </group>
 

   <group name="Top - Z-index">
      <tag name="top">
        <description>Specifies how far a box's top content edge is offset below the top edge of the box's containing block.</description>
        <attribute name="top" title="top:" required="1" vallist="1" default="auto">
         <vallist>0, %,auto,inherit</vallist> &lt;length&gt; | &lt;percentage&gt; | auto | inherit
Initial:  	auto
Applies to:  	positioned elements
Inherited:  	no
Percentages:  	refer to heigth of containing block
        </attribute>
        <dialog title="top">top: %0;</dialog>
        <info title="top">
&lt;length&gt;: The offset is a fixed distance from the reference edge. 
&lt;percentage&gt;: The offset is a percentage of the containing block's width (for 'left' or 'right') or height (for 'top' and 'bottom'). For 'top' and 'bottom', if the height of the containing block is not specified explicitly (i.e., it depends on content height), the percentage value is interpreted like 'auto'. 
auto: The effect of this value depends on which of related properties have the value 'auto' as well. See the sections on the width and height of absolutely positioned, non-replaced elements for details. 

For absolutely positioned boxes, the offsets are with respect to the box's containing block. For relatively positioned boxes, the offsets are with respect to the outer edges of the box itself (i.e., the box is given a position in the normal flow, then offset from that position according to these properties). 
        </info>
        <insert>top: ;</insert>
      </tag>
 
     <tag name="unicode-bidi">
        <description>For the 'direction' property to have any effect on inline-level elements, the 'unicode-bidi' property's value must be 'embed' or 'override'.</description>
        <attribute name="unicode-bidi" title="unicode-bidi:" required="1" vallist="1" default="normal">
         <vallist>normal,embed,bidi-override,inherit</vallist>normal | embed | bidi-override | inherit
Initial:  	normal
Applies to:  	all elements, but see Notes
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="unicode-bidi">unicode-bidi: %0;</dialog>
        <info title="unicode-bidi">
Values for this property have the following meanings:

normal: The element does not open an additional level of embedding with respect to the bidirectional algorithm. For inline-level elements, implicit reordering works across element boundaries. 
embed: If the element is inline-level, this value opens an additional level of embedding with respect to the bidirectional algorithm. The direction of this embedding level is given by the 'direction' property. Inside the element, reordering is done implicitly. This corresponds to adding a LRE (U+202A; for 'direction: ltr') or RLE (U+202B; for 'direction: rtl') at the start of the element and a PDF (U+202C) at the end of the element. 
bidi-override: If the element is inline-level or a block-level element that contains only inline-level elements, this creates an override. This means that inside the element, reordering is strictly in sequence according to the 'direction' property; the implicit part of the bidirectional algorithm is ignored. This corresponds to adding a LRO (U+202D; for 'direction: ltr') or RLO (U+202E; for 'direction: rtl') at the start of the element and a PDF (U+202C) at the end of the element. 
see http://www.w3.org/TR/REC-CSS2/visuren.html#propdef-unicode-bidi
        </info>
        <insert>unicode-bidi: ;</insert>
      </tag>
 
     <tag name="vertical-align">
        <description>Affects the vertical positioning inside a line box of the boxes generated by an inline-level element.</description>
        <attribute name="vertical-align" title="vertical-align:" required="1" vallist="1" default="baseline">
         <vallist>baseline,sub,super,top,text-top,middle,bottom,text-bottom, %,0,inherit</vallist>baseline | sub | super | top | text-top | middle | bottom | text-bottom | &lt;percentage&gt; | &lt;length&gt; | inherit
Initial:  	baseline
Applies to:  	inline-level and 'table-cell' elements
Inherited:  	no
Percentages:  	refer to the 'line-height' of the element itself
        </attribute>
        <dialog title="vertical-align">vertical-align: %0;</dialog>
        <info title="vertical-align">
This property affects the vertical positioning inside a line box of the boxes generated by an inline-level element. The following values only have meaning with respect to a parent inline-level element, or to a parent block-level element, if that element generates anonymous inline boxes; they have no effect if no such parent exists.

Note. Values of this property have slightly different meanings in the context of tables. Please consult the section on table height algorithms for details.

baseline: Align the baseline of the box with the baseline of the parent box. If the box doesn't have a baseline, align the bottom of the box with the parent's baseline. 
middle: Align the vertical midpoint of the box with the baseline of the parent box plus half the x-height of the parent. 
sub: Lower the baseline of the box to the proper position for subscripts of the parent's box. (This value has no effect on the font size of the element's text.) 
super: Raise the baseline of the box to the proper position for superscripts of the parent's box. (This value has no effect on the font size of the element's text.) 
text-top
    Align the top of the box with the top of the parent element's font. 
text-bottom
    Align the bottom of the box with the bottom of the parent element's font. 
&lt;percentage&gt;: Raise (positive value) or lower (negative value) the box by this distance (a percentage of the 'line-height' value). The value '0%' means the same as 'baseline'. 
&lt;length&gt;: Raise (positive value) or lower (negative value) the box by this distance. The value '0cm' means the same as 'baseline'. 

The remaining values refer to the line box in which the generated box appears:
top: Align the top of the box with the top of the line box. 
bottom: Align the bottom of the box with the bottom of the line box. 
        </info>
        <insert>vertical-align: ;</insert>
      </tag>
 
     <tag name="visibility">
        <description>Specifies whether the boxes generated by an element are rendered.</description>
        <attribute name="visibility" title="visibility:" required="1" vallist="1" default="">
         <vallist>visible,hidden,collapse,inherit</vallist>visible | hidden | collapse | inherit
Initial:  	inherit
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="visibility">visibility: %0;</dialog>
        <info title="visibility">
The 'visibility' property specifies whether the boxes generated by an element are rendered. Invisible boxes still affect layout (set the 'display' property to 'none' to suppress box generation altogether). Values have the following meanings:

visible: The generated box is visible. 
hidden: The generated box is invisible (fully transparent), but still affects layout. 
collapse: Please consult the section on dynamic row and column effects in tables. If used on elements other than rows or columns, 'collapse' has the same meaning as 'hidden'. 

This property may be used in conjunction with scripts to create dynamic effects.
        </info>
        <insert>visibility: ;</insert>
      </tag>
 
     <tag name="white-space">
        <description>Declares how whitespace inside the element is handled.</description>
        <attribute name="white-space" title="white-space:" required="1" vallist="1" default="normal">
         <vallist>normal,pre,nowrap,inherit</vallist>normal | pre | nowrap | inherit
Initial:  	normal
Applies to:  	block-level elements
Inherited:  	yes
Percentages:  	N/A
        </attribute>
        <dialog title="white-space">white-space: %0;</dialog>
        <info title="white-space">
 This property declares how whitespace inside the element is handled. Values have the following meanings:

normal: This value directs user agents to collapse sequences of whitespace, and break lines as necessary to fill line boxes. Additional line breaks may be created by occurrences of "\A" in generated content (e.g., for the BR element in HTML). 
pre: This value prevents user agents from collapsing sequences of whitespace. Lines are only broken at newlines in the source, or at occurrences of "\A" in generated content. 
nowrap: This value collapses whitespace as for 'normal', but suppresses line breaks within text except for those created by "\A" in generated content (e.g., for the BR element in HTML). 
        </info>
        <insert>white-space: ;</insert>
      </tag>
 
     <tag name="widows">
        <description>Specifies the minimum number of lines of a paragraph that must be left at the top of a page.</description>
        <attribute name="widows" title="widows:" required="1" vallist="1" default="2">
         <vallist>2,inherit</vallist> &lt;integer&gt; | inherit
Initial:  	2
Applies to:  	block-level elements
Inherited:  	yes
Percentages:  	N/A
Media:  	visual, paged
        </attribute>
        <dialog title="widows">:widows %0;</dialog>
        <info title="widows">
The 'orphans' property specifies the minimum number of lines of a paragraph that must be left at the bottom of a page. The 'widows' property specifies the minimum number of lines of a paragraph that must be left at the top of a page. Examples of how they are used to control page breaks are given below.

For information about paragraph formatting, please consult the section on line boxes. http://www.w3.org/TR/REC-CSS2/visuren.html#line-box
        </info>
        <insert>widows: ;</insert>
      </tag>
 
     <tag name="width">
        <description>Specifies the content width of boxes generated by block-level and replaced elements.</description>
        <attribute name="width" title="width:" required="1" vallist="1" default="auto">
         <vallist>0, %,auto,inherit</vallist> &lt;length&gt; | &lt;percentage&gt; | auto | inherit
Initial:  	auto
Applies to:  	all elements but non-replaced inline elements, table rows, and row groups
Inherited:  	no
Percentages:  	refer to width of containing block
        </attribute>
        <dialog title="width">width: %0;</dialog>
        <info title="width">
&lt;length&gt;: Specifies a fixed width. 
&lt;percentage&gt;: Specifies a percentage width. The percentage is calculated with respect to the width of the generated box's containing block. 
auto
    The width depends on the values of other properties. See http://www.w3.org/TR/REC-CSS2/visudet.html#propdef-width  

Negative values for 'width' are illegal. 
        </info>
        <insert>width: ;</insert>
      </tag>
 
     <tag name="word-spacing">
        <description>Specifies spacing behavior between words.</description>
        <attribute name="word-spacing" title="word-spacing:" required="1" vallist="1" default="normal">
         <vallist>normal,0,inherit</vallist>normal | &lt;length&gt; | inherit
Initial:  	normal
Applies to:  	all elements
Inherited:  	yes
Percentages:  	N/A
        </attribute>
        <dialog title="word-spacing">word-spacing: %0;</dialog>
        <info title="word-spacing">
This property specifies spacing behavior between words. Values have the following meanings:

normal: The normal inter-word space, as defined by the current font and/or the UA. 
&lt;length&gt;: This value indicates inter-word space in addition to the default space between words. Values may be negative, but there may be implementation-specific limits. 

Word spacing algorithms are user agent-dependent. Word spacing is also influenced by justification (see the 'text-align' property).
        </info>
        <insert>word-spacing: ;</insert>
      </tag>
 
     <tag name="z-index">
        <description>Specifies the stack level.</description>
        <attribute name="z-index" title="z-index:" required="1" vallist="1" default="auto">
         <vallist>auto,0,inherit</vallist>auto | &lt;integer&gt; | inherit
Initial:  	auto
Applies to:  	positioned elements
Inherited:  	no
Percentages:  	N/A
        </attribute>
        <dialog title="z-index">z-index: %0;</dialog>
        <info title="z-index">
For a positioned box, the 'z-index' property specifies:

   1. The stack level of the box in the current stacking context.
   2. Whether the box establishes a local stacking context. 

Values have the following meanings:

&lt;integer&gt;: This integer is the stack level of the generated box in the current stacking context. The box also establishes a local stacking context in which its stack level is '0'. 
auto: The stack level of the generated box in the current stacking context is the same as its parent's box. The box does not establish a new local stacking context. 
        </info>
        <insert>z-index: ;</insert>
      </tag>
    </group>
  </group>
  <group name="Aural">
    <tag name="azimuth">
      <description>This property is most likely to be implemented by mixing the same signal into different channels at differing volumes.</description>
       <attribute name="azimuth" title="azimuth:" required="1" vallist="1" default="center">
        <vallist> deg, rad, grad,left-side,far-left,left,center-left,center,center-right,right,far-right,right-side,left-side behind,far-left behind,left behind,center-left behind,center behind,center-right behind,right behind,far-right behind,right-side behind,leftwards,rightwards,inherit</vallist> &lt;angle&gt; | [[ left-side | far-left | left | center-left | center | center-right | right | far-right | right-side ] || behind ] | leftwards | rightwards | inherit
Initial:  	center
Applies to:  	all elements
Inherited:  	yes
Percentages:  	N/A
       </attribute>
       <dialog title="azimuth">azimuth: %0;</dialog>
       <info title="azimuth">
&lt;angle&gt;: Position is described in terms of an angle within the range '-360deg' to '360deg'. The value '0deg' means directly ahead in the center of the sound stage. '90deg' is to the right, '180deg' behind, and '270deg' (or, equivalently and more conveniently, '-90deg') to the left. 
left-side: Same as '270deg'. With 'behind', '270deg'. 
far-left: Same as '300deg'. With 'behind', '240deg'. 
left: Same as '320deg'. With 'behind', '220deg'. 
center-left: Same as '340deg'. With 'behind', '200deg'. 
center: Same as '0deg'. With 'behind', '180deg'. 
center-right: Same as '20deg'. With 'behind', '160deg'. 
right: Same as '40deg'. With 'behind', '140deg'. 
far-right: Same as '60deg'. With 'behind', '120deg'. 
right-side: Same as '90deg'. With 'behind', '90deg'. 
leftwards: Moves the sound to the left, relative to the current angle. More precisely, subtracts 20 degrees. Arithmetic is carried out modulo 360 degrees. Note that 'leftwards' is more accurately described as "turned counter-clockwise," since it always subtracts 20 degrees, even if the inherited azimuth is already behind the listener (in which case the sound actually appears to move to the right). 
rightwards: Moves the sound to the right, relative to the current angle. More precisely, adds 20 degrees. See 'leftwards' for arithmetic. 

This property is most likely to be implemented by mixing the same signal into different channels at differing volumes. It might also use phase shifting, digital delay, and other such techniques to provide the illusion of a sound stage. The precise means used to achieve this effect and the number of speakers used to do so are user agent-dependent; this property merely identifies the desired end result. 
       </info>
       <insert>azimuth: ;</insert>
    </tag>
 
    <tag name="cue">
      <description>Shorthand for setting 'cue-before' and 'cue-after'. If two values are given, the first value is 'cue-before' and the second is 'cue-after'. If only one value is given, it applies to both properties.</description>
       <attribute name="cue" title="cue:" required="1" vallist="1" default="">
        <vallist>url(),url() url(),inherit</vallist>	[ &lt;'cue-before'&gt; || &lt;'cue-after'&gt; ] | inherit
Initial:  	not defined for shorthand properties
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
       </attribute>
       <dialog title="cue">cue: %0;</dialog>
       <info title="cue">
 The 'cue' property is a shorthand for setting 'cue-before' and 'cue-after'. If two values are given, the first value is 'cue-before' and the second is 'cue-after'. If only one value is given, it applies to both properties.
       </info>
       <insert>cue: ;</insert>
    </tag>
 
   <tag name="cue-after">
      <description>Sounds may be played after the element to delimit it.</description>
       <attribute name="cue-after" title="cue-after:" required="1" vallist="1" default="">
        <vallist>url(),none,inherit</vallist> &lt;uri&gt; | none | inherit
Initial:  	none
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
       </attribute>
       <dialog title="cue-after">cue-after: %0;</dialog>
       <info title="cue-after">
Auditory icons are another way to distinguish semantic elements. Sounds may be played before and/or after the element to delimit it. Values have the following meanings:

&lt;uri&gt;: The URI must designate an auditory icon resource. If the URI resolves to something other than an audio file, such as an image, the resource should be ignored and the property treated as if it had the value 'none'. 
none: No auditory icon is specified. 
       </info>
       <insert>cue-after: ;</insert>
    </tag>
 
   <tag name="cue-before">
      <description>Sounds may be played before the element to delimit it.</description>
       <attribute name="cue-before" title="cue-before:" required="1" vallist="1" default="">
        <vallist>url(),none,inherit</vallist> &lt;uri&gt; | none | inherit
Initial:  	none
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
       </attribute>
       <dialog title="cue-before">cue-before: %0;</dialog>
       <info title="cue-before">
Auditory icons are another way to distinguish semantic elements. Sounds may be played before and/or after the element to delimit it. Values have the following meanings:

&lt;uri&gt;: The URI must designate an auditory icon resource. If the URI resolves to something other than an audio file, such as an image, the resource should be ignored and the property treated as if it had the value 'none'. 
none: No auditory icon is specified. 
       </info>
       <insert>cue-before: ;</insert>
    </tag>
 
   <tag name="elevation">
      <description>The precise means used to achieve this effect and the number of speakers used to do so are undefined. This property merely identifies the desired end result.</description>
       <attribute name="elevation" title="elevation:" required="1" vallist="1" default="">
        <vallist> deg, grad, rads,below,level,above,higher,lower,inherit</vallist> &lt;angle&gt; | below | level | above | higher | lower | inherit
Initial:  	level
Applies to:  	all elements
Inherited:  	yes
Percentages:  	N/A

       </attribute>
       <dialog title="elevation">elevation: %0;</dialog>
       <info title="elevation">
       </info>
       <insert>elevation: ;</insert>
    </tag>
 
   <tag name="pause">
      <description>Shorthand for setting 'pause-before' and 'pause-after'. If two values are given, the first value is 'pause-before' and the second is 'pause-after'. If only one value is given, it applies to both properties.</description>
       <attribute name="pause" title="pause:" required="1" vallist="1" default="">
        <vallist> ms, %, ms ms, % %, ms %, % ms,inherit</vallist> [ [&lt;time&gt; | &lt;percentage&gt;]{1,2} ] | inherit
Initial:  	depends on user agent
Applies to:  	all elements
Inherited:  	no
Percentages:  	see Notess of 'pause-before' and 'pause-after'
       </attribute>
       <dialog title="pause">pause: %0;</dialog>
       <info title="pause">
 The 'pause' property is a shorthand for setting 'pause-before' and 'pause-after'. If two values are given, the first value is 'pause-before' and the second is 'pause-after'. If only one value is given, it applies to both properties.
 Time unit identifiers are: ms: milliseconds, s: seconds
format is a number immediately followed by a time unit identifier.
Time values may not be negative.
       </info>
       <insert>pause: ;</insert>
    </tag>
 
   <tag name="pause-after">
      <description>Specifies a pause to be observed after speaking an element's content.</description>
       <attribute name="pause-after" title="pause-after:" required="1" vallist="1" default="">
        <vallist> ms, %,inherit</vallist> &lt;time&gt; | &lt;percentage&gt; | inherit
Initial:  	depends on user agent
Applies to:  	all elements
Inherited:  	no
Percentages:  	see Notes
       </attribute>
       <dialog title="pause-after">pause-after: %0;</dialog>
       <info title="pause-after">
 specify a pause to be observed after speaking an element's content. Values have the following meanings:

&lt;time&gt;: Expresses the pause in absolute time units (seconds and milliseconds). 
Time unit identifiers are: ms: milliseconds, s: seconds
format is a number immediately followed by a time unit identifier.
Time values may not be negative. 
&lt;percentage&gt;: Refers to the inverse of the value of the 'speech-rate' property. For example, if the speech-rate is 120 words per minute (i.e., a word takes half a second, or 500ms) then a 'pause-before' of 100% means a pause of 500 ms and a 'pause-before' of 20% means 100ms. 

The pause is inserted between the element's content and any 'cue-before' or 'cue-after' content.

Authors should use relative units to create more robust style sheets in the face of large changes in speech-rate.
       </info>
       <insert>pause-after: ;</insert>
    </tag>
 
   <tag name="pause-before">
      <description>Specifies a pause to be observed before speaking an element's content.</description>
       <attribute name="pause-before" title="pause-before:" required="1" vallist="1" default="">
        <vallist> ms, %,inherit</vallist> &lt;time&gt; | &lt;percentage&gt; | inherit
Initial:  	depends on user agent
Applies to:  	all elements
Inherited:  	no
Percentages:  	see Notes
       </attribute>
       <dialog title="pause-before">pause-before: %0;</dialog>
       <info title="pause-before">
  specify a pause to be observed before speaking an element's content. Values have the following meanings:

&lt;time&gt;: Expresses the pause in absolute time units (seconds and milliseconds).
Time unit identifiers are: ms: milliseconds, s: seconds
format is a number immediately followed by a time unit identifier.
Time values may not be negative. 
&lt;percentage&gt;: Refers to the inverse of the value of the 'speech-rate' property. For example, if the speech-rate is 120 words per minute (i.e., a word takes half a second, or 500ms) then a 'pause-before' of 100% means a pause of 500 ms and a 'pause-before' of 20% means 100ms. 

The pause is inserted between the element's content and any 'cue-before' or 'cue-after' content.

Authors should use relative units to create more robust style sheets in the face of large changes in speech-rate.
       </info>
       <insert>pause-before: ;</insert>
    </tag>
 
   <tag name="pitch">
      <description>Specifies the average pitch (a frequency) of the speaking voice. The average pitch of a voice depends on the voice family. For example, the average pitch for a standard male voice is around 120Hz, but for a female voice, it's around 210Hz.</description>
       <attribute name="pitch" title="pitch:" required="1" vallist="1" default="medium">
        <vallist> Hz, kHz,x-low,low,medium,high,x-high,inherit</vallist> &lt;frequency&gt; | x-low | low | medium | high | x-high | inherit
Initial:  	medium
Applies to:  	all elements
Inherited:  	yes
Percentages:  	N/A
       </attribute>
       <dialog title="pitch">pitch: %0;</dialog>
       <info title="pitch">
 Specifies the average pitch (a frequency) of the speaking voice. The average pitch of a voice depends on the voice family. For example, the average pitch for a standard male voice is around 120Hz, but for a female voice, it's around 210Hz.

Values have the following meanings:

&lt;frequency&gt;: Specifies the average pitch of the speaking voice in hertz (Hz). 
x-low, low, medium, high, x-high: These values do not map to absolute frequencies since these values depend on the voice family. User agents should map these values to appropriate frequencies based on the voice family and user environment. However, user agents must map these values in order (i.e., 'x-low' is a lower frequency than 'low', etc.). 
       </info>
       <insert>pitch: ;</insert>
    </tag>
 
   <tag name="pitch-range">
      <description>Specifies variation in average pitch.</description>
       <attribute name="pitch-range" title="pitch-range:" required="1" vallist="1" default="50">
        <vallist>50,inherit</vallist> &lt;number&gt; | inherit
Initial:  	50
Applies to:  	all elements
Inherited:  	yes
Percentages:  	N/A
       </attribute>
       <dialog title="pitch-range">pitch-range: %0;</dialog>
       <info title="pitch-range">
Specifies variation in average pitch. The perceived pitch of a human voice is determined by the fundamental frequency and typically has a value of 120Hz for a male voice and 210Hz for a female voice. Human languages are spoken with varying inflection and pitch; these variations convey additional meaning and emphasis. Thus, a highly animated voice, i.e., one that is heavily inflected, displays a high pitch range. This property specifies the range over which these variations occur, i.e., how much the fundamental frequency may deviate from the average pitch.

Values have the following meanings:

&lt;number&gt;: A value between '0' and '100'. A pitch range of '0' produces a flat, monotonic voice. A pitch range of 50 produces normal inflection. Pitch ranges greater than 50 produce animated voices. 
       </info>
       <insert>pitch-range: ;</insert>
    </tag>
 
   <tag name="play-during">
      <description>Specifies a sound to be played as a background while an element's content is spoken.</description>
       <attribute name="play-during" title="play-during:" required="1" vallist="1" default="auto">
        <vallist>url(),url() mix,url() repeat,url() mix repeat,auto,none,inherit</vallist> &lt;uri&gt; mix? repeat? | auto | none | inherit
Initial:  	auto
Applies to:  	all elements
Inherited:  	no
Percentages:  	N/A
       </attribute>
       <dialog title="play-during">play-during: %0;</dialog>
       <info title="play-during">
Similar to the 'cue-before' and 'cue-after' properties, this property specifies a sound to be played as a background while an element's content is spoken. Values have the following meanings:

&lt;uri&gt;: The sound designated by this &lt;uri&gt; is played as a background while the element's content is spoken. 
mix: When present, this keyword means that the sound inherited from the parent element's 'play-during' property continues to play and the sound designated by the &lt;uri&gt; is mixed with it. If 'mix' is not specified, the element's background sound replaces the parent's. 
repeat: When present, this keyword means that the sound will repeat if it is too short to fill the entire duration of the element. Otherwise, the sound plays once and then stops. This is similar to the 'background-repeat' property. If the sound is too long for the element, it is clipped once the element has been spoken. 
auto: The sound of the parent element continues to play (it is not restarted, which would have been the case if this property had been inherited). 
none: This keyword means that there is silence. The sound of the parent element (if any) is silent during the current element and continues after the current element. 
       </info>
       <insert>play-during: ;</insert>
    </tag>
 
   <tag name="richness">
      <description>Specifies the richness, or brightness, of the speaking voice.</description>
       <attribute name="richness" title="richness:" required="1" vallist="1" default="50">
        <vallist>50,inherit</vallist> &lt;number&gt; | inherit
Initial:  	50
Applies to:  	all elements
Inherited:  	yes
Percentages:  	N/A
       </attribute>
       <dialog title="richness">richness: %0;</dialog>
       <info title="richness">
 Specifies the richness, or brightness, of the speaking voice. A rich voice will "carry" in a large room, a smooth voice will not. (The term "smooth" refers to how the wave form looks when drawn.)

&lt;number&gt;: A value between '0' and '100'. The higher the value, the more the voice will carry. A lower value will produce a soft, mellifluous voice. 
      </info>
       <insert>richness: ;</insert>
    </tag>
 
   <tag name="speak">
      <description>Specifies whether text will be rendered aurally and if so, in what manner (somewhat analogous to the 'display' property).</description>
       <attribute name="speak" title="speak:" required="1" vallist="1" default="normal">
        <vallist>normal,none,spell-out,inherit</vallist>normal | none | spell-out | inherit
Initial:  	normal
Applies to:  	all elements
Inherited:  	yes
Percentages:  	N/A
       </attribute>
       <dialog title="speak">speak: %0;</dialog>
       <info title="speak">
 his property specifies whether text will be rendered aurally and if so, in what manner (somewhat analogous to the 'display' property). The possible values are:

none: Suppresses aural rendering so that the element requires no time to render. Note, however, that descendants may override this value and will be spoken. (To be sure to suppress rendering of an element and its descendants, use the 'display' property). 
normal: Uses language-dependent pronunciation rules for rendering an element and its children. 
spell-out: Spells the text one letter at a time (useful for acronyms and abbreviations). 

Note the difference between an element whose 'volume' property has a value of 'silent' and an element whose 'speak' property has the value 'none'. The former takes up the same time as if it had been spoken, including any pause before and after the element, but no sound is generated. The latter requires no time and is not rendered (though its descendants may be). 
       </info>
       <insert>speak: ;</insert>
    </tag>
 
   <tag name="speak-header">
      <description>Specifies whether table headers are spoken before every cell, or only before a cell when that cell is associated with a different header than the previous cell.</description>
       <attribute name="speak-header" title="speak-header:" required="1" vallist="1" default="once">
        <vallist>once,always,inherit</vallist>once | always | inherit
Initial:  	once
Applies to:  	elements that have table header information
Inherited:  	yes
Percentages:  	N/A
       </attribute>
       <dialog title="speak-header">speak-header: %0;</dialog>
       <info title="speak-header">
This property specifies whether table headers are spoken before every cell, or only before a cell when that cell is associated with a different header than the previous cell. Values have the following meanings:

once: The header is spoken one time, before a series of cells. 
always: The header is spoken before every pertinent cell. 

Each document language may have different mechanisms that allow authors to specify headers. For example, in HTML 4.0 ([HTML40]), it is possible to specify header information with three different attributes ("headers", "scope", and "axis"), and the specification gives an algorithm for determining header information when these attributes have not been specified.
       </info>
       <insert>speak-header: ;</insert>
    </tag>
 
   <tag name="speak-numeral">
      <description>Controls how numerals are spoken.</description>
       <attribute name="speak-numeral" title="speak-numeral:" required="1" vallist="1" default="">
        <vallist>digits,continuous,inherit</vallist>digits | continuous | inherit
Initial:  	continuous
Applies to:  	all elements
Inherited:  	yes
Percentages:  	N/A
       </attribute>
       <dialog title="speak-numeral">speak-numeral: %0;</dialog>
       <info title="speak-numeral">
This property controls how numerals are spoken. Values have the following meanings:

digits: Speak the numeral as individual digits. Thus, "237" is spoken "Two Three Seven". 
continuous: Speak the numeral as a full number. Thus, "237" is spoken "Two hundred thirty seven". Word representations are language-dependent. 
       </info>
       <insert>speak-numeral: ;</insert>
    </tag>
 
   <tag name="speak-punctuation">
      <description>Specifies how punctuation is spoken.</description>
       <attribute name="speak-punctuation" title="speak-punctuation:" required="1" vallist="1" default="">
        <vallist>code,none,inherit</vallist>code | none | inherit
Initial:  	none
Applies to:  	all elements
Inherited:  	yes
Percentages:  	N/A
       </attribute>
       <dialog title="speak-punctuation">speak-punctuation: %0;</dialog>
       <info title="speak-punctuation">
This property specifies how punctuation is spoken. Values have the following meanings:

code: Punctuation such as semicolons, braces, and so on are to be spoken literally. 
none: Punctuation is not to be spoken, but instead rendered naturally as various pauses. 
       </info>
       <insert>speak-punctuation: ;</insert>
    </tag>
 
   <tag name="speech-rate">
      <description>Specifies the speaking rate.</description>
       <attribute name="speech-rate" title="speech-rate:" required="1" vallist="1" default="">
        <vallist>10,x-slow,slow,medium,fast,x-fast,faster,slower,inherit</vallist> &lt;number&gt; | x-slow | slow | medium | fast | x-fast | faster | slower | inherit
Initial:  	medium
Applies to:  	all elements
Inherited:  	yes
Percentages:  	N/A
       </attribute>
       <dialog title="speech-rate">speech-rate: %0;</dialog>
       <info title="speech-rate">
&lt;number&gt;: Specifies the speaking rate in words per minute, a quantity that varies somewhat by language but is nevertheless widely supported by speech synthesizers. 
x-slow: Same as 80 words per minute. 
slow: Same as 120 words per minute 
medium: Same as 180 - 200 words per minute. 
fast: Same as 300 words per minute. 
x-fast: Same as 500 words per minute. 
faster: Adds 40 words per minute to the current speech rate. 
slower: Subtracts 40 words per minutes from the current speech rate.
       </info>
       <insert>speech-rate: ;</insert>
    </tag>
 
   <tag name="stress">
      <description>Specifies the richness, or brightness, of the speaking voice.</description>
       <attribute name="stress" title="stress:" required="1" vallist="1" default="">
        <vallist>50,inherit</vallist> &lt;number&gt; | inherit
Initial:  	50
Applies to:  	all elements
Inherited:  	yes
Percentages:  	N/A
       </attribute>
       <dialog title="stress">stress: %0;</dialog>
       <info title="stress">
Specifies the height of "local peaks" in the intonation contour of a voice. For example, English is a stressed language, and different parts of a sentence are assigned primary, secondary, or tertiary stress. The value of 'stress' controls the amount of inflection that results from these stress markers. This property is a companion to the 'pitch-range' property and is provided to allow developers to exploit higher-end auditory displays.

Values have the following meanings:

&lt;number&gt;: A value, between '0' and '100'. The meaning of values depends on the language being spoken. For example, a level of '50' for a standard, English-speaking male voice (average pitch = 122Hz), speaking with normal intonation and emphasis would have a different meaning than '50' for an Italian voice. 
       </info>
       <insert>stress: ;</insert>
    </tag>
 
   <tag name="voice-familty">
      <description>Comma-separated, prioritized list of voice family names (compare with 'font-family').</description>
       <attribute name="specific-voice" title="specific-voice" required="0" vallist="1" default="">
        <vallist>'',comedian, trinoids, carlos, lani,romeo,juliet</vallist> &lt;specific-voice&gt;
       </attribute>
       <attribute name="generic-voice" title="generic-voice:" required="0" vallist="1" default="">
        <vallist>male,female,child</vallist> &lt;generic-voice&gt;
       </attribute>
       <dialog title="voice-familty">voice-familty: %0 %1;</dialog>
       <info title="voice-familty">
	[[&lt;specific-voice&gt; | &lt;generic-voice&gt; ],]* [&lt;specific-voice&gt; | &lt;generic-voice&gt; ] | inherit
Initial:  	depends on user agent
Applies to:  	all elements
Inherited:  	yes
Percentages:  	N/A
Names of specific voices may be quoted, and indeed must be quoted if any of the words that make up the name does not conform to the syntax rules for identifiers. It is also recommended to quote specific voices with a name consisting of more than one word. If quoting is omitted, any whitespace characters before and after the font name are ignored and any sequence of whitespace characters inside the font name is converted to a single space.
       </info>
       <insert>voice-family: ;</insert>
    </tag>
 
   <tag name="volume">
      <description>Refers to the median volume of the waveform.</description>
       <attribute name="volume" title="volume:" required="1" vallist="1" default="medium">
        <vallist>10, %,silent,x-soft,soft,medium,loud,x-loud,inherit</vallist> &lt;number&gt; | &lt;percentage&gt; | silent | x-soft | soft | medium | loud | x-loud | inherit
Initial:  	medium
Applies to:  	all elements
Inherited:  	yes
Percentages:  	refer to inherited value
       </attribute>
       <dialog title="volume">volume: %0;</dialog>
       <info title="volume">
Volume refers to the median volume of the waveform. In other words, a highly inflected voice at a volume of 50 might peak well above that. The overall values are likely to be human adjustable for comfort, for example with a physical volume control (which would increase both the 0 and 100 values proportionately); what this property does is adjust the dynamic range.

Values have the following meanings:

&lt;number&gt;: Any number between '0' and '100'. '0' represents the minimum audible volume level and 100 corresponds to the maximum comfortable level. 
&lt;percentage&gt;: Percentage values are calculated relative to the inherited value, and are then clipped to the range '0' to '100'. 
silent: No sound at all. The value '0' does not mean the same as 'silent'. 
x-soft: Same as '0'. 
soft: Same as '25'. 
medium: Same as '50'. 
loud: Same as '75'. 
x-loud: Same as '100'.
see  http://www.w3.org/TR/REC-CSS2/aural.html#propdef-volume
       </info>
       <insert>volume: ;</insert>
    </tag>
  </group>

  <tag name="Paged: see Visual">
  </tag>

  <tag name="Interactive: see Visual">
  </tag>

</ref>
