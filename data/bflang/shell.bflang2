<?xml version="1.0"?>
<!--
		Bluefish HTML Editor
		shell.bflang2 $Revision$
 
		Copyright (C) 2008-2010 Olivier Sessink

	    This program is free software: you can redistribute it and/or modify
		it under the terms of the GNU General Public License as published by
		the Free Software Foundation, either version 3 of the License, or
		(at your option) any later version.

		This program is distributed in the hope that it will be useful,
		but WITHOUT ANY WARRANTY; without even the implied warranty of
		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
		GNU General Public License for more details.

		You should have received a copy of the GNU General Public License
		along with this program.  If not, see <http://www.gnu.org/licenses/>.		
-->

<bflang name="Shell" version="2.0" table="291" contexts="4" matches="86" >
<header>
	<mime type="application/x-shellscript"/>
	<mime type="text/x-shellscript"/>
	<mime type="text/x-sh"/>
	<option name="show_in_menu" default="1"/>
	<highlight name="brackets" style="brackets"  />
	<highlight name="comment" style="comment"  />
	<highlight name="function" style="function"  />
	<highlight name="keyword" style="keyword"  />
	<highlight name="string" style="string"   />
	<highlight name="tag" style="tag"  />
	<highlight name="value" style="value"  />
	<highlight name="variable" style="variable"  />
</header>
<properties>
	<comment type="line" start="#" />
</properties>

<definition>
<context symbols=" $;(){}[]:\&#34;\\',&gt;&lt;*&amp;^%!+=-|/?#&#9;&#10;&#13;">
<element pattern="[0-9.]+" is_regex="1" highlight="value"/>
<element pattern="\$+[!@?*#\${a-zA-Z0-9_][}a-zA-Z0-9_]*" is_regex="1" case_insens="1" highlight="variable"/>

<group autocomplete="1" highlight="function">
	<element pattern="alias" />
   <element pattern="bg" />
   <element pattern="bind" />
   <element pattern="break" />
   <element pattern="builtin" />
   <element pattern="caller" />
   <element pattern="cd" />
   <element pattern="command" />
   <element pattern="compgen" />
   <element pattern="complete" />
   <element pattern="compopt" />
   <element pattern="continue" />
   <element pattern="declare" />
   <element pattern="dirs" />
   <element pattern="disown" />
   <element pattern="do" />
   <element pattern="done" />
   <element pattern="echo" />
   <element pattern="elif" />
   <element pattern="else" />
   <element pattern="enable" />
   <element pattern="eval" />
   <element pattern="exec" />
   <element pattern="exit" />
   <element pattern="export" />
   <element pattern="fc" />
   <element pattern="fg" />
   <element pattern="fi" />
   <element pattern="for" />
   <element pattern="function" />
   <element pattern="getopts" />
   <element pattern="hash" />
   <element pattern="help" />
   <element pattern="history" />
   <element pattern="if" />
   <element pattern="in" />
   <element pattern="jobs" />
   <element pattern="kill" />
   <element pattern="let" />
   <element pattern="local" />
   <element pattern="logout" />
   <element pattern="mapfile" />
   <element pattern="popd" />
   <element pattern="printf" />
   <element pattern="pushd" />
   <element pattern="pwd" />
   <element pattern="read" />
   <element pattern="readarray" />
   <element pattern="readonly" />
   <element pattern="return" />
	<element pattern="select" />
   <element pattern="set" />
   <element pattern="shift" />
   <element pattern="shopt" />
   <element pattern="source" />
   <element pattern="suspend" />
   <element pattern="test" />
   <element pattern="then" />
   <element pattern="times" />
   <element pattern="trap" />
   <element pattern="type" />
   <element pattern="typeset" />
   <element pattern="ulimit" />
   <element pattern="umask" />
   <element pattern="unalias" />
   <element pattern="unset" />
	<element pattern="until" />
   <element pattern="wait" />
   <element pattern="while" />
</group>

<element id="e.lbrace" pattern="{" starts_block="1" mayfold="1" highlight="brackets" />
<element pattern="}" ends_block="1" blockstartelement="e.lbrace" highlight="brackets" />
<element id="e.lbracket" pattern="[" starts_block="1" mayfold="1" highlight="brackets" />
<element pattern="]" ends_block="1" blockstartelement="e.lbracket" highlight="brackets" />
<element id="e.lparen" pattern="(" starts_block="1" mayfold="1" highlight="brackets" />
<element pattern=")" ends_block="1" blockstartelement="e.lparen" highlight="brackets" />

<element pattern="#" highlight="comment">
<context symbols="&#10;&#13;" highlight="comment">
	<element pattern="&#10;" highlight="comment" ends_context="1"/>
	<element pattern="&#13;" highlight="comment" ends_context="1"/>
</context>
</element>
<element pattern="'[^']*'" is_regex="1" highlight="string"/>
<element pattern="&quot;" highlight="string">
<context symbols="\&quot;${}" highlight="string">
	<element pattern="\\." is_regex="1" highlight="tag" />
	<element pattern="\$+[!@?*#\${a-zA-Z0-9_][}a-zA-Z0-9_]*" is_regex="1" case_insens="1" highlight="variable"/>
	<element pattern="&quot;" highlight="string" ends_context="1"/>
</context>
</element>
</context>
</definition>
</bflang>
