<?xml version="1.0" encoding="utf-8"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0"
         xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
         xmlns:rng="http://relaxng.org/ns/structure/1.0"
         datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
         ns="http://bluefish.openoffice.nl/ns/bflang/2.0">

	<a:documentation>RELAX NG flat schema for Bluefish Language Files (bflang) containing syntax highlighting and autocompletion information for the bluefish <a href="http://bluefish.openoffice.nl">Bluefish</a> editor.</a:documentation>

	<start>
		<element name="bflang">
			<a:documentation>The root tag of a bflang2 file.</a:documentation>
			<attribute name="name">
				<a:documentation>A human readable name of the language that is defined. E.g. C, C++, JavaScript,...</a:documentation>
				<data type="normalizedString"/>
			</attribute>
			<optional>
				<group>
					<attribute name="contexts">
						<a:documentation>context metadata. As illustration: contexts="100" (4.69 Kbytes)</a:documentation>
						<data type="positiveInteger"/>
					</attribute>
					<attribute name="matches">
						<a:documentation>element/tag metadata. As illustration: matches="1752" (123.19 Kbytes)</a:documentation>
						<data type="positiveInteger"/>
					</attribute>
					<attribute name="table">
						<a:documentation>DFA tables, compiled patterns for each contex. As illustration: table="7906" (1976.50 Kbytes)</a:documentation>
						<data type="positiveInteger"/>
					</attribute>
				</group>
			</optional>
			<element name="header">
				<oneOrMore>
					<element name="mime">
						<attribute name="type">
							<data type="token"/>
						</attribute>
						<empty/>
					</element><!-- mime -->
				</oneOrMore>
				<zeroOrMore>
					<choice>
						<element name="option">
							<attribute name="name">
								<a:documentation></a:documentation>
								<data type="ID"/>
							</attribute>
							<attribute name="default">
								<a:documentation></a:documentation>
								<data type="boolean"/>
							</attribute>
							<optional>
								<attribute name="description">
									<a:documentation></a:documentation>
									<data type="string"/>
								</attribute>
							</optional>
							<empty/>
						</element><!-- option -->
						<element name="highlight">
							<attribute name="name">
								<data type="ID"/>
								<a:documentation></a:documentation>
							</attribute>
							<attribute name="style">
								<a:documentation></a:documentation>
								<choice>
									<value type="token">attribute</value>
									<a:documentation></a:documentation>
									<value type="token">brackets</value>
									<a:documentation></a:documentation>
									<value type="token">comment</value>
									<a:documentation></a:documentation>
									<value type="token">function</value>
									<value type="token">keyword</value>
									<value type="token">operator</value>
									<value type="token">preprocessor</value>
									<value type="token">special-attribute</value>
									<value type="token">special-function</value>
									<value type="token">special-keyword</value>
									<value type="token">special-tag</value>
									<value type="token">special-tag2</value>
									<value type="token">special-tag3</value>
									<value type="token">special-type</value>
									<value type="token">special-value</value>
									<value type="token">string</value>
									<value type="token">tag</value>
									<value type="token">type</value>
									<value type="token">value</value>
									<value type="token">variable</value>
									<value type="token">warning</value>
								</choice>
							</attribute>
							<empty/>
						</element><!-- highlight -->
					</choice>
				</zeroOrMore>
				<empty/>
			</element><!-- header -->
			<optional>
				<element name="properties">
					<oneOrMore>
						<choice>
							<element name="comment">
								<attribute name="id">
									<data type="ID"/>
								</attribute>
								<attribute name="type">
									<choice>
										<value type="token">block</value>
										<value type="token">line</value>
									</choice>
								</attribute>
								<group>
									<attribute name="start">
										<data type="string"/>
									</attribute>
									<optional>
										<attribute name="end">
											<data type="string"/>
										</attribute>
									</optional>
								</group>
								<empty/>
							</element><!-- comment -->
							<element name="smartindent">
								<attribute name="characters">
									<data type="string"/>
								</attribute>
								<empty/>
							</element><!-- smartindent -->
							<element name="default_spellcheck">
								<attribute name="enabled" a:defaultValue="1">
									<data type="boolean"/>
								</attribute>
								<empty/>
							</element><!-- default_spellcheck -->
						</choice>
					</oneOrMore>
					<empty/>
				</element><!-- properties -->
			</optional>
			<element name="definition">
				<oneOrMore>
					<ref name="element.context"/>
				</oneOrMore>
			</element><!-- definition -->
			<empty/>
		</element><!-- bflang -->
	</start>

	<define name="element.context">
		<element name="context">
			<choice>
				<group>
					<attribute name="symbols">
						<data type="string"/>
					</attribute>
					<optional>
						<attribute name="highlight">
							<data type="IDREF"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="id">
							<data type="ID"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="spellcheck" a:defaultValue="0">
							<data type="boolean"/>
						</attribute>
					</optional>
				</group>
				<attribute name="idref">
					<data type="IDREF"/>
				</attribute>
			</choice>
			<zeroOrMore>
				<choice>
					<ref name="element.element"/>
					<ref name="element.group"/>
					<ref name="element.tag"/>
				</choice>
			</zeroOrMore>
			<empty/>
		</element><!-- context -->
	</define>

	<define name="element.element">
		<element name="element">
			<choice>
				<group>
					<attribute name="pattern">
						<data type="string"/>
					</attribute>
					<ref name="autocomplete.element"/>
					<ref name="autocomplete.extended"/>
					<optional>
						<choice>
							<attribute name="starts_block">
								<data type="boolean"/>
							</attribute>
							<group>
								<attribute name="blockstartelement">
									<data type="IDREF"/>
								</attribute>
								<attribute name="ends_block" a:defaultValue="0">
									<data type="boolean"/>
								</attribute>
							</group>
						</choice>
					</optional>
					<optional>
						<attribute name="case_insens" a:defaultValue="0">
							<data type="boolean"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="ends_context" a:defaultValue="0">
							<data type="boolean"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="highlight">
							<data type="IDREF"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="id">
							<data type="ID"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="is_regex" a:defaultValue="0">
							<data type="boolean"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="mayfold">
							<data type="boolean" a:defaultValue="0"/>
						</attribute>
					</optional>
				</group>
				<attribute name="idref">
					<data type="IDREF"/>
				</attribute>
			</choice>
			<zeroOrMore>
				<choice>
					<ref name="element.context"/>
					<ref name="element.element"/>
					<ref name="element.group"/>
					<ref name="element.reference"/>
				</choice>
			</zeroOrMore>
			<empty/>
		</element><!-- element -->
	</define>

	<define name="element.group">
		<element name="group">
			<ref name="autocomplete.attribute"/>
			<ref name="autocomplete.element"/>
			<ref name="autocomplete.extended"/>
			<optional>
				<attribute name="attribhighlight">
					<data type="IDREF"/>
				</attribute>
			</optional>
			<optional>
				<attribute name="case_insens" a:defaultValue="0">
					<data type="boolean"/>
				</attribute>
			</optional>
			<optional>
				<choice>
					<attribute name="class">
						<data type="IDREF"/>
					</attribute>
					<attribute name="notclass">
						<data type="IDREF"/>
					</attribute>
				</choice>
			</optional>
			<optional>
				<attribute name="highlight">
					<data type="IDREF"/>
				</attribute>
			</optional>
			<optional>
				<attribute name="is_regex" a:defaultValue="0">
					<data type="boolean"/>
				</attribute>
			</optional>
			<zeroOrMore>
				<choice>
					<ref name="element.element"/>
					<ref name="element.group"/>
					<ref name="element.tag"/>
				</choice>
			</zeroOrMore>
			<empty/>
		</element><!-- group -->
	</define>

	<define name="element.tag">
		<element name="tag">
			<choice>
				<group>
					<attribute name="name">
						<data type="token"/>
					</attribute>
					<ref name="autocomplete.attribute"/>
					<ref name="autocomplete.element"/>
					<ref name="autocomplete.extended"/>
					<optional>
						<attribute name="attributes">
							<data type="string"/><!-- TODO: more like a list with commata? -->
						</attribute>
						<optional>
							<attribute name="attribhighlight">
								<data type="IDREF"/>
							</attribute>
						</optional>
					</optional>
					<optional>
						<attribute name="case_insens" a:defaultValue="0">
							<data type="boolean"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="highlight">
							<data type="IDREF"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="id">
							<data type="ID"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="no_close" a:defaultValue="0">
							<data type="boolean"/>
						</attribute>
					</optional>
					<optional>
						<attribute name="sgml_shorttag" a:defaultValue="0">
							<data type="boolean"/>
						</attribute>
					</optional>
				</group>
				<attribute name="idref">
					<data type="IDREF"/>
				</attribute>
			</choice>
			<zeroOrMore>
				<choice>
					<ref name="element.context"/>
					<ref name="element.group"/>
					<ref name="element.reference"/>
					<ref name="element.tag"/>
				</choice>
			</zeroOrMore>
			<empty/>
		</element><!-- tag -->
	</define>

	<define name="element.reference">
		<element name="reference">
			<zeroOrMore>
				<choice>
					<text/>
					<element name="b">
						<text/>
					</element>
					<element name="i">
						<text/>
					</element>
				</choice>
			</zeroOrMore>
			<empty/>
		</element><!-- reference -->
	</define>

	<define name="autocomplete.element">
		<optional>
			<attribute name="autocomplete" a:defaultValue="0">
				<data type="boolean"/>
			</attribute>
		</optional>
		<optional>
			<attribute name="autocomplete_append">
				<data type="string"/>
			</attribute>
		</optional>
	</define>

	<define name="autocomplete.attribute">
		<optional>
			<attribute name="attrib_autocomplete" a:defaultValue="0">
				<data type="boolean"/>
			</attribute>
		</optional>
		<optional>
			<attribute name="attrib_autocomplete_append">
				<data type="string"/>
			</attribute>
		</optional>
	</define>

	<define name="autocomplete.extended">
		<optional>
			<attribute name="autocomplete_string">
				<data type="string"/>
			</attribute>
		</optional>
		<optional>
			<attribute name="autocomplete_backup_cursor">
				<data type="positiveInteger"/>
			</attribute>
		</optional>
	</define>

</grammar>
