<ref name="PHP" description="Complete reference for PHP 4.3">
<group name="apache">
<function name="apache_child_terminate">
<description>Terminate apache process after this request</description>
<return type="bool">bool</return>
<insert>apache_child_terminate();</insert>
<dialog title="Insert apache_child_terminate">apache_child_terminate();</dialog>
<info title="Info window"></info>
</function>
<function name="apache_lookup_uri">
<description>
     Perform a partial request for the specified URI and return all
     info about it
    </description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="object">object</return>
<insert>apache_lookup_uri(string filename);</insert>
<dialog title="Insert apache_lookup_uri">apache_lookup_uri(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="apache_note">
<description>Get and set apache request notes</description>
<param name="note_name" required="1" vallist="0" default="" type="string">note_name</param>
<param name="note_value" required="0" vallist="0" default="" type="string">note_value</param>
<return type="string">string</return>
<insert>apache_note(string note_name [,string note_value]);</insert>
<dialog title="Insert apache_note">apache_note(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="apache_request_headers">
<description>Fetch all HTTP request headers</description>
<return type="array">array</return>
<insert>apache_request_headers();</insert>
<dialog title="Insert apache_request_headers">apache_request_headers();</dialog>
<info title="Info window"></info>
</function>
<function name="apache_response_headers">
<description>
     Fetch all HTTP response headers
    </description>
<return type="array">array</return>
<insert>apache_response_headers();</insert>
<dialog title="Insert apache_response_headers">apache_response_headers();</dialog>
<info title="Info window"></info>
</function>
<function name="apache_setenv">
<description>Set an Apache subprocess_env variable</description>
<param name="variable" required="1" vallist="0" default="" type="string">variable</param>
<param name="value" required="1" vallist="0" default="" type="string">value</param>
<param name="walk_to_top" required="0" vallist="0" default="" type="bool">walk_to_top</param>
<return type="int">int</return>
<insert>apache_setenv(string variable, string value [,bool walk_to_top]);</insert>
<dialog title="Insert apache_setenv">apache_setenv(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ascii2ebcdic">
<description>Translate string from ASCII to EBCDIC</description>
<param name="ascii_str" required="1" vallist="0" default="" type="string">ascii_str</param>
<return type="int">int</return>
<insert>ascii2ebcdic(string ascii_str);</insert>
<dialog title="Insert ascii2ebcdic">ascii2ebcdic(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ebcdic2ascii">
<description>Translate string from EBCDIC to ASCII</description>
<param name="ebcdic_str" required="1" vallist="0" default="" type="string">ebcdic_str</param>
<return type="int">int</return>
<insert>ebcdic2ascii(string ebcdic_str);</insert>
<dialog title="Insert ebcdic2ascii">ebcdic2ascii(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="getallheaders">
<description>Fetch all HTTP request headers</description>
<return type="array">array</return>
<insert>getallheaders();</insert>
<dialog title="Insert getallheaders">getallheaders();</dialog>
<info title="Info window"></info>
</function>
<function name="virtual">
<description>Perform an Apache sub-request</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="int">int</return>
<insert>virtual(string filename);</insert>
<dialog title="Insert virtual">virtual(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="array">
<function name="array_change_key_case">
<description>Returns an array with all string keys lowercased or uppercased</description>
<param name="input" required="1" vallist="0" default="" type="array">input</param>
<param name="case" required="0" vallist="0" default="" type="int">case</param>
<return type="array">array</return>
<insert>array_change_key_case(array input [,int case]);</insert>
<dialog title="Insert array_change_key_case">array_change_key_case(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="array_chunk">
<description>Split an array into chunks</description>
<param name="input" required="1" vallist="0" default="" type="array">input</param>
<param name="size" required="1" vallist="0" default="" type="int">size</param>
<param name="preserve_keys" required="0" vallist="0" default="" type="bool">preserve_keys</param>
<return type="array">array</return>
<insert>array_chunk(array input, int size [,bool preserve_keys]);</insert>
<dialog title="Insert array_chunk">array_chunk(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="array_count_values">
<description>Counts all the values of an array</description>
<param name="input" required="1" vallist="0" default="" type="array">input</param>
<return type="array">array</return>
<insert>array_count_values(array input);</insert>
<dialog title="Insert array_count_values">array_count_values(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="array_diff_assoc">
<description>Computes the difference of arrays with additional index check</description>
<param name="array1" required="1" vallist="0" default="" type="array">array1</param>
<param name="array2" required="1" vallist="0" default="" type="array">array2</param>
<param name=" ..." required="0" vallist="0" default="" type="array"> ...</param>
<return type="array">array</return>
<insert>array_diff_assoc(array array1, array array2 [,array  ...]);</insert>
<dialog title="Insert array_diff_assoc">array_diff_assoc(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="array_diff">
<description>Computes the difference of arrays</description>
<param name="array1" required="1" vallist="0" default="" type="array">array1</param>
<param name="array2" required="1" vallist="0" default="" type="array">array2</param>
<param name=" ..." required="0" vallist="0" default="" type="array"> ...</param>
<return type="array">array</return>
<insert>array_diff(array array1, array array2 [,array  ...]);</insert>
<dialog title="Insert array_diff">array_diff(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="array_fill">
<description>Fill an array with values</description>
<param name="start_index" required="1" vallist="0" default="" type="int">start_index</param>
<param name="num" required="1" vallist="0" default="" type="int">num</param>
<param name="value" required="1" vallist="0" default="" type="mixed">value</param>
<return type="array">array</return>
<insert>array_fill(int start_index, int num, mixed value);</insert>
<dialog title="Insert array_fill">array_fill(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="array_filter">
<description>
     Filters elements of an array using a callback function
    </description>
<param name="input" required="1" vallist="0" default="" type="array">input</param>
<param name="function" required="0" vallist="0" default="" type="callback">function</param>
<return type="array">array</return>
<insert>array_filter(array input [,callback function]);</insert>
<dialog title="Insert array_filter">array_filter(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="array_flip">
<description>Exchanges all keys with their associated values in an array</description>
<param name="trans" required="1" vallist="0" default="" type="array">trans</param>
<return type="array">array</return>
<insert>array_flip(array trans);</insert>
<dialog title="Insert array_flip">array_flip(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="array_intersect_assoc">
<description>Computes the intersection of arrays with additional index check</description>
<param name="array1" required="1" vallist="0" default="" type="array">array1</param>
<param name="array2" required="1" vallist="0" default="" type="array">array2</param>
<param name=" ..." required="0" vallist="0" default="" type="array"> ...</param>
<return type="array">array</return>
<insert>array_intersect_assoc(array array1, array array2 [,array  ...]);</insert>
<dialog title="Insert array_intersect_assoc">array_intersect_assoc(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="array_intersect">
<description>Computes the intersection of arrays</description>
<param name="array1" required="1" vallist="0" default="" type="array">array1</param>
<param name="array2" required="1" vallist="0" default="" type="array">array2</param>
<param name=" ..." required="0" vallist="0" default="" type="array"> ...</param>
<return type="array">array</return>
<insert>array_intersect(array array1, array array2 [,array  ...]);</insert>
<dialog title="Insert array_intersect">array_intersect(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="array_key_exists">
<description>Checks if the given key or index exists in the array</description>
<param name="key" required="1" vallist="0" default="" type="mixed">key</param>
<param name="search" required="1" vallist="0" default="" type="array">search</param>
<return type="bool">bool</return>
<insert>array_key_exists(mixed key, array search);</insert>
<dialog title="Insert array_key_exists">array_key_exists(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="array_keys">
<description>Return all the keys of an array</description>
<param name="input" required="1" vallist="0" default="" type="array">input</param>
<param name="
        search_value
       " required="0" vallist="0" default="" type="mixed">
        search_value
       </param>
<return type="array">array</return>
<insert>array_keys(array input [,mixed 
        search_value
       ]);</insert>
<dialog title="Insert array_keys">array_keys(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="array_map">
<description>
     Applies the callback to the elements of the given arrays
    </description>
<param name="callback" required="1" vallist="0" default="" type="mixed">callback</param>
<param name="arr1" required="1" vallist="0" default="" type="array">arr1</param>
<param name="..." required="0" vallist="0" default="" type="array">...</param>
<return type="array">array</return>
<insert>array_map(mixed callback, array arr1 [,array ...]);</insert>
<dialog title="Insert array_map">array_map(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="array_merge_recursive">
<description>Merge two or more arrays recursively</description>
<param name="array1" required="1" vallist="0" default="" type="array">array1</param>
<param name="array2" required="1" vallist="0" default="" type="array">array2</param>
<param name="..." required="0" vallist="0" default="" type="array">...</param>
<return type="array">array</return>
<insert>array_merge_recursive(array array1, array array2 [,array ...]);</insert>
<dialog title="Insert array_merge_recursive">array_merge_recursive(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="array_merge">
<description>Merge two or more arrays</description>
<param name="array1" required="1" vallist="0" default="" type="array">array1</param>
<param name="array2" required="1" vallist="0" default="" type="array">array2</param>
<param name="..." required="0" vallist="0" default="" type="array">...</param>
<return type="array">array</return>
<insert>array_merge(array array1, array array2 [,array ...]);</insert>
<dialog title="Insert array_merge">array_merge(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="array_multisort">
<description>Sort multiple or multi-dimensional arrays</description>
<param name="ar1" required="1" vallist="0" default="" type="array">ar1</param>
<param name="arg" required="0" vallist="0" default="" type="mixed">arg</param>
<param name="..." required="0" vallist="0" default="" type="mixed">...</param>
<param name="..." required="0" vallist="0" default="" type="array">...</param>
<return type="bool">bool</return>
<insert>array_multisort(array ar1 [,mixed arg] [,mixed ...] [,array ...]);</insert>
<dialog title="Insert array_multisort">array_multisort(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="array_pad">
<description>
     Pad array to the specified length with a value
    </description>
<param name="input" required="1" vallist="0" default="" type="array">input</param>
<param name="pad_size" required="1" vallist="0" default="" type="int">pad_size</param>
<param name="pad_value" required="1" vallist="0" default="" type="mixed">pad_value</param>
<return type="array">array</return>
<insert>array_pad(array input, int pad_size, mixed pad_value);</insert>
<dialog title="Insert array_pad">array_pad(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="array_pop">
<description>Pop the element off the end of array</description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<return type="mixed">mixed</return>
<insert>array_pop(array array);</insert>
<dialog title="Insert array_pop">array_pop(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="array_push">
<description>
     Push one or more elements onto the end of array
    </description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<param name="var" required="1" vallist="0" default="" type="mixed">var</param>
<param name="..." required="0" vallist="0" default="" type="mixed">...</param>
<return type="int">int</return>
<insert>array_push(array array, mixed var [,mixed ...]);</insert>
<dialog title="Insert array_push">array_push(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="array_rand">
<description>
     Pick one or more random entries out of an array
    </description>
<param name="input" required="1" vallist="0" default="" type="array">input</param>
<param name="num_req" required="0" vallist="0" default="" type="int">num_req</param>
<return type="mixed">mixed</return>
<insert>array_rand(array input [,int num_req]);</insert>
<dialog title="Insert array_rand">array_rand(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="array_reduce">
<description>
     Iteratively reduce the array to a single value using a callback
     function
    </description>
<param name="input" required="1" vallist="0" default="" type="array">input</param>
<param name="function" required="1" vallist="0" default="" type="callback">function</param>
<param name="initial" required="0" vallist="0" default="" type="int">initial</param>
<return type="mixed">mixed</return>
<insert>array_reduce(array input, callback function [,int initial]);</insert>
<dialog title="Insert array_reduce">array_reduce(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="array_reverse">
<description>
     Return an array with elements in reverse order
    </description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<param name="preserve_keys" required="0" vallist="0" default="" type="bool">preserve_keys</param>
<return type="array">array</return>
<insert>array_reverse(array array [,bool preserve_keys]);</insert>
<dialog title="Insert array_reverse">array_reverse(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="array_search">
<description>
     Searches the array for a given value and returns the
     corresponding key if successful
    </description>
<param name="needle" required="1" vallist="0" default="" type="mixed">needle</param>
<param name="haystack" required="1" vallist="0" default="" type="array">haystack</param>
<param name="strict" required="0" vallist="0" default="" type="bool">strict</param>
<return type="mixed">mixed</return>
<insert>array_search(mixed needle, array haystack [,bool strict]);</insert>
<dialog title="Insert array_search">array_search(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="array_shift">
<description>
     Shift an element off the beginning of array
    </description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<return type="mixed">mixed</return>
<insert>array_shift(array array);</insert>
<dialog title="Insert array_shift">array_shift(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="array_slice">
<description>Extract a slice of the array</description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<param name="offset" required="1" vallist="0" default="" type="int">offset</param>
<param name="
        length
       " required="0" vallist="0" default="" type="int">
        length
       </param>
<return type="array">array</return>
<insert>array_slice(array array, int offset [,int 
        length
       ]);</insert>
<dialog title="Insert array_slice">array_slice(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="array_splice">
<description>
     Remove a portion of the array and replace it with something
     else
    </description>
<param name="input" required="1" vallist="0" default="" type="array">input</param>
<param name="offset" required="1" vallist="0" default="" type="int">offset</param>
<param name="length" required="0" vallist="0" default="" type="int">length</param>
<param name="
        replacement
       " required="0" vallist="0" default="" type="array">
        replacement
       </param>
<return type="array">array</return>
<insert>array_splice(array input, int offset [,int length] [,array 
        replacement
       ]);</insert>
<dialog title="Insert array_splice">array_splice(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="array_sum">
<description>
     Calculate the sum of values in an array.
    </description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<return type="mixed">mixed</return>
<insert>array_sum(array array);</insert>
<dialog title="Insert array_sum">array_sum(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="array_unique">
<description>Removes duplicate values from an array</description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<return type="array">array</return>
<insert>array_unique(array array);</insert>
<dialog title="Insert array_unique">array_unique(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="array_unshift">
<description>
     Prepend one or more elements to the beginning of array
    </description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<param name="var" required="1" vallist="0" default="" type="mixed">var</param>
<param name="
        ...
       " required="0" vallist="0" default="" type="mixed">
        ...
       </param>
<return type="int">int</return>
<insert>array_unshift(array array, mixed var [,mixed 
        ...
       ]);</insert>
<dialog title="Insert array_unshift">array_unshift(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="array_values">
<description>Return all the values of an array</description>
<param name="input" required="1" vallist="0" default="" type="array">input</param>
<return type="array">array</return>
<insert>array_values(array input);</insert>
<dialog title="Insert array_values">array_values(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="array_walk">
<description>
     Apply a user function to every member of an array
    </description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<param name="function" required="1" vallist="0" default="" type="callback">function</param>
<param name="userdata" required="0" vallist="0" default="" type="mixed">userdata</param>
<return type="int">int</return>
<insert>array_walk(array array, callback function [,mixed userdata]);</insert>
<dialog title="Insert array_walk">array_walk(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="array">
<description>
     Create an array
    </description>
<param name="..." required="0" vallist="0" default="" type="mixed">...</param>
<return type="array">array</return>
<insert>array([mixed ...]);</insert>
<dialog title="Insert array">array(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="arsort">
<description>
     Sort an array in reverse order and maintain index association
    </description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<param name="sort_flags" required="0" vallist="0" default="" type="int">sort_flags</param>
<return type="void">void</return>
<insert>arsort(array array [,int sort_flags]);</insert>
<dialog title="Insert arsort">arsort(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="asort">
<description>Sort an array and maintain index association</description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<param name="sort_flags" required="0" vallist="0" default="" type="int">sort_flags</param>
<return type="void">void</return>
<insert>asort(array array [,int sort_flags]);</insert>
<dialog title="Insert asort">asort(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="compact">
<description>
     Create array containing variables and their values
    </description>
<param name="varname" required="1" vallist="0" default="" type="mixed">varname</param>
<param name="..." required="0" vallist="0" default="" type="mixed">...</param>
<return type="array">array</return>
<insert>compact(mixed varname [,mixed ...]);</insert>
<dialog title="Insert compact">compact(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="count">
<description>Count elements in a variable</description>
<param name="var" required="1" vallist="0" default="" type="mixed">var</param>
<return type="int">int</return>
<insert>count(mixed var);</insert>
<dialog title="Insert count">count(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="current">
<description>Return the current element in an array</description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<return type="mixed">mixed</return>
<insert>current(array array);</insert>
<dialog title="Insert current">current(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="each">
<description>
     Return the current key and value pair from an array and advance
     the array cursor
    </description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<return type="array">array</return>
<insert>each(array array);</insert>
<dialog title="Insert each">each(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="end">
<description>
     Set the internal pointer of an array to its last element
    </description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<return type="mixed">mixed</return>
<insert>end(array array);</insert>
<dialog title="Insert end">end(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="extract">
<description>
     Import variables into the current symbol table from an array
    </description>
<param name="var_array" required="1" vallist="0" default="" type="array">var_array</param>
<param name="extract_type" required="0" vallist="0" default="" type="int">extract_type</param>
<param name="prefix" required="0" vallist="0" default="" type="string">prefix</param>
<return type="int">int</return>
<insert>extract(array var_array [,int extract_type] [,string prefix]);</insert>
<dialog title="Insert extract">extract(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="in_array">
<description>Return </description>
<param name="needle" required="1" vallist="0" default="" type="mixed">needle</param>
<param name="haystack" required="1" vallist="0" default="" type="array">haystack</param>
<param name="strict" required="0" vallist="0" default="" type="bool">strict</param>
<return type="bool">bool</return>
<insert>in_array(mixed needle, array haystack [,bool strict]);</insert>
<dialog title="Insert in_array">in_array(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="key">
<description>Fetch a key from an associative array</description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<return type="mixed">mixed</return>
<insert>key(array array);</insert>
<dialog title="Insert key">key(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="krsort">
<description>Sort an array by key in reverse order</description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<param name="sort_flags" required="0" vallist="0" default="" type="int">sort_flags</param>
<return type="int">int</return>
<insert>krsort(array array [,int sort_flags]);</insert>
<dialog title="Insert krsort">krsort(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ksort">
<description>Sort an array by key</description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<param name="sort_flags" required="0" vallist="0" default="" type="int">sort_flags</param>
<return type="int">int</return>
<insert>ksort(array array [,int sort_flags]);</insert>
<dialog title="Insert ksort">ksort(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="list">
<description>
     Assign variables as if they were an array
    </description>
<param name="..." required="1" vallist="0" default="" type="mixed">...</param>
<return type="void">void</return>
<insert>list(mixed ...);</insert>
<dialog title="Insert list">list(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="natcasesort">
<description>
     Sort an array using a case insensitive "natural order" algorithm
    </description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<return type="void">void</return>
<insert>natcasesort(array array);</insert>
<dialog title="Insert natcasesort">natcasesort(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="natsort">
<description>
     Sort an array using a "natural order" algorithm
    </description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<return type="void">void</return>
<insert>natsort(array array);</insert>
<dialog title="Insert natsort">natsort(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="next">
<description>
     Advance the internal array pointer of an array
    </description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<return type="mixed">mixed</return>
<insert>next(array array);</insert>
<dialog title="Insert next">next(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pos">
<description>Get the current element from an array</description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<return type="mixed">mixed</return>
<insert>pos(array array);</insert>
<dialog title="Insert pos">pos(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="prev">
<description>Rewind the internal array pointer</description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<return type="mixed">mixed</return>
<insert>prev(array array);</insert>
<dialog title="Insert prev">prev(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="range">
<description>
     Create an array containing a range of elements
    </description>
<param name="low" required="1" vallist="0" default="" type="int">low</param>
<param name="high" required="1" vallist="0" default="" type="int">high</param>
<param name="step" required="0" vallist="0" default="" type="int">step</param>
<return type="array">array</return>
<insert>range(int low, int high [,int step]);</insert>
<dialog title="Insert range">range(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="reset">
<description>
     Set the internal pointer of an array to its first element
    </description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<return type="mixed">mixed</return>
<insert>reset(array array);</insert>
<dialog title="Insert reset">reset(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="rsort">
<description>Sort an array in reverse order</description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<param name="sort_flags" required="0" vallist="0" default="" type="int">sort_flags</param>
<return type="void">void</return>
<insert>rsort(array array [,int sort_flags]);</insert>
<dialog title="Insert rsort">rsort(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="shuffle">
<description>Shuffle an array</description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<return type="void">void</return>
<insert>shuffle(array array);</insert>
<dialog title="Insert shuffle">shuffle(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sort">
<description>Sort an array</description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<param name="sort_flags" required="0" vallist="0" default="" type="int">sort_flags</param>
<return type="void">void</return>
<insert>sort(array array [,int sort_flags]);</insert>
<dialog title="Insert sort">sort(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="uasort">
<description>
     Sort an array with a user-defined comparison function and
     maintain index association
    </description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<param name="cmp_function" required="1" vallist="0" default="" type="callback">cmp_function</param>
<return type="void">void</return>
<insert>uasort(array array, callback cmp_function);</insert>
<dialog title="Insert uasort">uasort(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="uksort">
<description>
     Sort an array by keys using a user-defined comparison function
    </description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<param name="cmp_function" required="1" vallist="0" default="" type="callback">cmp_function</param>
<return type="void">void</return>
<insert>uksort(array array, callback cmp_function);</insert>
<dialog title="Insert uksort">uksort(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="usort">
<description>
     Sort an array by values using a user-defined comparison function
    </description>
<param name="array" required="1" vallist="0" default="" type="array">array</param>
<param name="cmp_function" required="1" vallist="0" default="" type="callback">cmp_function</param>
<return type="void">void</return>
<insert>usort(array array, callback cmp_function);</insert>
<dialog title="Insert usort">usort(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="aspell">
<function name="aspell_check_raw">
<description>
     Check a word without changing its case or trying to trim it [deprecated]
    </description>
<param name="dictionary_link" required="1" vallist="0" default="" type="int">dictionary_link</param>
<param name="word" required="1" vallist="0" default="" type="string">word</param>
<return type="bool">bool</return>
<insert>aspell_check_raw(int dictionary_link, string word);</insert>
<dialog title="Insert aspell_check_raw">aspell_check_raw(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="aspell_check">
<description>Check a word [deprecated]</description>
<param name="dictionary_link" required="1" vallist="0" default="" type="int">dictionary_link</param>
<param name="word" required="1" vallist="0" default="" type="string">word</param>
<return type="bool">bool</return>
<insert>aspell_check(int dictionary_link, string word);</insert>
<dialog title="Insert aspell_check">aspell_check(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="aspell_new">
<description>Load a new dictionary [deprecated]</description>
<param name="master" required="1" vallist="0" default="" type="string">master</param>
<param name="personal" required="0" vallist="0" default="" type="string">personal</param>
<return type="int">int</return>
<insert>aspell_new(string master [,string personal]);</insert>
<dialog title="Insert aspell_new">aspell_new(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="aspell_suggest">
<description>Suggest spellings of a word [deprecated]</description>
<param name="dictionary_link" required="1" vallist="0" default="" type="int">dictionary_link</param>
<param name="word" required="1" vallist="0" default="" type="string">word</param>
<return type="array">array</return>
<insert>aspell_suggest(int dictionary_link, string word);</insert>
<dialog title="Insert aspell_suggest">aspell_suggest(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="bc">
<function name="bcadd">
<description>Add two arbitrary precision numbers</description>
<param name="left_operand" required="1" vallist="0" default="" type="string">left_operand</param>
<param name="right_operand" required="1" vallist="0" default="" type="string">right_operand</param>
<param name="scale" required="0" vallist="0" default="" type="int">scale</param>
<return type="string">string</return>
<insert>bcadd(string left_operand, string right_operand [,int scale]);</insert>
<dialog title="Insert bcadd">bcadd(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="bccomp">
<description>Compare two arbitrary precision numbers</description>
<param name="left_operand" required="1" vallist="0" default="" type="string">left_operand</param>
<param name="right_operand" required="1" vallist="0" default="" type="string">right_operand</param>
<param name="scale" required="0" vallist="0" default="" type="int">scale</param>
<return type="int">int</return>
<insert>bccomp(string left_operand, string right_operand [,int scale]);</insert>
<dialog title="Insert bccomp">bccomp(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="bcdiv">
<description>Divide two arbitrary precision numbers</description>
<param name="left_operand" required="1" vallist="0" default="" type="string">left_operand</param>
<param name="right_operand" required="1" vallist="0" default="" type="string">right_operand</param>
<param name="scale" required="0" vallist="0" default="" type="int">scale</param>
<return type="string">string</return>
<insert>bcdiv(string left_operand, string right_operand [,int scale]);</insert>
<dialog title="Insert bcdiv">bcdiv(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="bcmod">
<description>
     Get modulus of an arbitrary precision number
    </description>
<param name="left_operand" required="1" vallist="0" default="" type="string">left_operand</param>
<param name="modulus" required="1" vallist="0" default="" type="string">modulus</param>
<return type="string">string</return>
<insert>bcmod(string left_operand, string modulus);</insert>
<dialog title="Insert bcmod">bcmod(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="bcmul">
<description>Multiply two arbitrary precision number</description>
<param name="left_operand" required="1" vallist="0" default="" type="string">left_operand</param>
<param name="right_operand" required="1" vallist="0" default="" type="string">right_operand</param>
<param name="scale" required="0" vallist="0" default="" type="int">scale</param>
<return type="string">string</return>
<insert>bcmul(string left_operand, string right_operand [,int scale]);</insert>
<dialog title="Insert bcmul">bcmul(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="bcpow">
<description>
     Raise an arbitrary precision number to another
    </description>
<param name="x" required="1" vallist="0" default="" type="string">x</param>
<param name="y" required="1" vallist="0" default="" type="string">y</param>
<param name="scale" required="0" vallist="0" default="" type="int">scale</param>
<return type="string">string</return>
<insert>bcpow(string x, string y [,int scale]);</insert>
<dialog title="Insert bcpow">bcpow(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="bcpowmod">
<description>
     Raise an arbitrary precision number to another, reduced by a specified modulus.
    </description>
<param name="x" required="1" vallist="0" default="" type="string">x</param>
<param name="y" required="1" vallist="0" default="" type="string">y</param>
<param name="modulus" required="1" vallist="0" default="" type="string">modulus</param>
<param name="scale" required="0" vallist="0" default="" type="int">scale</param>
<return type="string">string</return>
<insert>bcpowmod(string x, string y, string modulus [,int scale]);</insert>
<dialog title="Insert bcpowmod">bcpowmod(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="bcscale">
<description>
     Set default scale parameter for all bc math functions
    </description>
<param name="scale" required="1" vallist="0" default="" type="int">scale</param>
<return type="string">string</return>
<insert>bcscale(int scale);</insert>
<dialog title="Insert bcscale">bcscale(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="bcsqrt">
<description>
     Get the square root of an arbitrary precision number
    </description>
<param name="operand" required="1" vallist="0" default="" type="string">operand</param>
<param name="scale" required="0" vallist="0" default="" type="int">scale</param>
<return type="string">string</return>
<insert>bcsqrt(string operand [,int scale]);</insert>
<dialog title="Insert bcsqrt">bcsqrt(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="bcsub">
<description>
     Subtract one arbitrary precision number from another
    </description>
<param name="left_operand" required="1" vallist="0" default="" type="string">left_operand</param>
<param name="right_operand" required="1" vallist="0" default="" type="string">right_operand</param>
<param name="scale" required="0" vallist="0" default="" type="int">scale</param>
<return type="string">string</return>
<insert>bcsub(string left_operand, string right_operand [,int scale]);</insert>
<dialog title="Insert bcsub">bcsub(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="bzip2">
<function name="bzclose">
<description>Close a bzip2 file pointer</description>
<param name="bz" required="1" vallist="0" default="" type="resource">bz</param>
<return type="int">int</return>
<insert>bzclose(resource bz);</insert>
<dialog title="Insert bzclose">bzclose(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="bzcompress">
<description>Compress a string into bzip2 encoded data</description>
<param name="source" required="1" vallist="0" default="" type="string">source</param>
<param name="blocksize" required="0" vallist="0" default="" type="int">blocksize</param>
<param name="workfactor" required="0" vallist="0" default="" type="int">workfactor</param>
<return type="string">string</return>
<insert>bzcompress(string source [,int blocksize] [,int workfactor]);</insert>
<dialog title="Insert bzcompress">bzcompress(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="bzdecompress">
<description>Decompresses bzip2 encoded data</description>
<param name="source" required="1" vallist="0" default="" type="string">source</param>
<param name="small" required="0" vallist="0" default="" type="int">small</param>
<return type="string">string</return>
<insert>bzdecompress(string source [,int small]);</insert>
<dialog title="Insert bzdecompress">bzdecompress(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="bzerrno">
<description>Returns a bzip2 error number</description>
<param name="bz" required="1" vallist="0" default="" type="resource">bz</param>
<return type="int">int</return>
<insert>bzerrno(resource bz);</insert>
<dialog title="Insert bzerrno">bzerrno(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="bzerror">
<description>Returns the bzip2 error number and error string in an array</description>
<param name="bz" required="1" vallist="0" default="" type="resource">bz</param>
<return type="array">array</return>
<insert>bzerror(resource bz);</insert>
<dialog title="Insert bzerror">bzerror(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="bzerrstr">
<description>Returns a bzip2 error string</description>
<param name="bz" required="1" vallist="0" default="" type="resource">bz</param>
<return type="string">string</return>
<insert>bzerrstr(resource bz);</insert>
<dialog title="Insert bzerrstr">bzerrstr(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="bzflush">
<description>Force a write of all buffered data</description>
<param name="bz" required="1" vallist="0" default="" type="resource">bz</param>
<return type="int">int</return>
<insert>bzflush(resource bz);</insert>
<dialog title="Insert bzflush">bzflush(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="bzopen">
<description>Open a bzip2 compressed file</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="mode" required="1" vallist="0" default="" type="string">mode</param>
<return type="resource">resource</return>
<insert>bzopen(string filename, string mode);</insert>
<dialog title="Insert bzopen">bzopen(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="bzread">
<description>Binary safe bzip2 file read</description>
<param name="bz" required="1" vallist="0" default="" type="resource">bz</param>
<param name="length" required="0" vallist="0" default="" type="int">length</param>
<return type="string">string</return>
<insert>bzread(resource bz [,int length]);</insert>
<dialog title="Insert bzread">bzread(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="bzwrite">
<description>Binary safe bzip2 file write</description>
<param name="bz" required="1" vallist="0" default="" type="resource">bz</param>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<param name="length" required="0" vallist="0" default="" type="int">length</param>
<return type="int">int</return>
<insert>bzwrite(resource bz, string data [,int length]);</insert>
<dialog title="Insert bzwrite">bzwrite(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="calendar">
<function name="cal_days_in_month">
<description>Return the number of days in a month for a given year and calendar</description>
<param name="calendar" required="1" vallist="0" default="" type="int">calendar</param>
<param name="month" required="1" vallist="0" default="" type="int">month</param>
<param name="year" required="1" vallist="0" default="" type="int">year</param>
<return type="int">int</return>
<insert>cal_days_in_month(int calendar, int month, int year);</insert>
<dialog title="Insert cal_days_in_month">cal_days_in_month(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="cal_from_jd">
<description>Converts from Julian Day Count to a supported calendar</description>
<param name="jd" required="1" vallist="0" default="" type="int">jd</param>
<param name="calendar" required="1" vallist="0" default="" type="int">calendar</param>
<return type="array">array</return>
<insert>cal_from_jd(int jd, int calendar);</insert>
<dialog title="Insert cal_from_jd">cal_from_jd(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cal_info">
<description>Returns information about a particular calendar</description>
<param name="calendar" required="0" vallist="0" default="" type="int">calendar</param>
<return type="array">array</return>
<insert>cal_info([int calendar]);</insert>
<dialog title="Insert cal_info">cal_info(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="cal_to_jd">
<description>Converts from a supported calendar to Julian Day Count</description>
<param name="calendar" required="1" vallist="0" default="" type="int">calendar</param>
<param name="month" required="1" vallist="0" default="" type="int">month</param>
<param name="day" required="1" vallist="0" default="" type="int">day</param>
<param name="year" required="1" vallist="0" default="" type="int">year</param>
<return type="int">int</return>
<insert>cal_to_jd(int calendar, int month, int day, int year);</insert>
<dialog title="Insert cal_to_jd">cal_to_jd(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="easter_date">
<description>
     Get UNIX timestamp for midnight on Easter of a given year
    </description>
<param name="year" required="0" vallist="0" default="" type="int">year</param>
<return type="int">int</return>
<insert>easter_date([int year]);</insert>
<dialog title="Insert easter_date">easter_date(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="easter_days">
<description>
     Get number of days after March 21 on which Easter falls for a
     given year
    </description>
<param name="year" required="0" vallist="0" default="" type="int">year</param>
<param name="method" required="0" vallist="0" default="" type="int">method</param>
<return type="int">int</return>
<insert>easter_days([int year] [,int method]);</insert>
<dialog title="Insert easter_days">easter_days(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="FrenchToJD">
<description>
     Converts a date from the French Republican Calendar to a Julian
     Day Count
    </description>
<param name="month" required="1" vallist="0" default="" type="int">month</param>
<param name="day" required="1" vallist="0" default="" type="int">day</param>
<param name="year" required="1" vallist="0" default="" type="int">year</param>
<return type="int">int</return>
<insert>FrenchToJD(int month, int day, int year);</insert>
<dialog title="Insert FrenchToJD">FrenchToJD(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="GregorianToJD">
<description>
     Converts a Gregorian date to Julian Day Count
    </description>
<param name="month" required="1" vallist="0" default="" type="int">month</param>
<param name="day" required="1" vallist="0" default="" type="int">day</param>
<param name="year" required="1" vallist="0" default="" type="int">year</param>
<return type="int">int</return>
<insert>GregorianToJD(int month, int day, int year);</insert>
<dialog title="Insert GregorianToJD">GregorianToJD(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="JDDayOfWeek">
<description>Returns the day of the week</description>
<param name="julianday" required="1" vallist="0" default="" type="int">julianday</param>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<return type="mixed">mixed</return>
<insert>JDDayOfWeek(int julianday, int mode);</insert>
<dialog title="Insert JDDayOfWeek">JDDayOfWeek(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="JDMonthName">
<description>Returns a month name</description>
<param name="julianday" required="1" vallist="0" default="" type="int">julianday</param>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<return type="string">string</return>
<insert>JDMonthName(int julianday, int mode);</insert>
<dialog title="Insert JDMonthName">JDMonthName(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="JDToFrench">
<description>
     Converts a Julian Day Count to the French Republican Calendar
    </description>
<param name="juliandaycount" required="1" vallist="0" default="" type="int">juliandaycount</param>
<return type="string">string</return>
<insert>JDToFrench(int juliandaycount);</insert>
<dialog title="Insert JDToFrench">JDToFrench(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="JDToGregorian">
<description>Converts Julian Day Count to Gregorian date</description>
<param name="julianday" required="1" vallist="0" default="" type="int">julianday</param>
<return type="string">string</return>
<insert>JDToGregorian(int julianday);</insert>
<dialog title="Insert JDToGregorian">JDToGregorian(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="JDToJewish">
<description>
     Converts a Julian Day Count to the Jewish Calendar
    </description>
<param name="julianday" required="1" vallist="0" default="" type="int">julianday</param>
<return type="string">string</return>
<insert>JDToJewish(int julianday);</insert>
<dialog title="Insert JDToJewish">JDToJewish(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="JDToJulian">
<description>
     Converts a Julian Day Count to a Julian Calendar Date
    </description>
<param name="julianday" required="1" vallist="0" default="" type="int">julianday</param>
<return type="string">string</return>
<insert>JDToJulian(int julianday);</insert>
<dialog title="Insert JDToJulian">JDToJulian(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="jdtounix">
<description>Convert Julian Day to UNIX timestamp</description>
<param name="jday" required="1" vallist="0" default="" type="int">jday</param>
<return type="int">int</return>
<insert>jdtounix(int jday);</insert>
<dialog title="Insert jdtounix">jdtounix(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="JewishToJD">
<description>
     Converts a date in the Jewish Calendar to Julian Day Count
    </description>
<param name="month" required="1" vallist="0" default="" type="int">month</param>
<param name="day" required="1" vallist="0" default="" type="int">day</param>
<param name="year" required="1" vallist="0" default="" type="int">year</param>
<return type="int">int</return>
<insert>JewishToJD(int month, int day, int year);</insert>
<dialog title="Insert JewishToJD">JewishToJD(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="JulianToJD">
<description>
     Converts a Julian Calendar date to Julian Day Count
    </description>
<param name="month" required="1" vallist="0" default="" type="int">month</param>
<param name="day" required="1" vallist="0" default="" type="int">day</param>
<param name="year" required="1" vallist="0" default="" type="int">year</param>
<return type="int">int</return>
<insert>JulianToJD(int month, int day, int year);</insert>
<dialog title="Insert JulianToJD">JulianToJD(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="unixtojd">
<description>Convert UNIX timestamp to Julian Day</description>
<param name="timestamp" required="0" vallist="0" default="" type="int">timestamp</param>
<return type="int">int</return>
<insert>unixtojd([int timestamp]);</insert>
<dialog title="Insert unixtojd">unixtojd(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="ccvs">
<function name="ccvs_add">
<description>Add data to a transaction </description>
<param name="session" required="1" vallist="0" default="" type="string">session</param>
<param name="invoice" required="1" vallist="0" default="" type="string">invoice</param>
<param name="argtype" required="1" vallist="0" default="" type="string">argtype</param>
<param name="argval" required="1" vallist="0" default="" type="string">argval</param>
<return type="string">string</return>
<insert>ccvs_add(string session, string invoice, string argtype, string argval);</insert>
<dialog title="Insert ccvs_add">ccvs_add(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="ccvs_auth">
<description> 
     Perform credit authorization test on a transaction 
    </description>
<param name="session" required="1" vallist="0" default="" type="string">session</param>
<param name="invoice" required="1" vallist="0" default="" type="string">invoice</param>
<return type="string">string</return>
<insert>ccvs_auth(string session, string invoice);</insert>
<dialog title="Insert ccvs_auth">ccvs_auth(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ccvs_command">
<description>
     Performs a command which is peculiar to a single protocol, 
     and thus is not available in the general CCVS API 
    </description>
<param name="session" required="1" vallist="0" default="" type="string">session</param>
<param name="type" required="1" vallist="0" default="" type="string">type</param>
<param name="argval" required="1" vallist="0" default="" type="string">argval</param>
<return type="string">string</return>
<insert>ccvs_command(string session, string type, string argval);</insert>
<dialog title="Insert ccvs_command">ccvs_command(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ccvs_count">
<description>
     Find out how many transactions of a given type are stored in the system 
    </description>
<param name="session" required="1" vallist="0" default="" type="string">session</param>
<param name="type" required="1" vallist="0" default="" type="string">type</param>
<return type="int">int</return>
<insert>ccvs_count(string session, string type);</insert>
<dialog title="Insert ccvs_count">ccvs_count(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ccvs_delete">
<description>Delete a transaction</description>
<param name="session" required="1" vallist="0" default="" type="string">session</param>
<param name="invoice" required="1" vallist="0" default="" type="string">invoice</param>
<return type="string">string</return>
<insert>ccvs_delete(string session, string invoice);</insert>
<dialog title="Insert ccvs_delete">ccvs_delete(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ccvs_done">
<description>Terminate CCVS engine and do cleanup work</description>
<param name="sess" required="1" vallist="0" default="" type="string">sess</param>
<return type="string">string</return>
<insert>ccvs_done(string sess);</insert>
<dialog title="Insert ccvs_done">ccvs_done(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ccvs_init">
<description>Initialize CCVS for use</description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="string">string</return>
<insert>ccvs_init(string name);</insert>
<dialog title="Insert ccvs_init">ccvs_init(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ccvs_lookup">
<description>
     Look up an item of a particular type in the database #
    </description>
<param name="session" required="1" vallist="0" default="" type="string">session</param>
<param name="invoice" required="1" vallist="0" default="" type="string">invoice</param>
<param name="inum" required="1" vallist="0" default="" type="int">inum</param>
<return type="string">string</return>
<insert>ccvs_lookup(string session, string invoice, int inum);</insert>
<dialog title="Insert ccvs_lookup">ccvs_lookup(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ccvs_new">
<description>Create a new, blank transaction </description>
<param name="session" required="1" vallist="0" default="" type="string">session</param>
<param name="invoice" required="1" vallist="0" default="" type="string">invoice</param>
<return type="string">string</return>
<insert>ccvs_new(string session, string invoice);</insert>
<dialog title="Insert ccvs_new">ccvs_new(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ccvs_report">
<description>Return the status of the background communication process </description>
<param name="session" required="1" vallist="0" default="" type="string">session</param>
<param name="type" required="1" vallist="0" default="" type="string">type</param>
<return type="string">string</return>
<insert>ccvs_report(string session, string type);</insert>
<dialog title="Insert ccvs_report">ccvs_report(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ccvs_return">
<description>
     Transfer funds from the merchant to the credit card holder 
    </description>
<param name="session" required="1" vallist="0" default="" type="string">session</param>
<param name="invoice" required="1" vallist="0" default="" type="string">invoice</param>
<return type="string">string</return>
<insert>ccvs_return(string session, string invoice);</insert>
<dialog title="Insert ccvs_return">ccvs_return(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ccvs_reverse">
<description>
     Perform a full reversal on an already-processed authorization 
    </description>
<param name="session" required="1" vallist="0" default="" type="string">session</param>
<param name="invoice" required="1" vallist="0" default="" type="string">invoice</param>
<return type="string">string</return>
<insert>ccvs_reverse(string session, string invoice);</insert>
<dialog title="Insert ccvs_reverse">ccvs_reverse(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ccvs_sale">
<description>
     Transfer funds from the credit card holder to the merchant
    </description>
<param name="session" required="1" vallist="0" default="" type="string">session</param>
<param name="invoice" required="1" vallist="0" default="" type="string">invoice</param>
<return type="string">string</return>
<insert>ccvs_sale(string session, string invoice);</insert>
<dialog title="Insert ccvs_sale">ccvs_sale(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ccvs_status">
<description>Check the status of an invoice</description>
<param name="session" required="1" vallist="0" default="" type="string">session</param>
<param name="invoice" required="1" vallist="0" default="" type="string">invoice</param>
<return type="string">string</return>
<insert>ccvs_status(string session, string invoice);</insert>
<dialog title="Insert ccvs_status">ccvs_status(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ccvs_textvalue">
<description>Get text return value for previous function call</description>
<param name="session" required="1" vallist="0" default="" type="string">session</param>
<return type="string">string</return>
<insert>ccvs_textvalue(string session);</insert>
<dialog title="Insert ccvs_textvalue">ccvs_textvalue(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ccvs_void">
<description>
     Perform a full reversal on a completed transaction 
    </description>
<param name="session" required="1" vallist="0" default="" type="string">session</param>
<param name="invoice" required="1" vallist="0" default="" type="string">invoice</param>
<return type="string">string</return>
<insert>ccvs_void(string session, string invoice);</insert>
<dialog title="Insert ccvs_void">ccvs_void(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="classobj">
<function name="call_user_method_array">
<description>
     Call a user method given with an array of parameters [deprecated]
    </description>
<param name="method_name" required="1" vallist="0" default="" type="string">method_name</param>
<param name="obj" required="1" vallist="0" default="" type="object">obj</param>
<param name="paramarr" required="0" vallist="0" default="" type="array">paramarr</param>
<return type="mixed">mixed</return>
<insert>call_user_method_array(string method_name, object obj [,array paramarr]);</insert>
<dialog title="Insert call_user_method_array">call_user_method_array(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="call_user_method">
<description>
     Call a user method on an specific object [deprecated]
    </description>
<param name="method_name" required="1" vallist="0" default="" type="string">method_name</param>
<param name="obj" required="1" vallist="0" default="" type="object">obj</param>
<param name="parameter" required="0" vallist="0" default="" type="mixed">parameter</param>
<param name="..." required="0" vallist="0" default="" type="mixed">...</param>
<return type="mixed">mixed</return>
<insert>call_user_method(string method_name, object obj [,mixed parameter] [,mixed ...]);</insert>
<dialog title="Insert call_user_method">call_user_method(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="class_exists">
<description>Checks if the class has been defined</description>
<param name="class_name" required="1" vallist="0" default="" type="string">class_name</param>
<return type="bool">bool</return>
<insert>class_exists(string class_name);</insert>
<dialog title="Insert class_exists">class_exists(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="get_class_methods">
<description>Returns an array of class methods' names</description>
<param name="class_name" required="1" vallist="0" default="" type="mixed">class_name</param>
<return type="array">array</return>
<insert>get_class_methods(mixed class_name);</insert>
<dialog title="Insert get_class_methods">get_class_methods(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="get_class_vars">
<description>
     Returns an array of default properties of the class
    </description>
<param name="class_name" required="1" vallist="0" default="" type="string">class_name</param>
<return type="array">array</return>
<insert>get_class_vars(string class_name);</insert>
<dialog title="Insert get_class_vars">get_class_vars(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="get_class">
<description>Returns the name of the class of an object</description>
<param name="obj" required="1" vallist="0" default="" type="object">obj</param>
<return type="string">string</return>
<insert>get_class(object obj);</insert>
<dialog title="Insert get_class">get_class(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="get_declared_classes">
<description>Returns an array with the name of the defined classes</description>
<return type="array">array</return>
<insert>get_declared_classes();</insert>
<dialog title="Insert get_declared_classes">get_declared_classes();</dialog>
<info title="Info window"></info>
</function>
<function name="get_object_vars">
<description>Returns an associative array of object properties</description>
<param name="obj" required="1" vallist="0" default="" type="object">obj</param>
<return type="array">array</return>
<insert>get_object_vars(object obj);</insert>
<dialog title="Insert get_object_vars">get_object_vars(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="get_parent_class">
<description>Retrieves the parent class name for object or class</description>
<param name="obj" required="1" vallist="0" default="" type="mixed">obj</param>
<return type="string">string</return>
<insert>get_parent_class(mixed obj);</insert>
<dialog title="Insert get_parent_class">get_parent_class(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="is_a">
<description>
     Returns </description>
<param name="object" required="1" vallist="0" default="" type="object">object</param>
<param name="class_name" required="1" vallist="0" default="" type="string">class_name</param>
<return type="bool">bool</return>
<insert>is_a(object object, string class_name);</insert>
<dialog title="Insert is_a">is_a(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="is_subclass_of">
<description>
     Returns </description>
<param name="object" required="1" vallist="0" default="" type="object">object</param>
<param name="class_name" required="1" vallist="0" default="" type="string">class_name</param>
<return type="bool">bool</return>
<insert>is_subclass_of(object object, string class_name);</insert>
<dialog title="Insert is_subclass_of">is_subclass_of(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="method_exists">
<description>Checks if the class method exists</description>
<param name="object" required="1" vallist="0" default="" type="object">object</param>
<param name="method_name" required="1" vallist="0" default="" type="string">method_name</param>
<return type="bool">bool</return>
<insert>method_exists(object object, string method_name);</insert>
<dialog title="Insert method_exists">method_exists(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="com">
<function name="COM">
<description>COM class</description>
<param name="module_name" required="1" vallist="0" default="" type="string">module_name</param>
<param name="server_name" required="0" vallist="0" default="" type="string">server_name</param>
<param name="codepage" required="0" vallist="0" default="" type="int">codepage</param>
<return type="string">string</return>
<insert>COM(string module_name [,string server_name] [,int codepage]);</insert>
<dialog title="Insert COM">COM(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="VARIANT">
<description>VARIANT class</description>
<param name="value" required="0" vallist="0" default="" type="mixed">value</param>
<param name="type" required="0" vallist="0" default="" type="int">type</param>
<param name="codepage" required="0" vallist="0" default="" type="int">codepage</param>
<return type="string">string</return>
<insert>VARIANT([mixed value] [,int type] [,int codepage]);</insert>
<dialog title="Insert VARIANT">VARIANT(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="com_addref">
<description>
    Increases the components reference counter.
   </description>
<return type="void">void</return>
<insert>com_addref();</insert>
<dialog title="Insert com_addref">com_addref();</dialog>
<info title="Info window"></info>
</function>
<function name="com_get">
<description>
    Gets the value of a COM Component's property
   </description>
<param name="com_object" required="1" vallist="0" default="" type="resource">com_object</param>
<param name="property" required="1" vallist="0" default="" type="string">property</param>
<return type="mixed">mixed</return>
<insert>com_get(resource com_object, string property);</insert>
<dialog title="Insert com_get">com_get(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="com_invoke">
<description>
    Calls a COM component's method.
   </description>
<param name="com_object" required="1" vallist="0" default="" type="resource">com_object</param>
<param name="function_name" required="1" vallist="0" default="" type="string">function_name</param>
<param name="
      function parameters, ...
      " required="0" vallist="0" default="" type="mixed">
      function parameters, ...
      </param>
<return type="mixed">mixed</return>
<insert>com_invoke(resource com_object, string function_name [,mixed 
      function parameters, ...
      ]);</insert>
<dialog title="Insert com_invoke">com_invoke(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="com_isenum">
<description>Grabs an IEnumVariant</description>
<param name="com_module" required="1" vallist="0" default="" type="object">com_module</param>
<return type="void">void</return>
<insert>com_isenum(object com_module);</insert>
<dialog title="Insert com_isenum">com_isenum(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="com_load_typelib">
<description>Loads a Typelib</description>
<param name="typelib_name" required="1" vallist="0" default="" type="string">typelib_name</param>
<param name="case_insensitive" required="0" vallist="0" default="" type="int">case_insensitive</param>
<return type="void">void</return>
<insert>com_load_typelib(string typelib_name [,int case_insensitive]);</insert>
<dialog title="Insert com_load_typelib">com_load_typelib(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="com_load">
<description>
    Creates a new reference to a COM component
   </description>
<param name="module_name" required="1" vallist="0" default="" type="string">module_name</param>
<param name="
      server_name
      " required="0" vallist="0" default="" type="string">
      server_name
      </param>
<param name="
      codepage
      " required="0" vallist="0" default="" type="int">
      codepage
      </param>
<return type="string">string</return>
<insert>com_load(string module_name [,string 
      server_name
      ] [,int 
      codepage
      ]);</insert>
<dialog title="Insert com_load">com_load(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="com_release">
<description>
    Decreases the components reference counter.
   </description>
<return type="void">void</return>
<insert>com_release();</insert>
<dialog title="Insert com_release">com_release();</dialog>
<info title="Info window"></info>
</function>
<function name="com_set">
<description>
    Assigns a value to a COM component's property
   </description>
<param name="com_object" required="1" vallist="0" default="" type="resource">com_object</param>
<param name="property" required="1" vallist="0" default="" type="string">property</param>
<param name="value" required="1" vallist="0" default="" type="mixed">value</param>
<return type="void">void</return>
<insert>com_set(resource com_object, string property, mixed value);</insert>
<dialog title="Insert com_set">com_set(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="cpdf">
<function name="cpdf_add_annotation">
<description>Adds annotation</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="llx" required="1" vallist="0" default="" type="float">llx</param>
<param name="lly" required="1" vallist="0" default="" type="float">lly</param>
<param name="urx" required="1" vallist="0" default="" type="float">urx</param>
<param name="ury" required="1" vallist="0" default="" type="float">ury</param>
<param name="title" required="1" vallist="0" default="" type="string">title</param>
<param name="content" required="1" vallist="0" default="" type="string">content</param>
<param name="mode" required="0" vallist="0" default="" type="int">mode</param>
<return type="void">void</return>
<insert>cpdf_add_annotation(int pdf_document, float llx, float lly, float urx, float ury, string title, string content [,int mode]);</insert>
<dialog title="Insert cpdf_add_annotation">cpdf_add_annotation(%0, %1, %2, %3, %4, %5, %6, %7);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_add_outline">
<description>Adds bookmark for current page</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="void">void</return>
<insert>cpdf_add_outline(int pdf_document, string text);</insert>
<dialog title="Insert cpdf_add_outline">cpdf_add_outline(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_arc">
<description>Draws an arc</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="x-coor" required="1" vallist="0" default="" type="float">x-coor</param>
<param name="y-coor" required="1" vallist="0" default="" type="float">y-coor</param>
<param name="radius" required="1" vallist="0" default="" type="float">radius</param>
<param name="start" required="1" vallist="0" default="" type="float">start</param>
<param name="end" required="1" vallist="0" default="" type="float">end</param>
<param name="mode" required="0" vallist="0" default="" type="int">mode</param>
<return type="void">void</return>
<insert>cpdf_arc(int pdf_document, float x-coor, float y-coor, float radius, float start, float end [,int mode]);</insert>
<dialog title="Insert cpdf_arc">cpdf_arc(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_begin_text">
<description>Starts text section</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<return type="void">void</return>
<insert>cpdf_begin_text(int pdf_document);</insert>
<dialog title="Insert cpdf_begin_text">cpdf_begin_text(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_circle">
<description>Draw a circle</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="x-coor" required="1" vallist="0" default="" type="float">x-coor</param>
<param name="y-coor" required="1" vallist="0" default="" type="float">y-coor</param>
<param name="radius" required="1" vallist="0" default="" type="float">radius</param>
<param name="mode" required="0" vallist="0" default="" type="int">mode</param>
<return type="void">void</return>
<insert>cpdf_circle(int pdf_document, float x-coor, float y-coor, float radius [,int mode]);</insert>
<dialog title="Insert cpdf_circle">cpdf_circle(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_clip">
<description>Clips to current path</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<return type="void">void</return>
<insert>cpdf_clip(int pdf_document);</insert>
<dialog title="Insert cpdf_clip">cpdf_clip(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_close">
<description>Closes the pdf document</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<return type="void">void</return>
<insert>cpdf_close(int pdf_document);</insert>
<dialog title="Insert cpdf_close">cpdf_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_closepath_fill_stroke">
<description>Close, fill and stroke current path</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<return type="void">void</return>
<insert>cpdf_closepath_fill_stroke(int pdf_document);</insert>
<dialog title="Insert cpdf_closepath_fill_stroke">cpdf_closepath_fill_stroke(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_closepath_stroke">
<description>Close path and draw line along path</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<return type="void">void</return>
<insert>cpdf_closepath_stroke(int pdf_document);</insert>
<dialog title="Insert cpdf_closepath_stroke">cpdf_closepath_stroke(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_closepath">
<description>Close path</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<return type="void">void</return>
<insert>cpdf_closepath(int pdf_document);</insert>
<dialog title="Insert cpdf_closepath">cpdf_closepath(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_continue_text">
<description>Output text in next line</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="void">void</return>
<insert>cpdf_continue_text(int pdf_document, string text);</insert>
<dialog title="Insert cpdf_continue_text">cpdf_continue_text(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_curveto">
<description>Draws a curve</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="x1" required="1" vallist="0" default="" type="float">x1</param>
<param name="y1" required="1" vallist="0" default="" type="float">y1</param>
<param name="x2" required="1" vallist="0" default="" type="float">x2</param>
<param name="y2" required="1" vallist="0" default="" type="float">y2</param>
<param name="x3" required="1" vallist="0" default="" type="float">x3</param>
<param name="y3" required="1" vallist="0" default="" type="float">y3</param>
<param name="mode" required="0" vallist="0" default="" type="int">mode</param>
<return type="void">void</return>
<insert>cpdf_curveto(int pdf_document, float x1, float y1, float x2, float y2, float x3, float y3 [,int mode]);</insert>
<dialog title="Insert cpdf_curveto">cpdf_curveto(%0, %1, %2, %3, %4, %5, %6, %7);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_end_text">
<description>Ends text section</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<return type="void">void</return>
<insert>cpdf_end_text(int pdf_document);</insert>
<dialog title="Insert cpdf_end_text">cpdf_end_text(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_fill_stroke">
<description>Fill and stroke current path</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<return type="void">void</return>
<insert>cpdf_fill_stroke(int pdf_document);</insert>
<dialog title="Insert cpdf_fill_stroke">cpdf_fill_stroke(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_fill">
<description>Fill current path</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<return type="void">void</return>
<insert>cpdf_fill(int pdf_document);</insert>
<dialog title="Insert cpdf_fill">cpdf_fill(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_finalize_page">
<description>Ends page</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="page_number" required="1" vallist="0" default="" type="int">page_number</param>
<return type="void">void</return>
<insert>cpdf_finalize_page(int pdf_document, int page_number);</insert>
<dialog title="Insert cpdf_finalize_page">cpdf_finalize_page(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_finalize">
<description>Ends document</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<return type="void">void</return>
<insert>cpdf_finalize(int pdf_document);</insert>
<dialog title="Insert cpdf_finalize">cpdf_finalize(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_global_set_document_limits">
<description>Sets document limits for any pdf document</description>
<param name="maxpages" required="1" vallist="0" default="" type="int">maxpages</param>
<param name="maxfonts" required="1" vallist="0" default="" type="int">maxfonts</param>
<param name="maximages" required="1" vallist="0" default="" type="int">maximages</param>
<param name="maxannotations" required="1" vallist="0" default="" type="int">maxannotations</param>
<param name="maxobjects" required="1" vallist="0" default="" type="int">maxobjects</param>
<return type="void">void</return>
<insert>cpdf_global_set_document_limits(int maxpages, int maxfonts, int maximages, int maxannotations, int maxobjects);</insert>
<dialog title="Insert cpdf_global_set_document_limits">cpdf_global_set_document_limits(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_import_jpeg">
<description>Opens a JPEG image</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="file name" required="1" vallist="0" default="" type="string">file name</param>
<param name="x-coor" required="1" vallist="0" default="" type="float">x-coor</param>
<param name="y-coor" required="1" vallist="0" default="" type="float">y-coor</param>
<param name="angle" required="1" vallist="0" default="" type="float">angle</param>
<param name="width" required="1" vallist="0" default="" type="float">width</param>
<param name="height" required="1" vallist="0" default="" type="float">height</param>
<param name="x-scale" required="1" vallist="0" default="" type="float">x-scale</param>
<param name="y-scale" required="1" vallist="0" default="" type="float">y-scale</param>
<param name="mode" required="0" vallist="0" default="" type="int">mode</param>
<return type="int">int</return>
<insert>cpdf_import_jpeg(int pdf_document, string file name, float x-coor, float y-coor, float angle, float width, float height, float x-scale, float y-scale [,int mode]);</insert>
<dialog title="Insert cpdf_import_jpeg">cpdf_import_jpeg(%0, %1, %2, %3, %4, %5, %6, %7, %8, %9);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_lineto">
<description>Draws a line</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="x-coor" required="1" vallist="0" default="" type="float">x-coor</param>
<param name="y-coor" required="1" vallist="0" default="" type="float">y-coor</param>
<param name="mode" required="0" vallist="0" default="" type="int">mode</param>
<return type="void">void</return>
<insert>cpdf_lineto(int pdf_document, float x-coor, float y-coor [,int mode]);</insert>
<dialog title="Insert cpdf_lineto">cpdf_lineto(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_moveto">
<description>Sets current point</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="x-coor" required="1" vallist="0" default="" type="float">x-coor</param>
<param name="y-coor" required="1" vallist="0" default="" type="float">y-coor</param>
<param name="mode" required="0" vallist="0" default="" type="int">mode</param>
<return type="void">void</return>
<insert>cpdf_moveto(int pdf_document, float x-coor, float y-coor [,int mode]);</insert>
<dialog title="Insert cpdf_moveto">cpdf_moveto(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_newpath">
<description>Starts a new path</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<return type="void">void</return>
<insert>cpdf_newpath(int pdf_document);</insert>
<dialog title="Insert cpdf_newpath">cpdf_newpath(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_open">
<description>Opens a new pdf document</description>
<param name="compression" required="1" vallist="0" default="" type="int">compression</param>
<param name="filename" required="0" vallist="0" default="" type="string">filename</param>
<return type="int">int</return>
<insert>cpdf_open(int compression [,string filename]);</insert>
<dialog title="Insert cpdf_open">cpdf_open(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_output_buffer">
<description>Outputs the pdf document in memory buffer</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<return type="void">void</return>
<insert>cpdf_output_buffer(int pdf_document);</insert>
<dialog title="Insert cpdf_output_buffer">cpdf_output_buffer(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_page_init">
<description>Starts new page</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="page_number" required="1" vallist="0" default="" type="int">page_number</param>
<param name="orientation" required="1" vallist="0" default="" type="int">orientation</param>
<param name="height" required="1" vallist="0" default="" type="float">height</param>
<param name="width" required="1" vallist="0" default="" type="float">width</param>
<param name="unit" required="0" vallist="0" default="" type="float">unit</param>
<return type="void">void</return>
<insert>cpdf_page_init(int pdf_document, int page_number, int orientation, float height, float width [,float unit]);</insert>
<dialog title="Insert cpdf_page_init">cpdf_page_init(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_place_inline_image">
<description>Places an image on the page</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="image" required="1" vallist="0" default="" type="int">image</param>
<param name="x-coor" required="1" vallist="0" default="" type="float">x-coor</param>
<param name="y-coor" required="1" vallist="0" default="" type="float">y-coor</param>
<param name="angle" required="1" vallist="0" default="" type="float">angle</param>
<param name="width" required="1" vallist="0" default="" type="float">width</param>
<param name="height" required="1" vallist="0" default="" type="float">height</param>
<param name="mode" required="0" vallist="0" default="" type="int">mode</param>
<return type="void">void</return>
<insert>cpdf_place_inline_image(int pdf_document, int image, float x-coor, float y-coor, float angle, float width, float height [,int mode]);</insert>
<dialog title="Insert cpdf_place_inline_image">cpdf_place_inline_image(%0, %1, %2, %3, %4, %5, %6, %7);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_rect">
<description>Draw a rectangle</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="x-coor" required="1" vallist="0" default="" type="float">x-coor</param>
<param name="y-coor" required="1" vallist="0" default="" type="float">y-coor</param>
<param name="width" required="1" vallist="0" default="" type="float">width</param>
<param name="height" required="1" vallist="0" default="" type="float">height</param>
<param name="mode" required="0" vallist="0" default="" type="int">mode</param>
<return type="void">void</return>
<insert>cpdf_rect(int pdf_document, float x-coor, float y-coor, float width, float height [,int mode]);</insert>
<dialog title="Insert cpdf_rect">cpdf_rect(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_restore">
<description>Restores formerly saved environment</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<return type="void">void</return>
<insert>cpdf_restore(int pdf_document);</insert>
<dialog title="Insert cpdf_restore">cpdf_restore(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_rlineto">
<description>Draws a line</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="x-coor" required="1" vallist="0" default="" type="float">x-coor</param>
<param name="y-coor" required="1" vallist="0" default="" type="float">y-coor</param>
<param name="mode" required="0" vallist="0" default="" type="int">mode</param>
<return type="void">void</return>
<insert>cpdf_rlineto(int pdf_document, float x-coor, float y-coor [,int mode]);</insert>
<dialog title="Insert cpdf_rlineto">cpdf_rlineto(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_rmoveto">
<description>Sets current point</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="x-coor" required="1" vallist="0" default="" type="float">x-coor</param>
<param name="y-coor" required="1" vallist="0" default="" type="float">y-coor</param>
<param name="mode" required="0" vallist="0" default="" type="int">mode</param>
<return type="void">void</return>
<insert>cpdf_rmoveto(int pdf_document, float x-coor, float y-coor [,int mode]);</insert>
<dialog title="Insert cpdf_rmoveto">cpdf_rmoveto(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_rotate_text">
<description>
     Sets text rotation angle
    </description>
<param name="pdfdoc" required="1" vallist="0" default="" type="int">pdfdoc</param>
<param name="angle" required="1" vallist="0" default="" type="float">angle</param>
<return type="void">void</return>
<insert>cpdf_rotate_text(int pdfdoc, float angle);</insert>
<dialog title="Insert cpdf_rotate_text">cpdf_rotate_text(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_rotate">
<description>Sets rotation</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="angle" required="1" vallist="0" default="" type="float">angle</param>
<return type="void">void</return>
<insert>cpdf_rotate(int pdf_document, float angle);</insert>
<dialog title="Insert cpdf_rotate">cpdf_rotate(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_save_to_file">
<description>Writes the pdf document into a file</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="void">void</return>
<insert>cpdf_save_to_file(int pdf_document, string filename);</insert>
<dialog title="Insert cpdf_save_to_file">cpdf_save_to_file(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_save">
<description>Saves current environment</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<return type="void">void</return>
<insert>cpdf_save(int pdf_document);</insert>
<dialog title="Insert cpdf_save">cpdf_save(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_scale">
<description>Sets scaling</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="x-scale" required="1" vallist="0" default="" type="float">x-scale</param>
<param name="y-scale" required="1" vallist="0" default="" type="float">y-scale</param>
<return type="void">void</return>
<insert>cpdf_scale(int pdf_document, float x-scale, float y-scale);</insert>
<dialog title="Insert cpdf_scale">cpdf_scale(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_set_action_url">
<description>
     Sets hyperlink
    </description>
<param name="pdfdoc" required="1" vallist="0" default="" type="int">pdfdoc</param>
<param name="xll" required="1" vallist="0" default="" type="float">xll</param>
<param name="yll" required="1" vallist="0" default="" type="float">yll</param>
<param name="xur" required="1" vallist="0" default="" type="float">xur</param>
<param name="xur" required="1" vallist="0" default="" type="float">xur</param>
<param name="url" required="1" vallist="0" default="" type="string">url</param>
<param name="mode" required="0" vallist="0" default="" type="int">mode</param>
<return type="void">void</return>
<insert>cpdf_set_action_url(int pdfdoc, float xll, float yll, float xur, float xur, string url [,int mode]);</insert>
<dialog title="Insert cpdf_set_action_url">cpdf_set_action_url(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_set_char_spacing">
<description>Sets character spacing</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="space" required="1" vallist="0" default="" type="float">space</param>
<return type="void">void</return>
<insert>cpdf_set_char_spacing(int pdf_document, float space);</insert>
<dialog title="Insert cpdf_set_char_spacing">cpdf_set_char_spacing(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_set_creator">
<description>Sets the creator field in the pdf document</description>
<param name="creator" required="1" vallist="0" default="" type="string">creator</param>
<return type="void">void</return>
<insert>cpdf_set_creator(string creator);</insert>
<dialog title="Insert cpdf_set_creator">cpdf_set_creator(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_set_current_page">
<description>Sets current page</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="page_number" required="1" vallist="0" default="" type="int">page_number</param>
<return type="void">void</return>
<insert>cpdf_set_current_page(int pdf_document, int page_number);</insert>
<dialog title="Insert cpdf_set_current_page">cpdf_set_current_page(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_set_font_directories">
<description>
     Sets directories to search when using external fonts
    </description>
<param name="pdfdoc" required="1" vallist="0" default="" type="int">pdfdoc</param>
<param name="pfmdir" required="1" vallist="0" default="" type="string">pfmdir</param>
<param name="pfbdir" required="1" vallist="0" default="" type="string">pfbdir</param>
<return type="void">void</return>
<insert>cpdf_set_font_directories(int pdfdoc, string pfmdir, string pfbdir);</insert>
<dialog title="Insert cpdf_set_font_directories">cpdf_set_font_directories(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_set_font_map_file">
<description>
     Sets fontname to filename translation map when using external fonts
    </description>
<param name="pdfdoc" required="1" vallist="0" default="" type="int">pdfdoc</param>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="void">void</return>
<insert>cpdf_set_font_map_file(int pdfdoc, string filename);</insert>
<dialog title="Insert cpdf_set_font_map_file">cpdf_set_font_map_file(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_set_font">
<description>Select the current font face and size</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="font name" required="1" vallist="0" default="" type="string">font name</param>
<param name="size" required="1" vallist="0" default="" type="float">size</param>
<param name="encoding" required="1" vallist="0" default="" type="string">encoding</param>
<return type="void">void</return>
<insert>cpdf_set_font(int pdf_document, string font name, float size, string encoding);</insert>
<dialog title="Insert cpdf_set_font">cpdf_set_font(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_set_horiz_scaling">
<description>Sets horizontal scaling of text</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="scale" required="1" vallist="0" default="" type="float">scale</param>
<return type="void">void</return>
<insert>cpdf_set_horiz_scaling(int pdf_document, float scale);</insert>
<dialog title="Insert cpdf_set_horiz_scaling">cpdf_set_horiz_scaling(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_set_keywords">
<description>Sets the keywords field of the pdf document</description>
<param name="keywords" required="1" vallist="0" default="" type="string">keywords</param>
<return type="void">void</return>
<insert>cpdf_set_keywords(string keywords);</insert>
<dialog title="Insert cpdf_set_keywords">cpdf_set_keywords(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_set_leading">
<description>Sets distance between text lines</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="distance" required="1" vallist="0" default="" type="float">distance</param>
<return type="void">void</return>
<insert>cpdf_set_leading(int pdf_document, float distance);</insert>
<dialog title="Insert cpdf_set_leading">cpdf_set_leading(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_set_page_animation">
<description>Sets duration between pages</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="transition" required="1" vallist="0" default="" type="int">transition</param>
<param name="duration" required="1" vallist="0" default="" type="float">duration</param>
<return type="void">void</return>
<insert>cpdf_set_page_animation(int pdf_document, int transition, float duration);</insert>
<dialog title="Insert cpdf_set_page_animation">cpdf_set_page_animation(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_set_subject">
<description>Sets the subject field of the pdf document</description>
<param name="subject" required="1" vallist="0" default="" type="string">subject</param>
<return type="void">void</return>
<insert>cpdf_set_subject(string subject);</insert>
<dialog title="Insert cpdf_set_subject">cpdf_set_subject(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_set_text_matrix">
<description>Sets the text matrix</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="matrix" required="1" vallist="0" default="" type="array">matrix</param>
<return type="void">void</return>
<insert>cpdf_set_text_matrix(int pdf_document, array matrix);</insert>
<dialog title="Insert cpdf_set_text_matrix">cpdf_set_text_matrix(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_set_text_pos">
<description>Sets text position</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="x-coor" required="1" vallist="0" default="" type="float">x-coor</param>
<param name="y-coor" required="1" vallist="0" default="" type="float">y-coor</param>
<param name="mode" required="0" vallist="0" default="" type="int">mode</param>
<return type="void">void</return>
<insert>cpdf_set_text_pos(int pdf_document, float x-coor, float y-coor [,int mode]);</insert>
<dialog title="Insert cpdf_set_text_pos">cpdf_set_text_pos(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_set_text_rendering">
<description>Determines how text is rendered</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="mode" required="0" vallist="0" default="" type="int">mode</param>
<return type="void">void</return>
<insert>cpdf_set_text_rendering(int pdf_document [,int mode]);</insert>
<dialog title="Insert cpdf_set_text_rendering">cpdf_set_text_rendering(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_set_text_rise">
<description>Sets the text rise</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="value" required="1" vallist="0" default="" type="float">value</param>
<return type="void">void</return>
<insert>cpdf_set_text_rise(int pdf_document, float value);</insert>
<dialog title="Insert cpdf_set_text_rise">cpdf_set_text_rise(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_set_title">
<description>Sets the title field of the pdf document</description>
<param name="title" required="1" vallist="0" default="" type="string">title</param>
<return type="void">void</return>
<insert>cpdf_set_title(string title);</insert>
<dialog title="Insert cpdf_set_title">cpdf_set_title(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_set_viewer_preferences">
<description>
     How to show the document in the viewer
    </description>
<param name="pdfdoc" required="1" vallist="0" default="" type="int">pdfdoc</param>
<param name="preferences" required="1" vallist="0" default="" type="array">preferences</param>
<return type="void">void</return>
<insert>cpdf_set_viewer_preferences(int pdfdoc, array preferences);</insert>
<dialog title="Insert cpdf_set_viewer_preferences">cpdf_set_viewer_preferences(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_set_word_spacing">
<description>Sets spacing between words</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="space" required="1" vallist="0" default="" type="float">space</param>
<return type="void">void</return>
<insert>cpdf_set_word_spacing(int pdf_document, float space);</insert>
<dialog title="Insert cpdf_set_word_spacing">cpdf_set_word_spacing(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_setdash">
<description>Sets dash pattern</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="white" required="1" vallist="0" default="" type="float">white</param>
<param name="black" required="1" vallist="0" default="" type="float">black</param>
<return type="void">void</return>
<insert>cpdf_setdash(int pdf_document, float white, float black);</insert>
<dialog title="Insert cpdf_setdash">cpdf_setdash(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_setflat">
<description>Sets flatness</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="value" required="1" vallist="0" default="" type="float">value</param>
<return type="void">void</return>
<insert>cpdf_setflat(int pdf_document, float value);</insert>
<dialog title="Insert cpdf_setflat">cpdf_setflat(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_setgray_fill">
<description>Sets filling color to gray value</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="value" required="1" vallist="0" default="" type="float">value</param>
<return type="void">void</return>
<insert>cpdf_setgray_fill(int pdf_document, float value);</insert>
<dialog title="Insert cpdf_setgray_fill">cpdf_setgray_fill(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_setgray_stroke">
<description>Sets drawing color to gray value</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="gray_value" required="1" vallist="0" default="" type="float">gray_value</param>
<return type="void">void</return>
<insert>cpdf_setgray_stroke(int pdf_document, float gray_value);</insert>
<dialog title="Insert cpdf_setgray_stroke">cpdf_setgray_stroke(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_setgray">
<description>Sets drawing and filling color to gray value</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="gray_value" required="1" vallist="0" default="" type="float">gray_value</param>
<return type="void">void</return>
<insert>cpdf_setgray(int pdf_document, float gray_value);</insert>
<dialog title="Insert cpdf_setgray">cpdf_setgray(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_setlinecap">
<description>Sets linecap parameter</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="value" required="1" vallist="0" default="" type="int">value</param>
<return type="void">void</return>
<insert>cpdf_setlinecap(int pdf_document, int value);</insert>
<dialog title="Insert cpdf_setlinecap">cpdf_setlinecap(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_setlinejoin">
<description>Sets linejoin parameter</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="value" required="1" vallist="0" default="" type="int">value</param>
<return type="void">void</return>
<insert>cpdf_setlinejoin(int pdf_document, int value);</insert>
<dialog title="Insert cpdf_setlinejoin">cpdf_setlinejoin(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_setlinewidth">
<description>Sets line width</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="width" required="1" vallist="0" default="" type="float">width</param>
<return type="void">void</return>
<insert>cpdf_setlinewidth(int pdf_document, float width);</insert>
<dialog title="Insert cpdf_setlinewidth">cpdf_setlinewidth(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_setmiterlimit">
<description>Sets miter limit</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="value" required="1" vallist="0" default="" type="float">value</param>
<return type="void">void</return>
<insert>cpdf_setmiterlimit(int pdf_document, float value);</insert>
<dialog title="Insert cpdf_setmiterlimit">cpdf_setmiterlimit(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_setrgbcolor_fill">
<description>Sets filling color to rgb color value</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="red_value" required="1" vallist="0" default="" type="float">red_value</param>
<param name="green_value" required="1" vallist="0" default="" type="float">green_value</param>
<param name="blue_value" required="1" vallist="0" default="" type="float">blue_value</param>
<return type="void">void</return>
<insert>cpdf_setrgbcolor_fill(int pdf_document, float red_value, float green_value, float blue_value);</insert>
<dialog title="Insert cpdf_setrgbcolor_fill">cpdf_setrgbcolor_fill(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_setrgbcolor_stroke">
<description>Sets drawing color to rgb color value</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="red_value" required="1" vallist="0" default="" type="float">red_value</param>
<param name="green_value" required="1" vallist="0" default="" type="float">green_value</param>
<param name="blue_value" required="1" vallist="0" default="" type="float">blue_value</param>
<return type="void">void</return>
<insert>cpdf_setrgbcolor_stroke(int pdf_document, float red_value, float green_value, float blue_value);</insert>
<dialog title="Insert cpdf_setrgbcolor_stroke">cpdf_setrgbcolor_stroke(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_setrgbcolor">
<description>Sets drawing and filling color to rgb color value</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="red_value" required="1" vallist="0" default="" type="float">red_value</param>
<param name="green_value" required="1" vallist="0" default="" type="float">green_value</param>
<param name="blue_value" required="1" vallist="0" default="" type="float">blue_value</param>
<return type="void">void</return>
<insert>cpdf_setrgbcolor(int pdf_document, float red_value, float green_value, float blue_value);</insert>
<dialog title="Insert cpdf_setrgbcolor">cpdf_setrgbcolor(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_show_xy">
<description>Output text at position</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<param name="x-coor" required="1" vallist="0" default="" type="float">x-coor</param>
<param name="y-coor" required="1" vallist="0" default="" type="float">y-coor</param>
<param name="mode" required="0" vallist="0" default="" type="int">mode</param>
<return type="void">void</return>
<insert>cpdf_show_xy(int pdf_document, string text, float x-coor, float y-coor [,int mode]);</insert>
<dialog title="Insert cpdf_show_xy">cpdf_show_xy(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_show">
<description>Output text at current position</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="void">void</return>
<insert>cpdf_show(int pdf_document, string text);</insert>
<dialog title="Insert cpdf_show">cpdf_show(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_stringwidth">
<description>Returns width of text in current font</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="float">float</return>
<insert>cpdf_stringwidth(int pdf_document, string text);</insert>
<dialog title="Insert cpdf_stringwidth">cpdf_stringwidth(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_stroke">
<description>Draw line along path</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<return type="void">void</return>
<insert>cpdf_stroke(int pdf_document);</insert>
<dialog title="Insert cpdf_stroke">cpdf_stroke(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_text">
<description>Output text with parameters</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<param name="x-coor" required="1" vallist="0" default="" type="float">x-coor</param>
<param name="y-coor" required="1" vallist="0" default="" type="float">y-coor</param>
<param name="mode" required="0" vallist="0" default="" type="int">mode</param>
<param name="orientation" required="0" vallist="0" default="" type="float">orientation</param>
<param name="alignmode" required="0" vallist="0" default="" type="int">alignmode</param>
<return type="void">void</return>
<insert>cpdf_text(int pdf_document, string text, float x-coor, float y-coor [,int mode] [,float orientation] [,int alignmode]);</insert>
<dialog title="Insert cpdf_text">cpdf_text(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="cpdf_translate">
<description>Sets origin of coordinate system</description>
<param name="pdf_document" required="1" vallist="0" default="" type="int">pdf_document</param>
<param name="x-coor" required="1" vallist="0" default="" type="float">x-coor</param>
<param name="y-coor" required="1" vallist="0" default="" type="float">y-coor</param>
<param name="mode" required="0" vallist="0" default="" type="int">mode</param>
<return type="void">void</return>
<insert>cpdf_translate(int pdf_document, float x-coor, float y-coor [,int mode]);</insert>
<dialog title="Insert cpdf_translate">cpdf_translate(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="crack">
<function name="crack_check">
<description>Performs an obscure check with the given password</description>
<param name="dictionary" required="0" vallist="0" default="" type="resource">dictionary</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<return type="bool">bool</return>
<insert>crack_check([resource dictionary], string password);</insert>
<dialog title="Insert crack_check">crack_check(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="crack_closedict">
<description>Closes an open CrackLib dictionary </description>
<param name="dictionary" required="0" vallist="0" default="" type="resource">dictionary</param>
<return type="bool">bool</return>
<insert>crack_closedict([resource dictionary]);</insert>
<dialog title="Insert crack_closedict">crack_closedict(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="crack_getlastmessage">
<description>Returns the message from the last obscure check</description>
<return type="string">string</return>
<insert>crack_getlastmessage();</insert>
<dialog title="Insert crack_getlastmessage">crack_getlastmessage();</dialog>
<info title="Info window"></info>
</function>
<function name="crack_opendict">
<description>Opens a new CrackLib dictionary</description>
<param name="dictionary" required="1" vallist="0" default="" type="string">dictionary</param>
<return type="resource">resource</return>
<insert>crack_opendict(string dictionary);</insert>
<dialog title="Insert crack_opendict">crack_opendict(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="ctype">
<function name="ctype_alnum">
<description>Check for alphanumeric character(s)</description>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="bool">bool</return>
<insert>ctype_alnum(string text);</insert>
<dialog title="Insert ctype_alnum">ctype_alnum(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ctype_alpha">
<description>Check for alphabetic character(s)</description>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="bool">bool</return>
<insert>ctype_alpha(string text);</insert>
<dialog title="Insert ctype_alpha">ctype_alpha(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ctype_cntrl">
<description>Check for control character(s)</description>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="bool">bool</return>
<insert>ctype_cntrl(string text);</insert>
<dialog title="Insert ctype_cntrl">ctype_cntrl(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ctype_digit">
<description>Check for numeric character(s)</description>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="bool">bool</return>
<insert>ctype_digit(string text);</insert>
<dialog title="Insert ctype_digit">ctype_digit(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ctype_graph">
<description>Check for any printable character(s) except space</description>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="bool">bool</return>
<insert>ctype_graph(string text);</insert>
<dialog title="Insert ctype_graph">ctype_graph(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ctype_lower">
<description>Check for lowercase character(s)</description>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="bool">bool</return>
<insert>ctype_lower(string text);</insert>
<dialog title="Insert ctype_lower">ctype_lower(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ctype_print">
<description>Check for printable character(s)</description>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="bool">bool</return>
<insert>ctype_print(string text);</insert>
<dialog title="Insert ctype_print">ctype_print(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ctype_punct">
<description>
     Check for any printable character which is not whitespace or an
     alphanumeric character
    </description>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="bool">bool</return>
<insert>ctype_punct(string text);</insert>
<dialog title="Insert ctype_punct">ctype_punct(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ctype_space">
<description>Check for whitespace character(s)</description>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="bool">bool</return>
<insert>ctype_space(string text);</insert>
<dialog title="Insert ctype_space">ctype_space(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ctype_upper">
<description>Check for uppercase character(s)</description>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="bool">bool</return>
<insert>ctype_upper(string text);</insert>
<dialog title="Insert ctype_upper">ctype_upper(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ctype_xdigit">
<description>
     Check for character(s) representing a hexadecimal digit
    </description>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="bool">bool</return>
<insert>ctype_xdigit(string text);</insert>
<dialog title="Insert ctype_xdigit">ctype_xdigit(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="curl">
<function name="curl_close">
<description>Close a CURL session</description>
<param name="ch" required="1" vallist="0" default="" type="resource">ch</param>
<return type="void">void</return>
<insert>curl_close(resource ch);</insert>
<dialog title="Insert curl_close">curl_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="curl_errno">
<description>Return the last error number</description>
<param name="ch" required="1" vallist="0" default="" type="resource">ch</param>
<return type="int">int</return>
<insert>curl_errno(resource ch);</insert>
<dialog title="Insert curl_errno">curl_errno(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="curl_error">
<description>
     Return a string containing the last error for the current session 
    </description>
<param name="ch" required="1" vallist="0" default="" type="resource">ch</param>
<return type="string">string</return>
<insert>curl_error(resource ch);</insert>
<dialog title="Insert curl_error">curl_error(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="curl_exec">
<description>Perform a CURL session</description>
<param name="ch" required="1" vallist="0" default="" type="resource">ch</param>
<return type="bool">bool</return>
<insert>curl_exec(resource ch);</insert>
<dialog title="Insert curl_exec">curl_exec(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="curl_getinfo">
<description>
     Get information regarding a specific transfer
    </description>
<param name="ch" required="1" vallist="0" default="" type="resource">ch</param>
<param name="opt" required="0" vallist="0" default="" type="int">opt</param>
<return type="string">string</return>
<insert>curl_getinfo(resource ch [,int opt]);</insert>
<dialog title="Insert curl_getinfo">curl_getinfo(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="curl_init">
<description>Initialize a CURL session</description>
<param name="url" required="0" vallist="0" default="" type="string">url</param>
<return type="resource">resource</return>
<insert>curl_init([string url]);</insert>
<dialog title="Insert curl_init">curl_init(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="curl_setopt">
<description>Set an option for a CURL transfer</description>
<param name="ch" required="1" vallist="0" default="" type="resource">ch</param>
<param name="option" required="1" vallist="0" default="" type="string">option</param>
<param name="value" required="1" vallist="0" default="" type="mixed">value</param>
<return type="bool">bool</return>
<insert>curl_setopt(resource ch, string option, mixed value);</insert>
<dialog title="Insert curl_setopt">curl_setopt(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="curl_version">
<description>Return the current CURL version</description>
<return type="string">string</return>
<insert>curl_version();</insert>
<dialog title="Insert curl_version">curl_version();</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="cybercash">
<function name="cybercash_base64_decode">
<description>base64 decode data for Cybercash</description>
<param name="inbuff" required="1" vallist="0" default="" type="string">inbuff</param>
<return type="string">string</return>
<insert>cybercash_base64_decode(string inbuff);</insert>
<dialog title="Insert cybercash_base64_decode">cybercash_base64_decode(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="cybercash_base64_encode">
<description>base64 encode data for Cybercash</description>
<param name="inbuff" required="1" vallist="0" default="" type="string">inbuff</param>
<return type="string">string</return>
<insert>cybercash_base64_encode(string inbuff);</insert>
<dialog title="Insert cybercash_base64_encode">cybercash_base64_encode(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="cybercash_decr">
<description>Cybercash decrypt</description>
<param name="wmk" required="1" vallist="0" default="" type="string">wmk</param>
<param name="sk" required="1" vallist="0" default="" type="string">sk</param>
<param name="inbuff" required="1" vallist="0" default="" type="string">inbuff</param>
<return type="array">array</return>
<insert>cybercash_decr(string wmk, string sk, string inbuff);</insert>
<dialog title="Insert cybercash_decr">cybercash_decr(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="cybercash_encr">
<description>Cybercash encrypt</description>
<param name="wmk" required="1" vallist="0" default="" type="string">wmk</param>
<param name="sk" required="1" vallist="0" default="" type="string">sk</param>
<param name="inbuff" required="1" vallist="0" default="" type="string">inbuff</param>
<return type="array">array</return>
<insert>cybercash_encr(string wmk, string sk, string inbuff);</insert>
<dialog title="Insert cybercash_encr">cybercash_encr(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="cybermut">
<function name="cybermut_creerformulairecm">
<description>Generate HTML form of request for payment</description>
<param name="url_CM" required="1" vallist="0" default="" type="string">url_CM</param>
<param name="version" required="1" vallist="0" default="" type="string">version</param>
<param name="TPE" required="1" vallist="0" default="" type="string">TPE</param>
<param name="montant" required="1" vallist="0" default="" type="string">montant</param>
<param name="ref_commande" required="1" vallist="0" default="" type="string">ref_commande</param>
<param name="texte_libre" required="1" vallist="0" default="" type="string">texte_libre</param>
<param name="url_retour" required="1" vallist="0" default="" type="string">url_retour</param>
<param name="url_retour_ok" required="1" vallist="0" default="" type="string">url_retour_ok</param>
<param name="url_retour_err" required="1" vallist="0" default="" type="string">url_retour_err</param>
<param name="langue" required="1" vallist="0" default="" type="string">langue</param>
<param name="code_societe" required="1" vallist="0" default="" type="string">code_societe</param>
<param name="texte_bouton" required="1" vallist="0" default="" type="string">texte_bouton</param>
<return type="string">string</return>
<insert>cybermut_creerformulairecm(string url_CM, string version, string TPE, string montant, string ref_commande, string texte_libre, string url_retour, string url_retour_ok, string url_retour_err, string langue, string code_societe, string texte_bouton);</insert>
<dialog title="Insert cybermut_creerformulairecm">cybermut_creerformulairecm(%0, %1, %2, %3, %4, %5, %6, %7, %8, %9, %10, %11);</dialog>
<info title="Info window"></info>
</function>
<function name="cybermut_creerreponsecm">
<description>
     Generate the acknowledgement of delivery of the confirmation
     of payment
    </description>
<param name="phrase" required="1" vallist="0" default="" type="string">phrase</param>
<return type="string">string</return>
<insert>cybermut_creerreponsecm(string phrase);</insert>
<dialog title="Insert cybermut_creerreponsecm">cybermut_creerreponsecm(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="cybermut_testmac">
<description>
     Make sure that there no was data diddling contained
     in the received message of confirmation 
    </description>
<param name="code_MAC" required="1" vallist="0" default="" type="string">code_MAC</param>
<param name="version" required="1" vallist="0" default="" type="string">version</param>
<param name="TPE" required="1" vallist="0" default="" type="string">TPE</param>
<param name="cdate" required="1" vallist="0" default="" type="string">cdate</param>
<param name="montant" required="1" vallist="0" default="" type="string">montant</param>
<param name="ref_commande" required="1" vallist="0" default="" type="string">ref_commande</param>
<param name="texte_libre" required="1" vallist="0" default="" type="string">texte_libre</param>
<param name="code-retour" required="1" vallist="0" default="" type="string">code-retour</param>
<return type="bool">bool</return>
<insert>cybermut_testmac(string code_MAC, string version, string TPE, string cdate, string montant, string ref_commande, string texte_libre, string code-retour);</insert>
<dialog title="Insert cybermut_testmac">cybermut_testmac(%0, %1, %2, %3, %4, %5, %6, %7);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="cyrus">
<function name="cyrus_authenticate">
<description>Authenticate against a Cyrus IMAP server </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="mechlist" required="0" vallist="0" default="" type="string">mechlist</param>
<param name="service" required="0" vallist="0" default="" type="string">service</param>
<param name="user" required="0" vallist="0" default="" type="string">user</param>
<param name="minssf" required="0" vallist="0" default="" type="int">minssf</param>
<param name="maxssf" required="0" vallist="0" default="" type="int">maxssf</param>
<return type="bool">bool</return>
<insert>cyrus_authenticate(resource connection [,string mechlist] [,string service] [,string user] [,int minssf] [,int maxssf]);</insert>
<dialog title="Insert cyrus_authenticate">cyrus_authenticate(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="cyrus_bind">
<description>Bind callbacks to a Cyrus IMAP connection </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="callbacks" required="1" vallist="0" default="" type="array">callbacks</param>
<return type="bool">bool</return>
<insert>cyrus_bind(resource connection, array callbacks);</insert>
<dialog title="Insert cyrus_bind">cyrus_bind(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cyrus_close">
<description>Close connection to a Cyrus IMAP server </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<return type="bool">bool</return>
<insert>cyrus_close(resource connection);</insert>
<dialog title="Insert cyrus_close">cyrus_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="cyrus_connect">
<description>Connect to a Cyrus IMAP server </description>
<param name="host" required="0" vallist="0" default="" type="string">host</param>
<param name="port" required="0" vallist="0" default="" type="string">port</param>
<param name="flags" required="0" vallist="0" default="" type="int">flags</param>
<return type="resource">resource</return>
<insert>cyrus_connect([string host] [,string port] [,int flags]);</insert>
<dialog title="Insert cyrus_connect">cyrus_connect(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="cyrus_query">
<description>Send a query to a Cyrus IMAP server </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<return type="bool">bool</return>
<insert>cyrus_query(resource connection, string query);</insert>
<dialog title="Insert cyrus_query">cyrus_query(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="cyrus_unbind">
<description>Unbind ... </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="trigger_name" required="1" vallist="0" default="" type="string">trigger_name</param>
<return type="bool">bool</return>
<insert>cyrus_unbind(resource connection, string trigger_name);</insert>
<dialog title="Insert cyrus_unbind">cyrus_unbind(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="datetime">
<function name="checkdate">
<description>Validate a gregorian date</description>
<param name="month" required="1" vallist="0" default="" type="int">month</param>
<param name="day" required="1" vallist="0" default="" type="int">day</param>
<param name="year" required="1" vallist="0" default="" type="int">year</param>
<return type="bool">bool</return>
<insert>checkdate(int month, int day, int year);</insert>
<dialog title="Insert checkdate">checkdate(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="date">
<description>Format a local time/date</description>
<param name="format" required="1" vallist="0" default="" type="string">format</param>
<param name="
        timestamp
       " required="0" vallist="0" default="" type="int">
        timestamp
       </param>
<return type="string">string</return>
<insert>date(string format [,int 
        timestamp
       ]);</insert>
<dialog title="Insert date">date(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="getdate">
<description>Get date/time information</description>
<param name="timestamp" required="0" vallist="0" default="" type="int">timestamp</param>
<return type="array">array</return>
<insert>getdate([int timestamp]);</insert>
<dialog title="Insert getdate">getdate(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="gettimeofday">
<description>Get current time</description>
<return type="array">array</return>
<insert>gettimeofday();</insert>
<dialog title="Insert gettimeofday">gettimeofday();</dialog>
<info title="Info window"></info>
</function>
<function name="gmdate">
<description>Format a GMT/UTC date/time</description>
<param name="format" required="1" vallist="0" default="" type="string">format</param>
<param name="timestamp" required="0" vallist="0" default="" type="int">timestamp</param>
<return type="string">string</return>
<insert>gmdate(string format [,int timestamp]);</insert>
<dialog title="Insert gmdate">gmdate(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gmmktime">
<description>Get UNIX timestamp for a GMT date</description>
<param name="hour" required="1" vallist="0" default="" type="int">hour</param>
<param name="minute" required="1" vallist="0" default="" type="int">minute</param>
<param name="second" required="1" vallist="0" default="" type="int">second</param>
<param name="month" required="1" vallist="0" default="" type="int">month</param>
<param name="day" required="1" vallist="0" default="" type="int">day</param>
<param name="year" required="1" vallist="0" default="" type="int">year</param>
<param name="is_dst" required="0" vallist="0" default="" type="int">is_dst</param>
<return type="int">int</return>
<insert>gmmktime(int hour, int minute, int second, int month, int day, int year [,int is_dst]);</insert>
<dialog title="Insert gmmktime">gmmktime(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="gmstrftime">
<description>
     Format a GMT/UTC time/date according to locale settings
    </description>
<param name="format" required="1" vallist="0" default="" type="string">format</param>
<param name="timestamp" required="0" vallist="0" default="" type="int">timestamp</param>
<return type="string">string</return>
<insert>gmstrftime(string format [,int timestamp]);</insert>
<dialog title="Insert gmstrftime">gmstrftime(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="localtime">
<description>Get the local time</description>
<param name="
        timestamp
       " required="0" vallist="0" default="" type="int">
        timestamp
       </param>
<param name="
        is_associative
       " required="0" vallist="0" default="" type="bool">
        is_associative
       </param>
<return type="array">array</return>
<insert>localtime([int 
        timestamp
       ] [,bool 
        is_associative
       ]);</insert>
<dialog title="Insert localtime">localtime(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="microtime">
<description>
     Return current UNIX timestamp with microseconds</description>
<return type="string">string</return>
<insert>microtime();</insert>
<dialog title="Insert microtime">microtime();</dialog>
<info title="Info window"></info>
</function>
<function name="mktime">
<description>Get UNIX timestamp for a date</description>
<param name="hour" required="1" vallist="0" default="" type="int">hour</param>
<param name="minute" required="1" vallist="0" default="" type="int">minute</param>
<param name="second" required="1" vallist="0" default="" type="int">second</param>
<param name="month" required="1" vallist="0" default="" type="int">month</param>
<param name="day" required="1" vallist="0" default="" type="int">day</param>
<param name="year" required="1" vallist="0" default="" type="int">year</param>
<param name="is_dst" required="0" vallist="0" default="" type="int">is_dst</param>
<return type="int">int</return>
<insert>mktime(int hour, int minute, int second, int month, int day, int year [,int is_dst]);</insert>
<dialog title="Insert mktime">mktime(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="strftime">
<description>
     Format a local time/date according to locale settings
    </description>
<param name="format" required="1" vallist="0" default="" type="string">format</param>
<param name="
        timestamp
       " required="0" vallist="0" default="" type="int">
        timestamp
       </param>
<return type="string">string</return>
<insert>strftime(string format [,int 
        timestamp
       ]);</insert>
<dialog title="Insert strftime">strftime(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="strtotime">
<description>
     Parse about any English textual datetime description into a UNIX
     timestamp
    </description>
<param name="time" required="1" vallist="0" default="" type="string">time</param>
<param name="now" required="0" vallist="0" default="" type="int">now</param>
<return type="int">int</return>
<insert>strtotime(string time [,int now]);</insert>
<dialog title="Insert strtotime">strtotime(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="time">
<description>Return current UNIX timestamp</description>
<return type="int">int</return>
<insert>time();</insert>
<dialog title="Insert time">time();</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="dba">
<function name="dba_close">
<description>Close database</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="void">void</return>
<insert>dba_close(resource handle);</insert>
<dialog title="Insert dba_close">dba_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dba_delete">
<description>Delete entry specified by key</description>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="bool">bool</return>
<insert>dba_delete(string key, resource handle);</insert>
<dialog title="Insert dba_delete">dba_delete(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dba_exists">
<description>Check whether key exists</description>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="bool">bool</return>
<insert>dba_exists(string key, resource handle);</insert>
<dialog title="Insert dba_exists">dba_exists(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dba_fetch">
<description>Fetch data specified by key</description>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<param name="skip" required="0" vallist="0" default="" type="int">skip</param>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="string">string</return>
<insert>dba_fetch(string key [,int skip], resource handle);</insert>
<dialog title="Insert dba_fetch">dba_fetch(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="dba_firstkey">
<description>Fetch first key</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="string">string</return>
<insert>dba_firstkey(resource handle);</insert>
<dialog title="Insert dba_firstkey">dba_firstkey(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dba_handlers">
<description>List handlers available</description>
<return type="array">array</return>
<insert>dba_handlers();</insert>
<dialog title="Insert dba_handlers">dba_handlers();</dialog>
<info title="Info window"></info>
</function>
<function name="dba_insert">
<description>Insert entry</description>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<param name="value" required="1" vallist="0" default="" type="string">value</param>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="bool">bool</return>
<insert>dba_insert(string key, string value, resource handle);</insert>
<dialog title="Insert dba_insert">dba_insert(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="dba_list">
<description>List all open database files</description>
<return type="array">array</return>
<insert>dba_list();</insert>
<dialog title="Insert dba_list">dba_list();</dialog>
<info title="Info window"></info>
</function>
<function name="dba_nextkey">
<description>Fetch next key</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="string">string</return>
<insert>dba_nextkey(resource handle);</insert>
<dialog title="Insert dba_nextkey">dba_nextkey(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dba_open">
<description>Open database</description>
<param name="path" required="1" vallist="0" default="" type="string">path</param>
<param name="mode" required="1" vallist="0" default="" type="string">mode</param>
<param name="handler" required="1" vallist="0" default="" type="string">handler</param>
<return type="resource">resource</return>
<insert>dba_open(string path, string mode, string handler);</insert>
<dialog title="Insert dba_open">dba_open(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="dba_optimize">
<description>Optimize database</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="bool">bool</return>
<insert>dba_optimize(resource handle);</insert>
<dialog title="Insert dba_optimize">dba_optimize(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dba_popen">
<description>Open database persistently</description>
<param name="path" required="1" vallist="0" default="" type="string">path</param>
<param name="mode" required="1" vallist="0" default="" type="string">mode</param>
<param name="handler" required="1" vallist="0" default="" type="string">handler</param>
<return type="resource">resource</return>
<insert>dba_popen(string path, string mode, string handler);</insert>
<dialog title="Insert dba_popen">dba_popen(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="dba_replace">
<description>Replace or insert entry</description>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<param name="value" required="1" vallist="0" default="" type="string">value</param>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="bool">bool</return>
<insert>dba_replace(string key, string value, resource handle);</insert>
<dialog title="Insert dba_replace">dba_replace(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="dba_sync">
<description>Synchronize database</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="bool">bool</return>
<insert>dba_sync(resource handle);</insert>
<dialog title="Insert dba_sync">dba_sync(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="dbase">
<function name="dbase_add_record">
<description>Add a record to a dBase database</description>
<param name="dbase_identifier" required="1" vallist="0" default="" type="int">dbase_identifier</param>
<param name="record" required="1" vallist="0" default="" type="array">record</param>
<return type="bool">bool</return>
<insert>dbase_add_record(int dbase_identifier, array record);</insert>
<dialog title="Insert dbase_add_record">dbase_add_record(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbase_close">
<description>Close a dBase database</description>
<param name="dbase_identifier" required="1" vallist="0" default="" type="int">dbase_identifier</param>
<return type="bool">bool</return>
<insert>dbase_close(int dbase_identifier);</insert>
<dialog title="Insert dbase_close">dbase_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dbase_create">
<description>Creates a dBase database</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="fields" required="1" vallist="0" default="" type="array">fields</param>
<return type="int">int</return>
<insert>dbase_create(string filename, array fields);</insert>
<dialog title="Insert dbase_create">dbase_create(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbase_delete_record">
<description>Deletes a record from a dBase database</description>
<param name="dbase_identifier" required="1" vallist="0" default="" type="int">dbase_identifier</param>
<param name="record" required="1" vallist="0" default="" type="int">record</param>
<return type="bool">bool</return>
<insert>dbase_delete_record(int dbase_identifier, int record);</insert>
<dialog title="Insert dbase_delete_record">dbase_delete_record(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbase_get_record_with_names">
<description>
     Gets a record from a dBase database as an associative array
    </description>
<param name="dbase_identifier" required="1" vallist="0" default="" type="int">dbase_identifier</param>
<param name="record" required="1" vallist="0" default="" type="int">record</param>
<return type="array">array</return>
<insert>dbase_get_record_with_names(int dbase_identifier, int record);</insert>
<dialog title="Insert dbase_get_record_with_names">dbase_get_record_with_names(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbase_get_record">
<description>Gets a record from a dBase database</description>
<param name="dbase_identifier" required="1" vallist="0" default="" type="int">dbase_identifier</param>
<param name="record" required="1" vallist="0" default="" type="int">record</param>
<return type="array">array</return>
<insert>dbase_get_record(int dbase_identifier, int record);</insert>
<dialog title="Insert dbase_get_record">dbase_get_record(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbase_numfields">
<description>
     Find out how many fields are in a dBase database
    </description>
<param name="dbase_identifier" required="1" vallist="0" default="" type="int">dbase_identifier</param>
<return type="int">int</return>
<insert>dbase_numfields(int dbase_identifier);</insert>
<dialog title="Insert dbase_numfields">dbase_numfields(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dbase_numrecords">
<description>
     Find out how many records are in a dBase database
    </description>
<param name="dbase_identifier" required="1" vallist="0" default="" type="int">dbase_identifier</param>
<return type="int">int</return>
<insert>dbase_numrecords(int dbase_identifier);</insert>
<dialog title="Insert dbase_numrecords">dbase_numrecords(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dbase_open">
<description>Opens a dBase database</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="flags" required="1" vallist="0" default="" type="int">flags</param>
<return type="int">int</return>
<insert>dbase_open(string filename, int flags);</insert>
<dialog title="Insert dbase_open">dbase_open(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbase_pack">
<description>Packs a dBase database</description>
<param name="dbase_identifier" required="1" vallist="0" default="" type="int">dbase_identifier</param>
<return type="bool">bool</return>
<insert>dbase_pack(int dbase_identifier);</insert>
<dialog title="Insert dbase_pack">dbase_pack(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dbase_replace_record">
<description>Replace a record in a dBase database</description>
<param name="dbase_identifier" required="1" vallist="0" default="" type="int">dbase_identifier</param>
<param name="record" required="1" vallist="0" default="" type="array">record</param>
<param name="dbase_record_number" required="1" vallist="0" default="" type="int">dbase_record_number</param>
<return type="bool">bool</return>
<insert>dbase_replace_record(int dbase_identifier, array record, int dbase_record_number);</insert>
<dialog title="Insert dbase_replace_record">dbase_replace_record(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="dbm">
<function name="dblist">
<description>
     Describes the DBM-compatible library being used
    </description>
<return type="string">string</return>
<insert>dblist();</insert>
<dialog title="Insert dblist">dblist();</dialog>
<info title="Info window"></info>
</function>
<function name="dbmclose">
<description>Closes a dbm database</description>
<param name="dbm_identifier" required="1" vallist="0" default="" type="resource">dbm_identifier</param>
<return type="bool">bool</return>
<insert>dbmclose(resource dbm_identifier);</insert>
<dialog title="Insert dbmclose">dbmclose(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dbmdelete">
<description>
     Deletes the value for a key from a DBM database
    </description>
<param name="dbm_identifier" required="1" vallist="0" default="" type="resource">dbm_identifier</param>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<return type="bool">bool</return>
<insert>dbmdelete(resource dbm_identifier, string key);</insert>
<dialog title="Insert dbmdelete">dbmdelete(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbmexists">
<description>
     Tells if a value exists for a key in a DBM database
    </description>
<param name="dbm_identifier" required="1" vallist="0" default="" type="resource">dbm_identifier</param>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<return type="bool">bool</return>
<insert>dbmexists(resource dbm_identifier, string key);</insert>
<dialog title="Insert dbmexists">dbmexists(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbmfetch">
<description>
     Fetches a value for a key from a DBM database
    </description>
<param name="dbm_identifier" required="1" vallist="0" default="" type="resource">dbm_identifier</param>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<return type="string">string</return>
<insert>dbmfetch(resource dbm_identifier, string key);</insert>
<dialog title="Insert dbmfetch">dbmfetch(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbmfirstkey">
<description>
     Retrieves the first key from a DBM database
    </description>
<param name="dbm_identifier" required="1" vallist="0" default="" type="resource">dbm_identifier</param>
<return type="string">string</return>
<insert>dbmfirstkey(resource dbm_identifier);</insert>
<dialog title="Insert dbmfirstkey">dbmfirstkey(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dbminsert">
<description>
     Inserts a value for a key in a DBM database
    </description>
<param name="dbm_identifier" required="1" vallist="0" default="" type="resource">dbm_identifier</param>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<param name="value" required="1" vallist="0" default="" type="string">value</param>
<return type="int">int</return>
<insert>dbminsert(resource dbm_identifier, string key, string value);</insert>
<dialog title="Insert dbminsert">dbminsert(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="dbmnextkey">
<description>
     Retrieves the next key from a DBM database</description>
<param name="dbm_identifier" required="1" vallist="0" default="" type="resource">dbm_identifier</param>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<return type="string">string</return>
<insert>dbmnextkey(resource dbm_identifier, string key);</insert>
<dialog title="Insert dbmnextkey">dbmnextkey(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbmopen">
<description>Opens a DBM database</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="flags" required="1" vallist="0" default="" type="string">flags</param>
<return type="resource">resource</return>
<insert>dbmopen(string filename, string flags);</insert>
<dialog title="Insert dbmopen">dbmopen(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbmreplace">
<description>
     Replaces the value for a key in a DBM database
    </description>
<param name="dbm_identifier" required="1" vallist="0" default="" type="resource">dbm_identifier</param>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<param name="value" required="1" vallist="0" default="" type="string">value</param>
<return type="int">int</return>
<insert>dbmreplace(resource dbm_identifier, string key, string value);</insert>
<dialog title="Insert dbmreplace">dbmreplace(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="dbplus">
<function name="dbplus_add">
<description>Add a tuple to a relation</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<param name="tuple" required="1" vallist="0" default="" type="array">tuple</param>
<return type="int">int</return>
<insert>dbplus_add(resource relation, array tuple);</insert>
<dialog title="Insert dbplus_add">dbplus_add(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_aql">
<description>Perform AQL query</description>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<param name="server" required="0" vallist="0" default="" type="string">server</param>
<param name="dbpath" required="0" vallist="0" default="" type="string">dbpath</param>
<return type="resource">resource</return>
<insert>dbplus_aql(string query [,string server] [,string dbpath]);</insert>
<dialog title="Insert dbplus_aql">dbplus_aql(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_chdir">
<description>Get/Set database virtual current directory</description>
<param name="newdir" required="0" vallist="0" default="" type="string">newdir</param>
<return type="string">string</return>
<insert>dbplus_chdir([string newdir]);</insert>
<dialog title="Insert dbplus_chdir">dbplus_chdir(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_close">
<description>Close a relation</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<return type="int">int</return>
<insert>dbplus_close(resource relation);</insert>
<dialog title="Insert dbplus_close">dbplus_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_curr">
<description>Get current tuple from relation</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<param name="tuple" required="1" vallist="0" default="" type="array">tuple</param>
<return type="int">int</return>
<insert>dbplus_curr(resource relation, array tuple);</insert>
<dialog title="Insert dbplus_curr">dbplus_curr(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_errcode">
<description>
     Get error string for given errorcode or last error
    </description>
<param name="errno" required="1" vallist="0" default="" type="int">errno</param>
<return type="string">string</return>
<insert>dbplus_errcode(int errno);</insert>
<dialog title="Insert dbplus_errcode">dbplus_errcode(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_errno">
<description>Get error code for last operation</description>
<return type="int">int</return>
<insert>dbplus_errno();</insert>
<dialog title="Insert dbplus_errno">dbplus_errno();</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_find">
<description>Set a constraint on a relation</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<param name="constraints" required="1" vallist="0" default="" type="array">constraints</param>
<param name="tuple" required="1" vallist="0" default="" type="mixed">tuple</param>
<return type="int">int</return>
<insert>dbplus_find(resource relation, array constraints, mixed tuple);</insert>
<dialog title="Insert dbplus_find">dbplus_find(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_first">
<description>Get first tuple from relation</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<param name="tuple" required="1" vallist="0" default="" type="array">tuple</param>
<return type="int">int</return>
<insert>dbplus_first(resource relation, array tuple);</insert>
<dialog title="Insert dbplus_first">dbplus_first(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_flush">
<description>Flush all changes made on a relation</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<return type="int">int</return>
<insert>dbplus_flush(resource relation);</insert>
<dialog title="Insert dbplus_flush">dbplus_flush(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_freealllocks">
<description>Free all locks held by this client</description>
<return type="int">int</return>
<insert>dbplus_freealllocks();</insert>
<dialog title="Insert dbplus_freealllocks">dbplus_freealllocks();</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_freelock">
<description>Release write lock on tuple</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<param name="tname" required="1" vallist="0" default="" type="string">tname</param>
<return type="int">int</return>
<insert>dbplus_freelock(resource relation, string tname);</insert>
<dialog title="Insert dbplus_freelock">dbplus_freelock(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_freerlocks">
<description>Free all tuple locks on given relation</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<return type="int">int</return>
<insert>dbplus_freerlocks(resource relation);</insert>
<dialog title="Insert dbplus_freerlocks">dbplus_freerlocks(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_getlock">
<description>Get a write lock on a tuple</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<param name="tname" required="1" vallist="0" default="" type="string">tname</param>
<return type="int">int</return>
<insert>dbplus_getlock(resource relation, string tname);</insert>
<dialog title="Insert dbplus_getlock">dbplus_getlock(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_getunique">
<description>Get a id number unique to a relation</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<param name="uniqueid" required="1" vallist="0" default="" type="int">uniqueid</param>
<return type="int">int</return>
<insert>dbplus_getunique(resource relation, int uniqueid);</insert>
<dialog title="Insert dbplus_getunique">dbplus_getunique(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_info">
<description>???</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<return type="int">int</return>
<insert>dbplus_info(resource relation, string key);</insert>
<dialog title="Insert dbplus_info">dbplus_info(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_last">
<description>Get last tuple from relation</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<param name="tuple" required="1" vallist="0" default="" type="array">tuple</param>
<return type="int">int</return>
<insert>dbplus_last(resource relation, array tuple);</insert>
<dialog title="Insert dbplus_last">dbplus_last(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_lockrel">
<description>Request write lock on relation</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<return type="int">int</return>
<insert>dbplus_lockrel(resource relation);</insert>
<dialog title="Insert dbplus_lockrel">dbplus_lockrel(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_next">
<description>Get next tuple from relation</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<return type="int">int</return>
<insert>dbplus_next(resource relation);</insert>
<dialog title="Insert dbplus_next">dbplus_next(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_open">
<description>Open relation file</description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="resource">resource</return>
<insert>dbplus_open(string name);</insert>
<dialog title="Insert dbplus_open">dbplus_open(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_prev">
<description>Get previous tuple from relation</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<param name="tuple" required="1" vallist="0" default="" type="array">tuple</param>
<return type="int">int</return>
<insert>dbplus_prev(resource relation, array tuple);</insert>
<dialog title="Insert dbplus_prev">dbplus_prev(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_rchperm">
<description>Change relation permissions</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<param name="mask" required="1" vallist="0" default="" type="int">mask</param>
<param name="user" required="1" vallist="0" default="" type="string">user</param>
<param name="group" required="1" vallist="0" default="" type="string">group</param>
<return type="int">int</return>
<insert>dbplus_rchperm(resource relation, int mask, string user, string group);</insert>
<dialog title="Insert dbplus_rchperm">dbplus_rchperm(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_rcreate">
<description>Creates a new DB++ relation</description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<param name="domlist" required="1" vallist="0" default="" type="mixed">domlist</param>
<param name="overwrite" required="0" vallist="0" default="" type="bool">overwrite</param>
<return type="resource">resource</return>
<insert>dbplus_rcreate(string name, mixed domlist [,bool overwrite]);</insert>
<dialog title="Insert dbplus_rcreate">dbplus_rcreate(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_rcrtexact">
<description>Creates an exact but empty copy of a relation including indices</description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<param name="overwrite" required="1" vallist="0" default="" type="bool">overwrite</param>
<return type="resource">resource</return>
<insert>dbplus_rcrtexact(string name, resource relation, bool overwrite);</insert>
<dialog title="Insert dbplus_rcrtexact">dbplus_rcrtexact(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_rcrtlike">
<description>Creates an empty copy of a relation with default indices</description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<param name="flag" required="1" vallist="0" default="" type="int">flag</param>
<return type="resource">resource</return>
<insert>dbplus_rcrtlike(string name, resource relation, int flag);</insert>
<dialog title="Insert dbplus_rcrtlike">dbplus_rcrtlike(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_resolve">
<description>Resolve host information for relation</description>
<param name="relation_name" required="1" vallist="0" default="" type="string">relation_name</param>
<return type="int">int</return>
<insert>dbplus_resolve(string relation_name);</insert>
<dialog title="Insert dbplus_resolve">dbplus_resolve(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_restorepos">
<description>???</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<param name="tuple" required="1" vallist="0" default="" type="array">tuple</param>
<return type="int">int</return>
<insert>dbplus_restorepos(resource relation, array tuple);</insert>
<dialog title="Insert dbplus_restorepos">dbplus_restorepos(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_rkeys">
<description>Specify new primary key for a relation</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<param name="domlist" required="1" vallist="0" default="" type="mixed">domlist</param>
<return type="resource">resource</return>
<insert>dbplus_rkeys(resource relation, mixed domlist);</insert>
<dialog title="Insert dbplus_rkeys">dbplus_rkeys(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_ropen">
<description>Open relation file local</description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="resource">resource</return>
<insert>dbplus_ropen(string name);</insert>
<dialog title="Insert dbplus_ropen">dbplus_ropen(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_rquery">
<description>Perform local (raw) AQL query</description>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<param name="dbpath" required="1" vallist="0" default="" type="string">dbpath</param>
<return type="int">int</return>
<insert>dbplus_rquery(string query, string dbpath);</insert>
<dialog title="Insert dbplus_rquery">dbplus_rquery(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_rrename">
<description>Rename a relation</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="int">int</return>
<insert>dbplus_rrename(resource relation, string name);</insert>
<dialog title="Insert dbplus_rrename">dbplus_rrename(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_rsecindex">
<description>
     Create a new secondary index for a relation
    </description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<param name="domlist" required="1" vallist="0" default="" type="mixed">domlist</param>
<param name="type" required="1" vallist="0" default="" type="int">type</param>
<return type="resource">resource</return>
<insert>dbplus_rsecindex(resource relation, mixed domlist, int type);</insert>
<dialog title="Insert dbplus_rsecindex">dbplus_rsecindex(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_runlink">
<description>Remove relation from filesystem</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<return type="int">int</return>
<insert>dbplus_runlink(resource relation);</insert>
<dialog title="Insert dbplus_runlink">dbplus_runlink(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_rzap">
<description>Remove all tuples from relation</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<return type="int">int</return>
<insert>dbplus_rzap(resource relation);</insert>
<dialog title="Insert dbplus_rzap">dbplus_rzap(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_savepos">
<description>???</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<return type="int">int</return>
<insert>dbplus_savepos(resource relation);</insert>
<dialog title="Insert dbplus_savepos">dbplus_savepos(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_setindex">
<description>???</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<param name="idx_name" required="1" vallist="0" default="" type="string">idx_name</param>
<return type="int">int</return>
<insert>dbplus_setindex(resource relation, string idx_name);</insert>
<dialog title="Insert dbplus_setindex">dbplus_setindex(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_setindexbynumber">
<description>???</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<param name="idx_number" required="1" vallist="0" default="" type="int">idx_number</param>
<return type="int">int</return>
<insert>dbplus_setindexbynumber(resource relation, int idx_number);</insert>
<dialog title="Insert dbplus_setindexbynumber">dbplus_setindexbynumber(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_sql">
<description>Perform SQL query</description>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<param name="server" required="1" vallist="0" default="" type="string">server</param>
<param name="dbpath" required="1" vallist="0" default="" type="string">dbpath</param>
<return type="resource">resource</return>
<insert>dbplus_sql(string query, string server, string dbpath);</insert>
<dialog title="Insert dbplus_sql">dbplus_sql(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_tcl">
<description>Execute TCL code on server side</description>
<param name="sid" required="1" vallist="0" default="" type="int">sid</param>
<param name="script" required="1" vallist="0" default="" type="string">script</param>
<return type="int">int</return>
<insert>dbplus_tcl(int sid, string script);</insert>
<dialog title="Insert dbplus_tcl">dbplus_tcl(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_tremove">
<description>Remove tuple and return new current tuple</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<param name="tuple" required="1" vallist="0" default="" type="array">tuple</param>
<param name="current" required="0" vallist="0" default="" type="array">current</param>
<return type="int">int</return>
<insert>dbplus_tremove(resource relation, array tuple [,array current]);</insert>
<dialog title="Insert dbplus_tremove">dbplus_tremove(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_undo">
<description>???</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<return type="int">int</return>
<insert>dbplus_undo(resource relation);</insert>
<dialog title="Insert dbplus_undo">dbplus_undo(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_undoprepare">
<description>???</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<return type="int">int</return>
<insert>dbplus_undoprepare(resource relation);</insert>
<dialog title="Insert dbplus_undoprepare">dbplus_undoprepare(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_unlockrel">
<description>Give up write lock on relation</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<return type="int">int</return>
<insert>dbplus_unlockrel(resource relation);</insert>
<dialog title="Insert dbplus_unlockrel">dbplus_unlockrel(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_unselect">
<description>Remove a constraint from relation</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<return type="int">int</return>
<insert>dbplus_unselect(resource relation);</insert>
<dialog title="Insert dbplus_unselect">dbplus_unselect(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_update">
<description>Update specified tuple in relation</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<param name="old" required="1" vallist="0" default="" type="array">old</param>
<param name="new" required="1" vallist="0" default="" type="array">new</param>
<return type="int">int</return>
<insert>dbplus_update(resource relation, array old, array new);</insert>
<dialog title="Insert dbplus_update">dbplus_update(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_xlockrel">
<description>Request exclusive lock on relation</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<return type="int">int</return>
<insert>dbplus_xlockrel(resource relation);</insert>
<dialog title="Insert dbplus_xlockrel">dbplus_xlockrel(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dbplus_xunlockrel">
<description>Free exclusive lock on relation</description>
<param name="relation" required="1" vallist="0" default="" type="resource">relation</param>
<return type="int">int</return>
<insert>dbplus_xunlockrel(resource relation);</insert>
<dialog title="Insert dbplus_xunlockrel">dbplus_xunlockrel(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="dbx">
<function name="dbx_close">
<description>Close an open connection/database</description>
<param name="link_identifier" required="1" vallist="0" default="" type="object">link_identifier</param>
<return type="bool">bool</return>
<insert>dbx_close(object link_identifier);</insert>
<dialog title="Insert dbx_close">dbx_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dbx_compare">
<description>Compare two rows for sorting purposes</description>
<param name="row_a" required="1" vallist="0" default="" type="array">row_a</param>
<param name="row_b" required="1" vallist="0" default="" type="array">row_b</param>
<param name="column_key" required="1" vallist="0" default="" type="string">column_key</param>
<param name="flags" required="0" vallist="0" default="" type="int">flags</param>
<return type="int">int</return>
<insert>dbx_compare(array row_a, array row_b, string column_key [,int flags]);</insert>
<dialog title="Insert dbx_compare">dbx_compare(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="dbx_connect">
<description>Open a connection/database</description>
<param name="module" required="1" vallist="0" default="" type="mixed">module</param>
<param name="host" required="1" vallist="0" default="" type="string">host</param>
<param name="database" required="1" vallist="0" default="" type="string">database</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="persistent" required="0" vallist="0" default="" type="int">persistent</param>
<return type="object">object</return>
<insert>dbx_connect(mixed module, string host, string database, string username, string password [,int persistent]);</insert>
<dialog title="Insert dbx_connect">dbx_connect(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="dbx_error">
<description>
     Report the error message of the latest function call in the
     module (not just in the connection)
    </description>
<param name="link_identifier" required="1" vallist="0" default="" type="object">link_identifier</param>
<return type="string">string</return>
<insert>dbx_error(object link_identifier);</insert>
<dialog title="Insert dbx_error">dbx_error(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dbx_escape_string">
<description>
     Escape a string so it can safely be used in an sql-statement.
    </description>
<param name="link_identifier" required="1" vallist="0" default="" type="object">link_identifier</param>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="string">string</return>
<insert>dbx_escape_string(object link_identifier, string text);</insert>
<dialog title="Insert dbx_escape_string">dbx_escape_string(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dbx_query">
<description>Send a query and fetch all results (if any)</description>
<param name="link_identifier" required="1" vallist="0" default="" type="object">link_identifier</param>
<param name="sql_statement" required="1" vallist="0" default="" type="string">sql_statement</param>
<param name="flags" required="0" vallist="0" default="" type="long">flags</param>
<return type="object">object</return>
<insert>dbx_query(object link_identifier, string sql_statement [,long flags]);</insert>
<dialog title="Insert dbx_query">dbx_query(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="dbx_sort">
<description>
     Sort a result from a dbx_query by a custom sort function
    </description>
<param name="result" required="1" vallist="0" default="" type="object">result</param>
<param name="user_compare_function" required="1" vallist="0" default="" type="string">user_compare_function</param>
<return type="bool">bool</return>
<insert>dbx_sort(object result, string user_compare_function);</insert>
<dialog title="Insert dbx_sort">dbx_sort(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="dio">
<function name="dio_close">
<description>Closes the file descriptor given by fd</description>
<param name="fd" required="1" vallist="0" default="" type="resource">fd</param>
<return type="void">void</return>
<insert>dio_close(resource fd);</insert>
<dialog title="Insert dio_close">dio_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dio_fcntl">
<description>Performs a c library fcntl on fd</description>
<param name="fd" required="1" vallist="0" default="" type="resource">fd</param>
<param name="cmd" required="1" vallist="0" default="" type="int">cmd</param>
<param name="arg" required="0" vallist="0" default="" type="mixed">arg</param>
<return type="mixed">mixed</return>
<insert>dio_fcntl(resource fd, int cmd [,mixed arg]);</insert>
<dialog title="Insert dio_fcntl">dio_fcntl(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="dio_open">
<description>
     Opens a new filename with specified permissions of flags and
     creation permissions of mode
    </description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="flags" required="1" vallist="0" default="" type="int">flags</param>
<param name="mode" required="0" vallist="0" default="" type="int">mode</param>
<return type="resource">resource</return>
<insert>dio_open(string filename, int flags [,int mode]);</insert>
<dialog title="Insert dio_open">dio_open(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="dio_read">
<description>
     Reads n bytes from fd and returns them, if n is not specified,
     reads 1k block
    </description>
<param name="fd" required="1" vallist="0" default="" type="resource">fd</param>
<param name="n" required="0" vallist="0" default="" type="int">n</param>
<return type="string">string</return>
<insert>dio_read(resource fd [,int n]);</insert>
<dialog title="Insert dio_read">dio_read(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dio_seek">
<description>Seeks to pos on fd from whence</description>
<param name="fd" required="1" vallist="0" default="" type="resource">fd</param>
<param name="pos" required="1" vallist="0" default="" type="int">pos</param>
<param name="whence" required="1" vallist="0" default="" type="int">whence</param>
<return type="int">int</return>
<insert>dio_seek(resource fd, int pos, int whence);</insert>
<dialog title="Insert dio_seek">dio_seek(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="dio_stat">
<description>
     Gets stat information about the file descriptor fd
    </description>
<param name="fd" required="1" vallist="0" default="" type="resource">fd</param>
<return type="array">array</return>
<insert>dio_stat(resource fd);</insert>
<dialog title="Insert dio_stat">dio_stat(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dio_tcsetattr">
<description>
     Sets terminal attributes and baud rate for a serial port
    </description>
<param name="fd" required="1" vallist="0" default="" type="resource">fd</param>
<param name="options" required="1" vallist="0" default="" type="array">options</param>
<return type=""></return>
<insert>dio_tcsetattr(resource fd, array options);</insert>
<dialog title="Insert dio_tcsetattr">dio_tcsetattr(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dio_truncate">
<description>
     Truncates file descriptor fd to offset bytes 
    </description>
<param name="fd" required="1" vallist="0" default="" type="resource">fd</param>
<param name="offset" required="1" vallist="0" default="" type="int">offset</param>
<return type="bool">bool</return>
<insert>dio_truncate(resource fd, int offset);</insert>
<dialog title="Insert dio_truncate">dio_truncate(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dio_write">
<description>
     Writes data to fd with optional truncation at length 
    </description>
<param name="fd" required="1" vallist="0" default="" type="resource">fd</param>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<param name="len" required="0" vallist="0" default="" type="int">len</param>
<return type="int">int</return>
<insert>dio_write(resource fd, string data [,int len]);</insert>
<dialog title="Insert dio_write">dio_write(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="dir">
<function name="chdir">
<description>Change directory</description>
<param name="directory" required="1" vallist="0" default="" type="string">directory</param>
<return type="bool">bool</return>
<insert>chdir(string directory);</insert>
<dialog title="Insert chdir">chdir(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="chroot">
<description>Change the root directory</description>
<param name="directory" required="1" vallist="0" default="" type="string">directory</param>
<return type="bool">bool</return>
<insert>chroot(string directory);</insert>
<dialog title="Insert chroot">chroot(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="closedir">
<description>close directory handle</description>
<param name="dir_handle" required="1" vallist="0" default="" type="resource">dir_handle</param>
<return type="void">void</return>
<insert>closedir(resource dir_handle);</insert>
<dialog title="Insert closedir">closedir(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="getcwd">
<description>gets the current working directory</description>
<return type="string">string</return>
<insert>getcwd();</insert>
<dialog title="Insert getcwd">getcwd();</dialog>
<info title="Info window"></info>
</function>
<function name="opendir">
<description>open directory handle</description>
<param name="path" required="1" vallist="0" default="" type="string">path</param>
<return type="resource">resource</return>
<insert>opendir(string path);</insert>
<dialog title="Insert opendir">opendir(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="readdir">
<description>read entry from directory handle</description>
<param name="dir_handle" required="1" vallist="0" default="" type="resource">dir_handle</param>
<return type="string">string</return>
<insert>readdir(resource dir_handle);</insert>
<dialog title="Insert readdir">readdir(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="rewinddir">
<description>rewind directory handle</description>
<param name="dir_handle" required="1" vallist="0" default="" type="resource">dir_handle</param>
<return type="void">void</return>
<insert>rewinddir(resource dir_handle);</insert>
<dialog title="Insert rewinddir">rewinddir(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="domxml">
<function name="DomAttribute->name">
<description>
     Returns name of attribute
    </description>
<return type="bool">bool</return>
<insert>DomAttribute->name();</insert>
<dialog title="Insert DomAttribute->name">DomAttribute->name();</dialog>
<info title="Info window"></info>
</function>
<function name="DomAttribute->specified">
<description>
     Checks if attribute is specified
    </description>
<return type="bool">bool</return>
<insert>DomAttribute->specified();</insert>
<dialog title="Insert DomAttribute->specified">DomAttribute->specified();</dialog>
<info title="Info window"></info>
</function>
<function name="DomAttribute->value">
<description>
     Returns value of attribute
    </description>
<return type="bool">bool</return>
<insert>DomAttribute->value();</insert>
<dialog title="Insert DomAttribute->value">DomAttribute->value();</dialog>
<info title="Info window"></info>
</function>
<function name="DomDocument->add_root [deprecated]">
<description>
     Adds a root node
    </description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="resource">resource</return>
<insert>DomDocument->add_root [deprecated](string name);</insert>
<dialog title="Insert DomDocument->add_root [deprecated]">DomDocument->add_root [deprecated](%0);</dialog>
<info title="Info window"></info>
</function>
<function name="DomDocument->create_attribute">
<description>Create new attribute</description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<param name="value" required="1" vallist="0" default="" type="string">value</param>
<return type="object">object</return>
<insert>DomDocument->create_attribute(string name, string value);</insert>
<dialog title="Insert DomDocument->create_attribute">DomDocument->create_attribute(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="DomDocument->create_cdata_section">
<description>Create new cdata node</description>
<param name="content" required="1" vallist="0" default="" type="string">content</param>
<return type="string">string</return>
<insert>DomDocument->create_cdata_section(string content);</insert>
<dialog title="Insert DomDocument->create_cdata_section">DomDocument->create_cdata_section(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="DomDocument->create_comment">
<description>Create new comment node</description>
<param name="content" required="1" vallist="0" default="" type="string">content</param>
<return type="object">object</return>
<insert>DomDocument->create_comment(string content);</insert>
<dialog title="Insert DomDocument->create_comment">DomDocument->create_comment(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="DomDocument->create_element_ns">
<description>
     Create new element node with an associated namespace
    </description>
<param name="uri" required="1" vallist="0" default="" type="string">uri</param>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<param name="prefix" required="0" vallist="0" default="" type="string">prefix</param>
<return type="object">object</return>
<insert>DomDocument->create_element_ns(string uri, string name [,string prefix]);</insert>
<dialog title="Insert DomDocument->create_element_ns">DomDocument->create_element_ns(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="DomDocument->create_element">
<description>Create new element node</description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="object">object</return>
<insert>DomDocument->create_element(string name);</insert>
<dialog title="Insert DomDocument->create_element">DomDocument->create_element(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="DomDocument->create_entity_reference">
<description>
    </description>
<param name="content" required="1" vallist="0" default="" type="string">content</param>
<return type="object">object</return>
<insert>DomDocument->create_entity_reference(string content);</insert>
<dialog title="Insert DomDocument->create_entity_reference">DomDocument->create_entity_reference(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="DomDocument->create_processing_instruction">
<description>Creates new PI node</description>
<param name="content" required="1" vallist="0" default="" type="string">content</param>
<return type="string">string</return>
<insert>DomDocument->create_processing_instruction(string content);</insert>
<dialog title="Insert DomDocument->create_processing_instruction">DomDocument->create_processing_instruction(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="DomDocument->create_text_node">
<description>Create new text node</description>
<param name="content" required="1" vallist="0" default="" type="string">content</param>
<return type="object">object</return>
<insert>DomDocument->create_text_node(string content);</insert>
<dialog title="Insert DomDocument->create_text_node">DomDocument->create_text_node(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="DomDocument->doctype">
<description>
     Returns the document type
    </description>
<return type="object">object</return>
<insert>DomDocument->doctype();</insert>
<dialog title="Insert DomDocument->doctype">DomDocument->doctype();</dialog>
<info title="Info window"></info>
</function>
<function name="DomDocument->document_element">
<description>
     Returns root element node
    </description>
<return type="object">object</return>
<insert>DomDocument->document_element();</insert>
<dialog title="Insert DomDocument->document_element">DomDocument->document_element();</dialog>
<info title="Info window"></info>
</function>
<function name="DomDocument->dump_file">
<description>
     Dumps the internal XML tree back into a file
    </description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="compressionmode" required="0" vallist="0" default="" type="bool">compressionmode</param>
<param name="format" required="0" vallist="0" default="" type="bool">format</param>
<return type="string">string</return>
<insert>DomDocument->dump_file(string filename [,bool compressionmode] [,bool format]);</insert>
<dialog title="Insert DomDocument->dump_file">DomDocument->dump_file(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="DomDocument->dump_mem">
<description>
     Dumps the internal XML tree back into a string
    </description>
<param name="format" required="0" vallist="0" default="" type="bool">format</param>
<param name="encoding" required="0" vallist="0" default="" type="string">encoding</param>
<return type="string">string</return>
<insert>DomDocument->dump_mem([bool format] [,string encoding]);</insert>
<dialog title="Insert DomDocument->dump_mem">DomDocument->dump_mem(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="DomDocument->get_element_by_id">
<description>
     Searches for an element with a certain id
    </description>
<param name="id" required="1" vallist="0" default="" type="string">id</param>
<return type="object">object</return>
<insert>DomDocument->get_element_by_id(string id);</insert>
<dialog title="Insert DomDocument->get_element_by_id">DomDocument->get_element_by_id(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="DomDocument->get_elements_by_tagname">
<description>
    </description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="array">array</return>
<insert>DomDocument->get_elements_by_tagname(string name);</insert>
<dialog title="Insert DomDocument->get_elements_by_tagname">DomDocument->get_elements_by_tagname(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="DomDocument->html_dump_mem">
<description>
     Dumps the internal XML tree back into a string as HTML
    </description>
<return type="string">string</return>
<insert>DomDocument->html_dump_mem();</insert>
<dialog title="Insert DomDocument->html_dump_mem">DomDocument->html_dump_mem();</dialog>
<info title="Info window"></info>
</function>
<function name="DomDocument->xinclude">
<description>
         Substitutes XIncludes in a DomDocument Object. 
    </description>
<return type="int">int</return>
<insert>DomDocument->xinclude();</insert>
<dialog title="Insert DomDocument->xinclude">DomDocument->xinclude();</dialog>
<info title="Info window"></info>
</function>
<function name="DomDocumentType->entities">
<description>
     Returns list of entities
    </description>
<return type="array">array</return>
<insert>DomDocumentType->entities();</insert>
<dialog title="Insert DomDocumentType->entities">DomDocumentType->entities();</dialog>
<info title="Info window"></info>
</function>
<function name="DomDocumentType->internal_subset">
<description>
     Returns internal subset
    </description>
<return type="bool">bool</return>
<insert>DomDocumentType->internal_subset();</insert>
<dialog title="Insert DomDocumentType->internal_subset">DomDocumentType->internal_subset();</dialog>
<info title="Info window"></info>
</function>
<function name="DomDocumentType->name">
<description>
     Returns name of document type
    </description>
<return type="string">string</return>
<insert>DomDocumentType->name();</insert>
<dialog title="Insert DomDocumentType->name">DomDocumentType->name();</dialog>
<info title="Info window"></info>
</function>
<function name="DomDocumentType->notations">
<description>
     Returns list of notations
    </description>
<return type="array">array</return>
<insert>DomDocumentType->notations();</insert>
<dialog title="Insert DomDocumentType->notations">DomDocumentType->notations();</dialog>
<info title="Info window"></info>
</function>
<function name="DomDocumentType->public_id">
<description>
     Returns public id of document type
    </description>
<return type="string">string</return>
<insert>DomDocumentType->public_id();</insert>
<dialog title="Insert DomDocumentType->public_id">DomDocumentType->public_id();</dialog>
<info title="Info window"></info>
</function>
<function name="DomDocumentType->system_id">
<description>
     Returns system id of document type
    </description>
<return type="string">string</return>
<insert>DomDocumentType->system_id();</insert>
<dialog title="Insert DomDocumentType->system_id">DomDocumentType->system_id();</dialog>
<info title="Info window"></info>
</function>
<function name="DomElement->get_attribute_node">
<description>
     Returns value of attribute
    </description>
<param name="attr" required="1" vallist="0" default="" type="object">attr</param>
<return type="object">object</return>
<insert>DomElement->get_attribute_node(object attr);</insert>
<dialog title="Insert DomElement->get_attribute_node">DomElement->get_attribute_node(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="DomElement->get_attribute">
<description>
     Returns value of attribute
    </description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="object">object</return>
<insert>DomElement->get_attribute(string name);</insert>
<dialog title="Insert DomElement->get_attribute">DomElement->get_attribute(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="DomElement->get_elements_by_tagname">
<description>
     Gets elements by tagname
    </description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="bool">bool</return>
<insert>DomElement->get_elements_by_tagname(string name);</insert>
<dialog title="Insert DomElement->get_elements_by_tagname">DomElement->get_elements_by_tagname(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="DomElement->has_attribute">
<description>
     Checks to see if attribute exists
    </description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="bool">bool</return>
<insert>DomElement->has_attribute(string name);</insert>
<dialog title="Insert DomElement->has_attribute">DomElement->has_attribute(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="DomElement->remove_attribute">
<description>
     Removes attribute
    </description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="bool">bool</return>
<insert>DomElement->remove_attribute(string name);</insert>
<dialog title="Insert DomElement->remove_attribute">DomElement->remove_attribute(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="DomElement->set_attribute">
<description>
     Adds new attribute
    </description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<param name="value" required="1" vallist="0" default="" type="string">value</param>
<return type="bool">bool</return>
<insert>DomElement->set_attribute(string name, string value);</insert>
<dialog title="Insert DomElement->set_attribute">DomElement->set_attribute(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="DomElement->tagname">
<description>
     Returns name of element
    </description>
<return type="string">string</return>
<insert>DomElement->tagname();</insert>
<dialog title="Insert DomElement->tagname">DomElement->tagname();</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->add_namespace">
<description>
     Adds a namespace declaration to a node.
    </description>
<param name="uri" required="1" vallist="0" default="" type="string">uri</param>
<param name="prefix" required="1" vallist="0" default="" type="string">prefix</param>
<return type="bool">bool</return>
<insert>DomNode->add_namespace(string uri, string prefix);</insert>
<dialog title="Insert DomNode->add_namespace">DomNode->add_namespace(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->append_child">
<description>
     Adds new child at the end of the children
    </description>
<param name="newnode" required="1" vallist="0" default="" type="object">newnode</param>
<return type="object">object</return>
<insert>DomNode->append_child(object newnode);</insert>
<dialog title="Insert DomNode->append_child">DomNode->append_child(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->append_sibling">
<description>
     Adds new sibling to a node
    </description>
<param name="newnode" required="1" vallist="0" default="" type="object">newnode</param>
<return type="object">object</return>
<insert>DomNode->append_sibling(object newnode);</insert>
<dialog title="Insert DomNode->append_sibling">DomNode->append_sibling(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->attributes">
<description>
     Returns list of attributes
    </description>
<return type="array">array</return>
<insert>DomNode->attributes();</insert>
<dialog title="Insert DomNode->attributes">DomNode->attributes();</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->child_nodes">
<description>
     Returns children of node
    </description>
<return type="array">array</return>
<insert>DomNode->child_nodes();</insert>
<dialog title="Insert DomNode->child_nodes">DomNode->child_nodes();</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->clone_node">
<description>
     Clones a node
    </description>
<return type="object">object</return>
<insert>DomNode->clone_node();</insert>
<dialog title="Insert DomNode->clone_node">DomNode->clone_node();</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->dump_node">
<description>
     Dumps a single node
    </description>
<return type="string">string</return>
<insert>DomNode->dump_node();</insert>
<dialog title="Insert DomNode->dump_node">DomNode->dump_node();</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->first_child">
<description>
     Returns first child of node
    </description>
<return type="bool">bool</return>
<insert>DomNode->first_child();</insert>
<dialog title="Insert DomNode->first_child">DomNode->first_child();</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->get_content">
<description>
     Gets content of node
    </description>
<return type="string">string</return>
<insert>DomNode->get_content();</insert>
<dialog title="Insert DomNode->get_content">DomNode->get_content();</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->has_attributess">
<description>
     Checks if node has attributes
    </description>
<return type="bool">bool</return>
<insert>DomNode->has_attributess();</insert>
<dialog title="Insert DomNode->has_attributess">DomNode->has_attributess();</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->has_child_nodes">
<description>
     Checks if node has children
    </description>
<return type="bool">bool</return>
<insert>DomNode->has_child_nodes();</insert>
<dialog title="Insert DomNode->has_child_nodes">DomNode->has_child_nodes();</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->insert_before">
<description>
     Inserts new node as child
    </description>
<param name="newnode" required="1" vallist="0" default="" type="object">newnode</param>
<param name="refnode" required="1" vallist="0" default="" type="object">refnode</param>
<return type="object">object</return>
<insert>DomNode->insert_before(object newnode, object refnode);</insert>
<dialog title="Insert DomNode->insert_before">DomNode->insert_before(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->is_blank_node">
<description>
     Checks if node is blank
    </description>
<return type="bool">bool</return>
<insert>DomNode->is_blank_node();</insert>
<dialog title="Insert DomNode->is_blank_node">DomNode->is_blank_node();</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->last_child">
<description>
     Returns last child of node
    </description>
<return type="object">object</return>
<insert>DomNode->last_child();</insert>
<dialog title="Insert DomNode->last_child">DomNode->last_child();</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->next_sibling">
<description>
     Returns the next sibling of node
    </description>
<return type="object">object</return>
<insert>DomNode->next_sibling();</insert>
<dialog title="Insert DomNode->next_sibling">DomNode->next_sibling();</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->node_name">
<description>
     Returns name of node
    </description>
<return type="string">string</return>
<insert>DomNode->node_name();</insert>
<dialog title="Insert DomNode->node_name">DomNode->node_name();</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->node_type">
<description>
     Returns type of node
    </description>
<return type="int">int</return>
<insert>DomNode->node_type();</insert>
<dialog title="Insert DomNode->node_type">DomNode->node_type();</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->node_value">
<description>
     Returns value of a node
    </description>
<return type="string">string</return>
<insert>DomNode->node_value();</insert>
<dialog title="Insert DomNode->node_value">DomNode->node_value();</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->owner_document">
<description>
     Returns the document this node belongs to
    </description>
<return type="object">object</return>
<insert>DomNode->owner_document();</insert>
<dialog title="Insert DomNode->owner_document">DomNode->owner_document();</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->parent_node">
<description>
     Returns the parent of the node
    </description>
<return type="object">object</return>
<insert>DomNode->parent_node();</insert>
<dialog title="Insert DomNode->parent_node">DomNode->parent_node();</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->prefix">
<description>
     Returns name space prefix of node
    </description>
<return type="string">string</return>
<insert>DomNode->prefix();</insert>
<dialog title="Insert DomNode->prefix">DomNode->prefix();</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->previous_sibling">
<description>
     Returns the previous sibling of node
    </description>
<return type="object">object</return>
<insert>DomNode->previous_sibling();</insert>
<dialog title="Insert DomNode->previous_sibling">DomNode->previous_sibling();</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->remove_child">
<description>
     Removes child from list of children
    </description>
<param name="oldchild" required="1" vallist="0" default="" type="object">oldchild</param>
<return type="object">object</return>
<insert>DomNode->remove_child(object oldchild);</insert>
<dialog title="Insert DomNode->remove_child">DomNode->remove_child(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->replace_child">
<description>
     Replaces a child
    </description>
<param name="oldnode" required="1" vallist="0" default="" type="object">oldnode</param>
<param name="newnode" required="1" vallist="0" default="" type="object">newnode</param>
<return type="object">object</return>
<insert>DomNode->replace_child(object oldnode, object newnode);</insert>
<dialog title="Insert DomNode->replace_child">DomNode->replace_child(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->replace_node">
<description>
     Replaces node
    </description>
<param name="newnode" required="1" vallist="0" default="" type="object">newnode</param>
<return type="object">object</return>
<insert>DomNode->replace_node(object newnode);</insert>
<dialog title="Insert DomNode->replace_node">DomNode->replace_node(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->set_content">
<description>
     Sets content of node
    </description>
<return type="bool">bool</return>
<insert>DomNode->set_content();</insert>
<dialog title="Insert DomNode->set_content">DomNode->set_content();</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->set_name">
<description>
     Sets name of node
    </description>
<return type="bool">bool</return>
<insert>DomNode->set_name();</insert>
<dialog title="Insert DomNode->set_name">DomNode->set_name();</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->set_namespace">
<description>
     Sets namespace of a node.
    </description>
<param name="uri" required="1" vallist="0" default="" type="string">uri</param>
<param name="prefix" required="0" vallist="0" default="" type="string">prefix</param>
<return type="void">void</return>
<insert>DomNode->set_namespace(string uri [,string prefix]);</insert>
<dialog title="Insert DomNode->set_namespace">DomNode->set_namespace(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="DomNode->unlink_node">
<description>
     Deletes node
    </description>
<return type="object">object</return>
<insert>DomNode->unlink_node();</insert>
<dialog title="Insert DomNode->unlink_node">DomNode->unlink_node();</dialog>
<info title="Info window"></info>
</function>
<function name="DomProcessingInstruction->data">
<description>
     Returns data of pi node
    </description>
<return type="string">string</return>
<insert>DomProcessingInstruction->data();</insert>
<dialog title="Insert DomProcessingInstruction->data">DomProcessingInstruction->data();</dialog>
<info title="Info window"></info>
</function>
<function name="DomProcessingInstruction->target">
<description>
     Returns target of pi node
    </description>
<return type="string">string</return>
<insert>DomProcessingInstruction->target();</insert>
<dialog title="Insert DomProcessingInstruction->target">DomProcessingInstruction->target();</dialog>
<info title="Info window"></info>
</function>
<function name="DomXsltStylesheet->process">
<description>
        Applies the XSLT-Transformation on a DomDocument Object. 
    </description>
<param name="DomDocument" required="1" vallist="0" default="" type="object">DomDocument</param>
<param name="xslt_parameters" required="0" vallist="0" default="" type="array">xslt_parameters</param>
<param name="param_is_xpath" required="0" vallist="0" default="" type="bool">param_is_xpath</param>
<return type="object">object</return>
<insert>DomXsltStylesheet->process(object DomDocument [,array xslt_parameters] [,bool param_is_xpath]);</insert>
<dialog title="Insert DomXsltStylesheet->process">DomXsltStylesheet->process(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="DomXsltStylesheet->result_dump_file">
<description>
         Dumps the result from a XSLT-Transformation into a file
    </description>
<param name="DomDocument" required="1" vallist="0" default="" type="object">DomDocument</param>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="string">string</return>
<insert>DomXsltStylesheet->result_dump_file(object DomDocument, string filename);</insert>
<dialog title="Insert DomXsltStylesheet->result_dump_file">DomXsltStylesheet->result_dump_file(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="DomXsltStylesheet->result_dump_mem">
<description>
         Dumps the result from a XSLT-Transformation back into a string
    </description>
<param name="DomDocument" required="1" vallist="0" default="" type="object">DomDocument</param>
<return type="string">string</return>
<insert>DomXsltStylesheet->result_dump_mem(object DomDocument);</insert>
<dialog title="Insert DomXsltStylesheet->result_dump_mem">DomXsltStylesheet->result_dump_mem(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="domxml_new_doc">
<description>
     Creates new empty XML document
    </description>
<param name="version" required="1" vallist="0" default="" type="string">version</param>
<return type="object">object</return>
<insert>domxml_new_doc(string version);</insert>
<dialog title="Insert domxml_new_doc">domxml_new_doc(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="domxml_open_file">
<description>Creates a DOM object from XML file</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="object">object</return>
<insert>domxml_open_file(string filename);</insert>
<dialog title="Insert domxml_open_file">domxml_open_file(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="domxml_open_mem">
<description>Creates a DOM object of an XML document</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<return type="object">object</return>
<insert>domxml_open_mem(string str);</insert>
<dialog title="Insert domxml_open_mem">domxml_open_mem(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="domxml_version">
<description>
     Get XML library version
    </description>
<return type="string">string</return>
<insert>domxml_version();</insert>
<dialog title="Insert domxml_version">domxml_version();</dialog>
<info title="Info window"></info>
</function>
<function name="domxml_xmltree">
<description>
     Creates a tree of PHP objects from an XML document
    </description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<return type="object">object</return>
<insert>domxml_xmltree(string str);</insert>
<dialog title="Insert domxml_xmltree">domxml_xmltree(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="domxml_xslt_stylesheet_doc">
<description>
        Creates a DomXsltStylesheet Object from a DomDocument Object.
    </description>
<param name="DocDocument Object" required="1" vallist="0" default="" type="object">DocDocument Object</param>
<return type="object">object</return>
<insert>domxml_xslt_stylesheet_doc(object DocDocument Object);</insert>
<dialog title="Insert domxml_xslt_stylesheet_doc">domxml_xslt_stylesheet_doc(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="domxml_xslt_stylesheet_file">
<description>
        Creates a DomXsltStylesheet Object from a xsl document in a file.
    </description>
<param name="xsl file" required="1" vallist="0" default="" type="string">xsl file</param>
<return type="object">object</return>
<insert>domxml_xslt_stylesheet_file(string xsl file);</insert>
<dialog title="Insert domxml_xslt_stylesheet_file">domxml_xslt_stylesheet_file(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="domxml_xslt_stylesheet">
<description>
        Creates a DomXsltStylesheet Object from a xml document in a string.
    </description>
<param name="xsl document" required="1" vallist="0" default="" type="string">xsl document</param>
<return type="object">object</return>
<insert>domxml_xslt_stylesheet(string xsl document);</insert>
<dialog title="Insert domxml_xslt_stylesheet">domxml_xslt_stylesheet(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="xpath_eval_expression">
<description>
     Evaluates the XPath Location Path in the given string 
    </description>
<param name="xpath_context" required="1" vallist="0" default="" type="object">xpath_context</param>
<return type="array">array</return>
<insert>xpath_eval_expression(object xpath_context);</insert>
<dialog title="Insert xpath_eval_expression">xpath_eval_expression(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="xpath_eval">
<description>
     Evaluates the XPath Location Path in the given string 
    </description>
<param name="xpath context" required="1" vallist="0" default="" type="object">xpath context</param>
<param name="xpath expression" required="1" vallist="0" default="" type="string">xpath expression</param>
<param name="contextnode" required="0" vallist="0" default="" type="object">contextnode</param>
<return type="array">array</return>
<insert>xpath_eval(object xpath context, string xpath expression [,object contextnode]);</insert>
<dialog title="Insert xpath_eval">xpath_eval(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="xpath_new_context">
<description>
     Creates new xpath context
    </description>
<param name="dom document" required="1" vallist="0" default="" type="object">dom document</param>
<return type="object">object</return>
<insert>xpath_new_context(object dom document);</insert>
<dialog title="Insert xpath_new_context">xpath_new_context(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="xptr_eval">
<description>
     Evaluate the XPtr Location Path in the given string
    </description>
<param name="xpath_context" required="0" vallist="0" default="" type="object">xpath_context</param>
<param name="eval_str" required="1" vallist="0" default="" type="string">eval_str</param>
<return type="int">int</return>
<insert>xptr_eval([object xpath_context], string eval_str);</insert>
<dialog title="Insert xptr_eval">xptr_eval(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="xptr_new_context">
<description>
     Create new XPath Context
    </description>
<param name="doc_handle" required="0" vallist="0" default="" type="object">doc_handle</param>
<return type="string">string</return>
<insert>xptr_new_context([object doc_handle]);</insert>
<dialog title="Insert xptr_new_context">xptr_new_context(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="dotnet">
<function name="dotnet_load">
<description>Loads a DOTNET module</description>
<param name="assembly_name" required="1" vallist="0" default="" type="string">assembly_name</param>
<param name="datatype_name" required="0" vallist="0" default="" type="string">datatype_name</param>
<param name="codepage" required="0" vallist="0" default="" type="int">codepage</param>
<return type="int">int</return>
<insert>dotnet_load(string assembly_name [,string datatype_name] [,int codepage]);</insert>
<dialog title="Insert dotnet_load">dotnet_load(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="errorfunc">
<function name="debug_backtrace">
<description>
     Generates a backtrace
    </description>
<return type="array">array</return>
<insert>debug_backtrace();</insert>
<dialog title="Insert debug_backtrace">debug_backtrace();</dialog>
<info title="Info window"></info>
</function>
<function name="error_log">
<description>send an error message somewhere</description>
<param name="message" required="1" vallist="0" default="" type="string">message</param>
<param name="message_type" required="0" vallist="0" default="" type="int">message_type</param>
<param name="destination" required="0" vallist="0" default="" type="string">destination</param>
<param name="extra_headers" required="0" vallist="0" default="" type="string">extra_headers</param>
<return type="int">int</return>
<insert>error_log(string message [,int message_type] [,string destination] [,string extra_headers]);</insert>
<dialog title="Insert error_log">error_log(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="error_reporting">
<description>set which PHP errors are reported</description>
<param name="level" required="0" vallist="0" default="" type="int">level</param>
<return type="int">int</return>
<insert>error_reporting([int level]);</insert>
<dialog title="Insert error_reporting">error_reporting(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="restore_error_handler">
<description>
     Restores the previous error handler function
    </description>
<return type="void">void</return>
<insert>restore_error_handler();</insert>
<dialog title="Insert restore_error_handler">restore_error_handler();</dialog>
<info title="Info window"></info>
</function>
<function name="set_error_handler">
<description>
     Sets a user-defined error handler function.  
    </description>
<param name="error_handler" required="1" vallist="0" default="" type="callback">error_handler</param>
<return type="string">string</return>
<insert>set_error_handler(callback error_handler);</insert>
<dialog title="Insert set_error_handler">set_error_handler(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="trigger_error">
<description>
     Generates a user-level error/warning/notice message
    </description>
<param name="error_msg" required="1" vallist="0" default="" type="string">error_msg</param>
<param name="error_type" required="0" vallist="0" default="" type="int">error_type</param>
<return type="void">void</return>
<insert>trigger_error(string error_msg [,int error_type]);</insert>
<dialog title="Insert trigger_error">trigger_error(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="exec">
<function name="escapeshellarg">
<description>escape a string to be used as a shell argument</description>
<param name="arg" required="1" vallist="0" default="" type="string">arg</param>
<return type="string">string</return>
<insert>escapeshellarg(string arg);</insert>
<dialog title="Insert escapeshellarg">escapeshellarg(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="escapeshellcmd">
<description>escape shell metacharacters</description>
<param name="command" required="1" vallist="0" default="" type="string">command</param>
<return type="string">string</return>
<insert>escapeshellcmd(string command);</insert>
<dialog title="Insert escapeshellcmd">escapeshellcmd(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="exec">
<description>Execute an external program</description>
<param name="command" required="1" vallist="0" default="" type="string">command</param>
<param name="output
       " required="0" vallist="0" default="" type="array">output
       </param>
<param name="return_var" required="0" vallist="0" default="" type="int">return_var</param>
<return type="string">string</return>
<insert>exec(string command [,array output
       ] [,int return_var]);</insert>
<dialog title="Insert exec">exec(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="passthru">
<description>
     Execute an external program and display raw output
    </description>
<param name="command" required="1" vallist="0" default="" type="string">command</param>
<param name="return_var" required="0" vallist="0" default="" type="int">return_var</param>
<return type="void">void</return>
<insert>passthru(string command [,int return_var]);</insert>
<dialog title="Insert passthru">passthru(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="proc_close">
<description>
     Close a process opened by proc_open and return the exit code of that
     process.
    </description>
<param name="process" required="1" vallist="0" default="" type="resource">process</param>
<return type="int">int</return>
<insert>proc_close(resource process);</insert>
<dialog title="Insert proc_close">proc_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="proc_get_status">
<description>
     Get information about a process opened by </description>
<param name="process" required="1" vallist="0" default="" type="resource">process</param>
<return type="int">int</return>
<insert>proc_get_status(resource process);</insert>
<dialog title="Insert proc_get_status">proc_get_status(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="proc_open">
<description>
     Execute a command and open file pointers for input/output
    </description>
<param name="cmd" required="1" vallist="0" default="" type="string">cmd</param>
<param name="descriptorspec" required="1" vallist="0" default="" type="array">descriptorspec</param>
<param name="pipes" required="1" vallist="0" default="" type="array">pipes</param>
<return type="resource">resource</return>
<insert>proc_open(string cmd, array descriptorspec, array pipes);</insert>
<dialog title="Insert proc_open">proc_open(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="shell_exec">
<description>
     Execute command via shell and return complete output as string
    </description>
<param name="cmd" required="1" vallist="0" default="" type="string">cmd</param>
<return type="string">string</return>
<insert>shell_exec(string cmd);</insert>
<dialog title="Insert shell_exec">shell_exec(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="system">
<description>Execute an external program and display output</description>
<param name="command" required="1" vallist="0" default="" type="string">command</param>
<param name="return_var" required="0" vallist="0" default="" type="int">return_var</param>
<return type="string">string</return>
<insert>system(string command [,int return_var]);</insert>
<dialog title="Insert system">system(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="fbsql">
<function name="fbsql_affected_rows">
<description>
     Get number of affected rows in previous FrontBase operation
    </description>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="int">int</return>
<insert>fbsql_affected_rows([resource 
        link_identifier
       ]);</insert>
<dialog title="Insert fbsql_affected_rows">fbsql_affected_rows(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_autocommit">
<description>Enable or disable autocommit</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="OnOff" required="0" vallist="0" default="" type="bool">OnOff</param>
<return type="bool">bool</return>
<insert>fbsql_autocommit(resource link_identifier [,bool OnOff]);</insert>
<dialog title="Insert fbsql_autocommit">fbsql_autocommit(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_change_user">
<description>
     Change logged in user of the active connection
    </description>
<param name="user" required="1" vallist="0" default="" type="string">user</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="
        database
       " required="0" vallist="0" default="" type="string">
        database
       </param>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="resource">resource</return>
<insert>fbsql_change_user(string user, string password [,string 
        database
       ] [,resource 
        link_identifier
       ]);</insert>
<dialog title="Insert fbsql_change_user">fbsql_change_user(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_close">
<description>Close FrontBase connection</description>
<param name="
        link_identifier                   
       " required="0" vallist="0" default="" type="resource">
        link_identifier                   
       </param>
<return type="bool">bool</return>
<insert>fbsql_close([resource 
        link_identifier                   
       ]);</insert>
<dialog title="Insert fbsql_close">fbsql_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_commit">
<description>Commits a transaction to the database</description>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="bool">bool</return>
<insert>fbsql_commit([resource 
        link_identifier
       ]);</insert>
<dialog title="Insert fbsql_commit">fbsql_commit(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_connect">
<description>Open a connection to a FrontBase Server</description>
<param name="hostname" required="0" vallist="0" default="" type="string">hostname</param>
<param name="username" required="0" vallist="0" default="" type="string">username</param>
<param name="password" required="0" vallist="0" default="" type="string">password</param>
<return type="resource">resource</return>
<insert>fbsql_connect([string hostname] [,string username] [,string password]);</insert>
<dialog title="Insert fbsql_connect">fbsql_connect(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_create_blob">
<description>Create a BLOB</description>
<param name="blob_data" required="1" vallist="0" default="" type="string">blob_data</param>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="string">string</return>
<insert>fbsql_create_blob(string blob_data [,resource 
        link_identifier
       ]);</insert>
<dialog title="Insert fbsql_create_blob">fbsql_create_blob(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_create_clob">
<description>Create a CLOB</description>
<param name="clob_data" required="1" vallist="0" default="" type="string">clob_data</param>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="string">string</return>
<insert>fbsql_create_clob(string clob_data [,resource 
        link_identifier
       ]);</insert>
<dialog title="Insert fbsql_create_clob">fbsql_create_clob(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_create_db">
<description>Create a FrontBase database</description>
<param name="database name" required="1" vallist="0" default="" type="string">database name</param>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="bool">bool</return>
<insert>fbsql_create_db(string database name [,resource 
        link_identifier
       ]);</insert>
<dialog title="Insert fbsql_create_db">fbsql_create_db(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_data_seek">
<description>Move internal result pointer</description>
<param name="result_identifier" required="1" vallist="0" default="" type="resource">result_identifier</param>
<param name="row_number" required="1" vallist="0" default="" type="int">row_number</param>
<return type="bool">bool</return>
<insert>fbsql_data_seek(resource result_identifier, int row_number);</insert>
<dialog title="Insert fbsql_data_seek">fbsql_data_seek(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_database_password">
<description>
     Sets or retrieves the password for a FrontBase database
    </description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="
        database_password
       " required="0" vallist="0" default="" type="string">
        database_password
       </param>
<return type="string">string</return>
<insert>fbsql_database_password(resource link_identifier [,string 
        database_password
       ]);</insert>
<dialog title="Insert fbsql_database_password">fbsql_database_password(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_database">
<description>Get or set the database name used with a connection</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="database" required="0" vallist="0" default="" type="string">database</param>
<return type="string">string</return>
<insert>fbsql_database(resource link_identifier [,string database]);</insert>
<dialog title="Insert fbsql_database">fbsql_database(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_db_query">
<description>Send a FrontBase query</description>
<param name="database" required="1" vallist="0" default="" type="string">database</param>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="resource">resource</return>
<insert>fbsql_db_query(string database, string query [,resource 
        link_identifier
       ]);</insert>
<dialog title="Insert fbsql_db_query">fbsql_db_query(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_db_status">
<description>Get the status for a given database</description>
<param name="database_name" required="1" vallist="0" default="" type="string">database_name</param>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="int">int</return>
<insert>fbsql_db_status(string database_name [,resource 
        link_identifier
       ]);</insert>
<dialog title="Insert fbsql_db_status">fbsql_db_status(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_drop_db">
<description>Drop (delete) a FrontBase database</description>
<param name="database_name" required="1" vallist="0" default="" type="string">database_name</param>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="bool">bool</return>
<insert>fbsql_drop_db(string database_name [,resource 
        link_identifier
       ]);</insert>
<dialog title="Insert fbsql_drop_db">fbsql_drop_db(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_errno">
<description>
     Returns the numerical value of the error message from previous
     FrontBase operation
    </description>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="int">int</return>
<insert>fbsql_errno([resource 
        link_identifier
       ]);</insert>
<dialog title="Insert fbsql_errno">fbsql_errno(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_error">
<description>
     Returns the text of the error message from previous FrontBase
     operation
    </description>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="string">string</return>
<insert>fbsql_error([resource 
        link_identifier
       ]);</insert>
<dialog title="Insert fbsql_error">fbsql_error(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_fetch_array">
<description>
     Fetch a result row as an associative array, a numeric array, or
     both
    </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="
        result_type
       " required="0" vallist="0" default="" type="int">
        result_type
       </param>
<return type="array">array</return>
<insert>fbsql_fetch_array(resource result [,int 
        result_type
       ]);</insert>
<dialog title="Insert fbsql_fetch_array">fbsql_fetch_array(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_fetch_assoc">
<description>
     Fetch a result row as an associative array
    </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<return type="array">array</return>
<insert>fbsql_fetch_assoc(resource result);</insert>
<dialog title="Insert fbsql_fetch_assoc">fbsql_fetch_assoc(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_fetch_field">
<description>
     Get column information from a result and return as an object
    </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="
        field_offset
       " required="0" vallist="0" default="" type="int">
        field_offset
       </param>
<return type="object">object</return>
<insert>fbsql_fetch_field(resource result [,int 
        field_offset
       ]);</insert>
<dialog title="Insert fbsql_fetch_field">fbsql_fetch_field(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_fetch_lengths">
<description>
     Get the length of each output in a result
    </description>
<param name="result" required="0" vallist="0" default="" type="resource">result</param>
<return type="array">array</return>
<insert>fbsql_fetch_lengths([resource result]);</insert>
<dialog title="Insert fbsql_fetch_lengths">fbsql_fetch_lengths(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_fetch_object">
<description>Fetch a result row as an object</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="
        result_type
       " required="0" vallist="0" default="" type="int">
        result_type
       </param>
<return type="object">object</return>
<insert>fbsql_fetch_object(resource result [,int 
        result_type
       ]);</insert>
<dialog title="Insert fbsql_fetch_object">fbsql_fetch_object(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_fetch_row">
<description>Get a result row as an enumerated array</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<return type="array">array</return>
<insert>fbsql_fetch_row(resource result);</insert>
<dialog title="Insert fbsql_fetch_row">fbsql_fetch_row(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_field_flags">
<description>
     Get the flags associated with the specified field in a result
    </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="field_offset" required="1" vallist="0" default="" type="int">field_offset</param>
<return type="string">string</return>
<insert>fbsql_field_flags(resource result, int field_offset);</insert>
<dialog title="Insert fbsql_field_flags">fbsql_field_flags(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_field_len">
<description>
     Returns the length of the specified field
    </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="field_offset" required="1" vallist="0" default="" type="int">field_offset</param>
<return type="int">int</return>
<insert>fbsql_field_len(resource result, int field_offset);</insert>
<dialog title="Insert fbsql_field_len">fbsql_field_len(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_field_name">
<description>
     Get the name of the specified field in a result
    </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="field_index" required="1" vallist="0" default="" type="int">field_index</param>
<return type="string">string</return>
<insert>fbsql_field_name(resource result, int field_index);</insert>
<dialog title="Insert fbsql_field_name">fbsql_field_name(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_field_seek">
<description>
     Set result pointer to a specified field offset
    </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="field_offset" required="1" vallist="0" default="" type="int">field_offset</param>
<return type="bool">bool</return>
<insert>fbsql_field_seek(resource result, int field_offset);</insert>
<dialog title="Insert fbsql_field_seek">fbsql_field_seek(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_field_table">
<description>
     Get name of the table the specified field is in
    </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="field_offset" required="1" vallist="0" default="" type="int">field_offset</param>
<return type="string">string</return>
<insert>fbsql_field_table(resource result, int field_offset);</insert>
<dialog title="Insert fbsql_field_table">fbsql_field_table(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_field_type">
<description>
     Get the type of the specified field in a result
    </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="field_offset" required="1" vallist="0" default="" type="int">field_offset</param>
<return type="string">string</return>
<insert>fbsql_field_type(resource result, int field_offset);</insert>
<dialog title="Insert fbsql_field_type">fbsql_field_type(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_free_result">
<description>Free result memory</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<return type="bool">bool</return>
<insert>fbsql_free_result(resource result);</insert>
<dialog title="Insert fbsql_free_result">fbsql_free_result(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_get_autostart_info">
<description>No description given yet</description>
<param name="link_identifier" required="0" vallist="0" default="" type="resource">link_identifier</param>
<return type="array">array</return>
<insert>fbsql_get_autostart_info([resource link_identifier]);</insert>
<dialog title="Insert fbsql_get_autostart_info">fbsql_get_autostart_info(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_hostname">
<description>Get or set the host name used with a connection</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="host_name" required="0" vallist="0" default="" type="string">host_name</param>
<return type="string">string</return>
<insert>fbsql_hostname(resource link_identifier [,string host_name]);</insert>
<dialog title="Insert fbsql_hostname">fbsql_hostname(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_insert_id">
<description>
     Get the id generated from the previous INSERT operation
    </description>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="int">int</return>
<insert>fbsql_insert_id([resource 
        link_identifier
       ]);</insert>
<dialog title="Insert fbsql_insert_id">fbsql_insert_id(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_list_dbs">
<description>
     List databases available on a FrontBase server
    </description>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="resource">resource</return>
<insert>fbsql_list_dbs([resource 
        link_identifier
       ]);</insert>
<dialog title="Insert fbsql_list_dbs">fbsql_list_dbs(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_list_fields">
<description>List FrontBase result fields</description>
<param name="database_name" required="1" vallist="0" default="" type="string">database_name</param>
<param name="table_name" required="1" vallist="0" default="" type="string">table_name</param>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="resource">resource</return>
<insert>fbsql_list_fields(string database_name, string table_name [,resource 
        link_identifier
       ]);</insert>
<dialog title="Insert fbsql_list_fields">fbsql_list_fields(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_list_tables">
<description>List tables in a FrontBase database</description>
<param name="database" required="1" vallist="0" default="" type="string">database</param>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="resource">resource</return>
<insert>fbsql_list_tables(string database [,resource 
        link_identifier
       ]);</insert>
<dialog title="Insert fbsql_list_tables">fbsql_list_tables(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_next_result">
<description>
     Move the internal result pointer to the next result
    </description>
<param name="result_id" required="1" vallist="0" default="" type="resource">result_id</param>
<return type="bool">bool</return>
<insert>fbsql_next_result(resource result_id);</insert>
<dialog title="Insert fbsql_next_result">fbsql_next_result(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_num_fields">
<description>Get number of fields in result</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<return type="int">int</return>
<insert>fbsql_num_fields(resource result);</insert>
<dialog title="Insert fbsql_num_fields">fbsql_num_fields(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_num_rows">
<description>Get number of rows in result</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<return type="int">int</return>
<insert>fbsql_num_rows(resource result);</insert>
<dialog title="Insert fbsql_num_rows">fbsql_num_rows(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_password">
<description>Get or set the user password used with a connection</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="password" required="0" vallist="0" default="" type="string">password</param>
<return type="string">string</return>
<insert>fbsql_password(resource link_identifier [,string password]);</insert>
<dialog title="Insert fbsql_password">fbsql_password(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_pconnect">
<description>
     Open a persistent connection to a FrontBase Server
    </description>
<param name="hostname" required="0" vallist="0" default="" type="string">hostname</param>
<param name="username" required="0" vallist="0" default="" type="string">username</param>
<param name="password" required="0" vallist="0" default="" type="string">password</param>
<return type="resource">resource</return>
<insert>fbsql_pconnect([string hostname] [,string username] [,string password]);</insert>
<dialog title="Insert fbsql_pconnect">fbsql_pconnect(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_query">
<description>Send a FrontBase query</description>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<param name="link_identifier" required="0" vallist="0" default="" type="resource">link_identifier</param>
<return type="resource">resource</return>
<insert>fbsql_query(string query [,resource link_identifier]);</insert>
<dialog title="Insert fbsql_query">fbsql_query(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_read_blob">
<description>Read a BLOB from the database</description>
<param name="blob_handle" required="1" vallist="0" default="" type="string">blob_handle</param>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="string">string</return>
<insert>fbsql_read_blob(string blob_handle [,resource 
        link_identifier
       ]);</insert>
<dialog title="Insert fbsql_read_blob">fbsql_read_blob(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_read_clob">
<description>Read a CLOB from the database</description>
<param name="clob_handle" required="1" vallist="0" default="" type="string">clob_handle</param>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="string">string</return>
<insert>fbsql_read_clob(string clob_handle [,resource 
        link_identifier
       ]);</insert>
<dialog title="Insert fbsql_read_clob">fbsql_read_clob(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_result">
<description>Get result data</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="row" required="1" vallist="0" default="" type="int">row</param>
<param name="
        field
       " required="0" vallist="0" default="" type="mixed">
        field
       </param>
<return type="mixed">mixed</return>
<insert>fbsql_result(resource result, int row [,mixed 
        field
       ]);</insert>
<dialog title="Insert fbsql_result">fbsql_result(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_rollback">
<description>Rollback a transaction to the database</description>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="bool">bool</return>
<insert>fbsql_rollback([resource 
        link_identifier
       ]);</insert>
<dialog title="Insert fbsql_rollback">fbsql_rollback(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_select_db">
<description>Select a FrontBase database</description>
<param name="database_name" required="1" vallist="0" default="" type="string">database_name</param>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="bool">bool</return>
<insert>fbsql_select_db(string database_name [,resource 
        link_identifier
       ]);</insert>
<dialog title="Insert fbsql_select_db">fbsql_select_db(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_set_lob_mode">
<description>
     Set the LOB retrieve mode for a FrontBase result set
    </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="database_name" required="1" vallist="0" default="" type="string">database_name</param>
<return type="bool">bool</return>
<insert>fbsql_set_lob_mode(resource result, string database_name);</insert>
<dialog title="Insert fbsql_set_lob_mode">fbsql_set_lob_mode(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_set_transaction">
<description>
     Set the transaction locking and isolation
    </description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="Locking" required="1" vallist="0" default="" type="int">Locking</param>
<param name="Isolation" required="1" vallist="0" default="" type="int">Isolation</param>
<return type="void">void</return>
<insert>fbsql_set_transaction(resource link_identifier, int Locking, int Isolation);</insert>
<dialog title="Insert fbsql_set_transaction">fbsql_set_transaction(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_start_db">
<description>Start a database on local or remote server</description>
<param name="database_name" required="1" vallist="0" default="" type="string">database_name</param>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="bool">bool</return>
<insert>fbsql_start_db(string database_name [,resource 
        link_identifier
       ]);</insert>
<dialog title="Insert fbsql_start_db">fbsql_start_db(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_stop_db">
<description>Stop a database on local or remote server</description>
<param name="database_name" required="1" vallist="0" default="" type="string">database_name</param>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="bool">bool</return>
<insert>fbsql_stop_db(string database_name [,resource 
        link_identifier
       ]);</insert>
<dialog title="Insert fbsql_stop_db">fbsql_stop_db(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_tablename">
<description>Get table name of field</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="i" required="1" vallist="0" default="" type="int">i</param>
<return type="string">string</return>
<insert>fbsql_tablename(resource result, int i);</insert>
<dialog title="Insert fbsql_tablename">fbsql_tablename(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_username">
<description>Get or set the host user used with a connection</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="username" required="0" vallist="0" default="" type="string">username</param>
<return type="string">string</return>
<insert>fbsql_username(resource link_identifier [,string username]);</insert>
<dialog title="Insert fbsql_username">fbsql_username(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fbsql_warnings">
<description>Enable or disable FrontBase warnings</description>
<param name="
        OnOff
       " required="0" vallist="0" default="" type="bool">
        OnOff
       </param>
<return type="bool">bool</return>
<insert>fbsql_warnings([bool 
        OnOff
       ]);</insert>
<dialog title="Insert fbsql_warnings">fbsql_warnings(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="fdf">
<function name="fdf_add_doc_javascript">
<description>Adds javascript code to the FDF document</description>
<param name="fdfdoc" required="1" vallist="0" default="" type="resource">fdfdoc</param>
<param name="script_name" required="1" vallist="0" default="" type="string">script_name</param>
<param name="script_code" required="1" vallist="0" default="" type="string">script_code</param>
<return type="bool">bool</return>
<insert>fdf_add_doc_javascript(resource fdfdoc, string script_name, string script_code);</insert>
<dialog title="Insert fdf_add_doc_javascript">fdf_add_doc_javascript(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_add_template">
<description>Adds a template into the FDF document</description>
<param name="fdfdoc" required="1" vallist="0" default="" type="resource">fdfdoc</param>
<param name="newpage" required="1" vallist="0" default="" type="int">newpage</param>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="template" required="1" vallist="0" default="" type="string">template</param>
<param name="rename" required="1" vallist="0" default="" type="int">rename</param>
<return type="bool">bool</return>
<insert>fdf_add_template(resource fdfdoc, int newpage, string filename, string template, int rename);</insert>
<dialog title="Insert fdf_add_template">fdf_add_template(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_close">
<description>Close an FDF document</description>
<param name="fdf_document" required="1" vallist="0" default="" type="resource">fdf_document</param>
<return type="bool">bool</return>
<insert>fdf_close(resource fdf_document);</insert>
<dialog title="Insert fdf_close">fdf_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_create">
<description>Create a new FDF document</description>
<return type="resource">resource</return>
<insert>fdf_create();</insert>
<dialog title="Insert fdf_create">fdf_create();</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_enum_values">
<description>Call a user defined function for each document value </description>
<param name="fdfdoc" required="1" vallist="0" default="" type="resource">fdfdoc</param>
<param name="function" required="1" vallist="0" default="" type="callback">function</param>
<param name="userdata" required="0" vallist="0" default="" type="mixed">userdata</param>
<return type="bool">bool</return>
<insert>fdf_enum_values(resource fdfdoc, callback function [,mixed userdata]);</insert>
<dialog title="Insert fdf_enum_values">fdf_enum_values(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_errno">
<description>Return error code for last fdf operation</description>
<return type="int">int</return>
<insert>fdf_errno();</insert>
<dialog title="Insert fdf_errno">fdf_errno();</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_error">
<description>Return error description for fdf error code</description>
<param name="error_code" required="0" vallist="0" default="" type="int">error_code</param>
<return type="string">string</return>
<insert>fdf_error([int error_code]);</insert>
<dialog title="Insert fdf_error">fdf_error(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_get_ap">
<description>Get the appearance of a field</description>
<param name="fdf_document" required="1" vallist="0" default="" type="resource">fdf_document</param>
<param name="field" required="1" vallist="0" default="" type="string">field</param>
<param name="face" required="1" vallist="0" default="" type="int">face</param>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="bool">bool</return>
<insert>fdf_get_ap(resource fdf_document, string field, int face, string filename);</insert>
<dialog title="Insert fdf_get_ap">fdf_get_ap(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_get_attachment">
<description>Extracts uploaded file embedded in the FDF</description>
<param name="fdf_document" required="1" vallist="0" default="" type="resource">fdf_document</param>
<param name="fieldname" required="1" vallist="0" default="" type="string">fieldname</param>
<param name="savepath" required="1" vallist="0" default="" type="string">savepath</param>
<return type="array">array</return>
<insert>fdf_get_attachment(resource fdf_document, string fieldname, string savepath);</insert>
<dialog title="Insert fdf_get_attachment">fdf_get_attachment(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_get_encoding">
<description>Get the value of the /Encoding key</description>
<param name="fdf_document" required="1" vallist="0" default="" type="resource">fdf_document</param>
<return type="string">string</return>
<insert>fdf_get_encoding(resource fdf_document);</insert>
<dialog title="Insert fdf_get_encoding">fdf_get_encoding(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_get_file">
<description>Get the value of the /F key</description>
<param name="fdf_document" required="1" vallist="0" default="" type="resource">fdf_document</param>
<return type="string">string</return>
<insert>fdf_get_file(resource fdf_document);</insert>
<dialog title="Insert fdf_get_file">fdf_get_file(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_get_flags">
<description>Gets the flags of a field</description>
<return type=""></return>
<insert>fdf_get_flags();</insert>
<dialog title="Insert fdf_get_flags">fdf_get_flags();</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_get_opt">
<description>Gets a value from the opt array of a field</description>
<param name="fdfdof" required="1" vallist="0" default="" type="resource">fdfdof</param>
<param name="fieldname" required="1" vallist="0" default="" type="string">fieldname</param>
<param name="element" required="0" vallist="0" default="" type="int">element</param>
<return type="mixed">mixed</return>
<insert>fdf_get_opt(resource fdfdof, string fieldname [,int element]);</insert>
<dialog title="Insert fdf_get_opt">fdf_get_opt(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_get_status">
<description>Get the value of the /STATUS key</description>
<param name="fdf_document" required="1" vallist="0" default="" type="resource">fdf_document</param>
<return type="string">string</return>
<insert>fdf_get_status(resource fdf_document);</insert>
<dialog title="Insert fdf_get_status">fdf_get_status(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_get_value">
<description>Get the value of a field</description>
<param name="fdf_document" required="1" vallist="0" default="" type="resource">fdf_document</param>
<param name="fieldname" required="1" vallist="0" default="" type="string">fieldname</param>
<param name="which" required="0" vallist="0" default="" type="int">which</param>
<return type="string">string</return>
<insert>fdf_get_value(resource fdf_document, string fieldname [,int which]);</insert>
<dialog title="Insert fdf_get_value">fdf_get_value(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_get_version">
<description>Gets version number for FDF api or file </description>
<param name="fdf_document" required="0" vallist="0" default="" type="resource">fdf_document</param>
<return type="string">string</return>
<insert>fdf_get_version([resource fdf_document]);</insert>
<dialog title="Insert fdf_get_version">fdf_get_version(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_header">
<description>Sets FDF-specific output headers</description>
<return type="bool">bool</return>
<insert>fdf_header();</insert>
<dialog title="Insert fdf_header">fdf_header();</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_next_field_name">
<description>Get the next field name</description>
<param name="fdf_document" required="1" vallist="0" default="" type="resource">fdf_document</param>
<param name="fieldname" required="0" vallist="0" default="" type="string">fieldname</param>
<return type="string">string</return>
<insert>fdf_next_field_name(resource fdf_document [,string fieldname]);</insert>
<dialog title="Insert fdf_next_field_name">fdf_next_field_name(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_open_string">
<description>Read a FDF document from a string</description>
<param name="fdf_data" required="1" vallist="0" default="" type="string">fdf_data</param>
<return type="resource">resource</return>
<insert>fdf_open_string(string fdf_data);</insert>
<dialog title="Insert fdf_open_string">fdf_open_string(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_open">
<description>Open a FDF document</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="resource">resource</return>
<insert>fdf_open(string filename);</insert>
<dialog title="Insert fdf_open">fdf_open(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_remove_item">
<description>Sets target frame for form</description>
<param name="fdfdoc" required="1" vallist="0" default="" type="resource">fdfdoc</param>
<param name="fieldname" required="1" vallist="0" default="" type="string">fieldname</param>
<param name="item" required="1" vallist="0" default="" type="int">item</param>
<return type="bool">bool</return>
<insert>fdf_remove_item(resource fdfdoc, string fieldname, int item);</insert>
<dialog title="Insert fdf_remove_item">fdf_remove_item(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_save_string">
<description>Returns the FDF document as a string</description>
<param name="fdf_document" required="1" vallist="0" default="" type="resource">fdf_document</param>
<return type="string">string</return>
<insert>fdf_save_string(resource fdf_document);</insert>
<dialog title="Insert fdf_save_string">fdf_save_string(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_save">
<description>Save a FDF document</description>
<param name="fdf_document" required="1" vallist="0" default="" type="resource">fdf_document</param>
<param name="filename" required="0" vallist="0" default="" type="string">filename</param>
<return type="bool">bool</return>
<insert>fdf_save(resource fdf_document [,string filename]);</insert>
<dialog title="Insert fdf_save">fdf_save(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_set_ap">
<description>Set the appearance of a field</description>
<param name="fdf_document" required="1" vallist="0" default="" type="resource">fdf_document</param>
<param name="field_name" required="1" vallist="0" default="" type="string">field_name</param>
<param name="face" required="1" vallist="0" default="" type="int">face</param>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="page_number" required="1" vallist="0" default="" type="int">page_number</param>
<return type="bool">bool</return>
<insert>fdf_set_ap(resource fdf_document, string field_name, int face, string filename, int page_number);</insert>
<dialog title="Insert fdf_set_ap">fdf_set_ap(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_set_encoding">
<description>Sets FDF character encoding</description>
<param name="fdf_document" required="1" vallist="0" default="" type="resource">fdf_document</param>
<param name="encoding" required="1" vallist="0" default="" type="string">encoding</param>
<return type="bool">bool</return>
<insert>fdf_set_encoding(resource fdf_document, string encoding);</insert>
<dialog title="Insert fdf_set_encoding">fdf_set_encoding(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_set_file">
<description>Set PDF document to display FDF data in</description>
<param name="fdf_document" required="1" vallist="0" default="" type="resource">fdf_document</param>
<param name="url" required="1" vallist="0" default="" type="string">url</param>
<param name="target_frame" required="0" vallist="0" default="" type="string">target_frame</param>
<return type="bool">bool</return>
<insert>fdf_set_file(resource fdf_document, string url [,string target_frame]);</insert>
<dialog title="Insert fdf_set_file">fdf_set_file(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_set_flags">
<description>Sets a flag of a field</description>
<param name="fdf_document" required="1" vallist="0" default="" type="resource">fdf_document</param>
<param name="fieldname" required="1" vallist="0" default="" type="string">fieldname</param>
<param name="whichFlags" required="1" vallist="0" default="" type="int">whichFlags</param>
<param name="newFlags" required="1" vallist="0" default="" type="int">newFlags</param>
<return type="bool">bool</return>
<insert>fdf_set_flags(resource fdf_document, string fieldname, int whichFlags, int newFlags);</insert>
<dialog title="Insert fdf_set_flags">fdf_set_flags(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_set_javascript_action">
<description>Sets an javascript action of a field</description>
<param name="fdf_document" required="1" vallist="0" default="" type="resource">fdf_document</param>
<param name="fieldname" required="1" vallist="0" default="" type="string">fieldname</param>
<param name="trigger" required="1" vallist="0" default="" type="int">trigger</param>
<param name="script" required="1" vallist="0" default="" type="string">script</param>
<return type="bool">bool</return>
<insert>fdf_set_javascript_action(resource fdf_document, string fieldname, int trigger, string script);</insert>
<dialog title="Insert fdf_set_javascript_action">fdf_set_javascript_action(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_set_opt">
<description>Sets an option of a field</description>
<param name="fdf_document" required="1" vallist="0" default="" type="resource">fdf_document</param>
<param name="fieldname" required="1" vallist="0" default="" type="string">fieldname</param>
<param name="element" required="1" vallist="0" default="" type="int">element</param>
<param name="str1" required="1" vallist="0" default="" type="string">str1</param>
<param name="str2" required="1" vallist="0" default="" type="string">str2</param>
<return type="bool">bool</return>
<insert>fdf_set_opt(resource fdf_document, string fieldname, int element, string str1, string str2);</insert>
<dialog title="Insert fdf_set_opt">fdf_set_opt(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_set_status">
<description>Set the value of the /STATUS key</description>
<param name="fdf_document" required="1" vallist="0" default="" type="resource">fdf_document</param>
<param name="status" required="1" vallist="0" default="" type="string">status</param>
<return type="bool">bool</return>
<insert>fdf_set_status(resource fdf_document, string status);</insert>
<dialog title="Insert fdf_set_status">fdf_set_status(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_set_submit_form_action">
<description>Sets a submit form action of a field</description>
<param name="fdf_document" required="1" vallist="0" default="" type="resource">fdf_document</param>
<param name="fieldname" required="1" vallist="0" default="" type="string">fieldname</param>
<param name="trigger" required="1" vallist="0" default="" type="int">trigger</param>
<param name="script" required="1" vallist="0" default="" type="string">script</param>
<param name="flags" required="1" vallist="0" default="" type="int">flags</param>
<return type="bool">bool</return>
<insert>fdf_set_submit_form_action(resource fdf_document, string fieldname, int trigger, string script, int flags);</insert>
<dialog title="Insert fdf_set_submit_form_action">fdf_set_submit_form_action(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_set_target_frame">
<description>Set target frame for form display</description>
<param name="fdf_document" required="1" vallist="0" default="" type="resource">fdf_document</param>
<param name="frame_name" required="1" vallist="0" default="" type="string">frame_name</param>
<return type="bool">bool</return>
<insert>fdf_set_target_frame(resource fdf_document, string frame_name);</insert>
<dialog title="Insert fdf_set_target_frame">fdf_set_target_frame(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_set_value">
<description>Set the value of a field</description>
<param name="fdf_document" required="1" vallist="0" default="" type="resource">fdf_document</param>
<param name="fieldname" required="1" vallist="0" default="" type="string">fieldname</param>
<param name="value" required="1" vallist="0" default="" type="mixed">value</param>
<param name="isName" required="0" vallist="0" default="" type="int">isName</param>
<return type="bool">bool</return>
<insert>fdf_set_value(resource fdf_document, string fieldname, mixed value [,int isName]);</insert>
<dialog title="Insert fdf_set_value">fdf_set_value(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="fdf_set_version">
<description>Sets version number for a FDF file </description>
<param name="fdf_document" required="1" vallist="0" default="" type="resource">fdf_document</param>
<param name="version" required="1" vallist="0" default="" type="string">version</param>
<return type="string">string</return>
<insert>fdf_set_version(resource fdf_document, string version);</insert>
<dialog title="Insert fdf_set_version">fdf_set_version(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="filepro">
<function name="filepro_fieldcount">
<description>Find out how many fields are in a filePro database</description>
<return type="int">int</return>
<insert>filepro_fieldcount();</insert>
<dialog title="Insert filepro_fieldcount">filepro_fieldcount();</dialog>
<info title="Info window"></info>
</function>
<function name="filepro_fieldname">
<description>Gets the name of a field</description>
<param name="field_number" required="1" vallist="0" default="" type="int">field_number</param>
<return type="string">string</return>
<insert>filepro_fieldname(int field_number);</insert>
<dialog title="Insert filepro_fieldname">filepro_fieldname(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="filepro_fieldtype">
<description>Gets the type of a field</description>
<param name="field_number" required="1" vallist="0" default="" type="int">field_number</param>
<return type="string">string</return>
<insert>filepro_fieldtype(int field_number);</insert>
<dialog title="Insert filepro_fieldtype">filepro_fieldtype(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="filepro_fieldwidth">
<description>Gets the width of a field</description>
<param name="field_number" required="1" vallist="0" default="" type="int">field_number</param>
<return type="int">int</return>
<insert>filepro_fieldwidth(int field_number);</insert>
<dialog title="Insert filepro_fieldwidth">filepro_fieldwidth(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="filepro_retrieve">
<description>Retrieves data from a filePro database</description>
<param name="row_number" required="1" vallist="0" default="" type="int">row_number</param>
<param name="field_number" required="1" vallist="0" default="" type="int">field_number</param>
<return type="string">string</return>
<insert>filepro_retrieve(int row_number, int field_number);</insert>
<dialog title="Insert filepro_retrieve">filepro_retrieve(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="filepro_rowcount">
<description>Find out how many rows are in a filePro database</description>
<return type="int">int</return>
<insert>filepro_rowcount();</insert>
<dialog title="Insert filepro_rowcount">filepro_rowcount();</dialog>
<info title="Info window"></info>
</function>
<function name="filepro">
<description>Read and verify the map file</description>
<param name="directory" required="1" vallist="0" default="" type="string">directory</param>
<return type="bool">bool</return>
<insert>filepro(string directory);</insert>
<dialog title="Insert filepro">filepro(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="filesystem">
<function name="basename">
<description>Returns filename component of path</description>
<param name="path" required="1" vallist="0" default="" type="string">path</param>
<param name="suffix" required="0" vallist="0" default="" type="string">suffix</param>
<return type="string">string</return>
<insert>basename(string path [,string suffix]);</insert>
<dialog title="Insert basename">basename(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="chgrp">
<description>Changes file group</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="group" required="1" vallist="0" default="" type="mixed">group</param>
<return type="int">int</return>
<insert>chgrp(string filename, mixed group);</insert>
<dialog title="Insert chgrp">chgrp(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="chmod">
<description>Changes file mode</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<return type="int">int</return>
<insert>chmod(string filename, int mode);</insert>
<dialog title="Insert chmod">chmod(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="chown">
<description>Changes file owner</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="user" required="1" vallist="0" default="" type="mixed">user</param>
<return type="int">int</return>
<insert>chown(string filename, mixed user);</insert>
<dialog title="Insert chown">chown(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="clearstatcache">
<description>Clears file status cache</description>
<return type="void">void</return>
<insert>clearstatcache();</insert>
<dialog title="Insert clearstatcache">clearstatcache();</dialog>
<info title="Info window"></info>
</function>
<function name="copy">
<description>Copies file</description>
<param name="source" required="1" vallist="0" default="" type="string">source</param>
<param name="dest" required="1" vallist="0" default="" type="string">dest</param>
<return type="int">int</return>
<insert>copy(string source, string dest);</insert>
<dialog title="Insert copy">copy(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="delete">
<description>See </description>
<param name="file" required="1" vallist="0" default="" type="string">file</param>
<return type="void">void</return>
<insert>delete(string file);</insert>
<dialog title="Insert delete">delete(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dirname">
<description>Returns directory name component of path</description>
<param name="path" required="1" vallist="0" default="" type="string">path</param>
<return type="string">string</return>
<insert>dirname(string path);</insert>
<dialog title="Insert dirname">dirname(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="disk_free_space">
<description>Returns available space in directory</description>
<param name="directory" required="1" vallist="0" default="" type="string">directory</param>
<return type="float">float</return>
<insert>disk_free_space(string directory);</insert>
<dialog title="Insert disk_free_space">disk_free_space(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="disk_total_space">
<description>Returns the total size of a directory</description>
<param name="directory" required="1" vallist="0" default="" type="string">directory</param>
<return type="float">float</return>
<insert>disk_total_space(string directory);</insert>
<dialog title="Insert disk_total_space">disk_total_space(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fclose">
<description>Closes an open file pointer</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="bool">bool</return>
<insert>fclose(resource handle);</insert>
<dialog title="Insert fclose">fclose(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="feof">
<description>Tests for end-of-file on a file pointer</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="bool">bool</return>
<insert>feof(resource handle);</insert>
<dialog title="Insert feof">feof(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fflush">
<description>Flushes the output to a file</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="bool">bool</return>
<insert>fflush(resource handle);</insert>
<dialog title="Insert fflush">fflush(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fgetc">
<description>Gets character from file pointer</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="string">string</return>
<insert>fgetc(resource handle);</insert>
<dialog title="Insert fgetc">fgetc(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fgetcsv">
<description>Gets line from file pointer and parse for CSV fields</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<param name="length" required="1" vallist="0" default="" type="int">length</param>
<param name="delimiter" required="0" vallist="0" default="" type="string">delimiter</param>
<param name="enclosure" required="0" vallist="0" default="" type="string">enclosure</param>
<return type="array">array</return>
<insert>fgetcsv(resource handle, int length [,string delimiter] [,string enclosure]);</insert>
<dialog title="Insert fgetcsv">fgetcsv(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="fgets">
<description>Gets line from file pointer</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<param name="length" required="0" vallist="0" default="" type="int">length</param>
<return type="string">string</return>
<insert>fgets(resource handle [,int length]);</insert>
<dialog title="Insert fgets">fgets(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fgetss">
<description>Gets line from file pointer and strip HTML tags</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<param name="length" required="1" vallist="0" default="" type="int">length</param>
<param name="allowable_tags" required="0" vallist="0" default="" type="string">allowable_tags</param>
<return type="string">string</return>
<insert>fgetss(resource handle, int length [,string allowable_tags]);</insert>
<dialog title="Insert fgetss">fgetss(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="file_exists">
<description>Checks whether a file or directory exists</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="bool">bool</return>
<insert>file_exists(string filename);</insert>
<dialog title="Insert file_exists">file_exists(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="file_get_contents">
<description>Reads entire file into a string</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="use_include_path" required="0" vallist="0" default="" type="int">use_include_path</param>
<return type="string">string</return>
<insert>file_get_contents(string filename [,int use_include_path]);</insert>
<dialog title="Insert file_get_contents">file_get_contents(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="file">
<description>Reads entire file into an array</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="use_include_path" required="0" vallist="0" default="" type="int">use_include_path</param>
<return type="array">array</return>
<insert>file(string filename [,int use_include_path]);</insert>
<dialog title="Insert file">file(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fileatime">
<description>Gets last access time of file</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="int">int</return>
<insert>fileatime(string filename);</insert>
<dialog title="Insert fileatime">fileatime(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="filectime">
<description>Gets inode change time of file</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="int">int</return>
<insert>filectime(string filename);</insert>
<dialog title="Insert filectime">filectime(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="filegroup">
<description>Gets file group</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="int">int</return>
<insert>filegroup(string filename);</insert>
<dialog title="Insert filegroup">filegroup(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fileinode">
<description>Gets file inode</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="int">int</return>
<insert>fileinode(string filename);</insert>
<dialog title="Insert fileinode">fileinode(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="filemtime">
<description>Gets file modification time</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="int">int</return>
<insert>filemtime(string filename);</insert>
<dialog title="Insert filemtime">filemtime(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fileowner">
<description>Gets file owner</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="int">int</return>
<insert>fileowner(string filename);</insert>
<dialog title="Insert fileowner">fileowner(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fileperms">
<description>Gets file permissions</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="int">int</return>
<insert>fileperms(string filename);</insert>
<dialog title="Insert fileperms">fileperms(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="filesize">
<description>Gets file size</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="int">int</return>
<insert>filesize(string filename);</insert>
<dialog title="Insert filesize">filesize(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="filetype">
<description>Gets file type</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="string">string</return>
<insert>filetype(string filename);</insert>
<dialog title="Insert filetype">filetype(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="flock">
<description>Portable advisory file locking</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<param name="operation" required="1" vallist="0" default="" type="int">operation</param>
<param name="&amp;wouldblock" required="0" vallist="0" default="" type="int">&amp;wouldblock</param>
<return type="bool">bool</return>
<insert>flock(resource handle, int operation [,int &amp;wouldblock]);</insert>
<dialog title="Insert flock">flock(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="fnmatch">
<description>Match filename against a  pattern</description>
<param name="pattern" required="1" vallist="0" default="" type="string">pattern</param>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<param name="flags" required="0" vallist="0" default="" type="int">flags</param>
<return type="array">array</return>
<insert>fnmatch(string pattern, string string [,int flags]);</insert>
<dialog title="Insert fnmatch">fnmatch(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="fopen">
<description>Opens file or URL</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="mode" required="1" vallist="0" default="" type="string">mode</param>
<param name="use_include_path" required="0" vallist="0" default="" type="int">use_include_path</param>
<param name="zcontext" required="0" vallist="0" default="" type="resource">zcontext</param>
<return type="resource">resource</return>
<insert>fopen(string filename, string mode [,int use_include_path] [,resource zcontext]);</insert>
<dialog title="Insert fopen">fopen(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="fpassthru">
<description>Output all remaining data on a file pointer</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="int">int</return>
<insert>fpassthru(resource handle);</insert>
<dialog title="Insert fpassthru">fpassthru(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fread">
<description>Binary-safe file read</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<param name="length" required="1" vallist="0" default="" type="int">length</param>
<return type="string">string</return>
<insert>fread(resource handle, int length);</insert>
<dialog title="Insert fread">fread(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fscanf">
<description>Parses input from a file according to a format</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<param name="format" required="1" vallist="0" default="" type="string">format</param>
<param name="var1" required="0" vallist="0" default="" type="string">var1</param>
<return type="mixed">mixed</return>
<insert>fscanf(resource handle, string format [,string var1]);</insert>
<dialog title="Insert fscanf">fscanf(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="fseek">
<description>Seeks on a file pointer</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<param name="offset" required="1" vallist="0" default="" type="int">offset</param>
<param name="whence" required="0" vallist="0" default="" type="int">whence</param>
<return type="int">int</return>
<insert>fseek(resource handle, int offset [,int whence]);</insert>
<dialog title="Insert fseek">fseek(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="fstat">
<description>Gets information about a file using an open file pointer</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="array">array</return>
<insert>fstat(resource handle);</insert>
<dialog title="Insert fstat">fstat(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ftell">
<description>Tells file pointer read/write position</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="int">int</return>
<insert>ftell(resource handle);</insert>
<dialog title="Insert ftell">ftell(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ftruncate">
<description>Truncates a file to a given length</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<param name="size" required="1" vallist="0" default="" type="int">size</param>
<return type="bool">bool</return>
<insert>ftruncate(resource handle, int size);</insert>
<dialog title="Insert ftruncate">ftruncate(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="fwrite">
<description>Binary-safe file write</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<param name="length" required="0" vallist="0" default="" type="int">length</param>
<return type="int">int</return>
<insert>fwrite(resource handle, string string [,int length]);</insert>
<dialog title="Insert fwrite">fwrite(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="glob">
<description>Find pathnames matching a pattern</description>
<param name="pattern" required="1" vallist="0" default="" type="string">pattern</param>
<param name="flags" required="0" vallist="0" default="" type="int">flags</param>
<return type="array">array</return>
<insert>glob(string pattern [,int flags]);</insert>
<dialog title="Insert glob">glob(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="is_dir">
<description>Tells whether the filename is a directory</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="bool">bool</return>
<insert>is_dir(string filename);</insert>
<dialog title="Insert is_dir">is_dir(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="is_executable">
<description>Tells whether the filename is executable</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="bool">bool</return>
<insert>is_executable(string filename);</insert>
<dialog title="Insert is_executable">is_executable(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="is_file">
<description>Tells whether the filename is a regular file</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="bool">bool</return>
<insert>is_file(string filename);</insert>
<dialog title="Insert is_file">is_file(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="is_link">
<description>Tells whether the filename is a symbolic link</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="bool">bool</return>
<insert>is_link(string filename);</insert>
<dialog title="Insert is_link">is_link(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="is_readable">
<description>Tells whether the filename is readable</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="bool">bool</return>
<insert>is_readable(string filename);</insert>
<dialog title="Insert is_readable">is_readable(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="is_uploaded_file">
<description>Tells whether the file was uploaded via HTTP POST</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="bool">bool</return>
<insert>is_uploaded_file(string filename);</insert>
<dialog title="Insert is_uploaded_file">is_uploaded_file(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="is_writable">
<description>Tells whether the filename is writable</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="bool">bool</return>
<insert>is_writable(string filename);</insert>
<dialog title="Insert is_writable">is_writable(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="link">
<description>Create a hard link</description>
<param name="target" required="1" vallist="0" default="" type="string">target</param>
<param name="link" required="1" vallist="0" default="" type="string">link</param>
<return type="int">int</return>
<insert>link(string target, string link);</insert>
<dialog title="Insert link">link(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="linkinfo">
<description>Gets information about a link</description>
<param name="path" required="1" vallist="0" default="" type="string">path</param>
<return type="int">int</return>
<insert>linkinfo(string path);</insert>
<dialog title="Insert linkinfo">linkinfo(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="lstat">
<description>Gives information about a file or symbolic link</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="array">array</return>
<insert>lstat(string filename);</insert>
<dialog title="Insert lstat">lstat(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mkdir">
<description>Makes directory</description>
<param name="pathname" required="1" vallist="0" default="" type="string">pathname</param>
<param name="mode" required="0" vallist="0" default="" type="int">mode</param>
<return type="int">int</return>
<insert>mkdir(string pathname [,int mode]);</insert>
<dialog title="Insert mkdir">mkdir(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="move_uploaded_file">
<description>Moves an uploaded file to a new location</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="destination" required="1" vallist="0" default="" type="string">destination</param>
<return type="bool">bool</return>
<insert>move_uploaded_file(string filename, string destination);</insert>
<dialog title="Insert move_uploaded_file">move_uploaded_file(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="parse_ini_file">
<description>Parse a configuration file</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="process_sections" required="0" vallist="0" default="" type="bool">process_sections</param>
<return type="array">array</return>
<insert>parse_ini_file(string filename [,bool process_sections]);</insert>
<dialog title="Insert parse_ini_file">parse_ini_file(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pathinfo">
<description>Returns information about a file path</description>
<param name="path" required="1" vallist="0" default="" type="string">path</param>
<return type="array">array</return>
<insert>pathinfo(string path);</insert>
<dialog title="Insert pathinfo">pathinfo(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pclose">
<description>Closes process file pointer</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="int">int</return>
<insert>pclose(resource handle);</insert>
<dialog title="Insert pclose">pclose(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="popen">
<description>Opens process file pointer</description>
<param name="command" required="1" vallist="0" default="" type="string">command</param>
<param name="mode" required="1" vallist="0" default="" type="string">mode</param>
<return type="resource">resource</return>
<insert>popen(string command, string mode);</insert>
<dialog title="Insert popen">popen(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="readfile">
<description>Outputs a file</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="use_include_path" required="0" vallist="0" default="" type="bool">use_include_path</param>
<return type="int">int</return>
<insert>readfile(string filename [,bool use_include_path]);</insert>
<dialog title="Insert readfile">readfile(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="readlink">
<description>Returns the target of a symbolic link</description>
<param name="path" required="1" vallist="0" default="" type="string">path</param>
<return type="string">string</return>
<insert>readlink(string path);</insert>
<dialog title="Insert readlink">readlink(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="realpath">
<description>Returns canonicalized absolute pathname</description>
<param name="path" required="1" vallist="0" default="" type="string">path</param>
<return type="string">string</return>
<insert>realpath(string path);</insert>
<dialog title="Insert realpath">realpath(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="rename">
<description>Renames a file</description>
<param name="oldname" required="1" vallist="0" default="" type="string">oldname</param>
<param name="newname" required="1" vallist="0" default="" type="string">newname</param>
<return type="bool">bool</return>
<insert>rename(string oldname, string newname);</insert>
<dialog title="Insert rename">rename(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="rewind">
<description>Rewind the position of a file pointer</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="int">int</return>
<insert>rewind(resource handle);</insert>
<dialog title="Insert rewind">rewind(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="rmdir">
<description>Removes directory</description>
<param name="dirname" required="1" vallist="0" default="" type="string">dirname</param>
<return type="int">int</return>
<insert>rmdir(string dirname);</insert>
<dialog title="Insert rmdir">rmdir(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="stat">
<description>Gives information about a file</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="array">array</return>
<insert>stat(string filename);</insert>
<dialog title="Insert stat">stat(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="symlink">
<description>Creates a symbolic link</description>
<param name="target" required="1" vallist="0" default="" type="string">target</param>
<param name="link" required="1" vallist="0" default="" type="string">link</param>
<return type="int">int</return>
<insert>symlink(string target, string link);</insert>
<dialog title="Insert symlink">symlink(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="tempnam">
<description>Create file with unique file name</description>
<param name="dir" required="1" vallist="0" default="" type="string">dir</param>
<param name="prefix" required="1" vallist="0" default="" type="string">prefix</param>
<return type="string">string</return>
<insert>tempnam(string dir, string prefix);</insert>
<dialog title="Insert tempnam">tempnam(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="tmpfile">
<description>Creates a temporary file</description>
<return type="resource">resource</return>
<insert>tmpfile();</insert>
<dialog title="Insert tmpfile">tmpfile();</dialog>
<info title="Info window"></info>
</function>
<function name="touch">
<description>Sets access and modification time of file</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="time" required="0" vallist="0" default="" type="int">time</param>
<param name="atime" required="0" vallist="0" default="" type="int">atime</param>
<return type="int">int</return>
<insert>touch(string filename [,int time] [,int atime]);</insert>
<dialog title="Insert touch">touch(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="umask">
<description>Changes the current umask</description>
<param name="mask" required="0" vallist="0" default="" type="int">mask</param>
<return type="int">int</return>
<insert>umask([int mask]);</insert>
<dialog title="Insert umask">umask(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="unlink">
<description>Deletes a file</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="int">int</return>
<insert>unlink(string filename);</insert>
<dialog title="Insert unlink">unlink(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="fribidi">
<function name="fribidi_log2vis">
<description>Convert a logical string to a visual one</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="direction" required="1" vallist="0" default="" type="string">direction</param>
<param name="charset" required="1" vallist="0" default="" type="int">charset</param>
<return type="string">string</return>
<insert>fribidi_log2vis(string str, string direction, int charset);</insert>
<dialog title="Insert fribidi_log2vis">fribidi_log2vis(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="ftp">
<function name="ftp_cdup">
<description>Changes to the parent directory</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<return type="bool">bool</return>
<insert>ftp_cdup(resource ftp_stream);</insert>
<dialog title="Insert ftp_cdup">ftp_cdup(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_chdir">
<description>Changes directories on a FTP server</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<param name="directory" required="1" vallist="0" default="" type="string">directory</param>
<return type="bool">bool</return>
<insert>ftp_chdir(resource ftp_stream, string directory);</insert>
<dialog title="Insert ftp_chdir">ftp_chdir(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_chmod">
<description>Set permissions on a file via FTP</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="string">string</return>
<insert>ftp_chmod(resource ftp_stream, int mode, string filename);</insert>
<dialog title="Insert ftp_chmod">ftp_chmod(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_close">
<description>Closes an FTP connection</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<return type="void">void</return>
<insert>ftp_close(resource ftp_stream);</insert>
<dialog title="Insert ftp_close">ftp_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_connect">
<description>Opens an FTP connection</description>
<param name="host" required="1" vallist="0" default="" type="string">host</param>
<param name="port" required="0" vallist="0" default="" type="int">port</param>
<param name="timeout" required="0" vallist="0" default="" type="int">timeout</param>
<return type="resource">resource</return>
<insert>ftp_connect(string host [,int port] [,int timeout]);</insert>
<dialog title="Insert ftp_connect">ftp_connect(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_delete">
<description>Deletes a file on the FTP server</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<param name="path" required="1" vallist="0" default="" type="string">path</param>
<return type="bool">bool</return>
<insert>ftp_delete(resource ftp_stream, string path);</insert>
<dialog title="Insert ftp_delete">ftp_delete(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_exec">
<description>Requests execution of a program on the FTP server</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<param name="command" required="1" vallist="0" default="" type="string">command</param>
<return type="bool">bool</return>
<insert>ftp_exec(resource ftp_stream, string command);</insert>
<dialog title="Insert ftp_exec">ftp_exec(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_fget">
<description>Downloads a file from the FTP server and saves to an open file</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<param name="remote_file" required="1" vallist="0" default="" type="string">remote_file</param>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<param name="resumepos" required="0" vallist="0" default="" type="int">resumepos</param>
<return type="bool">bool</return>
<insert>ftp_fget(resource ftp_stream, resource handle, string remote_file, int mode [,int resumepos]);</insert>
<dialog title="Insert ftp_fget">ftp_fget(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_fput">
<description>Uploads from an open file to the FTP server</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<param name="remote_file" required="1" vallist="0" default="" type="string">remote_file</param>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<param name="startpos" required="0" vallist="0" default="" type="int">startpos</param>
<return type="bool">bool</return>
<insert>ftp_fput(resource ftp_stream, string remote_file, resource handle, int mode [,int startpos]);</insert>
<dialog title="Insert ftp_fput">ftp_fput(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_get_option">
<description>Retrieves various runtime behaviours of the current FTP stream</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<param name="option" required="1" vallist="0" default="" type="int">option</param>
<return type="mixed">mixed</return>
<insert>ftp_get_option(resource ftp_stream, int option);</insert>
<dialog title="Insert ftp_get_option">ftp_get_option(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_get">
<description>Downloads a file from the FTP server</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<param name="local_file" required="1" vallist="0" default="" type="string">local_file</param>
<param name="remote_file" required="1" vallist="0" default="" type="string">remote_file</param>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<param name="resumepos" required="0" vallist="0" default="" type="int">resumepos</param>
<return type="bool">bool</return>
<insert>ftp_get(resource ftp_stream, string local_file, string remote_file, int mode [,int resumepos]);</insert>
<dialog title="Insert ftp_get">ftp_get(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_login">
<description>Logs in to an FTP connection</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<return type="bool">bool</return>
<insert>ftp_login(resource ftp_stream, string username, string password);</insert>
<dialog title="Insert ftp_login">ftp_login(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_mdtm">
<description>Returns the last modified time of the given file</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<param name="remote_file" required="1" vallist="0" default="" type="string">remote_file</param>
<return type="int">int</return>
<insert>ftp_mdtm(resource ftp_stream, string remote_file);</insert>
<dialog title="Insert ftp_mdtm">ftp_mdtm(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_mkdir">
<description>Creates a directory</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<param name="directory" required="1" vallist="0" default="" type="string">directory</param>
<return type="string">string</return>
<insert>ftp_mkdir(resource ftp_stream, string directory);</insert>
<dialog title="Insert ftp_mkdir">ftp_mkdir(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_nb_continue">
<description>Continues retrieving/sending a file (non-blocking)</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<return type="bool">bool</return>
<insert>ftp_nb_continue(resource ftp_stream);</insert>
<dialog title="Insert ftp_nb_continue">ftp_nb_continue(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_nb_fget">
<description>Retrieves a file from the FTP server and writes it to an open file (non-blocking)</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<param name="remote_file" required="1" vallist="0" default="" type="string">remote_file</param>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<param name="resumepos" required="0" vallist="0" default="" type="int">resumepos</param>
<return type="bool">bool</return>
<insert>ftp_nb_fget(resource ftp_stream, resource handle, string remote_file, int mode [,int resumepos]);</insert>
<dialog title="Insert ftp_nb_fget">ftp_nb_fget(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_nb_fput">
<description>Stores a file from an open file to the FTP server (non-blocking)</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<param name="remote_file" required="1" vallist="0" default="" type="string">remote_file</param>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<param name="startpos" required="0" vallist="0" default="" type="int">startpos</param>
<return type="bool">bool</return>
<insert>ftp_nb_fput(resource ftp_stream, string remote_file, resource handle, int mode [,int startpos]);</insert>
<dialog title="Insert ftp_nb_fput">ftp_nb_fput(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_nb_get">
<description>Retrieves a file from the FTP server and writes it to a local file (non-blocking)</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<param name="local_file" required="1" vallist="0" default="" type="string">local_file</param>
<param name="remote_file" required="1" vallist="0" default="" type="string">remote_file</param>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<param name="resumepos" required="0" vallist="0" default="" type="int">resumepos</param>
<return type="bool">bool</return>
<insert>ftp_nb_get(resource ftp_stream, string local_file, string remote_file, int mode [,int resumepos]);</insert>
<dialog title="Insert ftp_nb_get">ftp_nb_get(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_nb_put">
<description>Stores a file on the FTP server (non-blocking)</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<param name="remote_file" required="1" vallist="0" default="" type="string">remote_file</param>
<param name="local_file" required="1" vallist="0" default="" type="string">local_file</param>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<param name="startpos" required="0" vallist="0" default="" type="int">startpos</param>
<return type="bool">bool</return>
<insert>ftp_nb_put(resource ftp_stream, string remote_file, string local_file, int mode [,int startpos]);</insert>
<dialog title="Insert ftp_nb_put">ftp_nb_put(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_nlist">
<description>Returns a list of files in the given directory</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<param name="directory" required="1" vallist="0" default="" type="string">directory</param>
<return type="array">array</return>
<insert>ftp_nlist(resource ftp_stream, string directory);</insert>
<dialog title="Insert ftp_nlist">ftp_nlist(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_pasv">
<description>Turns passive mode on or off</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<param name="pasv" required="1" vallist="0" default="" type="bool">pasv</param>
<return type="bool">bool</return>
<insert>ftp_pasv(resource ftp_stream, bool pasv);</insert>
<dialog title="Insert ftp_pasv">ftp_pasv(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_put">
<description>Uploads a file to the FTP server</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<param name="remote_file" required="1" vallist="0" default="" type="string">remote_file</param>
<param name="local_file" required="1" vallist="0" default="" type="string">local_file</param>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<param name="startpos" required="0" vallist="0" default="" type="int">startpos</param>
<return type="bool">bool</return>
<insert>ftp_put(resource ftp_stream, string remote_file, string local_file, int mode [,int startpos]);</insert>
<dialog title="Insert ftp_put">ftp_put(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_pwd">
<description>Returns the current directory name</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<return type="string">string</return>
<insert>ftp_pwd(resource ftp_stream);</insert>
<dialog title="Insert ftp_pwd">ftp_pwd(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_raw">
<description>Sends an arbitrary command to an FTP server</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<param name="command" required="1" vallist="0" default="" type="string">command</param>
<return type="array">array</return>
<insert>ftp_raw(resource ftp_stream, string command);</insert>
<dialog title="Insert ftp_raw">ftp_raw(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_rawlist">
<description>Returns a detailed list of files in the given directory</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<param name="directory" required="1" vallist="0" default="" type="string">directory</param>
<return type="array">array</return>
<insert>ftp_rawlist(resource ftp_stream, string directory);</insert>
<dialog title="Insert ftp_rawlist">ftp_rawlist(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_rename">
<description>Renames a file on the FTP server</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<param name="from" required="1" vallist="0" default="" type="string">from</param>
<param name="to" required="1" vallist="0" default="" type="string">to</param>
<return type="bool">bool</return>
<insert>ftp_rename(resource ftp_stream, string from, string to);</insert>
<dialog title="Insert ftp_rename">ftp_rename(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_rmdir">
<description>Removes a directory</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<param name="directory" required="1" vallist="0" default="" type="string">directory</param>
<return type="bool">bool</return>
<insert>ftp_rmdir(resource ftp_stream, string directory);</insert>
<dialog title="Insert ftp_rmdir">ftp_rmdir(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_set_option">
<description>Set miscellaneous runtime FTP options</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<param name="option" required="1" vallist="0" default="" type="int">option</param>
<param name="value" required="1" vallist="0" default="" type="mixed">value</param>
<return type="bool">bool</return>
<insert>ftp_set_option(resource ftp_stream, int option, mixed value);</insert>
<dialog title="Insert ftp_set_option">ftp_set_option(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_site">
<description>Sends a SITE command to the server</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<param name="cmd" required="1" vallist="0" default="" type="string">cmd</param>
<return type="bool">bool</return>
<insert>ftp_site(resource ftp_stream, string cmd);</insert>
<dialog title="Insert ftp_site">ftp_site(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_size">
<description>Returns the size of the given file</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<param name="remote_file" required="1" vallist="0" default="" type="string">remote_file</param>
<return type="int">int</return>
<insert>ftp_size(resource ftp_stream, string remote_file);</insert>
<dialog title="Insert ftp_size">ftp_size(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_ssl_connect">
<description>Opens an Secure SSL-FTP connection</description>
<param name="host" required="1" vallist="0" default="" type="string">host</param>
<param name="port" required="0" vallist="0" default="" type="int">port</param>
<param name="timeout" required="0" vallist="0" default="" type="int">timeout</param>
<return type="resource">resource</return>
<insert>ftp_ssl_connect(string host [,int port] [,int timeout]);</insert>
<dialog title="Insert ftp_ssl_connect">ftp_ssl_connect(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ftp_systype">
<description>Returns the system type identifier of the remote FTP server</description>
<param name="ftp_stream" required="1" vallist="0" default="" type="resource">ftp_stream</param>
<return type="string">string</return>
<insert>ftp_systype(resource ftp_stream);</insert>
<dialog title="Insert ftp_systype">ftp_systype(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="funchand">
<function name="call_user_func_array">
<description>
     Call a user function given with an array of parameters
    </description>
<param name="function" required="1" vallist="0" default="" type="callback">function</param>
<param name="paramarr" required="0" vallist="0" default="" type="array">paramarr</param>
<return type="mixed">mixed</return>
<insert>call_user_func_array(callback function [,array paramarr]);</insert>
<dialog title="Insert call_user_func_array">call_user_func_array(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="call_user_func">
<description>
     Call a user function given by the first parameter
    </description>
<param name="function" required="1" vallist="0" default="" type="callback">function</param>
<param name="parameter" required="0" vallist="0" default="" type="mixed">parameter</param>
<param name="..." required="0" vallist="0" default="" type="mixed">...</param>
<return type="mixed">mixed</return>
<insert>call_user_func(callback function [,mixed parameter] [,mixed ...]);</insert>
<dialog title="Insert call_user_func">call_user_func(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="create_function">
<description>Create an anonymous (lambda-style) function</description>
<param name="args" required="1" vallist="0" default="" type="string">args</param>
<param name="code" required="1" vallist="0" default="" type="string">code</param>
<return type="string">string</return>
<insert>create_function(string args, string code);</insert>
<dialog title="Insert create_function">create_function(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="func_get_arg">
<description>Return an item from the argument list</description>
<param name="arg_num" required="1" vallist="0" default="" type="int">arg_num</param>
<return type="mixed">mixed</return>
<insert>func_get_arg(int arg_num);</insert>
<dialog title="Insert func_get_arg">func_get_arg(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="func_get_args">
<description>
     Returns an array comprising a function's argument list
    </description>
<return type="array">array</return>
<insert>func_get_args();</insert>
<dialog title="Insert func_get_args">func_get_args();</dialog>
<info title="Info window"></info>
</function>
<function name="func_num_args">
<description>
     Returns the number of arguments passed to the function
    </description>
<return type="int">int</return>
<insert>func_num_args();</insert>
<dialog title="Insert func_num_args">func_num_args();</dialog>
<info title="Info window"></info>
</function>
<function name="function_exists">
<description>
     Return </description>
<param name="function_name" required="1" vallist="0" default="" type="string">function_name</param>
<return type="bool">bool</return>
<insert>function_exists(string function_name);</insert>
<dialog title="Insert function_exists">function_exists(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="get_defined_functions">
<description>
     Returns an array of all defined functions
    </description>
<return type="array">array</return>
<insert>get_defined_functions();</insert>
<dialog title="Insert get_defined_functions">get_defined_functions();</dialog>
<info title="Info window"></info>
</function>
<function name="register_shutdown_function">
<description>
     Register a function for execution on shutdown
    </description>
<param name="function" required="1" vallist="0" default="" type="callback">function</param>
<return type="int">int</return>
<insert>register_shutdown_function(callback function);</insert>
<dialog title="Insert register_shutdown_function">register_shutdown_function(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="register_tick_function">
<description>
     Register a function for execution on each tick
    </description>
<param name="function" required="1" vallist="0" default="" type="callback">function</param>
<param name="arg" required="0" vallist="0" default="" type="mixed">arg</param>
<return type="void">void</return>
<insert>register_tick_function(callback function [,mixed arg]);</insert>
<dialog title="Insert register_tick_function">register_tick_function(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="unregister_tick_function">
<description>
     De-register a function for execution on each tick
    </description>
<param name="function_name" required="1" vallist="0" default="" type="string">function_name</param>
<return type="void">void</return>
<insert>unregister_tick_function(string function_name);</insert>
<dialog title="Insert unregister_tick_function">unregister_tick_function(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="gettext">
<function name="bind_textdomain_codeset">
<description>
     Specify the character encoding in which the messages from the
     DOMAIN message catalog will be returned
    </description>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<param name="codeset" required="1" vallist="0" default="" type="string">codeset</param>
<return type="string">string</return>
<insert>bind_textdomain_codeset(string domain, string codeset);</insert>
<dialog title="Insert bind_textdomain_codeset">bind_textdomain_codeset(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="bindtextdomain">
<description>Sets the path for a domain</description>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<param name="directory" required="1" vallist="0" default="" type="string">directory</param>
<return type="string">string</return>
<insert>bindtextdomain(string domain, string directory);</insert>
<dialog title="Insert bindtextdomain">bindtextdomain(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dcgettext">
<description>Overrides the domain for a single lookup</description>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<param name="message" required="1" vallist="0" default="" type="string">message</param>
<param name="category" required="1" vallist="0" default="" type="int">category</param>
<return type="string">string</return>
<insert>dcgettext(string domain, string message, int category);</insert>
<dialog title="Insert dcgettext">dcgettext(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="dcngettext">
<description>Plural version of dcgettext</description>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<param name="msgid1" required="1" vallist="0" default="" type="string">msgid1</param>
<param name="msgid2" required="1" vallist="0" default="" type="string">msgid2</param>
<param name="n" required="1" vallist="0" default="" type="int">n</param>
<param name="category" required="1" vallist="0" default="" type="int">category</param>
<return type="string">string</return>
<insert>dcngettext(string domain, string msgid1, string msgid2, int n, int category);</insert>
<dialog title="Insert dcngettext">dcngettext(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="dgettext">
<description>Override the current domain</description>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<param name="message" required="1" vallist="0" default="" type="string">message</param>
<return type="string">string</return>
<insert>dgettext(string domain, string message);</insert>
<dialog title="Insert dgettext">dgettext(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dngettext">
<description>Plural version of dgettext</description>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<param name="msgid1" required="1" vallist="0" default="" type="string">msgid1</param>
<param name="msgid2" required="1" vallist="0" default="" type="string">msgid2</param>
<param name="n" required="1" vallist="0" default="" type="int">n</param>
<return type="string">string</return>
<insert>dngettext(string domain, string msgid1, string msgid2, int n);</insert>
<dialog title="Insert dngettext">dngettext(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="gettext">
<description>Lookup a message in the current domain</description>
<param name="message" required="1" vallist="0" default="" type="string">message</param>
<return type="string">string</return>
<insert>gettext(string message);</insert>
<dialog title="Insert gettext">gettext(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ngettext">
<description>Plural version of gettext</description>
<param name="msgid1" required="1" vallist="0" default="" type="string">msgid1</param>
<param name="msgid2" required="1" vallist="0" default="" type="string">msgid2</param>
<param name="n" required="1" vallist="0" default="" type="int">n</param>
<return type="string">string</return>
<insert>ngettext(string msgid1, string msgid2, int n);</insert>
<dialog title="Insert ngettext">ngettext(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="textdomain">
<description>Sets the default domain</description>
<param name="text_domain" required="1" vallist="0" default="" type="string">text_domain</param>
<return type="string">string</return>
<insert>textdomain(string text_domain);</insert>
<dialog title="Insert textdomain">textdomain(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="gmp">
<function name="gmp_abs">
<description>Absolute value</description>
<param name="a" required="1" vallist="0" default="" type="resource">a</param>
<return type="resource">resource</return>
<insert>gmp_abs(resource a);</insert>
<dialog title="Insert gmp_abs">gmp_abs(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_add">
<description>Add numbers</description>
<param name="a" required="1" vallist="0" default="" type="resource">a</param>
<param name="b" required="1" vallist="0" default="" type="resource">b</param>
<return type="resource">resource</return>
<insert>gmp_add(resource a, resource b);</insert>
<dialog title="Insert gmp_add">gmp_add(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_and">
<description>Logical AND</description>
<param name="a" required="1" vallist="0" default="" type="resource">a</param>
<param name="b" required="1" vallist="0" default="" type="resource">b</param>
<return type="resource">resource</return>
<insert>gmp_and(resource a, resource b);</insert>
<dialog title="Insert gmp_and">gmp_and(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_clrbit">
<description>Clear bit</description>
<param name="&amp;a" required="1" vallist="0" default="" type="resource">&amp;a</param>
<param name="index" required="1" vallist="0" default="" type="int">index</param>
<return type="resource">resource</return>
<insert>gmp_clrbit(resource &amp;a, int index);</insert>
<dialog title="Insert gmp_clrbit">gmp_clrbit(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_cmp">
<description>Compare numbers</description>
<param name="a" required="1" vallist="0" default="" type="resource">a</param>
<param name="b" required="1" vallist="0" default="" type="resource">b</param>
<return type="int">int</return>
<insert>gmp_cmp(resource a, resource b);</insert>
<dialog title="Insert gmp_cmp">gmp_cmp(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_com">
<description>Calculates one's complement of a</description>
<param name="a" required="1" vallist="0" default="" type="resource">a</param>
<return type="resource">resource</return>
<insert>gmp_com(resource a);</insert>
<dialog title="Insert gmp_com">gmp_com(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_div_q">
<description>Divide numbers</description>
<param name="a" required="1" vallist="0" default="" type="resource">a</param>
<param name="b" required="1" vallist="0" default="" type="resource">b</param>
<param name="round" required="0" vallist="0" default="" type="int">round</param>
<return type="resource">resource</return>
<insert>gmp_div_q(resource a, resource b [,int round]);</insert>
<dialog title="Insert gmp_div_q">gmp_div_q(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_div_qr">
<description>Divide numbers and get quotient and remainder</description>
<param name="n" required="1" vallist="0" default="" type="resource">n</param>
<param name="d" required="1" vallist="0" default="" type="resource">d</param>
<param name="round" required="0" vallist="0" default="" type="int">round</param>
<return type="array">array</return>
<insert>gmp_div_qr(resource n, resource d [,int round]);</insert>
<dialog title="Insert gmp_div_qr">gmp_div_qr(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_div_r">
<description>Remainder of the division of numbers</description>
<param name="n" required="1" vallist="0" default="" type="resource">n</param>
<param name="d" required="1" vallist="0" default="" type="resource">d</param>
<param name="round" required="0" vallist="0" default="" type="int">round</param>
<return type="resource">resource</return>
<insert>gmp_div_r(resource n, resource d [,int round]);</insert>
<dialog title="Insert gmp_div_r">gmp_div_r(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_divexact">
<description>Exact division of numbers</description>
<param name="n" required="1" vallist="0" default="" type="resource">n</param>
<param name="d" required="1" vallist="0" default="" type="resource">d</param>
<return type="resource">resource</return>
<insert>gmp_divexact(resource n, resource d);</insert>
<dialog title="Insert gmp_divexact">gmp_divexact(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_fact">
<description>Factorial</description>
<param name="a" required="1" vallist="0" default="" type="int">a</param>
<return type="resource">resource</return>
<insert>gmp_fact(int a);</insert>
<dialog title="Insert gmp_fact">gmp_fact(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_gcd">
<description>Calculate GCD</description>
<param name="a" required="1" vallist="0" default="" type="resource">a</param>
<param name="b" required="1" vallist="0" default="" type="resource">b</param>
<return type="resource">resource</return>
<insert>gmp_gcd(resource a, resource b);</insert>
<dialog title="Insert gmp_gcd">gmp_gcd(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_gcdext">
<description>Calculate GCD and multipliers</description>
<param name="a" required="1" vallist="0" default="" type="resource">a</param>
<param name="b" required="1" vallist="0" default="" type="resource">b</param>
<return type="array">array</return>
<insert>gmp_gcdext(resource a, resource b);</insert>
<dialog title="Insert gmp_gcdext">gmp_gcdext(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_hamdist">
<description>Hamming distance</description>
<param name="a" required="1" vallist="0" default="" type="resource">a</param>
<param name="b" required="1" vallist="0" default="" type="resource">b</param>
<return type="int">int</return>
<insert>gmp_hamdist(resource a, resource b);</insert>
<dialog title="Insert gmp_hamdist">gmp_hamdist(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_init">
<description>Create GMP number</description>
<param name="number" required="1" vallist="0" default="" type="mixed">number</param>
<return type="resource">resource</return>
<insert>gmp_init(mixed number);</insert>
<dialog title="Insert gmp_init">gmp_init(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_intval">
<description>Convert GMP number to integer</description>
<param name="gmpnumber" required="1" vallist="0" default="" type="resource">gmpnumber</param>
<return type="int">int</return>
<insert>gmp_intval(resource gmpnumber);</insert>
<dialog title="Insert gmp_intval">gmp_intval(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_invert">
<description>Inverse by modulo</description>
<param name="a" required="1" vallist="0" default="" type="resource">a</param>
<param name="b" required="1" vallist="0" default="" type="resource">b</param>
<return type="resource">resource</return>
<insert>gmp_invert(resource a, resource b);</insert>
<dialog title="Insert gmp_invert">gmp_invert(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_jacobi">
<description>Jacobi symbol</description>
<param name="a" required="1" vallist="0" default="" type="resource">a</param>
<param name="p" required="1" vallist="0" default="" type="resource">p</param>
<return type="int">int</return>
<insert>gmp_jacobi(resource a, resource p);</insert>
<dialog title="Insert gmp_jacobi">gmp_jacobi(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_legendre">
<description>Legendre symbol</description>
<param name="a" required="1" vallist="0" default="" type="resource">a</param>
<param name="p" required="1" vallist="0" default="" type="resource">p</param>
<return type="int">int</return>
<insert>gmp_legendre(resource a, resource p);</insert>
<dialog title="Insert gmp_legendre">gmp_legendre(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_mod">
<description>Modulo operation</description>
<param name="n" required="1" vallist="0" default="" type="resource">n</param>
<param name="d" required="1" vallist="0" default="" type="resource">d</param>
<return type="resource">resource</return>
<insert>gmp_mod(resource n, resource d);</insert>
<dialog title="Insert gmp_mod">gmp_mod(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_mul">
<description>Multiply numbers</description>
<param name="a" required="1" vallist="0" default="" type="resource">a</param>
<param name="b" required="1" vallist="0" default="" type="resource">b</param>
<return type="resource">resource</return>
<insert>gmp_mul(resource a, resource b);</insert>
<dialog title="Insert gmp_mul">gmp_mul(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_neg">
<description>Negate number</description>
<param name="a" required="1" vallist="0" default="" type="resource">a</param>
<return type="resource">resource</return>
<insert>gmp_neg(resource a);</insert>
<dialog title="Insert gmp_neg">gmp_neg(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_or">
<description>Logical OR</description>
<param name="a" required="1" vallist="0" default="" type="resource">a</param>
<param name="b" required="1" vallist="0" default="" type="resource">b</param>
<return type="resource">resource</return>
<insert>gmp_or(resource a, resource b);</insert>
<dialog title="Insert gmp_or">gmp_or(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_perfect_square">
<description>Perfect square check</description>
<param name="a" required="1" vallist="0" default="" type="resource">a</param>
<return type="bool">bool</return>
<insert>gmp_perfect_square(resource a);</insert>
<dialog title="Insert gmp_perfect_square">gmp_perfect_square(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_popcount">
<description>Population count</description>
<param name="a" required="1" vallist="0" default="" type="resource">a</param>
<return type="int">int</return>
<insert>gmp_popcount(resource a);</insert>
<dialog title="Insert gmp_popcount">gmp_popcount(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_pow">
<description>Raise number into power</description>
<param name="base" required="1" vallist="0" default="" type="resource">base</param>
<param name="exp" required="1" vallist="0" default="" type="int">exp</param>
<return type="resource">resource</return>
<insert>gmp_pow(resource base, int exp);</insert>
<dialog title="Insert gmp_pow">gmp_pow(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_powm">
<description>Raise number into power with modulo</description>
<param name="base" required="1" vallist="0" default="" type="resource">base</param>
<param name="exp" required="1" vallist="0" default="" type="resource">exp</param>
<param name="mod" required="1" vallist="0" default="" type="resource">mod</param>
<return type="resource">resource</return>
<insert>gmp_powm(resource base, resource exp, resource mod);</insert>
<dialog title="Insert gmp_powm">gmp_powm(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_prob_prime">
<description>Check if number is "probably prime"</description>
<param name="a" required="1" vallist="0" default="" type="resource">a</param>
<param name="reps" required="0" vallist="0" default="" type="int">reps</param>
<return type="int">int</return>
<insert>gmp_prob_prime(resource a [,int reps]);</insert>
<dialog title="Insert gmp_prob_prime">gmp_prob_prime(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_random">
<description>Random number</description>
<param name="limiter" required="1" vallist="0" default="" type="int">limiter</param>
<return type="resource">resource</return>
<insert>gmp_random(int limiter);</insert>
<dialog title="Insert gmp_random">gmp_random(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_scan0">
<description>Scan for 0</description>
<param name="a" required="1" vallist="0" default="" type="resource">a</param>
<param name="start" required="1" vallist="0" default="" type="int">start</param>
<return type="int">int</return>
<insert>gmp_scan0(resource a, int start);</insert>
<dialog title="Insert gmp_scan0">gmp_scan0(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_scan1">
<description>Scan for 1</description>
<param name="a" required="1" vallist="0" default="" type="resource">a</param>
<param name="start" required="1" vallist="0" default="" type="int">start</param>
<return type="int">int</return>
<insert>gmp_scan1(resource a, int start);</insert>
<dialog title="Insert gmp_scan1">gmp_scan1(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_setbit">
<description>Set bit</description>
<param name="&amp;a" required="1" vallist="0" default="" type="resource">&amp;a</param>
<param name="index" required="1" vallist="0" default="" type="int">index</param>
<param name="set_clear" required="0" vallist="0" default="" type="bool">set_clear</param>
<return type="resource">resource</return>
<insert>gmp_setbit(resource &amp;a, int index [,bool set_clear]);</insert>
<dialog title="Insert gmp_setbit">gmp_setbit(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_sign">
<description>Sign of number</description>
<param name="a" required="1" vallist="0" default="" type="resource">a</param>
<return type="int">int</return>
<insert>gmp_sign(resource a);</insert>
<dialog title="Insert gmp_sign">gmp_sign(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_sqrt">
<description>Square root</description>
<param name="a" required="1" vallist="0" default="" type="resource">a</param>
<return type="resource">resource</return>
<insert>gmp_sqrt(resource a);</insert>
<dialog title="Insert gmp_sqrt">gmp_sqrt(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_sqrtrm">
<description>Square root with remainder</description>
<param name="a" required="1" vallist="0" default="" type="resource">a</param>
<return type="array">array</return>
<insert>gmp_sqrtrm(resource a);</insert>
<dialog title="Insert gmp_sqrtrm">gmp_sqrtrm(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_strval">
<description>Convert GMP number to string</description>
<param name="gmpnumber" required="1" vallist="0" default="" type="resource">gmpnumber</param>
<param name="base" required="0" vallist="0" default="" type="int">base</param>
<return type="string">string</return>
<insert>gmp_strval(resource gmpnumber [,int base]);</insert>
<dialog title="Insert gmp_strval">gmp_strval(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_sub">
<description>Subtract numbers</description>
<param name="a" required="1" vallist="0" default="" type="resource">a</param>
<param name="b" required="1" vallist="0" default="" type="resource">b</param>
<return type="resource">resource</return>
<insert>gmp_sub(resource a, resource b);</insert>
<dialog title="Insert gmp_sub">gmp_sub(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gmp_xor">
<description>Logical XOR</description>
<param name="a" required="1" vallist="0" default="" type="resource">a</param>
<param name="b" required="1" vallist="0" default="" type="resource">b</param>
<return type="resource">resource</return>
<insert>gmp_xor(resource a, resource b);</insert>
<dialog title="Insert gmp_xor">gmp_xor(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="http">
<function name="header">
<description>Send a raw HTTP header</description>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<param name="replace" required="0" vallist="0" default="" type="bool">replace</param>
<param name="http_reponse_code" required="0" vallist="0" default="" type="int">http_reponse_code</param>
<return type="int">int</return>
<insert>header(string string [,bool replace] [,int http_reponse_code]);</insert>
<dialog title="Insert header">header(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="headers_sent">
<description>Checks if or where headers have been sent</description>
<param name="&amp;file" required="0" vallist="0" default="" type="string">&amp;file</param>
<param name="&amp;line" required="0" vallist="0" default="" type="int">&amp;line</param>
<return type="bool">bool</return>
<insert>headers_sent([string &amp;file] [,int &amp;line]);</insert>
<dialog title="Insert headers_sent">headers_sent(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="setcookie">
<description>Send a cookie</description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<param name="value" required="0" vallist="0" default="" type="string">value</param>
<param name="expire" required="0" vallist="0" default="" type="int">expire</param>
<param name="path" required="0" vallist="0" default="" type="string">path</param>
<param name="domain" required="0" vallist="0" default="" type="string">domain</param>
<param name="secure" required="0" vallist="0" default="" type="int">secure</param>
<return type="bool">bool</return>
<insert>setcookie(string name [,string value] [,int expire] [,string path] [,string domain] [,int secure]);</insert>
<dialog title="Insert setcookie">setcookie(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="hw">
<function name="hw_Array2Objrec">
<description>convert attributes from object array to object record</description>
<param name="object_array" required="1" vallist="0" default="" type="array">object_array</param>
<return type="string">string</return>
<insert>hw_Array2Objrec(array object_array);</insert>
<dialog title="Insert hw_Array2Objrec">hw_Array2Objrec(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_changeobject">
<description>
     Changes attributes of an object (obsolete)
    </description>
<param name="link" required="1" vallist="0" default="" type="int">link</param>
<param name="objid" required="1" vallist="0" default="" type="int">objid</param>
<param name="attributes" required="1" vallist="0" default="" type="array">attributes</param>
<return type="void">void</return>
<insert>hw_changeobject(int link, int objid, array attributes);</insert>
<dialog title="Insert hw_changeobject">hw_changeobject(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_Children">
<description>object ids of children</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="objectID" required="1" vallist="0" default="" type="int">objectID</param>
<return type="array">array</return>
<insert>hw_Children(int connection, int objectID);</insert>
<dialog title="Insert hw_Children">hw_Children(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_ChildrenObj">
<description>object records of children</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="objectID" required="1" vallist="0" default="" type="int">objectID</param>
<return type="array">array</return>
<insert>hw_ChildrenObj(int connection, int objectID);</insert>
<dialog title="Insert hw_ChildrenObj">hw_ChildrenObj(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_Close">
<description>closes the Hyperwave connection</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<return type="int">int</return>
<insert>hw_Close(int connection);</insert>
<dialog title="Insert hw_Close">hw_Close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_Connect">
<description>opens a connection</description>
<param name="host" required="1" vallist="0" default="" type="string">host</param>
<param name="port" required="1" vallist="0" default="" type="int">port</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<return type="int">int</return>
<insert>hw_Connect(string host, int port, string username, string password);</insert>
<dialog title="Insert hw_Connect">hw_Connect(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_connection_info">
<description>
     Prints information about the connection to Hyperwave server
    </description>
<param name="link" required="1" vallist="0" default="" type="int">link</param>
<return type="void">void</return>
<insert>hw_connection_info(int link);</insert>
<dialog title="Insert hw_connection_info">hw_connection_info(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_cp">
<description>Copies objects</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="object_id_array" required="1" vallist="0" default="" type="array">object_id_array</param>
<param name="destination_id" required="1" vallist="0" default="" type="int">destination_id</param>
<return type="int">int</return>
<insert>hw_cp(int connection, array object_id_array, int destination_id);</insert>
<dialog title="Insert hw_cp">hw_cp(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_Deleteobject">
<description>deletes object</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="object_to_delete" required="1" vallist="0" default="" type="int">object_to_delete</param>
<return type="int">int</return>
<insert>hw_Deleteobject(int connection, int object_to_delete);</insert>
<dialog title="Insert hw_Deleteobject">hw_Deleteobject(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_DocByAnchor">
<description>object id object belonging to anchor</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="anchorID" required="1" vallist="0" default="" type="int">anchorID</param>
<return type="int">int</return>
<insert>hw_DocByAnchor(int connection, int anchorID);</insert>
<dialog title="Insert hw_DocByAnchor">hw_DocByAnchor(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_DocByAnchorObj">
<description>object record object belonging to anchor</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="anchorID" required="1" vallist="0" default="" type="int">anchorID</param>
<return type="string">string</return>
<insert>hw_DocByAnchorObj(int connection, int anchorID);</insert>
<dialog title="Insert hw_DocByAnchorObj">hw_DocByAnchorObj(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_Document_Attributes">
<description>object record of hw_document</description>
<param name="hw_document" required="1" vallist="0" default="" type="int">hw_document</param>
<return type="string">string</return>
<insert>hw_Document_Attributes(int hw_document);</insert>
<dialog title="Insert hw_Document_Attributes">hw_Document_Attributes(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_Document_BodyTag">
<description>body tag of hw_document</description>
<param name="hw_document" required="1" vallist="0" default="" type="int">hw_document</param>
<return type="string">string</return>
<insert>hw_Document_BodyTag(int hw_document);</insert>
<dialog title="Insert hw_Document_BodyTag">hw_Document_BodyTag(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_Document_Content">
<description>returns content of hw_document</description>
<param name="hw_document" required="1" vallist="0" default="" type="int">hw_document</param>
<return type="string">string</return>
<insert>hw_Document_Content(int hw_document);</insert>
<dialog title="Insert hw_Document_Content">hw_Document_Content(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_Document_SetContent">
<description>sets/replaces content of hw_document</description>
<param name="hw_document" required="1" vallist="0" default="" type="int">hw_document</param>
<param name="content" required="1" vallist="0" default="" type="string">content</param>
<return type="string">string</return>
<insert>hw_Document_SetContent(int hw_document, string content);</insert>
<dialog title="Insert hw_Document_SetContent">hw_Document_SetContent(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_Document_Size">
<description>size of hw_document</description>
<param name="hw_document" required="1" vallist="0" default="" type="int">hw_document</param>
<return type="int">int</return>
<insert>hw_Document_Size(int hw_document);</insert>
<dialog title="Insert hw_Document_Size">hw_Document_Size(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_dummy">
<description>
     Hyperwave dummy function
    </description>
<param name="link" required="1" vallist="0" default="" type="int">link</param>
<param name="id" required="1" vallist="0" default="" type="int">id</param>
<param name="msgid" required="1" vallist="0" default="" type="int">msgid</param>
<return type="string">string</return>
<insert>hw_dummy(int link, int id, int msgid);</insert>
<dialog title="Insert hw_dummy">hw_dummy(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_EditText">
<description>retrieve text document</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="hw_document" required="1" vallist="0" default="" type="int">hw_document</param>
<return type="int">int</return>
<insert>hw_EditText(int connection, int hw_document);</insert>
<dialog title="Insert hw_EditText">hw_EditText(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_Error">
<description>error number</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<return type="int">int</return>
<insert>hw_Error(int connection);</insert>
<dialog title="Insert hw_Error">hw_Error(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_ErrorMsg">
<description>returns error message</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<return type="string">string</return>
<insert>hw_ErrorMsg(int connection);</insert>
<dialog title="Insert hw_ErrorMsg">hw_ErrorMsg(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_Free_Document">
<description>frees hw_document</description>
<param name="hw_document" required="1" vallist="0" default="" type="int">hw_document</param>
<return type="int">int</return>
<insert>hw_Free_Document(int hw_document);</insert>
<dialog title="Insert hw_Free_Document">hw_Free_Document(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_GetAnchors">
<description>object ids of anchors of document</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="objectID" required="1" vallist="0" default="" type="int">objectID</param>
<return type="array">array</return>
<insert>hw_GetAnchors(int connection, int objectID);</insert>
<dialog title="Insert hw_GetAnchors">hw_GetAnchors(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_GetAnchorsObj">
<description>object records of anchors of document</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="objectID" required="1" vallist="0" default="" type="int">objectID</param>
<return type="array">array</return>
<insert>hw_GetAnchorsObj(int connection, int objectID);</insert>
<dialog title="Insert hw_GetAnchorsObj">hw_GetAnchorsObj(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_GetAndLock">
<description>return bject record and lock object</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="objectID" required="1" vallist="0" default="" type="int">objectID</param>
<return type="string">string</return>
<insert>hw_GetAndLock(int connection, int objectID);</insert>
<dialog title="Insert hw_GetAndLock">hw_GetAndLock(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_GetChildColl">
<description>object ids of child collections</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="objectID" required="1" vallist="0" default="" type="int">objectID</param>
<return type="array">array</return>
<insert>hw_GetChildColl(int connection, int objectID);</insert>
<dialog title="Insert hw_GetChildColl">hw_GetChildColl(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_GetChildCollObj">
<description>object records of child collections</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="objectID" required="1" vallist="0" default="" type="int">objectID</param>
<return type="array">array</return>
<insert>hw_GetChildCollObj(int connection, int objectID);</insert>
<dialog title="Insert hw_GetChildCollObj">hw_GetChildCollObj(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_GetChildDocColl">
<description>object ids of child documents of collection</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="objectID" required="1" vallist="0" default="" type="int">objectID</param>
<return type="array">array</return>
<insert>hw_GetChildDocColl(int connection, int objectID);</insert>
<dialog title="Insert hw_GetChildDocColl">hw_GetChildDocColl(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_GetChildDocCollObj">
<description>object records of child documents of collection</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="objectID" required="1" vallist="0" default="" type="int">objectID</param>
<return type="array">array</return>
<insert>hw_GetChildDocCollObj(int connection, int objectID);</insert>
<dialog title="Insert hw_GetChildDocCollObj">hw_GetChildDocCollObj(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_GetObject">
<description>object record</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="objectID" required="1" vallist="0" default="" type="mixed">objectID</param>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<return type="array">array</return>
<insert>hw_GetObject(int connection, mixed objectID, string query);</insert>
<dialog title="Insert hw_GetObject">hw_GetObject(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_GetObjectByQuery">
<description>search object</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<param name="max_hits" required="1" vallist="0" default="" type="int">max_hits</param>
<return type="array">array</return>
<insert>hw_GetObjectByQuery(int connection, string query, int max_hits);</insert>
<dialog title="Insert hw_GetObjectByQuery">hw_GetObjectByQuery(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_GetObjectByQueryColl">
<description>search object in collection</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="objectID" required="1" vallist="0" default="" type="int">objectID</param>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<param name="max_hits" required="1" vallist="0" default="" type="int">max_hits</param>
<return type="array">array</return>
<insert>hw_GetObjectByQueryColl(int connection, int objectID, string query, int max_hits);</insert>
<dialog title="Insert hw_GetObjectByQueryColl">hw_GetObjectByQueryColl(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_GetObjectByQueryCollObj">
<description>search object in collection</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="objectID" required="1" vallist="0" default="" type="int">objectID</param>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<param name="max_hits" required="1" vallist="0" default="" type="int">max_hits</param>
<return type="array">array</return>
<insert>hw_GetObjectByQueryCollObj(int connection, int objectID, string query, int max_hits);</insert>
<dialog title="Insert hw_GetObjectByQueryCollObj">hw_GetObjectByQueryCollObj(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_GetObjectByQueryObj">
<description>search object</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<param name="max_hits" required="1" vallist="0" default="" type="int">max_hits</param>
<return type="array">array</return>
<insert>hw_GetObjectByQueryObj(int connection, string query, int max_hits);</insert>
<dialog title="Insert hw_GetObjectByQueryObj">hw_GetObjectByQueryObj(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_GetParents">
<description>object ids of parents</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="objectID" required="1" vallist="0" default="" type="int">objectID</param>
<return type="array">array</return>
<insert>hw_GetParents(int connection, int objectID);</insert>
<dialog title="Insert hw_GetParents">hw_GetParents(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_GetParentsObj">
<description>object records of parents</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="objectID" required="1" vallist="0" default="" type="int">objectID</param>
<return type="array">array</return>
<insert>hw_GetParentsObj(int connection, int objectID);</insert>
<dialog title="Insert hw_GetParentsObj">hw_GetParentsObj(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_getrellink">
<description>
     Get link from source to dest relative to rootid
    </description>
<param name="link" required="1" vallist="0" default="" type="int">link</param>
<param name="rootid" required="1" vallist="0" default="" type="int">rootid</param>
<param name="sourceid" required="1" vallist="0" default="" type="int">sourceid</param>
<param name="destid" required="1" vallist="0" default="" type="int">destid</param>
<return type="string">string</return>
<insert>hw_getrellink(int link, int rootid, int sourceid, int destid);</insert>
<dialog title="Insert hw_getrellink">hw_getrellink(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_GetRemote">
<description>Gets a remote document</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="objectID" required="1" vallist="0" default="" type="int">objectID</param>
<return type="int">int</return>
<insert>hw_GetRemote(int connection, int objectID);</insert>
<dialog title="Insert hw_GetRemote">hw_GetRemote(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_getremotechildren">
<description>Gets children of remote document</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="object_record" required="1" vallist="0" default="" type="string">object_record</param>
<return type="int">int</return>
<insert>hw_getremotechildren(int connection, string object_record);</insert>
<dialog title="Insert hw_getremotechildren">hw_getremotechildren(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_GetSrcByDestObj">
<description>Returns anchors pointing at object</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="objectID" required="1" vallist="0" default="" type="int">objectID</param>
<return type="array">array</return>
<insert>hw_GetSrcByDestObj(int connection, int objectID);</insert>
<dialog title="Insert hw_GetSrcByDestObj">hw_GetSrcByDestObj(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_GetText">
<description>retrieve text document</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="objectID" required="1" vallist="0" default="" type="int">objectID</param>
<param name="
        rootID/prefix
       " required="0" vallist="0" default="" type="mixed">
        rootID/prefix
       </param>
<return type="int">int</return>
<insert>hw_GetText(int connection, int objectID [,mixed 
        rootID/prefix
       ]);</insert>
<dialog title="Insert hw_GetText">hw_GetText(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_getusername">
<description>name of currently logged in user</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<return type="string">string</return>
<insert>hw_getusername(int connection);</insert>
<dialog title="Insert hw_getusername">hw_getusername(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_Identify">
<description>identifies as user</description>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<return type="int">int</return>
<insert>hw_Identify(string username, string password);</insert>
<dialog title="Insert hw_Identify">hw_Identify(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_InCollections">
<description>check if object ids in collections</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="object_id_array" required="1" vallist="0" default="" type="array">object_id_array</param>
<param name="collection_id_array" required="1" vallist="0" default="" type="array">collection_id_array</param>
<param name="return_collections" required="1" vallist="0" default="" type="int">return_collections</param>
<return type="array">array</return>
<insert>hw_InCollections(int connection, array object_id_array, array collection_id_array, int return_collections);</insert>
<dialog title="Insert hw_InCollections">hw_InCollections(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_Info">
<description>info about connection</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<return type="string">string</return>
<insert>hw_Info(int connection);</insert>
<dialog title="Insert hw_Info">hw_Info(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_InsColl">
<description>insert collection</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="objectID" required="1" vallist="0" default="" type="int">objectID</param>
<param name="object_array" required="1" vallist="0" default="" type="array">object_array</param>
<return type="int">int</return>
<insert>hw_InsColl(int connection, int objectID, array object_array);</insert>
<dialog title="Insert hw_InsColl">hw_InsColl(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_InsDoc">
<description>insert document</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="parentID" required="1" vallist="0" default="" type="int">parentID</param>
<param name="object_record" required="1" vallist="0" default="" type="string">object_record</param>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="int">int</return>
<insert>hw_InsDoc(int connection, int parentID, string object_record, string text);</insert>
<dialog title="Insert hw_InsDoc">hw_InsDoc(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_insertanchors">
<description>
     Inserts only anchors into text
    </description>
<param name="hwdoc" required="1" vallist="0" default="" type="int">hwdoc</param>
<param name="anchorecs" required="1" vallist="0" default="" type="array">anchorecs</param>
<param name="dest" required="1" vallist="0" default="" type="array">dest</param>
<param name="urlprefixes" required="0" vallist="0" default="" type="array">urlprefixes</param>
<return type="string">string</return>
<insert>hw_insertanchors(int hwdoc, array anchorecs, array dest [,array urlprefixes]);</insert>
<dialog title="Insert hw_insertanchors">hw_insertanchors(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_InsertDocument">
<description>upload any document</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="parent_id" required="1" vallist="0" default="" type="int">parent_id</param>
<param name="hw_document" required="1" vallist="0" default="" type="int">hw_document</param>
<return type="int">int</return>
<insert>hw_InsertDocument(int connection, int parent_id, int hw_document);</insert>
<dialog title="Insert hw_InsertDocument">hw_InsertDocument(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_InsertObject">
<description>inserts an object record</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="object_rec" required="1" vallist="0" default="" type="string">object_rec</param>
<param name="parameter" required="1" vallist="0" default="" type="string">parameter</param>
<return type="int">int</return>
<insert>hw_InsertObject(int connection, string object_rec, string parameter);</insert>
<dialog title="Insert hw_InsertObject">hw_InsertObject(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_mapid">
<description>Maps global id on virtual local id</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="server_id" required="1" vallist="0" default="" type="int">server_id</param>
<param name="object_id" required="1" vallist="0" default="" type="int">object_id</param>
<return type="int">int</return>
<insert>hw_mapid(int connection, int server_id, int object_id);</insert>
<dialog title="Insert hw_mapid">hw_mapid(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_Modifyobject">
<description>modifies object record</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="object_to_change" required="1" vallist="0" default="" type="int">object_to_change</param>
<param name="remove" required="1" vallist="0" default="" type="array">remove</param>
<param name="add" required="1" vallist="0" default="" type="array">add</param>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<return type="int">int</return>
<insert>hw_Modifyobject(int connection, int object_to_change, array remove, array add, int mode);</insert>
<dialog title="Insert hw_Modifyobject">hw_Modifyobject(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_mv">
<description>Moves objects</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="object_id_array" required="1" vallist="0" default="" type="array">object_id_array</param>
<param name="source_id" required="1" vallist="0" default="" type="int">source_id</param>
<param name="destination_id" required="1" vallist="0" default="" type="int">destination_id</param>
<return type="int">int</return>
<insert>hw_mv(int connection, array object_id_array, int source_id, int destination_id);</insert>
<dialog title="Insert hw_mv">hw_mv(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_New_Document">
<description>create new document</description>
<param name="object_record" required="1" vallist="0" default="" type="string">object_record</param>
<param name="document_data" required="1" vallist="0" default="" type="string">document_data</param>
<param name="document_size" required="1" vallist="0" default="" type="int">document_size</param>
<return type="int">int</return>
<insert>hw_New_Document(string object_record, string document_data, int document_size);</insert>
<dialog title="Insert hw_New_Document">hw_New_Document(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_objrec2array">
<description>Convert attributes from object record to object array</description>
<param name="object_record" required="1" vallist="0" default="" type="string">object_record</param>
<param name="
        format
       " required="0" vallist="0" default="" type="array">
        format
       </param>
<return type="array">array</return>
<insert>hw_objrec2array(string object_record [,array 
        format
       ]);</insert>
<dialog title="Insert hw_objrec2array">hw_objrec2array(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_Output_Document">
<description>prints hw_document</description>
<param name="hw_document" required="1" vallist="0" default="" type="int">hw_document</param>
<return type="int">int</return>
<insert>hw_Output_Document(int hw_document);</insert>
<dialog title="Insert hw_Output_Document">hw_Output_Document(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_pConnect">
<description>make a persistent database connection</description>
<param name="host" required="1" vallist="0" default="" type="string">host</param>
<param name="port" required="1" vallist="0" default="" type="int">port</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<return type="int">int</return>
<insert>hw_pConnect(string host, int port, string username, string password);</insert>
<dialog title="Insert hw_pConnect">hw_pConnect(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_PipeDocument">
<description>retrieve any document</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="objectID" required="1" vallist="0" default="" type="int">objectID</param>
<return type="int">int</return>
<insert>hw_PipeDocument(int connection, int objectID);</insert>
<dialog title="Insert hw_PipeDocument">hw_PipeDocument(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_Root">
<description>root object id</description>
<return type="int">int</return>
<insert>hw_Root();</insert>
<dialog title="Insert hw_Root">hw_Root();</dialog>
<info title="Info window"></info>
</function>
<function name="hw_setlinkroot">
<description>
     Set the id to which links are calculated
    </description>
<param name="link" required="1" vallist="0" default="" type="int">link</param>
<param name="rootid" required="1" vallist="0" default="" type="int">rootid</param>
<return type="void">void</return>
<insert>hw_setlinkroot(int link, int rootid);</insert>
<dialog title="Insert hw_setlinkroot">hw_setlinkroot(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_stat">
<description>
     Returns status string
    </description>
<param name="link" required="1" vallist="0" default="" type="int">link</param>
<return type="string">string</return>
<insert>hw_stat(int link);</insert>
<dialog title="Insert hw_stat">hw_stat(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_Unlock">
<description>unlock object</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="objectID" required="1" vallist="0" default="" type="int">objectID</param>
<return type="int">int</return>
<insert>hw_Unlock(int connection, int objectID);</insert>
<dialog title="Insert hw_Unlock">hw_Unlock(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_Who">
<description>List of currently logged in users</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<return type="int">int</return>
<insert>hw_Who(int connection);</insert>
<dialog title="Insert hw_Who">hw_Who(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="hwapi">
<function name="hw_api_attribute->key">
<description>Returns key of the attribute</description>
<return type="string">string</return>
<insert>hw_api_attribute->key();</insert>
<dialog title="Insert hw_api_attribute->key">hw_api_attribute->key();</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api_attribute->langdepvalue">
<description>Returns value for a given language</description>
<param name="language" required="1" vallist="0" default="" type="string">language</param>
<return type="string">string</return>
<insert>hw_api_attribute->langdepvalue(string language);</insert>
<dialog title="Insert hw_api_attribute->langdepvalue">hw_api_attribute->langdepvalue(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api_attribute->value">
<description>Returns value of the attribute</description>
<return type="string">string</return>
<insert>hw_api_attribute->value();</insert>
<dialog title="Insert hw_api_attribute->value">hw_api_attribute->value();</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api_attribute->values">
<description>Returns all values of the attribute</description>
<return type="array">array</return>
<insert>hw_api_attribute->values();</insert>
<dialog title="Insert hw_api_attribute->values">hw_api_attribute->values();</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api_attribute">
<description>Creates instance of class hw_api_attribute</description>
<param name="name" required="0" vallist="0" default="" type="string">name</param>
<param name="value" required="0" vallist="0" default="" type="string">value</param>
<return type="object">object</return>
<insert>hw_api_attribute([string name] [,string value]);</insert>
<dialog title="Insert hw_api_attribute">hw_api_attribute(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->checkin">
<description>Checks in an object</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->checkin(array parameter);</insert>
<dialog title="Insert hw_api->checkin">hw_api->checkin(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->checkout">
<description>Checks out an object</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->checkout(array parameter);</insert>
<dialog title="Insert hw_api->checkout">hw_api->checkout(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->children">
<description>Returns children of an object</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="array">array</return>
<insert>hw_api->children(array parameter);</insert>
<dialog title="Insert hw_api->children">hw_api->children(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api_content->mimetype">
<description>Returns mimetype</description>
<return type="string">string</return>
<insert>hw_api_content->mimetype();</insert>
<dialog title="Insert hw_api_content->mimetype">hw_api_content->mimetype();</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api_content->read">
<description>Read content</description>
<param name="buffer" required="1" vallist="0" default="" type="string">buffer</param>
<param name="len" required="1" vallist="0" default="" type="integer">len</param>
<return type="string">string</return>
<insert>hw_api_content->read(string buffer, integer len);</insert>
<dialog title="Insert hw_api_content->read">hw_api_content->read(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->content">
<description>Returns content of an object</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->content(array parameter);</insert>
<dialog title="Insert hw_api->content">hw_api->content(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->copy">
<description>Copies physically</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->copy(array parameter);</insert>
<dialog title="Insert hw_api->copy">hw_api->copy(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->dbstat">
<description>Returns statistics about database server</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->dbstat(array parameter);</insert>
<dialog title="Insert hw_api->dbstat">hw_api->dbstat(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->dcstat">
<description>Returns statistics about document cache server</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->dcstat(array parameter);</insert>
<dialog title="Insert hw_api->dcstat">hw_api->dcstat(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->dstanchors">
<description>Returns a list of all destination anchors</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->dstanchors(array parameter);</insert>
<dialog title="Insert hw_api->dstanchors">hw_api->dstanchors(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->dstofsrcanchors">
<description>Returns destination of a source anchor</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->dstofsrcanchors(array parameter);</insert>
<dialog title="Insert hw_api->dstofsrcanchors">hw_api->dstofsrcanchors(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api_error->count">
<description>Returns number of reasons</description>
<return type="int">int</return>
<insert>hw_api_error->count();</insert>
<dialog title="Insert hw_api_error->count">hw_api_error->count();</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api_error->reason">
<description>Returns reason of error</description>
<return type="object">object</return>
<insert>hw_api_error->reason();</insert>
<dialog title="Insert hw_api_error->reason">hw_api_error->reason();</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->find">
<description>Search for objects</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="array">array</return>
<insert>hw_api->find(array parameter);</insert>
<dialog title="Insert hw_api->find">hw_api->find(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->ftstat">
<description>Returns statistics about fulltext server</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->ftstat(array parameter);</insert>
<dialog title="Insert hw_api->ftstat">hw_api->ftstat(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hwapi_hgcsp">
<description>Returns object of class hw_api</description>
<param name="hostname" required="1" vallist="0" default="" type="string">hostname</param>
<param name="port" required="0" vallist="0" default="" type="int">port</param>
<return type="object">object</return>
<insert>hwapi_hgcsp(string hostname [,int port]);</insert>
<dialog title="Insert hwapi_hgcsp">hwapi_hgcsp(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->hwstat">
<description>Returns statistics about Hyperwave server</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->hwstat(array parameter);</insert>
<dialog title="Insert hw_api->hwstat">hw_api->hwstat(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->identify">
<description>Log into Hyperwave Server</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->identify(array parameter);</insert>
<dialog title="Insert hw_api->identify">hw_api->identify(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->info">
<description>Returns information about server configuration</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->info(array parameter);</insert>
<dialog title="Insert hw_api->info">hw_api->info(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->insert">
<description>Inserts a new object</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->insert(array parameter);</insert>
<dialog title="Insert hw_api->insert">hw_api->insert(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->insertanchor">
<description>Inserts a new object of type anchor</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->insertanchor(array parameter);</insert>
<dialog title="Insert hw_api->insertanchor">hw_api->insertanchor(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->insertcollection">
<description>Inserts a new object of type collection</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->insertcollection(array parameter);</insert>
<dialog title="Insert hw_api->insertcollection">hw_api->insertcollection(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->insertdocument">
<description>Inserts a new object of type document</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->insertdocument(array parameter);</insert>
<dialog title="Insert hw_api->insertdocument">hw_api->insertdocument(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->link">
<description>Creates a link to an object</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->link(array parameter);</insert>
<dialog title="Insert hw_api->link">hw_api->link(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->lock">
<description>Locks an object</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->lock(array parameter);</insert>
<dialog title="Insert hw_api->lock">hw_api->lock(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->move">
<description>Moves object between collections</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->move(array parameter);</insert>
<dialog title="Insert hw_api->move">hw_api->move(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api_content">
<description>Create new instance of class hw_api_content</description>
<param name="content" required="1" vallist="0" default="" type="string">content</param>
<param name="mimetype" required="1" vallist="0" default="" type="string">mimetype</param>
<return type="string">string</return>
<insert>hw_api_content(string content, string mimetype);</insert>
<dialog title="Insert hw_api_content">hw_api_content(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api_object->assign">
<description>Clones object</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api_object->assign(array parameter);</insert>
<dialog title="Insert hw_api_object->assign">hw_api_object->assign(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api_object->attreditable">
<description>Checks whether an attribute is editable</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="bool">bool</return>
<insert>hw_api_object->attreditable(array parameter);</insert>
<dialog title="Insert hw_api_object->attreditable">hw_api_object->attreditable(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api_object->count">
<description>Returns number of attributes</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="int">int</return>
<insert>hw_api_object->count(array parameter);</insert>
<dialog title="Insert hw_api_object->count">hw_api_object->count(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api_object->insert">
<description>Inserts new attribute</description>
<param name="attribute" required="1" vallist="0" default="" type="object">attribute</param>
<return type="bool">bool</return>
<insert>hw_api_object->insert(object attribute);</insert>
<dialog title="Insert hw_api_object->insert">hw_api_object->insert(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api_object">
<description>Creates a new instance of class hw_api_object</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api_object(array parameter);</insert>
<dialog title="Insert hw_api_object">hw_api_object(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api_object->remove">
<description>Removes attribute</description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="bool">bool</return>
<insert>hw_api_object->remove(string name);</insert>
<dialog title="Insert hw_api_object->remove">hw_api_object->remove(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api_object->title">
<description>Returns the title attribute</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="string">string</return>
<insert>hw_api_object->title(array parameter);</insert>
<dialog title="Insert hw_api_object->title">hw_api_object->title(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api_object->value">
<description>Returns value of attribute</description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="string">string</return>
<insert>hw_api_object->value(string name);</insert>
<dialog title="Insert hw_api_object->value">hw_api_object->value(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->object">
<description>Retrieve attribute information</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->object(array parameter);</insert>
<dialog title="Insert hw_api->object">hw_api->object(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->objectbyanchor">
<description>Returns the object an anchor belongs to</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->objectbyanchor(array parameter);</insert>
<dialog title="Insert hw_api->objectbyanchor">hw_api->objectbyanchor(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->parents">
<description>Returns parents of an object</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="array">array</return>
<insert>hw_api->parents(array parameter);</insert>
<dialog title="Insert hw_api->parents">hw_api->parents(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api_reason->description">
<description>Returns description of reason</description>
<return type="string">string</return>
<insert>hw_api_reason->description();</insert>
<dialog title="Insert hw_api_reason->description">hw_api_reason->description();</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api_reason->type">
<description>Returns type of reason</description>
<return type="object">object</return>
<insert>hw_api_reason->type();</insert>
<dialog title="Insert hw_api_reason->type">hw_api_reason->type();</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->remove">
<description>Delete an object</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->remove(array parameter);</insert>
<dialog title="Insert hw_api->remove">hw_api->remove(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->replace">
<description>Replaces an object</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->replace(array parameter);</insert>
<dialog title="Insert hw_api->replace">hw_api->replace(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->setcommitedversion">
<description>Commits version other than last version</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->setcommitedversion(array parameter);</insert>
<dialog title="Insert hw_api->setcommitedversion">hw_api->setcommitedversion(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->srcanchors">
<description>Returns a list of all source anchors</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->srcanchors(array parameter);</insert>
<dialog title="Insert hw_api->srcanchors">hw_api->srcanchors(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->srcsofdst">
<description>Returns source of a destination object</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->srcsofdst(array parameter);</insert>
<dialog title="Insert hw_api->srcsofdst">hw_api->srcsofdst(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->unlock">
<description>Unlocks a locked object</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->unlock(array parameter);</insert>
<dialog title="Insert hw_api->unlock">hw_api->unlock(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->user">
<description>Returns the own user object</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->user(array parameter);</insert>
<dialog title="Insert hw_api->user">hw_api->user(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hw_api->userlist">
<description>Returns a list of all logged in users</description>
<param name="parameter" required="1" vallist="0" default="" type="array">parameter</param>
<return type="object">object</return>
<insert>hw_api->userlist(array parameter);</insert>
<dialog title="Insert hw_api->userlist">hw_api->userlist(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="ibase">
<function name="ibase_blob_add">
<description>
     Add data into created blob
    </description>
<param name="blob_id" required="1" vallist="0" default="" type="int">blob_id</param>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<return type="int">int</return>
<insert>ibase_blob_add(int blob_id, string data);</insert>
<dialog title="Insert ibase_blob_add">ibase_blob_add(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ibase_blob_cancel">
<description>
     Cancel creating blob
    </description>
<param name="blob_id" required="1" vallist="0" default="" type="int">blob_id</param>
<return type="int">int</return>
<insert>ibase_blob_cancel(int blob_id);</insert>
<dialog title="Insert ibase_blob_cancel">ibase_blob_cancel(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ibase_blob_close">
<description>
     Close blob
    </description>
<param name="blob_id" required="1" vallist="0" default="" type="int">blob_id</param>
<return type="int">int</return>
<insert>ibase_blob_close(int blob_id);</insert>
<dialog title="Insert ibase_blob_close">ibase_blob_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ibase_blob_create">
<description>
     Create blob for adding data
    </description>
<param name="link_identifier" required="0" vallist="0" default="" type="int">link_identifier</param>
<return type="int">int</return>
<insert>ibase_blob_create([int link_identifier]);</insert>
<dialog title="Insert ibase_blob_create">ibase_blob_create(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ibase_blob_echo">
<description>
     Output blob contents to browser
    </description>
<param name="blob_id_str" required="1" vallist="0" default="" type="string">blob_id_str</param>
<return type="int">int</return>
<insert>ibase_blob_echo(string blob_id_str);</insert>
<dialog title="Insert ibase_blob_echo">ibase_blob_echo(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ibase_blob_get">
<description>
     Get len bytes data from open blob
    </description>
<param name="blob_id" required="1" vallist="0" default="" type="int">blob_id</param>
<param name="len" required="1" vallist="0" default="" type="int">len</param>
<return type="string">string</return>
<insert>ibase_blob_get(int blob_id, int len);</insert>
<dialog title="Insert ibase_blob_get">ibase_blob_get(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ibase_blob_import">
<description>
     Create blob, copy file in it, and close it
    </description>
<param name="link_identifier" required="0" vallist="0" default="" type="int">link_identifier</param>
<param name="file_id" required="1" vallist="0" default="" type="int">file_id</param>
<return type="string">string</return>
<insert>ibase_blob_import([int link_identifier], int file_id);</insert>
<dialog title="Insert ibase_blob_import">ibase_blob_import(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ibase_blob_info">
<description>
     Return blob length and other useful info
    </description>
<param name="blob_id_str" required="1" vallist="0" default="" type="string">blob_id_str</param>
<return type="object">object</return>
<insert>ibase_blob_info(string blob_id_str);</insert>
<dialog title="Insert ibase_blob_info">ibase_blob_info(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ibase_blob_open">
<description>
     Open blob for retrieving data parts
    </description>
<param name="blob_id" required="1" vallist="0" default="" type="string">blob_id</param>
<return type="int">int</return>
<insert>ibase_blob_open(string blob_id);</insert>
<dialog title="Insert ibase_blob_open">ibase_blob_open(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ibase_close">
<description>
     Close a connection to an InterBase database
    </description>
<param name="connection_id" required="0" vallist="0" default="" type="int">connection_id</param>
<return type="int">int</return>
<insert>ibase_close([int connection_id]);</insert>
<dialog title="Insert ibase_close">ibase_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ibase_commit">
<description>Commit a transaction</description>
<param name="link_identifier" required="0" vallist="0" default="" type="int">link_identifier</param>
<param name="trans_number" required="1" vallist="0" default="" type="int">trans_number</param>
<return type="int">int</return>
<insert>ibase_commit([int link_identifier], int trans_number);</insert>
<dialog title="Insert ibase_commit">ibase_commit(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ibase_connect">
<description>
     Open a connection to an InterBase database
    </description>
<param name="database" required="1" vallist="0" default="" type="string">database</param>
<param name="username" required="0" vallist="0" default="" type="string">username</param>
<param name="password" required="0" vallist="0" default="" type="string">password</param>
<param name="charset" required="0" vallist="0" default="" type="string">charset</param>
<param name="buffers" required="0" vallist="0" default="" type="int">buffers</param>
<param name="dialect" required="0" vallist="0" default="" type="int">dialect</param>
<param name="role" required="0" vallist="0" default="" type="string">role</param>
<return type="int">int</return>
<insert>ibase_connect(string database [,string username] [,string password] [,string charset] [,int buffers] [,int dialect] [,string role]);</insert>
<dialog title="Insert ibase_connect">ibase_connect(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="ibase_errmsg">
<description>
     Returns error messages
    </description>
<return type="string">string</return>
<insert>ibase_errmsg();</insert>
<dialog title="Insert ibase_errmsg">ibase_errmsg();</dialog>
<info title="Info window"></info>
</function>
<function name="ibase_execute">
<description>Execute a previously prepared query</description>
<param name="query" required="1" vallist="0" default="" type="int">query</param>
<param name="bind_args" required="0" vallist="0" default="" type="int">bind_args</param>
<return type="int">int</return>
<insert>ibase_execute(int query [,int bind_args]);</insert>
<dialog title="Insert ibase_execute">ibase_execute(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ibase_fetch_object">
<description>Get an object from a InterBase database</description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<return type="object">object</return>
<insert>ibase_fetch_object(int result_id);</insert>
<dialog title="Insert ibase_fetch_object">ibase_fetch_object(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ibase_fetch_row">
<description>Fetch a row from an InterBase database</description>
<param name="result_identifier" required="1" vallist="0" default="" type="int">result_identifier</param>
<return type="array">array</return>
<insert>ibase_fetch_row(int result_identifier);</insert>
<dialog title="Insert ibase_fetch_row">ibase_fetch_row(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ibase_field_info">
<description>
     Get information about a field
    </description>
<param name="result" required="1" vallist="0" default="" type="int">result</param>
<param name="field_number" required="1" vallist="0" default="" type="int">field_number</param>
<return type="array">array</return>
<insert>ibase_field_info(int result, int field_number);</insert>
<dialog title="Insert ibase_field_info">ibase_field_info(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ibase_free_query">
<description>
     Free memory allocated by a prepared query
    </description>
<param name="query" required="1" vallist="0" default="" type="int">query</param>
<return type="int">int</return>
<insert>ibase_free_query(int query);</insert>
<dialog title="Insert ibase_free_query">ibase_free_query(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ibase_free_result">
<description>Free a result set</description>
<param name="result_identifier" required="1" vallist="0" default="" type="int">result_identifier</param>
<return type="int">int</return>
<insert>ibase_free_result(int result_identifier);</insert>
<dialog title="Insert ibase_free_result">ibase_free_result(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ibase_num_fields">
<description>
     Get the number of fields in a result set
    </description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<return type="int">int</return>
<insert>ibase_num_fields(int result_id);</insert>
<dialog title="Insert ibase_num_fields">ibase_num_fields(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ibase_pconnect">
<description>
     Creates an persistent connection to an InterBase database
    </description>
<param name="database" required="1" vallist="0" default="" type="string">database</param>
<param name="username" required="0" vallist="0" default="" type="string">username</param>
<param name="password" required="0" vallist="0" default="" type="string">password</param>
<param name="charset" required="0" vallist="0" default="" type="string">charset</param>
<param name="buffers" required="0" vallist="0" default="" type="int">buffers</param>
<param name="dialect" required="0" vallist="0" default="" type="int">dialect</param>
<param name="role" required="0" vallist="0" default="" type="string">role</param>
<return type="int">int</return>
<insert>ibase_pconnect(string database [,string username] [,string password] [,string charset] [,int buffers] [,int dialect] [,string role]);</insert>
<dialog title="Insert ibase_pconnect">ibase_pconnect(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="ibase_prepare">
<description>
     Prepare a query for later binding of parameter placeholders and
     execution
    </description>
<param name="link_identifier" required="0" vallist="0" default="" type="int">link_identifier</param>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<return type="int">int</return>
<insert>ibase_prepare([int link_identifier], string query);</insert>
<dialog title="Insert ibase_prepare">ibase_prepare(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ibase_query">
<description>Execute a query on an InterBase database</description>
<param name="link_identifier" required="0" vallist="0" default="" type="int">link_identifier</param>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<param name="bind_args" required="0" vallist="0" default="" type="int">bind_args</param>
<return type="int">int</return>
<insert>ibase_query([int link_identifier], string query [,int bind_args]);</insert>
<dialog title="Insert ibase_query">ibase_query(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ibase_rollback">
<description>Rolls back a transaction</description>
<param name="link_identifier" required="0" vallist="0" default="" type="int">link_identifier</param>
<param name="trans_number" required="1" vallist="0" default="" type="int">trans_number</param>
<return type="int">int</return>
<insert>ibase_rollback([int link_identifier], int trans_number);</insert>
<dialog title="Insert ibase_rollback">ibase_rollback(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ibase_timefmt">
<description>
     Sets the format of timestamp, date and time type columns returned from queries
    </description>
<param name="format" required="1" vallist="0" default="" type="string">format</param>
<param name="columntype" required="0" vallist="0" default="" type="int">columntype</param>
<return type="int">int</return>
<insert>ibase_timefmt(string format [,int columntype]);</insert>
<dialog title="Insert ibase_timefmt">ibase_timefmt(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ibase_trans">
<description>Begin a transaction</description>
<param name="trans_args" required="0" vallist="0" default="" type="int">trans_args</param>
<param name="link_identifier" required="0" vallist="0" default="" type="int">link_identifier</param>
<return type="int">int</return>
<insert>ibase_trans([int trans_args] [,int link_identifier]);</insert>
<dialog title="Insert ibase_trans">ibase_trans(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="icap">
<function name="icap_close">
<description>Close an ICAP stream</description>
<param name="icap_stream" required="1" vallist="0" default="" type="int">icap_stream</param>
<param name="flags" required="0" vallist="0" default="" type="int">flags</param>
<return type="int">int</return>
<insert>icap_close(int icap_stream [,int flags]);</insert>
<dialog title="Insert icap_close">icap_close(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="icap_create_calendar">
<description>
     Create a new calendar
    </description>
<param name="stream_id" required="1" vallist="0" default="" type="int">stream_id</param>
<param name="calendar" required="1" vallist="0" default="" type="string">calendar</param>
<return type="string">string</return>
<insert>icap_create_calendar(int stream_id, string calendar);</insert>
<dialog title="Insert icap_create_calendar">icap_create_calendar(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="icap_delete_calendar">
<description>
     Delete a calendar
    </description>
<param name="stream_id" required="1" vallist="0" default="" type="int">stream_id</param>
<param name="calendar" required="1" vallist="0" default="" type="string">calendar</param>
<return type="string">string</return>
<insert>icap_delete_calendar(int stream_id, string calendar);</insert>
<dialog title="Insert icap_delete_calendar">icap_delete_calendar(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="icap_delete_event">
<description>Delete an event from an ICAP calendar</description>
<param name="stream_id" required="1" vallist="0" default="" type="int">stream_id</param>
<param name="uid" required="1" vallist="0" default="" type="int">uid</param>
<return type="string">string</return>
<insert>icap_delete_event(int stream_id, int uid);</insert>
<dialog title="Insert icap_delete_event">icap_delete_event(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="icap_fetch_event">
<description>Fetches an event from the calendar stream/</description>
<param name="stream_id" required="1" vallist="0" default="" type="int">stream_id</param>
<param name="event_id" required="1" vallist="0" default="" type="int">event_id</param>
<param name="options" required="0" vallist="0" default="" type="int">options</param>
<return type="int">int</return>
<insert>icap_fetch_event(int stream_id, int event_id [,int options]);</insert>
<dialog title="Insert icap_fetch_event">icap_fetch_event(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="icap_list_alarms">
<description>
     Return a list of events that has an alarm triggered at the given
     datetime
    </description>
<param name="stream_id" required="1" vallist="0" default="" type="int">stream_id</param>
<param name="date" required="1" vallist="0" default="" type="array">date</param>
<param name="time" required="1" vallist="0" default="" type="array">time</param>
<return type="int">int</return>
<insert>icap_list_alarms(int stream_id, array date, array time);</insert>
<dialog title="Insert icap_list_alarms">icap_list_alarms(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="icap_list_events">
<description>
     Return a list of events between two given datetimes
    </description>
<param name="stream_id" required="1" vallist="0" default="" type="int">stream_id</param>
<param name="begin_date" required="1" vallist="0" default="" type="int">begin_date</param>
<param name="end_date" required="0" vallist="0" default="" type="int">end_date</param>
<return type="array">array</return>
<insert>icap_list_events(int stream_id, int begin_date [,int end_date]);</insert>
<dialog title="Insert icap_list_events">icap_list_events(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="icap_open">
<description>Opens up an ICAP connection</description>
<param name="calendar" required="1" vallist="0" default="" type="string">calendar</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="options" required="1" vallist="0" default="" type="string">options</param>
<return type="stream">stream</return>
<insert>icap_open(string calendar, string username, string password, string options);</insert>
<dialog title="Insert icap_open">icap_open(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="icap_rename_calendar">
<description>
     Rename a calendar
    </description>
<param name="stream_id" required="1" vallist="0" default="" type="int">stream_id</param>
<param name="old_name" required="1" vallist="0" default="" type="string">old_name</param>
<param name="new_name" required="1" vallist="0" default="" type="string">new_name</param>
<return type="string">string</return>
<insert>icap_rename_calendar(int stream_id, string old_name, string new_name);</insert>
<dialog title="Insert icap_rename_calendar">icap_rename_calendar(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="icap_reopen">
<description>
     Reopen ICAP stream to new calendar
    </description>
<param name="stream_id" required="1" vallist="0" default="" type="int">stream_id</param>
<param name="calendar" required="1" vallist="0" default="" type="string">calendar</param>
<param name="options" required="0" vallist="0" default="" type="int">options</param>
<return type="int">int</return>
<insert>icap_reopen(int stream_id, string calendar [,int options]);</insert>
<dialog title="Insert icap_reopen">icap_reopen(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="icap_snooze">
<description>Snooze an alarm</description>
<param name="stream_id" required="1" vallist="0" default="" type="int">stream_id</param>
<param name="uid" required="1" vallist="0" default="" type="int">uid</param>
<return type="string">string</return>
<insert>icap_snooze(int stream_id, int uid);</insert>
<dialog title="Insert icap_snooze">icap_snooze(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="icap_store_event">
<description>Store an event into an ICAP calendar</description>
<param name="stream_id" required="1" vallist="0" default="" type="int">stream_id</param>
<param name="event" required="1" vallist="0" default="" type="object">event</param>
<return type="string">string</return>
<insert>icap_store_event(int stream_id, object event);</insert>
<dialog title="Insert icap_store_event">icap_store_event(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="iconv">
<function name="iconv_get_encoding">
<description>Get current setting for character encoding conversion</description>
<param name="type" required="0" vallist="0" default="" type="string">type</param>
<return type="array">array</return>
<insert>iconv_get_encoding([string type]);</insert>
<dialog title="Insert iconv_get_encoding">iconv_get_encoding(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="iconv_set_encoding">
<description>Set current setting for character encoding conversion</description>
<param name="type" required="1" vallist="0" default="" type="string">type</param>
<param name="charset" required="1" vallist="0" default="" type="string">charset</param>
<return type="bool">bool</return>
<insert>iconv_set_encoding(string type, string charset);</insert>
<dialog title="Insert iconv_set_encoding">iconv_set_encoding(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="iconv">
<description>Convert string to requested character encoding</description>
<param name="in_charset" required="1" vallist="0" default="" type="string">in_charset</param>
<param name="out_charset" required="1" vallist="0" default="" type="string">out_charset</param>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<return type="string">string</return>
<insert>iconv(string in_charset, string out_charset, string str);</insert>
<dialog title="Insert iconv">iconv(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ob_iconv_handler">
<description>Convert character encoding as output buffer handler</description>
<param name="contents" required="1" vallist="0" default="" type="string">contents</param>
<param name="status" required="1" vallist="0" default="" type="int">status</param>
<return type="array">array</return>
<insert>ob_iconv_handler(string contents, int status);</insert>
<dialog title="Insert ob_iconv_handler">ob_iconv_handler(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="ifx">
<function name="ifx_affected_rows">
<description>Get number of rows affected by a query</description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<return type="int">int</return>
<insert>ifx_affected_rows(int result_id);</insert>
<dialog title="Insert ifx_affected_rows">ifx_affected_rows(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_blobinfile_mode">
<description>Set the default blob mode for all select queries</description>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<return type="void">void</return>
<insert>ifx_blobinfile_mode(int mode);</insert>
<dialog title="Insert ifx_blobinfile_mode">ifx_blobinfile_mode(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_byteasvarchar">
<description>Set the default byte mode</description>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<return type="void">void</return>
<insert>ifx_byteasvarchar(int mode);</insert>
<dialog title="Insert ifx_byteasvarchar">ifx_byteasvarchar(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_close">
<description>Close Informix connection</description>
<param name="link_identifier" required="0" vallist="0" default="" type="int">link_identifier</param>
<return type="int">int</return>
<insert>ifx_close([int link_identifier]);</insert>
<dialog title="Insert ifx_close">ifx_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_connect">
<description>Open Informix server connection</description>
<param name="database
                       " required="0" vallist="0" default="" type="string">database
                       </param>
<param name="userid
                       " required="0" vallist="0" default="" type="string">userid
                       </param>
<param name="password
                       " required="0" vallist="0" default="" type="string">password
                       </param>
<return type="int">int</return>
<insert>ifx_connect([string database
                       ] [,string userid
                       ] [,string password
                       ]);</insert>
<dialog title="Insert ifx_connect">ifx_connect(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_copy_blob">
<description>Duplicates the given blob object</description>
<param name="bid" required="1" vallist="0" default="" type="int">bid</param>
<return type="int">int</return>
<insert>ifx_copy_blob(int bid);</insert>
<dialog title="Insert ifx_copy_blob">ifx_copy_blob(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_create_blob">
<description>Creates an blob object</description>
<param name="type" required="1" vallist="0" default="" type="int">type</param>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<param name="param" required="1" vallist="0" default="" type="string">param</param>
<return type="int">int</return>
<insert>ifx_create_blob(int type, int mode, string param);</insert>
<dialog title="Insert ifx_create_blob">ifx_create_blob(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_create_char">
<description>Creates an char object</description>
<param name="param" required="1" vallist="0" default="" type="string">param</param>
<return type="int">int</return>
<insert>ifx_create_char(string param);</insert>
<dialog title="Insert ifx_create_char">ifx_create_char(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_do">
<description>
     Execute a previously prepared SQL-statement
    </description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<return type="int">int</return>
<insert>ifx_do(int result_id);</insert>
<dialog title="Insert ifx_do">ifx_do(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_error">
<description>Returns error code of last Informix call</description>
<return type="string">string</return>
<insert>ifx_error();</insert>
<dialog title="Insert ifx_error">ifx_error();</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_errormsg">
<description>Returns error message of last Informix call</description>
<param name="errorcode" required="0" vallist="0" default="" type="int">errorcode</param>
<return type="string">string</return>
<insert>ifx_errormsg([int errorcode]);</insert>
<dialog title="Insert ifx_errormsg">ifx_errormsg(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_fetch_row">
<description>Get row as enumerated array</description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<param name="position" required="0" vallist="0" default="" type="mixed">position</param>
<return type="array">array</return>
<insert>ifx_fetch_row(int result_id [,mixed position]);</insert>
<dialog title="Insert ifx_fetch_row">ifx_fetch_row(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_fieldproperties">
<description>List of SQL fieldproperties</description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<return type="array">array</return>
<insert>ifx_fieldproperties(int result_id);</insert>
<dialog title="Insert ifx_fieldproperties">ifx_fieldproperties(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_fieldtypes">
<description>List of Informix SQL fields</description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<return type="array">array</return>
<insert>ifx_fieldtypes(int result_id);</insert>
<dialog title="Insert ifx_fieldtypes">ifx_fieldtypes(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_free_blob">
<description>Deletes the blob object</description>
<param name="bid" required="1" vallist="0" default="" type="int">bid</param>
<return type="int">int</return>
<insert>ifx_free_blob(int bid);</insert>
<dialog title="Insert ifx_free_blob">ifx_free_blob(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_free_char">
<description>Deletes the char object</description>
<param name="bid" required="1" vallist="0" default="" type="int">bid</param>
<return type="int">int</return>
<insert>ifx_free_char(int bid);</insert>
<dialog title="Insert ifx_free_char">ifx_free_char(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_free_result">
<description>Releases resources for the query</description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<return type="int">int</return>
<insert>ifx_free_result(int result_id);</insert>
<dialog title="Insert ifx_free_result">ifx_free_result(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_get_blob">
<description>Return the content of a blob object</description>
<param name="bid" required="1" vallist="0" default="" type="int">bid</param>
<return type="int">int</return>
<insert>ifx_get_blob(int bid);</insert>
<dialog title="Insert ifx_get_blob">ifx_get_blob(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_get_char">
<description>Return the content of the char object</description>
<param name="bid" required="1" vallist="0" default="" type="int">bid</param>
<return type="int">int</return>
<insert>ifx_get_char(int bid);</insert>
<dialog title="Insert ifx_get_char">ifx_get_char(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_getsqlca">
<description>
     Get the contents of sqlca.sqlerrd[0..5] after a query
    </description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<return type="array">array</return>
<insert>ifx_getsqlca(int result_id);</insert>
<dialog title="Insert ifx_getsqlca">ifx_getsqlca(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_htmltbl_result">
<description>
     Formats all rows of a query into a HTML table
    </description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<param name="html_table_options" required="0" vallist="0" default="" type="string">html_table_options</param>
<return type="int">int</return>
<insert>ifx_htmltbl_result(int result_id [,string html_table_options]);</insert>
<dialog title="Insert ifx_htmltbl_result">ifx_htmltbl_result(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_nullformat">
<description>
     Sets the default return value on a fetch row
    </description>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<return type="void">void</return>
<insert>ifx_nullformat(int mode);</insert>
<dialog title="Insert ifx_nullformat">ifx_nullformat(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_num_fields">
<description>Returns the number of columns in the query</description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<return type="int">int</return>
<insert>ifx_num_fields(int result_id);</insert>
<dialog title="Insert ifx_num_fields">ifx_num_fields(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_num_rows">
<description>Count the rows already fetched from a query</description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<return type="int">int</return>
<insert>ifx_num_rows(int result_id);</insert>
<dialog title="Insert ifx_num_rows">ifx_num_rows(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_pconnect">
<description>Open persistent Informix connection</description>
<param name="database" required="0" vallist="0" default="" type="string">database</param>
<param name="userid" required="0" vallist="0" default="" type="string">userid</param>
<param name="password" required="0" vallist="0" default="" type="string">password</param>
<return type="int">int</return>
<insert>ifx_pconnect([string database] [,string userid] [,string password]);</insert>
<dialog title="Insert ifx_pconnect">ifx_pconnect(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_prepare">
<description>Prepare an SQL-statement for execution</description>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<param name="conn_id" required="1" vallist="0" default="" type="int">conn_id</param>
<param name="cursor_def" required="0" vallist="0" default="" type="int">cursor_def</param>
<param name="blobidarray" required="1" vallist="0" default="" type="mixed">blobidarray</param>
<return type="int">int</return>
<insert>ifx_prepare(string query, int conn_id [,int cursor_def], mixed blobidarray);</insert>
<dialog title="Insert ifx_prepare">ifx_prepare(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_query">
<description>Send Informix query</description>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<param name="link_identifier" required="1" vallist="0" default="" type="int">link_identifier</param>
<param name="cursor_type" required="0" vallist="0" default="" type="int">cursor_type</param>
<param name="
        blobidarray
       " required="0" vallist="0" default="" type="mixed">
        blobidarray
       </param>
<return type="int">int</return>
<insert>ifx_query(string query, int link_identifier [,int cursor_type] [,mixed 
        blobidarray
       ]);</insert>
<dialog title="Insert ifx_query">ifx_query(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_textasvarchar">
<description>Set the default text mode</description>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<return type="void">void</return>
<insert>ifx_textasvarchar(int mode);</insert>
<dialog title="Insert ifx_textasvarchar">ifx_textasvarchar(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_update_blob">
<description>Updates the content of the blob object</description>
<param name="bid" required="1" vallist="0" default="" type="int">bid</param>
<param name="content" required="1" vallist="0" default="" type="string">content</param>
<return type="bool">bool</return>
<insert>ifx_update_blob(int bid, string content);</insert>
<dialog title="Insert ifx_update_blob">ifx_update_blob(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ifx_update_char">
<description>Updates the content of the char object</description>
<param name="bid" required="1" vallist="0" default="" type="int">bid</param>
<param name="content" required="1" vallist="0" default="" type="string">content</param>
<return type="int">int</return>
<insert>ifx_update_char(int bid, string content);</insert>
<dialog title="Insert ifx_update_char">ifx_update_char(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ifxus_close_slob">
<description>Deletes the slob object</description>
<param name="bid" required="1" vallist="0" default="" type="int">bid</param>
<return type="int">int</return>
<insert>ifxus_close_slob(int bid);</insert>
<dialog title="Insert ifxus_close_slob">ifxus_close_slob(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ifxus_create_slob">
<description>Creates an slob object and opens it</description>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<return type="int">int</return>
<insert>ifxus_create_slob(int mode);</insert>
<dialog title="Insert ifxus_create_slob">ifxus_create_slob(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ifxus_free_slob">
<description>Deletes the slob object</description>
<param name="bid" required="1" vallist="0" default="" type="int">bid</param>
<return type="int">int</return>
<insert>ifxus_free_slob(int bid);</insert>
<dialog title="Insert ifxus_free_slob">ifxus_free_slob(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ifxus_open_slob">
<description>Opens an slob object</description>
<param name="bid" required="1" vallist="0" default="" type="long">bid</param>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<return type="int">int</return>
<insert>ifxus_open_slob(long bid, int mode);</insert>
<dialog title="Insert ifxus_open_slob">ifxus_open_slob(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ifxus_read_slob">
<description>Reads nbytes of the slob object</description>
<param name="bid" required="1" vallist="0" default="" type="long">bid</param>
<param name="nbytes" required="1" vallist="0" default="" type="long">nbytes</param>
<return type="int">int</return>
<insert>ifxus_read_slob(long bid, long nbytes);</insert>
<dialog title="Insert ifxus_read_slob">ifxus_read_slob(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ifxus_seek_slob">
<description>Sets the current file or seek position</description>
<param name="bid" required="1" vallist="0" default="" type="long">bid</param>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<param name="offset" required="1" vallist="0" default="" type="long">offset</param>
<return type="int">int</return>
<insert>ifxus_seek_slob(long bid, int mode, long offset);</insert>
<dialog title="Insert ifxus_seek_slob">ifxus_seek_slob(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ifxus_tell_slob">
<description>Returns the current file or seek position</description>
<param name="bid" required="1" vallist="0" default="" type="long">bid</param>
<return type="int">int</return>
<insert>ifxus_tell_slob(long bid);</insert>
<dialog title="Insert ifxus_tell_slob">ifxus_tell_slob(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ifxus_write_slob">
<description>Writes a string into the slob object</description>
<param name="bid" required="1" vallist="0" default="" type="long">bid</param>
<param name="content" required="1" vallist="0" default="" type="string">content</param>
<return type="int">int</return>
<insert>ifxus_write_slob(long bid, string content);</insert>
<dialog title="Insert ifxus_write_slob">ifxus_write_slob(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="iisfunc">
<function name="iis_add_server">
<description>Creates a new virtual web server</description>
<param name="path" required="1" vallist="0" default="" type="string">path</param>
<param name="comment" required="1" vallist="0" default="" type="string">comment</param>
<param name="server_ip" required="1" vallist="0" default="" type="string">server_ip</param>
<param name="port" required="1" vallist="0" default="" type="int">port</param>
<param name="host_name" required="1" vallist="0" default="" type="string">host_name</param>
<param name="rights" required="1" vallist="0" default="" type="int">rights</param>
<param name="start_server" required="1" vallist="0" default="" type="int">start_server</param>
<return type="int">int</return>
<insert>iis_add_server(string path, string comment, string server_ip, int port, string host_name, int rights, int start_server);</insert>
<dialog title="Insert iis_add_server">iis_add_server(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="iis_get_dir_security">
<description>Gets Directory Security</description>
<param name="server_instance" required="1" vallist="0" default="" type="int">server_instance</param>
<param name="virtual_path" required="1" vallist="0" default="" type="string">virtual_path</param>
<return type="int">int</return>
<insert>iis_get_dir_security(int server_instance, string virtual_path);</insert>
<dialog title="Insert iis_get_dir_security">iis_get_dir_security(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="iis_get_script_map">
<description>Gets script mapping on a virtual directory for a specific extention</description>
<param name="server_instance" required="1" vallist="0" default="" type="int">server_instance</param>
<param name="virtual_path" required="1" vallist="0" default="" type="string">virtual_path</param>
<param name="script_extension" required="1" vallist="0" default="" type="string">script_extension</param>
<return type="int">int</return>
<insert>iis_get_script_map(int server_instance, string virtual_path, string script_extension);</insert>
<dialog title="Insert iis_get_script_map">iis_get_script_map(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="iis_get_server_by_comment">
<description>Return the instance number associated with the Comment</description>
<param name="comment" required="1" vallist="0" default="" type="string">comment</param>
<return type="int">int</return>
<insert>iis_get_server_by_comment(string comment);</insert>
<dialog title="Insert iis_get_server_by_comment">iis_get_server_by_comment(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="iis_get_server_by_path">
<description>Return the instance number associated with the Path</description>
<param name="path" required="1" vallist="0" default="" type="string">path</param>
<return type="int">int</return>
<insert>iis_get_server_by_path(string path);</insert>
<dialog title="Insert iis_get_server_by_path">iis_get_server_by_path(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="iis_get_server_rights">
<description>Gets server rights</description>
<param name="server_instance" required="1" vallist="0" default="" type="int">server_instance</param>
<param name="virtual_path" required="1" vallist="0" default="" type="string">virtual_path</param>
<return type="int">int</return>
<insert>iis_get_server_rights(int server_instance, string virtual_path);</insert>
<dialog title="Insert iis_get_server_rights">iis_get_server_rights(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="iis_get_service_state">
<description>Starts the service defined by ServiceId</description>
<param name="service_id" required="1" vallist="0" default="" type="string">service_id</param>
<return type="int">int</return>
<insert>iis_get_service_state(string service_id);</insert>
<dialog title="Insert iis_get_service_state">iis_get_service_state(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="iis_remove_server">
<description>Removes the virtual web server indicated by ServerInstance</description>
<param name="server_instance" required="1" vallist="0" default="" type="int">server_instance</param>
<return type="int">int</return>
<insert>iis_remove_server(int server_instance);</insert>
<dialog title="Insert iis_remove_server">iis_remove_server(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="iis_set_app_settings">
<description>Creates application scope for a virtual directory</description>
<param name="server_instance" required="1" vallist="0" default="" type="int">server_instance</param>
<param name="virtual_path" required="1" vallist="0" default="" type="string">virtual_path</param>
<param name="application_scope" required="1" vallist="0" default="" type="string">application_scope</param>
<return type="int">int</return>
<insert>iis_set_app_settings(int server_instance, string virtual_path, string application_scope);</insert>
<dialog title="Insert iis_set_app_settings">iis_set_app_settings(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="iis_set_dir_security">
<description>Sets Directory Security</description>
<param name="server_instance" required="1" vallist="0" default="" type="int">server_instance</param>
<param name="virtual_path" required="1" vallist="0" default="" type="string">virtual_path</param>
<param name="directory_flags" required="1" vallist="0" default="" type="int">directory_flags</param>
<return type="int">int</return>
<insert>iis_set_dir_security(int server_instance, string virtual_path, int directory_flags);</insert>
<dialog title="Insert iis_set_dir_security">iis_set_dir_security(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="iis_set_script_map">
<description>Sets script mapping on a virtual directory</description>
<param name="server_instance" required="1" vallist="0" default="" type="int">server_instance</param>
<param name="virtual_path" required="1" vallist="0" default="" type="string">virtual_path</param>
<param name="script_extension" required="1" vallist="0" default="" type="string">script_extension</param>
<param name="engine_path" required="1" vallist="0" default="" type="string">engine_path</param>
<param name="allow_scripting" required="1" vallist="0" default="" type="int">allow_scripting</param>
<return type="int">int</return>
<insert>iis_set_script_map(int server_instance, string virtual_path, string script_extension, string engine_path, int allow_scripting);</insert>
<dialog title="Insert iis_set_script_map">iis_set_script_map(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="iis_set_server_rights">
<description>Sets server rights</description>
<param name="server_instance" required="1" vallist="0" default="" type="int">server_instance</param>
<param name="virtual_path" required="1" vallist="0" default="" type="string">virtual_path</param>
<param name="directory_flags" required="1" vallist="0" default="" type="int">directory_flags</param>
<return type="int">int</return>
<insert>iis_set_server_rights(int server_instance, string virtual_path, int directory_flags);</insert>
<dialog title="Insert iis_set_server_rights">iis_set_server_rights(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="iis_start_server">
<description>Starts the virtual web server</description>
<param name="server_instance" required="1" vallist="0" default="" type="int">server_instance</param>
<return type="int">int</return>
<insert>iis_start_server(int server_instance);</insert>
<dialog title="Insert iis_start_server">iis_start_server(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="iis_start_service">
<description>Starts the service defined by ServiceId</description>
<param name="service_id" required="1" vallist="0" default="" type="string">service_id</param>
<return type="int">int</return>
<insert>iis_start_service(string service_id);</insert>
<dialog title="Insert iis_start_service">iis_start_service(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="iis_stop_server">
<description>Stops the virtual web server</description>
<param name="server_instance" required="1" vallist="0" default="" type="int">server_instance</param>
<return type="int">int</return>
<insert>iis_stop_server(int server_instance);</insert>
<dialog title="Insert iis_stop_server">iis_stop_server(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="iis_stop_service">
<description>Stops the service defined by ServiceId</description>
<param name="service_id" required="1" vallist="0" default="" type="string">service_id</param>
<return type="int">int</return>
<insert>iis_stop_service(string service_id);</insert>
<dialog title="Insert iis_stop_service">iis_stop_service(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="image">
<function name="exif_imagetype">
<description>Determine the type of an image</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="int">int</return>
<insert>exif_imagetype(string filename);</insert>
<dialog title="Insert exif_imagetype">exif_imagetype(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="exif_read_data">
<description>Read the </description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="sections" required="0" vallist="0" default="" type="string">sections</param>
<param name="arrays" required="0" vallist="0" default="" type="bool">arrays</param>
<param name="thumbnail" required="0" vallist="0" default="" type="bool">thumbnail</param>
<return type="array">array</return>
<insert>exif_read_data(string filename [,string sections] [,bool arrays] [,bool thumbnail]);</insert>
<dialog title="Insert exif_read_data">exif_read_data(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="exif_thumbnail">
<description>Retrieve the embedded thumbnail of a TIFF or JPEG image</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="&amp;width" required="0" vallist="0" default="" type="int">&amp;width</param>
<param name="&amp;height" required="0" vallist="0" default="" type="int">&amp;height</param>
<param name="&amp;imagetype" required="0" vallist="0" default="" type="int">&amp;imagetype</param>
<return type="string">string</return>
<insert>exif_thumbnail(string filename [,int &amp;width] [,int &amp;height] [,int &amp;imagetype]);</insert>
<dialog title="Insert exif_thumbnail">exif_thumbnail(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="gd_info">
<description>Retrieve information about the currently installed GD library</description>
<return type="array">array</return>
<insert>gd_info();</insert>
<dialog title="Insert gd_info">gd_info();</dialog>
<info title="Info window"></info>
</function>
<function name="getimagesize">
<description>Get the size of an image</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="imageinfo" required="0" vallist="0" default="" type="array">imageinfo</param>
<return type="array">array</return>
<insert>getimagesize(string filename [,array imageinfo]);</insert>
<dialog title="Insert getimagesize">getimagesize(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="image_type_to_mime_type">
<description>Get Mime-Type for image-type returned by getimagesize, 
    exif_read_data, exif_thumbnail, exif_imagetype</description>
<param name="imagetype" required="1" vallist="0" default="" type="int">imagetype</param>
<return type="string ">string </return>
<insert>image_type_to_mime_type(int imagetype);</insert>
<dialog title="Insert image_type_to_mime_type">image_type_to_mime_type(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="image2wbmp">
<description>Output image to browser or file</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="filename" required="0" vallist="0" default="" type="string">filename</param>
<param name="threshold" required="0" vallist="0" default="" type="int">threshold</param>
<return type="int">int</return>
<insert>image2wbmp(resource image [,string filename] [,int threshold]);</insert>
<dialog title="Insert image2wbmp">image2wbmp(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="imagealphablending">
<description>Set the blending mode for an image</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="blendmode" required="1" vallist="0" default="" type="bool">blendmode</param>
<return type="int">int</return>
<insert>imagealphablending(resource image, bool blendmode);</insert>
<dialog title="Insert imagealphablending">imagealphablending(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imagearc">
<description>Draw a partial ellipse</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="cx" required="1" vallist="0" default="" type="int">cx</param>
<param name="cy" required="1" vallist="0" default="" type="int">cy</param>
<param name="w" required="1" vallist="0" default="" type="int">w</param>
<param name="h" required="1" vallist="0" default="" type="int">h</param>
<param name="s" required="1" vallist="0" default="" type="int">s</param>
<param name="e" required="1" vallist="0" default="" type="int">e</param>
<param name="color" required="1" vallist="0" default="" type="int">color</param>
<return type="int">int</return>
<insert>imagearc(resource image, int cx, int cy, int w, int h, int s, int e, int color);</insert>
<dialog title="Insert imagearc">imagearc(%0, %1, %2, %3, %4, %5, %6, %7);</dialog>
<info title="Info window"></info>
</function>
<function name="imagechar">
<description>Draw a character horizontally</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="font" required="1" vallist="0" default="" type="int">font</param>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<param name="c" required="1" vallist="0" default="" type="string">c</param>
<param name="color" required="1" vallist="0" default="" type="int">color</param>
<return type="int">int</return>
<insert>imagechar(resource image, int font, int x, int y, string c, int color);</insert>
<dialog title="Insert imagechar">imagechar(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecharup">
<description>Draw a character vertically</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="font" required="1" vallist="0" default="" type="int">font</param>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<param name="c" required="1" vallist="0" default="" type="string">c</param>
<param name="color" required="1" vallist="0" default="" type="int">color</param>
<return type="int">int</return>
<insert>imagecharup(resource image, int font, int x, int y, string c, int color);</insert>
<dialog title="Insert imagecharup">imagecharup(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecolorallocate">
<description>Allocate a color for an image</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="red" required="1" vallist="0" default="" type="int">red</param>
<param name="green" required="1" vallist="0" default="" type="int">green</param>
<param name="blue" required="1" vallist="0" default="" type="int">blue</param>
<return type="int">int</return>
<insert>imagecolorallocate(resource image, int red, int green, int blue);</insert>
<dialog title="Insert imagecolorallocate">imagecolorallocate(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecolorallocatealpha">
<description>Allocate a color for an image</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="red" required="1" vallist="0" default="" type="int">red</param>
<param name="green" required="1" vallist="0" default="" type="int">green</param>
<param name="blue" required="1" vallist="0" default="" type="int">blue</param>
<param name="alpha" required="1" vallist="0" default="" type="int">alpha</param>
<return type="int">int</return>
<insert>imagecolorallocatealpha(resource image, int red, int green, int blue, int alpha);</insert>
<dialog title="Insert imagecolorallocatealpha">imagecolorallocatealpha(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecolorat">
<description>Get the index of the color of a pixel</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<return type="int">int</return>
<insert>imagecolorat(resource image, int x, int y);</insert>
<dialog title="Insert imagecolorat">imagecolorat(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecolorclosest">
<description>Get the index of the closest color to the specified color</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="red" required="1" vallist="0" default="" type="int">red</param>
<param name="green" required="1" vallist="0" default="" type="int">green</param>
<param name="blue" required="1" vallist="0" default="" type="int">blue</param>
<return type="int">int</return>
<insert>imagecolorclosest(resource image, int red, int green, int blue);</insert>
<dialog title="Insert imagecolorclosest">imagecolorclosest(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecolorclosestalpha">
<description>Get the index of the closest color to the specified color + alpha</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="red" required="1" vallist="0" default="" type="int">red</param>
<param name="green" required="1" vallist="0" default="" type="int">green</param>
<param name="blue" required="1" vallist="0" default="" type="int">blue</param>
<param name="alpha" required="1" vallist="0" default="" type="int">alpha</param>
<return type="int">int</return>
<insert>imagecolorclosestalpha(resource image, int red, int green, int blue, int alpha);</insert>
<dialog title="Insert imagecolorclosestalpha">imagecolorclosestalpha(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecolorclosesthwb">
<description>
     Get the index of the color which has the hue, white and blackness nearest to the given color
    </description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="red" required="1" vallist="0" default="" type="int">red</param>
<param name="green" required="1" vallist="0" default="" type="int">green</param>
<param name="blue" required="1" vallist="0" default="" type="int">blue</param>
<return type="int">int</return>
<insert>imagecolorclosesthwb(resource image, int red, int green, int blue);</insert>
<dialog title="Insert imagecolorclosesthwb">imagecolorclosesthwb(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecolordeallocate">
<description>De-allocate a color for an image</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="color" required="1" vallist="0" default="" type="int">color</param>
<return type="int">int</return>
<insert>imagecolordeallocate(resource image, int color);</insert>
<dialog title="Insert imagecolordeallocate">imagecolordeallocate(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecolorexact">
<description>Get the index of the specified color</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="red" required="1" vallist="0" default="" type="int">red</param>
<param name="green" required="1" vallist="0" default="" type="int">green</param>
<param name="blue" required="1" vallist="0" default="" type="int">blue</param>
<return type="int">int</return>
<insert>imagecolorexact(resource image, int red, int green, int blue);</insert>
<dialog title="Insert imagecolorexact">imagecolorexact(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecolorexactalpha">
<description>Get the index of the specified color + alpha</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="red" required="1" vallist="0" default="" type="int">red</param>
<param name="green" required="1" vallist="0" default="" type="int">green</param>
<param name="blue" required="1" vallist="0" default="" type="int">blue</param>
<param name="alpha" required="1" vallist="0" default="" type="int">alpha</param>
<return type="int">int</return>
<insert>imagecolorexactalpha(resource image, int red, int green, int blue, int alpha);</insert>
<dialog title="Insert imagecolorexactalpha">imagecolorexactalpha(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecolorresolve">
<description>
    Get the index of the specified color or its closest possible
    alternative
   </description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="red" required="1" vallist="0" default="" type="int">red</param>
<param name="green" required="1" vallist="0" default="" type="int">green</param>
<param name="blue" required="1" vallist="0" default="" type="int">blue</param>
<return type="int">int</return>
<insert>imagecolorresolve(resource image, int red, int green, int blue);</insert>
<dialog title="Insert imagecolorresolve">imagecolorresolve(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecolorresolvealpha">
<description>
    Get the index of the specified color + alpha or its closest possible
    alternative
   </description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="red" required="1" vallist="0" default="" type="int">red</param>
<param name="green" required="1" vallist="0" default="" type="int">green</param>
<param name="blue" required="1" vallist="0" default="" type="int">blue</param>
<param name="alpha" required="1" vallist="0" default="" type="int">alpha</param>
<return type="int">int</return>
<insert>imagecolorresolvealpha(resource image, int red, int green, int blue, int alpha);</insert>
<dialog title="Insert imagecolorresolvealpha">imagecolorresolvealpha(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecolorset">
<description>Set the color for the specified palette index</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="index" required="1" vallist="0" default="" type="int">index</param>
<param name="red" required="1" vallist="0" default="" type="int">red</param>
<param name="green" required="1" vallist="0" default="" type="int">green</param>
<param name="blue" required="1" vallist="0" default="" type="int">blue</param>
<return type="bool">bool</return>
<insert>imagecolorset(resource image, int index, int red, int green, int blue);</insert>
<dialog title="Insert imagecolorset">imagecolorset(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecolorsforindex">
<description>Get the colors for an index</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="index" required="1" vallist="0" default="" type="int">index</param>
<return type="array">array</return>
<insert>imagecolorsforindex(resource image, int index);</insert>
<dialog title="Insert imagecolorsforindex">imagecolorsforindex(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecolorstotal">
<description>Find out the number of colors in an image's palette</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<return type="int">int</return>
<insert>imagecolorstotal(resource image);</insert>
<dialog title="Insert imagecolorstotal">imagecolorstotal(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecolortransparent">
<description>Define a color as transparent</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="color" required="0" vallist="0" default="" type="int">color</param>
<return type="int">int</return>
<insert>imagecolortransparent(resource image [,int color]);</insert>
<dialog title="Insert imagecolortransparent">imagecolortransparent(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecopy">
<description>Copy part of an image</description>
<param name="dst_im" required="1" vallist="0" default="" type="resource">dst_im</param>
<param name="src_im" required="1" vallist="0" default="" type="resource">src_im</param>
<param name="dst_x" required="1" vallist="0" default="" type="int">dst_x</param>
<param name="dst_y" required="1" vallist="0" default="" type="int">dst_y</param>
<param name="src_x" required="1" vallist="0" default="" type="int">src_x</param>
<param name="src_y" required="1" vallist="0" default="" type="int">src_y</param>
<param name="src_w" required="1" vallist="0" default="" type="int">src_w</param>
<param name="src_h" required="1" vallist="0" default="" type="int">src_h</param>
<return type="int">int</return>
<insert>imagecopy(resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h);</insert>
<dialog title="Insert imagecopy">imagecopy(%0, %1, %2, %3, %4, %5, %6, %7);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecopymerge">
<description>Copy and merge part of an image</description>
<param name="dst_im" required="1" vallist="0" default="" type="resource">dst_im</param>
<param name="src_im" required="1" vallist="0" default="" type="resource">src_im</param>
<param name="dst_x" required="1" vallist="0" default="" type="int">dst_x</param>
<param name="dst_y" required="1" vallist="0" default="" type="int">dst_y</param>
<param name="src_x" required="1" vallist="0" default="" type="int">src_x</param>
<param name="src_y" required="1" vallist="0" default="" type="int">src_y</param>
<param name="src_w" required="1" vallist="0" default="" type="int">src_w</param>
<param name="src_h" required="1" vallist="0" default="" type="int">src_h</param>
<param name="pct" required="1" vallist="0" default="" type="int">pct</param>
<return type="int">int</return>
<insert>imagecopymerge(resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h, int pct);</insert>
<dialog title="Insert imagecopymerge">imagecopymerge(%0, %1, %2, %3, %4, %5, %6, %7, %8);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecopymergegray">
<description>Copy and merge part of an image with gray scale</description>
<param name="dst_im" required="1" vallist="0" default="" type="resource">dst_im</param>
<param name="src_im" required="1" vallist="0" default="" type="resource">src_im</param>
<param name="dst_x" required="1" vallist="0" default="" type="int">dst_x</param>
<param name="dst_y" required="1" vallist="0" default="" type="int">dst_y</param>
<param name="src_x" required="1" vallist="0" default="" type="int">src_x</param>
<param name="src_y" required="1" vallist="0" default="" type="int">src_y</param>
<param name="src_w" required="1" vallist="0" default="" type="int">src_w</param>
<param name="src_h" required="1" vallist="0" default="" type="int">src_h</param>
<param name="pct" required="1" vallist="0" default="" type="int">pct</param>
<return type="int">int</return>
<insert>imagecopymergegray(resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h, int pct);</insert>
<dialog title="Insert imagecopymergegray">imagecopymergegray(%0, %1, %2, %3, %4, %5, %6, %7, %8);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecopyresampled">
<description>Copy and resize part of an image with resampling</description>
<param name="dst_im" required="1" vallist="0" default="" type="resource">dst_im</param>
<param name="src_im" required="1" vallist="0" default="" type="resource">src_im</param>
<param name="dstX" required="1" vallist="0" default="" type="int">dstX</param>
<param name="dstY" required="1" vallist="0" default="" type="int">dstY</param>
<param name="srcX" required="1" vallist="0" default="" type="int">srcX</param>
<param name="srcY" required="1" vallist="0" default="" type="int">srcY</param>
<param name="dstW" required="1" vallist="0" default="" type="int">dstW</param>
<param name="dstH" required="1" vallist="0" default="" type="int">dstH</param>
<param name="srcW" required="1" vallist="0" default="" type="int">srcW</param>
<param name="srcH" required="1" vallist="0" default="" type="int">srcH</param>
<return type="int">int</return>
<insert>imagecopyresampled(resource dst_im, resource src_im, int dstX, int dstY, int srcX, int srcY, int dstW, int dstH, int srcW, int srcH);</insert>
<dialog title="Insert imagecopyresampled">imagecopyresampled(%0, %1, %2, %3, %4, %5, %6, %7, %8, %9);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecopyresized">
<description>Copy and resize part of an image</description>
<param name="dst_im" required="1" vallist="0" default="" type="resource">dst_im</param>
<param name="src_im" required="1" vallist="0" default="" type="resource">src_im</param>
<param name="dstX" required="1" vallist="0" default="" type="int">dstX</param>
<param name="dstY" required="1" vallist="0" default="" type="int">dstY</param>
<param name="srcX" required="1" vallist="0" default="" type="int">srcX</param>
<param name="srcY" required="1" vallist="0" default="" type="int">srcY</param>
<param name="dstW" required="1" vallist="0" default="" type="int">dstW</param>
<param name="dstH" required="1" vallist="0" default="" type="int">dstH</param>
<param name="srcW" required="1" vallist="0" default="" type="int">srcW</param>
<param name="srcH" required="1" vallist="0" default="" type="int">srcH</param>
<return type="int">int</return>
<insert>imagecopyresized(resource dst_im, resource src_im, int dstX, int dstY, int srcX, int srcY, int dstW, int dstH, int srcW, int srcH);</insert>
<dialog title="Insert imagecopyresized">imagecopyresized(%0, %1, %2, %3, %4, %5, %6, %7, %8, %9);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecreate">
<description>Create a new palette based image</description>
<param name="x_size" required="1" vallist="0" default="" type="int">x_size</param>
<param name="y_size" required="1" vallist="0" default="" type="int">y_size</param>
<return type="resource">resource</return>
<insert>imagecreate(int x_size, int y_size);</insert>
<dialog title="Insert imagecreate">imagecreate(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecreatefromgd">
<description>Create a new image from GD file or URL</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="resource">resource</return>
<insert>imagecreatefromgd(string filename);</insert>
<dialog title="Insert imagecreatefromgd">imagecreatefromgd(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecreatefromgd2">
<description>Create a new image from GD2 file or URL</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="resource">resource</return>
<insert>imagecreatefromgd2(string filename);</insert>
<dialog title="Insert imagecreatefromgd2">imagecreatefromgd2(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecreatefromgd2part">
<description>Create a new image from a given part of GD2 file or URL</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="srcX" required="1" vallist="0" default="" type="int">srcX</param>
<param name="srcY" required="1" vallist="0" default="" type="int">srcY</param>
<param name="width" required="1" vallist="0" default="" type="int">width</param>
<param name="height" required="1" vallist="0" default="" type="int">height</param>
<return type="resource">resource</return>
<insert>imagecreatefromgd2part(string filename, int srcX, int srcY, int width, int height);</insert>
<dialog title="Insert imagecreatefromgd2part">imagecreatefromgd2part(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecreatefromgif">
<description>Create a new image from file or URL</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="resource">resource</return>
<insert>imagecreatefromgif(string filename);</insert>
<dialog title="Insert imagecreatefromgif">imagecreatefromgif(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecreatefromjpeg">
<description>Create a new image from file or URL</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="resource">resource</return>
<insert>imagecreatefromjpeg(string filename);</insert>
<dialog title="Insert imagecreatefromjpeg">imagecreatefromjpeg(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecreatefrompng">
<description>Create a new image from file or URL</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="resource">resource</return>
<insert>imagecreatefrompng(string filename);</insert>
<dialog title="Insert imagecreatefrompng">imagecreatefrompng(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecreatefromstring">
<description>Create a new image from the image stream in the string</description>
<param name="image" required="1" vallist="0" default="" type="string">image</param>
<return type="resource">resource</return>
<insert>imagecreatefromstring(string image);</insert>
<dialog title="Insert imagecreatefromstring">imagecreatefromstring(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecreatefromwbmp">
<description>Create a new image from file or URL</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="resource">resource</return>
<insert>imagecreatefromwbmp(string filename);</insert>
<dialog title="Insert imagecreatefromwbmp">imagecreatefromwbmp(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecreatefromxbm">
<description>Create a new image from file or URL</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="resource">resource</return>
<insert>imagecreatefromxbm(string filename);</insert>
<dialog title="Insert imagecreatefromxbm">imagecreatefromxbm(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecreatefromxpm">
<description>Create a new image from file or URL</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="resource">resource</return>
<insert>imagecreatefromxpm(string filename);</insert>
<dialog title="Insert imagecreatefromxpm">imagecreatefromxpm(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imagecreatetruecolor">
<description>Create a new true color image</description>
<param name="x_size" required="1" vallist="0" default="" type="int">x_size</param>
<param name="y_size" required="1" vallist="0" default="" type="int">y_size</param>
<return type="resource">resource</return>
<insert>imagecreatetruecolor(int x_size, int y_size);</insert>
<dialog title="Insert imagecreatetruecolor">imagecreatetruecolor(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imagedashedline">
<description>Draw a dashed line</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="x1" required="1" vallist="0" default="" type="int">x1</param>
<param name="y1" required="1" vallist="0" default="" type="int">y1</param>
<param name="x2" required="1" vallist="0" default="" type="int">x2</param>
<param name="y2" required="1" vallist="0" default="" type="int">y2</param>
<param name="color" required="1" vallist="0" default="" type="int">color</param>
<return type="int">int</return>
<insert>imagedashedline(resource image, int x1, int y1, int x2, int y2, int color);</insert>
<dialog title="Insert imagedashedline">imagedashedline(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="imagedestroy">
<description>Destroy an image</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<return type="int">int</return>
<insert>imagedestroy(resource image);</insert>
<dialog title="Insert imagedestroy">imagedestroy(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imageellipse">
<description>Draw an ellipse</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="cx" required="1" vallist="0" default="" type="int">cx</param>
<param name="cy" required="1" vallist="0" default="" type="int">cy</param>
<param name="w" required="1" vallist="0" default="" type="int">w</param>
<param name="h" required="1" vallist="0" default="" type="int">h</param>
<param name="color" required="1" vallist="0" default="" type="int">color</param>
<return type="int">int</return>
<insert>imageellipse(resource image, int cx, int cy, int w, int h, int color);</insert>
<dialog title="Insert imageellipse">imageellipse(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="imagefill">
<description>Flood fill</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<param name="color" required="1" vallist="0" default="" type="int">color</param>
<return type="int">int</return>
<insert>imagefill(resource image, int x, int y, int color);</insert>
<dialog title="Insert imagefill">imagefill(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="imagefilledarc">
<description>Draw a partial ellipse and fill it</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="cx" required="1" vallist="0" default="" type="int">cx</param>
<param name="cy" required="1" vallist="0" default="" type="int">cy</param>
<param name="w" required="1" vallist="0" default="" type="int">w</param>
<param name="h" required="1" vallist="0" default="" type="int">h</param>
<param name="s" required="1" vallist="0" default="" type="int">s</param>
<param name="e" required="1" vallist="0" default="" type="int">e</param>
<param name="color" required="1" vallist="0" default="" type="int">color</param>
<param name="style" required="1" vallist="0" default="" type="int">style</param>
<return type="int">int</return>
<insert>imagefilledarc(resource image, int cx, int cy, int w, int h, int s, int e, int color, int style);</insert>
<dialog title="Insert imagefilledarc">imagefilledarc(%0, %1, %2, %3, %4, %5, %6, %7, %8);</dialog>
<info title="Info window"></info>
</function>
<function name="imagefilledellipse">
<description>Draw a filled ellipse</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="cx" required="1" vallist="0" default="" type="int">cx</param>
<param name="cy" required="1" vallist="0" default="" type="int">cy</param>
<param name="w" required="1" vallist="0" default="" type="int">w</param>
<param name="h" required="1" vallist="0" default="" type="int">h</param>
<param name="color" required="1" vallist="0" default="" type="int">color</param>
<return type="int">int</return>
<insert>imagefilledellipse(resource image, int cx, int cy, int w, int h, int color);</insert>
<dialog title="Insert imagefilledellipse">imagefilledellipse(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="imagefilledpolygon">
<description>Draw a filled polygon</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="points" required="1" vallist="0" default="" type="array">points</param>
<param name="num_points" required="1" vallist="0" default="" type="int">num_points</param>
<param name="color" required="1" vallist="0" default="" type="int">color</param>
<return type="int">int</return>
<insert>imagefilledpolygon(resource image, array points, int num_points, int color);</insert>
<dialog title="Insert imagefilledpolygon">imagefilledpolygon(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="imagefilledrectangle">
<description>Draw a filled rectangle</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="x1" required="1" vallist="0" default="" type="int">x1</param>
<param name="y1" required="1" vallist="0" default="" type="int">y1</param>
<param name="x2" required="1" vallist="0" default="" type="int">x2</param>
<param name="y2" required="1" vallist="0" default="" type="int">y2</param>
<param name="color" required="1" vallist="0" default="" type="int">color</param>
<return type="int">int</return>
<insert>imagefilledrectangle(resource image, int x1, int y1, int x2, int y2, int color);</insert>
<dialog title="Insert imagefilledrectangle">imagefilledrectangle(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="imagefilltoborder">
<description>Flood fill to specific color</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<param name="border" required="1" vallist="0" default="" type="int">border</param>
<param name="color" required="1" vallist="0" default="" type="int">color</param>
<return type="int">int</return>
<insert>imagefilltoborder(resource image, int x, int y, int border, int color);</insert>
<dialog title="Insert imagefilltoborder">imagefilltoborder(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="imagefontheight">
<description>Get font height</description>
<param name="font" required="1" vallist="0" default="" type="int">font</param>
<return type="int">int</return>
<insert>imagefontheight(int font);</insert>
<dialog title="Insert imagefontheight">imagefontheight(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imagefontwidth">
<description>Get font width</description>
<param name="font" required="1" vallist="0" default="" type="int">font</param>
<return type="int">int</return>
<insert>imagefontwidth(int font);</insert>
<dialog title="Insert imagefontwidth">imagefontwidth(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imageftbbox">
<description>Give the bounding box of a text using fonts via freetype2</description>
<param name="size" required="1" vallist="0" default="" type="int">size</param>
<param name="angle" required="1" vallist="0" default="" type="int">angle</param>
<param name="font_file" required="1" vallist="0" default="" type="string">font_file</param>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<param name="extrainfo" required="0" vallist="0" default="" type="array">extrainfo</param>
<return type="array">array</return>
<insert>imageftbbox(int size, int angle, string font_file, string text [,array extrainfo]);</insert>
<dialog title="Insert imageftbbox">imageftbbox(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="imagefttext">
<description>Write text to the image using fonts using FreeType 2</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="size" required="1" vallist="0" default="" type="int">size</param>
<param name="angle" required="1" vallist="0" default="" type="int">angle</param>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<param name="col" required="1" vallist="0" default="" type="int">col</param>
<param name="font_file" required="1" vallist="0" default="" type="string">font_file</param>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<param name="extrainfo" required="0" vallist="0" default="" type="array">extrainfo</param>
<return type="array">array</return>
<insert>imagefttext(resource image, int size, int angle, int x, int y, int col, string font_file, string text [,array extrainfo]);</insert>
<dialog title="Insert imagefttext">imagefttext(%0, %1, %2, %3, %4, %5, %6, %7, %8);</dialog>
<info title="Info window"></info>
</function>
<function name="imagegammacorrect">
<description>Apply a gamma correction to a GD image</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="inputgamma" required="1" vallist="0" default="" type="float">inputgamma</param>
<param name="outputgamma" required="1" vallist="0" default="" type="float">outputgamma</param>
<return type="int">int</return>
<insert>imagegammacorrect(resource image, float inputgamma, float outputgamma);</insert>
<dialog title="Insert imagegammacorrect">imagegammacorrect(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="imagegd">
<description>Output GD image to browser or file</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="filename" required="0" vallist="0" default="" type="string">filename</param>
<return type="int">int</return>
<insert>imagegd(resource image [,string filename]);</insert>
<dialog title="Insert imagegd">imagegd(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imagegd2">
<description>Output GD2 image</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="filename" required="0" vallist="0" default="" type="string">filename</param>
<param name="chunk_size" required="0" vallist="0" default="" type="int">chunk_size</param>
<param name="type" required="0" vallist="0" default="" type="int">type</param>
<return type="int">int</return>
<insert>imagegd2(resource image [,string filename] [,int chunk_size] [,int type]);</insert>
<dialog title="Insert imagegd2">imagegd2(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="imagegif">
<description>Output image to browser or file</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="filename" required="0" vallist="0" default="" type="string">filename</param>
<return type="int">int</return>
<insert>imagegif(resource image [,string filename]);</insert>
<dialog title="Insert imagegif">imagegif(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imageinterlace">
<description>Enable or disable interlace</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="interlace" required="0" vallist="0" default="" type="int">interlace</param>
<return type="int">int</return>
<insert>imageinterlace(resource image [,int interlace]);</insert>
<dialog title="Insert imageinterlace">imageinterlace(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imageistruecolorcreate">
<description>Finds whether an image is a truecolor image.</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<return type="bool">bool</return>
<insert>imageistruecolorcreate(resource image);</insert>
<dialog title="Insert imageistruecolorcreate">imageistruecolorcreate(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imagejpeg">
<description>Output image to browser or file</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="filename" required="0" vallist="0" default="" type="string">filename</param>
<param name="quality" required="0" vallist="0" default="" type="int">quality</param>
<return type="int">int</return>
<insert>imagejpeg(resource image [,string filename] [,int quality]);</insert>
<dialog title="Insert imagejpeg">imagejpeg(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="imageline">
<description>Draw a line</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="x1" required="1" vallist="0" default="" type="int">x1</param>
<param name="y1" required="1" vallist="0" default="" type="int">y1</param>
<param name="x2" required="1" vallist="0" default="" type="int">x2</param>
<param name="y2" required="1" vallist="0" default="" type="int">y2</param>
<param name="color" required="1" vallist="0" default="" type="int">color</param>
<return type="int">int</return>
<insert>imageline(resource image, int x1, int y1, int x2, int y2, int color);</insert>
<dialog title="Insert imageline">imageline(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="imageloadfont">
<description>Load a new font</description>
<param name="file" required="1" vallist="0" default="" type="string">file</param>
<return type="int">int</return>
<insert>imageloadfont(string file);</insert>
<dialog title="Insert imageloadfont">imageloadfont(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imagepalettecopy">
<description>Copy the palette from one image to another</description>
<param name="destination" required="1" vallist="0" default="" type="resource">destination</param>
<param name="source" required="1" vallist="0" default="" type="resource">source</param>
<return type="int">int</return>
<insert>imagepalettecopy(resource destination, resource source);</insert>
<dialog title="Insert imagepalettecopy">imagepalettecopy(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imagepng">
<description>Output a PNG image to either the browser or a file</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="filename" required="0" vallist="0" default="" type="string">filename</param>
<return type="int">int</return>
<insert>imagepng(resource image [,string filename]);</insert>
<dialog title="Insert imagepng">imagepng(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imagepolygon">
<description>Draw a polygon</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="points" required="1" vallist="0" default="" type="array">points</param>
<param name="num_points" required="1" vallist="0" default="" type="int">num_points</param>
<param name="color" required="1" vallist="0" default="" type="int">color</param>
<return type="int">int</return>
<insert>imagepolygon(resource image, array points, int num_points, int color);</insert>
<dialog title="Insert imagepolygon">imagepolygon(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="imagepsbbox">
<description>
     Give the bounding box of a text rectangle using PostScript Type1
     fonts
    </description>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<param name="font" required="1" vallist="0" default="" type="int">font</param>
<param name="size" required="1" vallist="0" default="" type="int">size</param>
<param name="space" required="0" vallist="0" default="" type="int">space</param>
<param name="tightness" required="0" vallist="0" default="" type="int">tightness</param>
<param name="angle" required="0" vallist="0" default="" type="float">angle</param>
<return type="array">array</return>
<insert>imagepsbbox(string text, int font, int size [,int space] [,int tightness] [,float angle]);</insert>
<dialog title="Insert imagepsbbox">imagepsbbox(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="imagepscopyfont">
<description>
     Make a copy of an already loaded font for further modification
    </description>
<param name="fontindex" required="1" vallist="0" default="" type="int">fontindex</param>
<return type="int">int</return>
<insert>imagepscopyfont(int fontindex);</insert>
<dialog title="Insert imagepscopyfont">imagepscopyfont(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imagepsencodefont">
<description>Change the character encoding vector of a font</description>
<param name="font_index" required="1" vallist="0" default="" type="int">font_index</param>
<param name="encodingfile" required="1" vallist="0" default="" type="string">encodingfile</param>
<return type="int">int</return>
<insert>imagepsencodefont(int font_index, string encodingfile);</insert>
<dialog title="Insert imagepsencodefont">imagepsencodefont(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imagepsextendfont">
<description>Extend or condense a font</description>
<param name="font_index" required="1" vallist="0" default="" type="int">font_index</param>
<param name="extend" required="1" vallist="0" default="" type="float">extend</param>
<return type="bool">bool</return>
<insert>imagepsextendfont(int font_index, float extend);</insert>
<dialog title="Insert imagepsextendfont">imagepsextendfont(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imagepsfreefont">
<description>Free memory used by a PostScript Type 1 font</description>
<param name="fontindex" required="1" vallist="0" default="" type="int">fontindex</param>
<return type="void">void</return>
<insert>imagepsfreefont(int fontindex);</insert>
<dialog title="Insert imagepsfreefont">imagepsfreefont(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imagepsloadfont">
<description>Load a PostScript Type 1 font from file</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="int">int</return>
<insert>imagepsloadfont(string filename);</insert>
<dialog title="Insert imagepsloadfont">imagepsloadfont(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imagepsslantfont">
<description>Slant a font</description>
<param name="font_index" required="1" vallist="0" default="" type="int">font_index</param>
<param name="slant" required="1" vallist="0" default="" type="float">slant</param>
<return type="bool">bool</return>
<insert>imagepsslantfont(int font_index, float slant);</insert>
<dialog title="Insert imagepsslantfont">imagepsslantfont(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imagepstext">
<description>To draw a text string over an image using PostScript Type1 fonts</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<param name="font" required="1" vallist="0" default="" type="int">font</param>
<param name="size" required="1" vallist="0" default="" type="int">size</param>
<param name="foreground" required="1" vallist="0" default="" type="int">foreground</param>
<param name="background" required="1" vallist="0" default="" type="int">background</param>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<param name="
       space
       " required="0" vallist="0" default="" type="int">
       space
       </param>
<param name="
       tightness
       " required="0" vallist="0" default="" type="int">
       tightness
       </param>
<param name="
       angle
       " required="0" vallist="0" default="" type="float">
       angle
       </param>
<param name="
       antialias_steps
       " required="0" vallist="0" default="" type="int">
       antialias_steps
       </param>
<return type="array">array</return>
<insert>imagepstext(resource image, string text, int font, int size, int foreground, int background, int x, int y [,int 
       space
       ] [,int 
       tightness
       ] [,float 
       angle
       ] [,int 
       antialias_steps
       ]);</insert>
<dialog title="Insert imagepstext">imagepstext(%0, %1, %2, %3, %4, %5, %6, %7, %8, %9, %10, %11);</dialog>
<info title="Info window"></info>
</function>
<function name="imagerectangle">
<description>Draw a rectangle</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="x1" required="1" vallist="0" default="" type="int">x1</param>
<param name="y1" required="1" vallist="0" default="" type="int">y1</param>
<param name="x2" required="1" vallist="0" default="" type="int">x2</param>
<param name="y2" required="1" vallist="0" default="" type="int">y2</param>
<param name="col" required="1" vallist="0" default="" type="int">col</param>
<return type="int">int</return>
<insert>imagerectangle(resource image, int x1, int y1, int x2, int y2, int col);</insert>
<dialog title="Insert imagerectangle">imagerectangle(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="imagerotate">
<description>Rotate an image with a given angle</description>
<param name="src_im" required="1" vallist="0" default="" type="resource">src_im</param>
<param name="angle" required="1" vallist="0" default="" type="float">angle</param>
<param name="bgd_color" required="1" vallist="0" default="" type="int">bgd_color</param>
<return type="ressource">ressource</return>
<insert>imagerotate(resource src_im, float angle, int bgd_color);</insert>
<dialog title="Insert imagerotate">imagerotate(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="imagesavealpha">
<description>Set the flag to save full alpha channel information (as opposed to
   single-color transparency) when saving PNG images.</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="saveflag" required="1" vallist="0" default="" type="bool">saveflag</param>
<return type="bool">bool</return>
<insert>imagesavealpha(resource image, bool saveflag);</insert>
<dialog title="Insert imagesavealpha">imagesavealpha(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imagesetbrush">
<description>Set the brush image for line drawing</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="brush" required="1" vallist="0" default="" type="resource">brush</param>
<return type="int">int</return>
<insert>imagesetbrush(resource image, resource brush);</insert>
<dialog title="Insert imagesetbrush">imagesetbrush(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imagesetpixel">
<description>Set a single pixel</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<param name="color" required="1" vallist="0" default="" type="int">color</param>
<return type="int">int</return>
<insert>imagesetpixel(resource image, int x, int y, int color);</insert>
<dialog title="Insert imagesetpixel">imagesetpixel(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="imagesetstyle">
<description>Set the style for line drawing</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="style" required="1" vallist="0" default="" type="array">style</param>
<return type="int">int</return>
<insert>imagesetstyle(resource image, array style);</insert>
<dialog title="Insert imagesetstyle">imagesetstyle(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imagesetthickness">
<description>Set the thickness for line drawing</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="thickness" required="1" vallist="0" default="" type="int">thickness</param>
<return type="void">void</return>
<insert>imagesetthickness(resource image, int thickness);</insert>
<dialog title="Insert imagesetthickness">imagesetthickness(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imagesettile">
<description>Set the tile image for filling</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="tile" required="1" vallist="0" default="" type="resource">tile</param>
<return type="int">int</return>
<insert>imagesettile(resource image, resource tile);</insert>
<dialog title="Insert imagesettile">imagesettile(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imagestring">
<description>Draw a string horizontally</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="font" required="1" vallist="0" default="" type="int">font</param>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<param name="s" required="1" vallist="0" default="" type="string">s</param>
<param name="col" required="1" vallist="0" default="" type="int">col</param>
<return type="int">int</return>
<insert>imagestring(resource image, int font, int x, int y, string s, int col);</insert>
<dialog title="Insert imagestring">imagestring(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="imagestringup">
<description>Draw a string vertically</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="font" required="1" vallist="0" default="" type="int">font</param>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<param name="s" required="1" vallist="0" default="" type="string">s</param>
<param name="col" required="1" vallist="0" default="" type="int">col</param>
<return type="int">int</return>
<insert>imagestringup(resource image, int font, int x, int y, string s, int col);</insert>
<dialog title="Insert imagestringup">imagestringup(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="imagesx">
<description>Get image width</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<return type="int">int</return>
<insert>imagesx(resource image);</insert>
<dialog title="Insert imagesx">imagesx(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imagesy">
<description>Get image height</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<return type="int">int</return>
<insert>imagesy(resource image);</insert>
<dialog title="Insert imagesy">imagesy(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imagetruecolortopalette">
<description>Convert a true color image to a palette image</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="dither" required="1" vallist="0" default="" type="bool">dither</param>
<param name="ncolors" required="1" vallist="0" default="" type="int">ncolors</param>
<return type="void">void</return>
<insert>imagetruecolortopalette(resource image, bool dither, int ncolors);</insert>
<dialog title="Insert imagetruecolortopalette">imagetruecolortopalette(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="imagettfbbox">
<description>Give the bounding box of a text using TrueType fonts</description>
<param name="size" required="1" vallist="0" default="" type="int">size</param>
<param name="angle" required="1" vallist="0" default="" type="int">angle</param>
<param name="fontfile" required="1" vallist="0" default="" type="string">fontfile</param>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="array">array</return>
<insert>imagettfbbox(int size, int angle, string fontfile, string text);</insert>
<dialog title="Insert imagettfbbox">imagettfbbox(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="imagettftext">
<description>Write text to the image using TrueType fonts</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="size" required="1" vallist="0" default="" type="int">size</param>
<param name="angle" required="1" vallist="0" default="" type="int">angle</param>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<param name="color" required="1" vallist="0" default="" type="int">color</param>
<param name="fontfile" required="1" vallist="0" default="" type="string">fontfile</param>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="array">array</return>
<insert>imagettftext(resource image, int size, int angle, int x, int y, int color, string fontfile, string text);</insert>
<dialog title="Insert imagettftext">imagettftext(%0, %1, %2, %3, %4, %5, %6, %7);</dialog>
<info title="Info window"></info>
</function>
<function name="imagetypes">
<description>Return the image types supported by this PHP build</description>
<return type="int">int</return>
<insert>imagetypes();</insert>
<dialog title="Insert imagetypes">imagetypes();</dialog>
<info title="Info window"></info>
</function>
<function name="imagewbmp">
<description>Output image to browser or file</description>
<param name="image" required="1" vallist="0" default="" type="resource">image</param>
<param name="filename" required="0" vallist="0" default="" type="string">filename</param>
<param name="foreground" required="0" vallist="0" default="" type="int">foreground</param>
<return type="int">int</return>
<insert>imagewbmp(resource image [,string filename] [,int foreground]);</insert>
<dialog title="Insert imagewbmp">imagewbmp(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="iptcembed">
<description>Embed binary IPTC data into a JPEG image</description>
<param name="iptcdata" required="1" vallist="0" default="" type="string">iptcdata</param>
<param name="jpeg_file_name" required="1" vallist="0" default="" type="string">jpeg_file_name</param>
<param name="spool" required="0" vallist="0" default="" type="int">spool</param>
<return type="array">array</return>
<insert>iptcembed(string iptcdata, string jpeg_file_name [,int spool]);</insert>
<dialog title="Insert iptcembed">iptcembed(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="iptcparse">
<description>
     Parse a binary IPTC </description>
<param name="iptcblock" required="1" vallist="0" default="" type="string">iptcblock</param>
<return type="array">array</return>
<insert>iptcparse(string iptcblock);</insert>
<dialog title="Insert iptcparse">iptcparse(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="jpeg2wbmp">
<description>Convert JPEG image file to WBMP image file</description>
<param name="jpegname" required="1" vallist="0" default="" type="string">jpegname</param>
<param name="wbmpname" required="1" vallist="0" default="" type="string">wbmpname</param>
<param name="d_height" required="1" vallist="0" default="" type="int">d_height</param>
<param name="d_width" required="1" vallist="0" default="" type="int">d_width</param>
<param name="threshold" required="1" vallist="0" default="" type="int">threshold</param>
<return type="int">int</return>
<insert>jpeg2wbmp(string jpegname, string wbmpname, int d_height, int d_width, int threshold);</insert>
<dialog title="Insert jpeg2wbmp">jpeg2wbmp(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="png2wbmp">
<description>Convert PNG image file to WBMP image file</description>
<param name="pngname" required="1" vallist="0" default="" type="string">pngname</param>
<param name="wbmpname" required="1" vallist="0" default="" type="string">wbmpname</param>
<param name="d_height" required="1" vallist="0" default="" type="int">d_height</param>
<param name="d_width" required="1" vallist="0" default="" type="int">d_width</param>
<param name="threshold" required="1" vallist="0" default="" type="int">threshold</param>
<return type="int">int</return>
<insert>png2wbmp(string pngname, string wbmpname, int d_height, int d_width, int threshold);</insert>
<dialog title="Insert png2wbmp">png2wbmp(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="imap">
<function name="imap_8bit">
<description>
     Convert an 8bit string to a quoted-printable string
    </description>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<return type="string">string</return>
<insert>imap_8bit(string string);</insert>
<dialog title="Insert imap_8bit">imap_8bit(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_alerts">
<description>
     This function returns all IMAP alert messages (if any) that have
     occurred during this page request or since the alert stack was
     reset
    </description>
<return type="array">array</return>
<insert>imap_alerts();</insert>
<dialog title="Insert imap_alerts">imap_alerts();</dialog>
<info title="Info window"></info>
</function>
<function name="imap_append">
<description>
     Append a string message to a specified mailbox
    </description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="mbox" required="1" vallist="0" default="" type="string">mbox</param>
<param name="message" required="1" vallist="0" default="" type="string">message</param>
<param name="options" required="0" vallist="0" default="" type="string">options</param>
<return type="bool">bool</return>
<insert>imap_append(resource imap_stream, string mbox, string message [,string options]);</insert>
<dialog title="Insert imap_append">imap_append(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_base64">
<description>Decode BASE64 encoded text</description>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="string">string</return>
<insert>imap_base64(string text);</insert>
<dialog title="Insert imap_base64">imap_base64(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_binary">
<description>
     Convert an 8bit string to a base64 string
    </description>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<return type="string">string</return>
<insert>imap_binary(string string);</insert>
<dialog title="Insert imap_binary">imap_binary(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_body">
<description>Read the message body</description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="msg_number" required="1" vallist="0" default="" type="int">msg_number</param>
<param name="options" required="0" vallist="0" default="" type="int">options</param>
<return type="string">string</return>
<insert>imap_body(resource imap_stream, int msg_number [,int options]);</insert>
<dialog title="Insert imap_body">imap_body(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_bodystruct">
<description>
     Read the structure of a specified body section of a specific message
    </description>
<param name="stream_id" required="1" vallist="0" default="" type="resource">stream_id</param>
<param name="msg_no" required="1" vallist="0" default="" type="int">msg_no</param>
<param name="section" required="1" vallist="0" default="" type="int">section</param>
<return type="object">object</return>
<insert>imap_bodystruct(resource stream_id, int msg_no, int section);</insert>
<dialog title="Insert imap_bodystruct">imap_bodystruct(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_check">
<description>Check current mailbox</description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<return type="object">object</return>
<insert>imap_check(resource imap_stream);</insert>
<dialog title="Insert imap_check">imap_check(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_clearflag_full">
<description>Clears flags on messages</description>
<param name="stream" required="1" vallist="0" default="" type="resource">stream</param>
<param name="sequence" required="1" vallist="0" default="" type="string">sequence</param>
<param name="flag" required="1" vallist="0" default="" type="string">flag</param>
<param name="options" required="1" vallist="0" default="" type="string">options</param>
<return type="bool">bool</return>
<insert>imap_clearflag_full(resource stream, string sequence, string flag, string options);</insert>
<dialog title="Insert imap_clearflag_full">imap_clearflag_full(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_close">
<description>Close an IMAP stream</description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="flag" required="0" vallist="0" default="" type="int">flag</param>
<return type="bool">bool</return>
<insert>imap_close(resource imap_stream [,int flag]);</insert>
<dialog title="Insert imap_close">imap_close(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_createmailbox">
<description>Create a new mailbox</description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="mbox" required="1" vallist="0" default="" type="string">mbox</param>
<return type="bool">bool</return>
<insert>imap_createmailbox(resource imap_stream, string mbox);</insert>
<dialog title="Insert imap_createmailbox">imap_createmailbox(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_delete">
<description>
     Mark a messge for deletion from current mailbox
    </description>
<param name="imap_stream" required="1" vallist="0" default="" type="int">imap_stream</param>
<param name="msg_number" required="1" vallist="0" default="" type="int">msg_number</param>
<param name="options" required="0" vallist="0" default="" type="int">options</param>
<return type="bool">bool</return>
<insert>imap_delete(int imap_stream, int msg_number [,int options]);</insert>
<dialog title="Insert imap_delete">imap_delete(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_deletemailbox">
<description>Delete a mailbox</description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="mbox" required="1" vallist="0" default="" type="string">mbox</param>
<return type="bool">bool</return>
<insert>imap_deletemailbox(resource imap_stream, string mbox);</insert>
<dialog title="Insert imap_deletemailbox">imap_deletemailbox(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_errors">
<description>
     This function returns all of the IMAP errors (if any) that have
     occurred during this page request or since the error stack was
     reset.
    </description>
<return type="array">array</return>
<insert>imap_errors();</insert>
<dialog title="Insert imap_errors">imap_errors();</dialog>
<info title="Info window"></info>
</function>
<function name="imap_expunge">
<description>Delete all messages marked for deletion</description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<return type="bool">bool</return>
<insert>imap_expunge(resource imap_stream);</insert>
<dialog title="Insert imap_expunge">imap_expunge(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_fetch_overview">
<description>
     Read an overview of the information in the headers of the given message
    </description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="sequence" required="1" vallist="0" default="" type="string">sequence</param>
<param name="options" required="0" vallist="0" default="" type="int">options</param>
<return type="array">array</return>
<insert>imap_fetch_overview(resource imap_stream, string sequence [,int options]);</insert>
<dialog title="Insert imap_fetch_overview">imap_fetch_overview(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_fetchbody">
<description>
     Fetch a particular section of the body of the message
    </description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="msg_number" required="1" vallist="0" default="" type="int">msg_number</param>
<param name="part_number" required="1" vallist="0" default="" type="string">part_number</param>
<param name="options" required="0" vallist="0" default="" type="flags">options</param>
<return type="string">string</return>
<insert>imap_fetchbody(resource imap_stream, int msg_number, string part_number [,flags options]);</insert>
<dialog title="Insert imap_fetchbody">imap_fetchbody(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_fetchheader">
<description>Returns header for a message</description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="msgno" required="1" vallist="0" default="" type="int">msgno</param>
<param name="options" required="1" vallist="0" default="" type="int">options</param>
<return type="string">string</return>
<insert>imap_fetchheader(resource imap_stream, int msgno, int options);</insert>
<dialog title="Insert imap_fetchheader">imap_fetchheader(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_fetchstructure">
<description>
     Read the structure of a particular message
    </description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="msg_number" required="1" vallist="0" default="" type="int">msg_number</param>
<param name="options" required="0" vallist="0" default="" type="int">options</param>
<return type="object">object</return>
<insert>imap_fetchstructure(resource imap_stream, int msg_number [,int options]);</insert>
<dialog title="Insert imap_fetchstructure">imap_fetchstructure(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_get_quota">
<description>
     Retrieve the quota level settings, and usage statics per mailbox
    </description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="quota_root" required="1" vallist="0" default="" type="string">quota_root</param>
<return type="array">array</return>
<insert>imap_get_quota(resource imap_stream, string quota_root);</insert>
<dialog title="Insert imap_get_quota">imap_get_quota(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_get_quotaroot">
<description>
     Retrieve the quota settings per user
    </description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="quota_root" required="1" vallist="0" default="" type="string">quota_root</param>
<return type="array">array</return>
<insert>imap_get_quotaroot(resource imap_stream, string quota_root);</insert>
<dialog title="Insert imap_get_quotaroot">imap_get_quotaroot(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_getmailboxes">
<description>
     Read the list of mailboxes, returning detailed information on
     each one
    </description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="ref" required="1" vallist="0" default="" type="string">ref</param>
<param name="pattern" required="1" vallist="0" default="" type="string">pattern</param>
<return type="array">array</return>
<insert>imap_getmailboxes(resource imap_stream, string ref, string pattern);</insert>
<dialog title="Insert imap_getmailboxes">imap_getmailboxes(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_getsubscribed">
<description>List all the subscribed mailboxes</description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="ref" required="1" vallist="0" default="" type="string">ref</param>
<param name="pattern" required="1" vallist="0" default="" type="string">pattern</param>
<return type="array">array</return>
<insert>imap_getsubscribed(resource imap_stream, string ref, string pattern);</insert>
<dialog title="Insert imap_getsubscribed">imap_getsubscribed(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_headerinfo">
<description>Read the header of the message</description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="msg_number" required="1" vallist="0" default="" type="int">msg_number</param>
<param name="fromlength" required="0" vallist="0" default="" type="int">fromlength</param>
<param name="subjectlength" required="0" vallist="0" default="" type="int">subjectlength</param>
<param name="defaulthost" required="0" vallist="0" default="" type="string">defaulthost</param>
<return type="object">object</return>
<insert>imap_headerinfo(resource imap_stream, int msg_number [,int fromlength] [,int subjectlength] [,string defaulthost]);</insert>
<dialog title="Insert imap_headerinfo">imap_headerinfo(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_headers">
<description>
     Returns headers for all messages in a mailbox
    </description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<return type="array">array</return>
<insert>imap_headers(resource imap_stream);</insert>
<dialog title="Insert imap_headers">imap_headers(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_last_error">
<description>
     This function returns the last IMAP error (if any) that occurred
     during this page request
    </description>
<return type="string">string</return>
<insert>imap_last_error();</insert>
<dialog title="Insert imap_last_error">imap_last_error();</dialog>
<info title="Info window"></info>
</function>
<function name="imap_list">
<description>Read the list of mailboxes</description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="ref" required="1" vallist="0" default="" type="string">ref</param>
<param name="pattern" required="1" vallist="0" default="" type="string">pattern</param>
<return type="array">array</return>
<insert>imap_list(resource imap_stream, string ref, string pattern);</insert>
<dialog title="Insert imap_list">imap_list(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_listscan">
<description>
     Read the list of mailboxes, takes a string to search for in the
     text of the mailbox
    </description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="ref" required="1" vallist="0" default="" type="string">ref</param>
<param name="pattern" required="1" vallist="0" default="" type="string">pattern</param>
<param name="content" required="1" vallist="0" default="" type="string">content</param>
<return type="array">array</return>
<insert>imap_listscan(resource imap_stream, string ref, string pattern, string content);</insert>
<dialog title="Insert imap_listscan">imap_listscan(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_lsub">
<description>List all the subscribed mailboxes</description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="ref" required="1" vallist="0" default="" type="string">ref</param>
<param name="pattern" required="1" vallist="0" default="" type="string">pattern</param>
<return type="array">array</return>
<insert>imap_lsub(resource imap_stream, string ref, string pattern);</insert>
<dialog title="Insert imap_lsub">imap_lsub(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_mail_compose">
<description>
     Create a MIME message based on given envelope and body sections 
    </description>
<param name="envelope" required="1" vallist="0" default="" type="array">envelope</param>
<param name="body" required="1" vallist="0" default="" type="array">body</param>
<return type="string">string</return>
<insert>imap_mail_compose(array envelope, array body);</insert>
<dialog title="Insert imap_mail_compose">imap_mail_compose(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_mail_copy">
<description>Copy specified messages to a mailbox</description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="msglist" required="1" vallist="0" default="" type="string">msglist</param>
<param name="mbox" required="1" vallist="0" default="" type="string">mbox</param>
<param name="options" required="0" vallist="0" default="" type="int">options</param>
<return type="bool">bool</return>
<insert>imap_mail_copy(resource imap_stream, string msglist, string mbox [,int options]);</insert>
<dialog title="Insert imap_mail_copy">imap_mail_copy(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_mail_move">
<description>Move specified messages to a mailbox</description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="msglist" required="1" vallist="0" default="" type="string">msglist</param>
<param name="mbox" required="1" vallist="0" default="" type="string">mbox</param>
<param name="options" required="0" vallist="0" default="" type="int">options</param>
<return type="bool">bool</return>
<insert>imap_mail_move(resource imap_stream, string msglist, string mbox [,int options]);</insert>
<dialog title="Insert imap_mail_move">imap_mail_move(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_mail">
<description>
     Send an email message
    </description>
<param name="to" required="1" vallist="0" default="" type="string">to</param>
<param name="subject" required="1" vallist="0" default="" type="string">subject</param>
<param name="message" required="1" vallist="0" default="" type="string">message</param>
<param name="additional_headers" required="0" vallist="0" default="" type="string">additional_headers</param>
<param name="cc" required="0" vallist="0" default="" type="string">cc</param>
<param name="bcc" required="0" vallist="0" default="" type="string">bcc</param>
<param name="rpath" required="0" vallist="0" default="" type="string">rpath</param>
<return type="string">string</return>
<insert>imap_mail(string to, string subject, string message [,string additional_headers] [,string cc] [,string bcc] [,string rpath]);</insert>
<dialog title="Insert imap_mail">imap_mail(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_mailboxmsginfo">
<description>Get information about the current mailbox</description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<return type="object">object</return>
<insert>imap_mailboxmsginfo(resource imap_stream);</insert>
<dialog title="Insert imap_mailboxmsginfo">imap_mailboxmsginfo(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_mime_header_decode">
<description>Decode MIME header elements</description>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="array">array</return>
<insert>imap_mime_header_decode(string text);</insert>
<dialog title="Insert imap_mime_header_decode">imap_mime_header_decode(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_msgno">
<description>
     This function returns the message sequence number for the given
     UID
    </description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="uid" required="1" vallist="0" default="" type="int">uid</param>
<return type="int">int</return>
<insert>imap_msgno(resource imap_stream, int uid);</insert>
<dialog title="Insert imap_msgno">imap_msgno(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_num_msg">
<description>
     Gives the number of messages in the current mailbox
    </description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<return type="int">int</return>
<insert>imap_num_msg(resource imap_stream);</insert>
<dialog title="Insert imap_num_msg">imap_num_msg(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_num_recent">
<description>Gives the number of recent messages in current
    mailbox</description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<return type="int">int</return>
<insert>imap_num_recent(resource imap_stream);</insert>
<dialog title="Insert imap_num_recent">imap_num_recent(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_open">
<description>Open an IMAP stream to a mailbox</description>
<param name="mailbox" required="1" vallist="0" default="" type="string">mailbox</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="options" required="0" vallist="0" default="" type="int">options</param>
<return type="resource">resource</return>
<insert>imap_open(string mailbox, string username, string password [,int options]);</insert>
<dialog title="Insert imap_open">imap_open(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_ping">
<description>Check if the IMAP stream is still active</description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<return type="bool">bool</return>
<insert>imap_ping(resource imap_stream);</insert>
<dialog title="Insert imap_ping">imap_ping(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_qprint">
<description>Convert a quoted-printable string to an 8 bit
    string</description>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<return type="string">string</return>
<insert>imap_qprint(string string);</insert>
<dialog title="Insert imap_qprint">imap_qprint(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_renamemailbox">
<description>Rename an old mailbox to new mailbox</description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="old_mbox" required="1" vallist="0" default="" type="string">old_mbox</param>
<param name="new_mbox" required="1" vallist="0" default="" type="string">new_mbox</param>
<return type="bool">bool</return>
<insert>imap_renamemailbox(resource imap_stream, string old_mbox, string new_mbox);</insert>
<dialog title="Insert imap_renamemailbox">imap_renamemailbox(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_reopen">
<description>Reopen IMAP stream to new mailbox</description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="mailbox" required="1" vallist="0" default="" type="string">mailbox</param>
<param name="options" required="0" vallist="0" default="" type="string">options</param>
<return type="bool">bool</return>
<insert>imap_reopen(resource imap_stream, string mailbox [,string options]);</insert>
<dialog title="Insert imap_reopen">imap_reopen(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_rfc822_parse_adrlist">
<description>Parses an address string</description>
<param name="address" required="1" vallist="0" default="" type="string">address</param>
<param name="default_host" required="1" vallist="0" default="" type="string">default_host</param>
<return type="array">array</return>
<insert>imap_rfc822_parse_adrlist(string address, string default_host);</insert>
<dialog title="Insert imap_rfc822_parse_adrlist">imap_rfc822_parse_adrlist(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_rfc822_parse_headers">
<description>Parse mail headers from a string</description>
<param name="headers" required="1" vallist="0" default="" type="string">headers</param>
<param name="defaulthost" required="0" vallist="0" default="" type="string">defaulthost</param>
<return type="object">object</return>
<insert>imap_rfc822_parse_headers(string headers [,string defaulthost]);</insert>
<dialog title="Insert imap_rfc822_parse_headers">imap_rfc822_parse_headers(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_rfc822_write_address">
<description>
     Returns a properly formatted email address given the mailbox,
     host, and personal info.
    </description>
<param name="mailbox" required="1" vallist="0" default="" type="string">mailbox</param>
<param name="host" required="1" vallist="0" default="" type="string">host</param>
<param name="personal" required="1" vallist="0" default="" type="string">personal</param>
<return type="string">string</return>
<insert>imap_rfc822_write_address(string mailbox, string host, string personal);</insert>
<dialog title="Insert imap_rfc822_write_address">imap_rfc822_write_address(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_search">
<description>
     This function returns an array of messages matching the given
     search criteria
    </description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="criteria" required="1" vallist="0" default="" type="string">criteria</param>
<param name="options" required="1" vallist="0" default="" type="int">options</param>
<return type="array">array</return>
<insert>imap_search(resource imap_stream, string criteria, int options);</insert>
<dialog title="Insert imap_search">imap_search(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_set_quota">
<description>Sets a quota for a given mailbox</description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="quota_root" required="1" vallist="0" default="" type="string">quota_root</param>
<param name="quota_limit" required="1" vallist="0" default="" type="int">quota_limit</param>
<return type="bool">bool</return>
<insert>imap_set_quota(resource imap_stream, string quota_root, int quota_limit);</insert>
<dialog title="Insert imap_set_quota">imap_set_quota(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_setacl">
<description>
     Sets the ACL for a giving mailbox
    </description>
<param name="stream_id" required="1" vallist="0" default="" type="resource">stream_id</param>
<param name="mailbox" required="1" vallist="0" default="" type="string">mailbox</param>
<param name="id" required="1" vallist="0" default="" type="string">id</param>
<param name="rights" required="1" vallist="0" default="" type="string">rights</param>
<return type="bool">bool</return>
<insert>imap_setacl(resource stream_id, string mailbox, string id, string rights);</insert>
<dialog title="Insert imap_setacl">imap_setacl(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_setflag_full">
<description>Sets flags on messages</description>
<param name="stream" required="1" vallist="0" default="" type="resource">stream</param>
<param name="sequence" required="1" vallist="0" default="" type="string">sequence</param>
<param name="flag" required="1" vallist="0" default="" type="string">flag</param>
<param name="options" required="1" vallist="0" default="" type="string">options</param>
<return type="bool">bool</return>
<insert>imap_setflag_full(resource stream, string sequence, string flag, string options);</insert>
<dialog title="Insert imap_setflag_full">imap_setflag_full(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_sort">
<description>Sort an array of message headers</description>
<param name="stream" required="1" vallist="0" default="" type="resource">stream</param>
<param name="criteria" required="1" vallist="0" default="" type="int">criteria</param>
<param name="reverse" required="1" vallist="0" default="" type="int">reverse</param>
<param name="options" required="0" vallist="0" default="" type="int">options</param>
<param name="search_criteria" required="0" vallist="0" default="" type="string">search_criteria</param>
<return type="array">array</return>
<insert>imap_sort(resource stream, int criteria, int reverse [,int options] [,string search_criteria]);</insert>
<dialog title="Insert imap_sort">imap_sort(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_status">
<description>
     This function returns status information on a mailbox other than
     the current one
    </description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="mailbox" required="1" vallist="0" default="" type="string">mailbox</param>
<param name="options" required="1" vallist="0" default="" type="int">options</param>
<return type="object">object</return>
<insert>imap_status(resource imap_stream, string mailbox, int options);</insert>
<dialog title="Insert imap_status">imap_status(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_subscribe">
<description>Subscribe to a mailbox</description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="mbox" required="1" vallist="0" default="" type="string">mbox</param>
<return type="bool">bool</return>
<insert>imap_subscribe(resource imap_stream, string mbox);</insert>
<dialog title="Insert imap_subscribe">imap_subscribe(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_thread">
<description>
     Return threaded by REFERENCES tree
    </description>
<param name="stream_id" required="1" vallist="0" default="" type="resource">stream_id</param>
<param name="options" required="0" vallist="0" default="" type="int">options</param>
<return type="array">array</return>
<insert>imap_thread(resource stream_id [,int options]);</insert>
<dialog title="Insert imap_thread">imap_thread(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_uid">
<description>
     This function returns the UID for the given message sequence
     number
    </description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="msgno" required="1" vallist="0" default="" type="int">msgno</param>
<return type="int">int</return>
<insert>imap_uid(resource imap_stream, int msgno);</insert>
<dialog title="Insert imap_uid">imap_uid(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_undelete">
<description>
     Unmark the message which is marked deleted
    </description>
<param name="imap_stream" required="1" vallist="0" default="" type="resource">imap_stream</param>
<param name="msg_number" required="1" vallist="0" default="" type="int">msg_number</param>
<return type="bool">bool</return>
<insert>imap_undelete(resource imap_stream, int msg_number);</insert>
<dialog title="Insert imap_undelete">imap_undelete(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_unsubscribe">
<description>Unsubscribe from a mailbox</description>
<param name="imap_stream" required="1" vallist="0" default="" type="string">imap_stream</param>
<param name="mbox" required="1" vallist="0" default="" type="string">mbox</param>
<return type="bool">bool</return>
<insert>imap_unsubscribe(string imap_stream, string mbox);</insert>
<dialog title="Insert imap_unsubscribe">imap_unsubscribe(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_utf7_decode">
<description>
     Decodes a modified UTF-7 encoded string.
    </description>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="string">string</return>
<insert>imap_utf7_decode(string text);</insert>
<dialog title="Insert imap_utf7_decode">imap_utf7_decode(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_utf7_encode">
<description>
     Converts 8bit data to modified UTF-7 text.
    </description>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<return type="string">string</return>
<insert>imap_utf7_encode(string data);</insert>
<dialog title="Insert imap_utf7_encode">imap_utf7_encode(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="imap_utf8">
<description>
      Converts text to UTF8
    </description>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="string">string</return>
<insert>imap_utf8(string text);</insert>
<dialog title="Insert imap_utf8">imap_utf8(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="info">
<function name="assert_options">
<description>Set/get the various assert flags</description>
<param name="what" required="1" vallist="0" default="" type="int">what</param>
<param name="value" required="0" vallist="0" default="" type="mixed">value</param>
<return type="mixed">mixed</return>
<insert>assert_options(int what [,mixed value]);</insert>
<dialog title="Insert assert_options">assert_options(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="assert">
<description>Checks if assertion is </description>
<param name="assertion" required="1" vallist="0" default="" type="mixed">assertion</param>
<return type="int">int</return>
<insert>assert(mixed assertion);</insert>
<dialog title="Insert assert">assert(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dl">
<description>Loads a PHP extension at runtime</description>
<param name="library" required="1" vallist="0" default="" type="string">library</param>
<return type="int">int</return>
<insert>dl(string library);</insert>
<dialog title="Insert dl">dl(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="extension_loaded">
<description>Find out whether an extension is loaded</description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="bool">bool</return>
<insert>extension_loaded(string name);</insert>
<dialog title="Insert extension_loaded">extension_loaded(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="get_cfg_var">
<description>
     Gets the value of a PHP configuration option
    </description>
<param name="varname" required="1" vallist="0" default="" type="string">varname</param>
<return type="string">string</return>
<insert>get_cfg_var(string varname);</insert>
<dialog title="Insert get_cfg_var">get_cfg_var(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="get_current_user">
<description>
     Gets the name of the owner of the current PHP script
    </description>
<return type="string">string</return>
<insert>get_current_user();</insert>
<dialog title="Insert get_current_user">get_current_user();</dialog>
<info title="Info window"></info>
</function>
<function name="get_defined_constants">
<description>
     Returns an associative array with the names of all the constants
     and their values
    </description>
<return type="array">array</return>
<insert>get_defined_constants();</insert>
<dialog title="Insert get_defined_constants">get_defined_constants();</dialog>
<info title="Info window"></info>
</function>
<function name="get_extension_funcs">
<description>
     Returns an array with the names of the functions of a module
    </description>
<param name="module_name" required="1" vallist="0" default="" type="string">module_name</param>
<return type="array">array</return>
<insert>get_extension_funcs(string module_name);</insert>
<dialog title="Insert get_extension_funcs">get_extension_funcs(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="get_included_files">
<description>
     Returns an array with the names of included or required files
    </description>
<return type="array">array</return>
<insert>get_included_files();</insert>
<dialog title="Insert get_included_files">get_included_files();</dialog>
<info title="Info window"></info>
</function>
<function name="get_loaded_extensions">
<description>
     Returns an array with the names of all modules compiled and
     loaded
    </description>
<return type="array">array</return>
<insert>get_loaded_extensions();</insert>
<dialog title="Insert get_loaded_extensions">get_loaded_extensions();</dialog>
<info title="Info window"></info>
</function>
<function name="get_magic_quotes_gpc">
<description>
     Gets the current active configuration setting of magic quotes gpc
    </description>
<return type="int">int</return>
<insert>get_magic_quotes_gpc();</insert>
<dialog title="Insert get_magic_quotes_gpc">get_magic_quotes_gpc();</dialog>
<info title="Info window"></info>
</function>
<function name="get_magic_quotes_runtime">
<description>
     Gets the current active configuration setting of
     magic_quotes_runtime
    </description>
<return type="int">int</return>
<insert>get_magic_quotes_runtime();</insert>
<dialog title="Insert get_magic_quotes_runtime">get_magic_quotes_runtime();</dialog>
<info title="Info window"></info>
</function>
<function name="getenv">
<description>Gets the value of an environment variable</description>
<param name="varname" required="1" vallist="0" default="" type="string">varname</param>
<return type="string">string</return>
<insert>getenv(string varname);</insert>
<dialog title="Insert getenv">getenv(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="getlastmod">
<description>Gets time of last page modification</description>
<return type="int">int</return>
<insert>getlastmod();</insert>
<dialog title="Insert getlastmod">getlastmod();</dialog>
<info title="Info window"></info>
</function>
<function name="getmygid">
<description>Get PHP script owner's GID</description>
<return type="int">int</return>
<insert>getmygid();</insert>
<dialog title="Insert getmygid">getmygid();</dialog>
<info title="Info window"></info>
</function>
<function name="getmyinode">
<description>Gets the inode of the current script</description>
<return type="int">int</return>
<insert>getmyinode();</insert>
<dialog title="Insert getmyinode">getmyinode();</dialog>
<info title="Info window"></info>
</function>
<function name="getmypid">
<description>Gets PHP's process ID</description>
<return type="int">int</return>
<insert>getmypid();</insert>
<dialog title="Insert getmypid">getmypid();</dialog>
<info title="Info window"></info>
</function>
<function name="getmyuid">
<description>Gets PHP script owner's UID</description>
<return type="int">int</return>
<insert>getmyuid();</insert>
<dialog title="Insert getmyuid">getmyuid();</dialog>
<info title="Info window"></info>
</function>
<function name="getopt">
<description>Gets options from the command line argument list</description>
<param name="options" required="1" vallist="0" default="" type="string">options</param>
<return type="string">string</return>
<insert>getopt(string options);</insert>
<dialog title="Insert getopt">getopt(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="getrusage">
<description>Gets the current resource usages</description>
<param name="who" required="0" vallist="0" default="" type="int">who</param>
<return type="array">array</return>
<insert>getrusage([int who]);</insert>
<dialog title="Insert getrusage">getrusage(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ini_get_all">
<description>Gets all configuration options</description>
<param name="extension" required="0" vallist="0" default="" type="string">extension</param>
<return type="array">array</return>
<insert>ini_get_all([string extension]);</insert>
<dialog title="Insert ini_get_all">ini_get_all(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ini_get">
<description>Gets the value of a configuration option</description>
<param name="varname" required="1" vallist="0" default="" type="string">varname</param>
<return type="string">string</return>
<insert>ini_get(string varname);</insert>
<dialog title="Insert ini_get">ini_get(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ini_restore">
<description>Restores the value of a configuration option</description>
<param name="varname" required="1" vallist="0" default="" type="string">varname</param>
<return type="string">string</return>
<insert>ini_restore(string varname);</insert>
<dialog title="Insert ini_restore">ini_restore(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ini_set">
<description>Sets the value of a configuration option</description>
<param name="varname" required="1" vallist="0" default="" type="string">varname</param>
<param name="newvalue" required="1" vallist="0" default="" type="string">newvalue</param>
<return type="string">string</return>
<insert>ini_set(string varname, string newvalue);</insert>
<dialog title="Insert ini_set">ini_set(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="php_ini_scanned_files">
<description>Return a list of .ini files parsed from the additional ini dir</description>
<return type="string">string</return>
<insert>php_ini_scanned_files();</insert>
<dialog title="Insert php_ini_scanned_files">php_ini_scanned_files();</dialog>
<info title="Info window"></info>
</function>
<function name="php_logo_guid">
<description>Gets the logo guid</description>
<return type="string">string</return>
<insert>php_logo_guid();</insert>
<dialog title="Insert php_logo_guid">php_logo_guid();</dialog>
<info title="Info window"></info>
</function>
<function name="php_sapi_name">
<description>
     Returns the type of interface between web server and PHP
    </description>
<return type="string">string</return>
<insert>php_sapi_name();</insert>
<dialog title="Insert php_sapi_name">php_sapi_name();</dialog>
<info title="Info window"></info>
</function>
<function name="php_uname">
<description>
     Returns information about the operating system PHP was built on
    </description>
<return type="string">string</return>
<insert>php_uname();</insert>
<dialog title="Insert php_uname">php_uname();</dialog>
<info title="Info window"></info>
</function>
<function name="phpcredits">
<description>Prints out the credits for PHP</description>
<param name="flag" required="0" vallist="0" default="" type="int">flag</param>
<return type="void">void</return>
<insert>phpcredits([int flag]);</insert>
<dialog title="Insert phpcredits">phpcredits(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="phpinfo">
<description>Outputs lots of PHP information</description>
<param name="what" required="0" vallist="0" default="" type="int">what</param>
<return type="int">int</return>
<insert>phpinfo([int what]);</insert>
<dialog title="Insert phpinfo">phpinfo(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="phpversion">
<description>Gets the current PHP version</description>
<return type="string">string</return>
<insert>phpversion();</insert>
<dialog title="Insert phpversion">phpversion();</dialog>
<info title="Info window"></info>
</function>
<function name="putenv">
<description>Sets the value of an environment variable</description>
<param name="setting" required="1" vallist="0" default="" type="string">setting</param>
<return type="void">void</return>
<insert>putenv(string setting);</insert>
<dialog title="Insert putenv">putenv(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="set_magic_quotes_runtime">
<description>
     Sets the current active configuration setting of
     magic_quotes_runtime
    </description>
<param name="new_setting" required="1" vallist="0" default="" type="int">new_setting</param>
<return type="bool">bool</return>
<insert>set_magic_quotes_runtime(int new_setting);</insert>
<dialog title="Insert set_magic_quotes_runtime">set_magic_quotes_runtime(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="set_time_limit">
<description>Limits the maximum execution time</description>
<param name="seconds" required="1" vallist="0" default="" type="int">seconds</param>
<return type="void">void</return>
<insert>set_time_limit(int seconds);</insert>
<dialog title="Insert set_time_limit">set_time_limit(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="version_compare">
<description>
     Compares two "PHP-standardized" version number strings
    </description>
<param name="version1" required="1" vallist="0" default="" type="string">version1</param>
<param name="version2" required="1" vallist="0" default="" type="string">version2</param>
<param name="
        operator
       " required="0" vallist="0" default="" type="string">
        operator
       </param>
<return type="int">int</return>
<insert>version_compare(string version1, string version2 [,string 
        operator
       ]);</insert>
<dialog title="Insert version_compare">version_compare(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="zend_logo_guid">
<description>Gets the zend guid</description>
<return type="string">string</return>
<insert>zend_logo_guid();</insert>
<dialog title="Insert zend_logo_guid">zend_logo_guid();</dialog>
<info title="Info window"></info>
</function>
<function name="zend_version">
<description>Gets the version of the current Zend engine</description>
<return type="string">string</return>
<insert>zend_version();</insert>
<dialog title="Insert zend_version">zend_version();</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="ingres-ii">
<function name="ingres_autocommit">
<description>Switch autocommit on or off</description>
<param name="link" required="0" vallist="0" default="" type="resource">link</param>
<return type="bool">bool</return>
<insert>ingres_autocommit([resource link]);</insert>
<dialog title="Insert ingres_autocommit">ingres_autocommit(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ingres_close">
<description>Close an Ingres II database connection</description>
<param name="link" required="0" vallist="0" default="" type="resource">link</param>
<return type="bool">bool</return>
<insert>ingres_close([resource link]);</insert>
<dialog title="Insert ingres_close">ingres_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ingres_commit">
<description>Commit a transaction</description>
<param name="link" required="0" vallist="0" default="" type="resource">link</param>
<return type="bool">bool</return>
<insert>ingres_commit([resource link]);</insert>
<dialog title="Insert ingres_commit">ingres_commit(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ingres_connect">
<description>
     Open a connection to an Ingres II database
    </description>
<param name="database" required="0" vallist="0" default="" type="string">database</param>
<param name="username" required="0" vallist="0" default="" type="string">username</param>
<param name="password" required="0" vallist="0" default="" type="string">password</param>
<return type="resource">resource</return>
<insert>ingres_connect([string database] [,string username] [,string password]);</insert>
<dialog title="Insert ingres_connect">ingres_connect(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ingres_fetch_array">
<description>Fetch a row of result into an array</description>
<param name="result_type" required="0" vallist="0" default="" type="int">result_type</param>
<param name="link" required="0" vallist="0" default="" type="resource">link</param>
<return type="array">array</return>
<insert>ingres_fetch_array([int result_type] [,resource link]);</insert>
<dialog title="Insert ingres_fetch_array">ingres_fetch_array(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ingres_fetch_object">
<description>Fetch a row of result into an object.</description>
<param name="result_type" required="0" vallist="0" default="" type="int">result_type</param>
<param name="link" required="0" vallist="0" default="" type="resource">link</param>
<return type="object">object</return>
<insert>ingres_fetch_object([int result_type] [,resource link]);</insert>
<dialog title="Insert ingres_fetch_object">ingres_fetch_object(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ingres_fetch_row">
<description>
     Fetch a row of result into an enumerated array
    </description>
<param name="link" required="0" vallist="0" default="" type="resource">link</param>
<return type="array">array</return>
<insert>ingres_fetch_row([resource link]);</insert>
<dialog title="Insert ingres_fetch_row">ingres_fetch_row(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ingres_field_length">
<description>Get the length of a field</description>
<param name="index" required="1" vallist="0" default="" type="int">index</param>
<param name="link" required="0" vallist="0" default="" type="resource">link</param>
<return type="int">int</return>
<insert>ingres_field_length(int index [,resource link]);</insert>
<dialog title="Insert ingres_field_length">ingres_field_length(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ingres_field_name">
<description>Get the name of a field in a query result.</description>
<param name="index" required="1" vallist="0" default="" type="int">index</param>
<param name="link" required="0" vallist="0" default="" type="resource">link</param>
<return type="string">string</return>
<insert>ingres_field_name(int index [,resource link]);</insert>
<dialog title="Insert ingres_field_name">ingres_field_name(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ingres_field_nullable">
<description>Test if a field is nullable</description>
<param name="index" required="1" vallist="0" default="" type="int">index</param>
<param name="link" required="0" vallist="0" default="" type="resource">link</param>
<return type="bool">bool</return>
<insert>ingres_field_nullable(int index [,resource link]);</insert>
<dialog title="Insert ingres_field_nullable">ingres_field_nullable(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ingres_field_precision">
<description>Get the precision of a field</description>
<param name="index" required="1" vallist="0" default="" type="int">index</param>
<param name="link" required="0" vallist="0" default="" type="resource">link</param>
<return type="int">int</return>
<insert>ingres_field_precision(int index [,resource link]);</insert>
<dialog title="Insert ingres_field_precision">ingres_field_precision(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ingres_field_scale">
<description>Get the scale of a field</description>
<param name="index" required="1" vallist="0" default="" type="int">index</param>
<param name="link" required="0" vallist="0" default="" type="resource">link</param>
<return type="int">int</return>
<insert>ingres_field_scale(int index [,resource link]);</insert>
<dialog title="Insert ingres_field_scale">ingres_field_scale(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ingres_field_type">
<description>
     Get the type of a field in a query result
    </description>
<param name="index" required="1" vallist="0" default="" type="int">index</param>
<param name="link" required="0" vallist="0" default="" type="resource">link</param>
<return type="string">string</return>
<insert>ingres_field_type(int index [,resource link]);</insert>
<dialog title="Insert ingres_field_type">ingres_field_type(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ingres_num_fields">
<description>
     Get the number of fields returned by the last query
    </description>
<param name="link" required="0" vallist="0" default="" type="resource">link</param>
<return type="int">int</return>
<insert>ingres_num_fields([resource link]);</insert>
<dialog title="Insert ingres_num_fields">ingres_num_fields(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ingres_num_rows">
<description>
     Get the number of rows affected or returned by the last query
    </description>
<param name="link" required="0" vallist="0" default="" type="resource">link</param>
<return type="int">int</return>
<insert>ingres_num_rows([resource link]);</insert>
<dialog title="Insert ingres_num_rows">ingres_num_rows(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ingres_pconnect">
<description>
     Open a persistent connection to an Ingres II database
    </description>
<param name="database" required="0" vallist="0" default="" type="string">database</param>
<param name="username" required="0" vallist="0" default="" type="string">username</param>
<param name="password" required="0" vallist="0" default="" type="string">password</param>
<return type="resource">resource</return>
<insert>ingres_pconnect([string database] [,string username] [,string password]);</insert>
<dialog title="Insert ingres_pconnect">ingres_pconnect(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ingres_query">
<description>Send a SQL query to Ingres II</description>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<param name="link" required="0" vallist="0" default="" type="resource">link</param>
<return type="bool">bool</return>
<insert>ingres_query(string query [,resource link]);</insert>
<dialog title="Insert ingres_query">ingres_query(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ingres_rollback">
<description>Roll back a transaction</description>
<param name="link" required="0" vallist="0" default="" type="resource">link</param>
<return type="bool">bool</return>
<insert>ingres_rollback([resource link]);</insert>
<dialog title="Insert ingres_rollback">ingres_rollback(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="ircg">
<function name="ircg_channel_mode">
<description>
     Set channel mode flags for user
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="channel" required="1" vallist="0" default="" type="string">channel</param>
<param name="mode_spec" required="1" vallist="0" default="" type="string">mode_spec</param>
<param name="nick" required="1" vallist="0" default="" type="string">nick</param>
<return type="bool">bool</return>
<insert>ircg_channel_mode(resource connection, string channel, string mode_spec, string nick);</insert>
<dialog title="Insert ircg_channel_mode">ircg_channel_mode(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="ircg_disconnect">
<description>
     Close connection to server
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="reason" required="1" vallist="0" default="" type="string">reason</param>
<return type="bool">bool</return>
<insert>ircg_disconnect(resource connection, string reason);</insert>
<dialog title="Insert ircg_disconnect">ircg_disconnect(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ircg_fetch_error_msg">
<description>
     Returns the error from previous IRCG operation
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<return type="array">array</return>
<insert>ircg_fetch_error_msg(resource connection);</insert>
<dialog title="Insert ircg_fetch_error_msg">ircg_fetch_error_msg(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ircg_get_username">
<description>
     Get username for connection
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<return type="string">string</return>
<insert>ircg_get_username(resource connection);</insert>
<dialog title="Insert ircg_get_username">ircg_get_username(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ircg_html_encode">
<description>
     Encodes HTML preserving output
    </description>
<param name="html_string" required="1" vallist="0" default="" type="string">html_string</param>
<return type="bool">bool</return>
<insert>ircg_html_encode(string html_string);</insert>
<dialog title="Insert ircg_html_encode">ircg_html_encode(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ircg_ignore_add">
<description>
     Add a user to your ignore list on a server
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="nick" required="1" vallist="0" default="" type="string">nick</param>
<return type="bool">bool</return>
<insert>ircg_ignore_add(resource connection, string nick);</insert>
<dialog title="Insert ircg_ignore_add">ircg_ignore_add(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ircg_ignore_del">
<description>
     Remove a user from your ignore list on a server
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="nick" required="1" vallist="0" default="" type="string">nick</param>
<return type="bool">bool</return>
<insert>ircg_ignore_del(resource connection, string nick);</insert>
<dialog title="Insert ircg_ignore_del">ircg_ignore_del(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ircg_is_conn_alive">
<description>
     Check connection status
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<return type="bool">bool</return>
<insert>ircg_is_conn_alive(resource connection);</insert>
<dialog title="Insert ircg_is_conn_alive">ircg_is_conn_alive(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ircg_join">
<description>
     Join a channel on a connected server
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="channel" required="1" vallist="0" default="" type="string">channel</param>
<param name="key" required="0" vallist="0" default="" type="string">key</param>
<return type="bool">bool</return>
<insert>ircg_join(resource connection, string channel [,string key]);</insert>
<dialog title="Insert ircg_join">ircg_join(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ircg_kick">
<description>
     Kick a user out of a channel on server
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="channel" required="1" vallist="0" default="" type="string">channel</param>
<param name="nick" required="1" vallist="0" default="" type="string">nick</param>
<param name="reason" required="1" vallist="0" default="" type="string">reason</param>
<return type="bool">bool</return>
<insert>ircg_kick(resource connection, string channel, string nick, string reason);</insert>
<dialog title="Insert ircg_kick">ircg_kick(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="ircg_lookup_format_messages">
<description>
     Check for the existence of a format message set
    </description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="bool">bool</return>
<insert>ircg_lookup_format_messages(string name);</insert>
<dialog title="Insert ircg_lookup_format_messages">ircg_lookup_format_messages(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ircg_msg">
<description>
     Send message to channel or user on server
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="recipient" required="1" vallist="0" default="" type="string">recipient</param>
<param name="message" required="1" vallist="0" default="" type="string">message</param>
<param name="suppress" required="0" vallist="0" default="" type="boolean">suppress</param>
<return type="bool">bool</return>
<insert>ircg_msg(resource connection, string recipient, string message [,boolean suppress]);</insert>
<dialog title="Insert ircg_msg">ircg_msg(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="ircg_nick">
<description>
     Change nickname on server
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="nick" required="1" vallist="0" default="" type="string">nick</param>
<return type="bool">bool</return>
<insert>ircg_nick(resource connection, string nick);</insert>
<dialog title="Insert ircg_nick">ircg_nick(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ircg_nickname_escape">
<description>
     Encode special characters in nickname to be IRC-compliant 
    </description>
<param name="nick" required="1" vallist="0" default="" type="string">nick</param>
<return type="string">string</return>
<insert>ircg_nickname_escape(string nick);</insert>
<dialog title="Insert ircg_nickname_escape">ircg_nickname_escape(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ircg_nickname_unescape">
<description>
     Decodes encoded nickname 
    </description>
<param name="nick" required="1" vallist="0" default="" type="string">nick</param>
<return type="string">string</return>
<insert>ircg_nickname_unescape(string nick);</insert>
<dialog title="Insert ircg_nickname_unescape">ircg_nickname_unescape(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ircg_notice">
<description>
     Send a notice to a user on server 
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="message" required="1" vallist="0" default="" type="string">message</param>
<return type="bool">bool</return>
<insert>ircg_notice(resource connection, string message);</insert>
<dialog title="Insert ircg_notice">ircg_notice(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ircg_part">
<description>
     Leave a channel on server
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="channel" required="1" vallist="0" default="" type="string">channel</param>
<return type="bool">bool</return>
<insert>ircg_part(resource connection, string channel);</insert>
<dialog title="Insert ircg_part">ircg_part(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ircg_pconnect">
<description>
     Connect to an IRC server
    </description>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="server_ip" required="0" vallist="0" default="" type="string">server_ip</param>
<param name="server_port" required="0" vallist="0" default="" type="int">server_port</param>
<param name="msg_format" required="0" vallist="0" default="" type="string">msg_format</param>
<param name="ctcp_messages" required="0" vallist="0" default="" type="array">ctcp_messages</param>
<param name="user_settings" required="0" vallist="0" default="" type="array">user_settings</param>
<return type="resource">resource</return>
<insert>ircg_pconnect(string username [,string server_ip] [,int server_port] [,string msg_format] [,array ctcp_messages] [,array user_settings]);</insert>
<dialog title="Insert ircg_pconnect">ircg_pconnect(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="ircg_register_format_messages">
<description>
     Register a format message set
    </description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<param name="messages" required="1" vallist="0" default="" type="array">messages</param>
<return type="bool">bool</return>
<insert>ircg_register_format_messages(string name, array messages);</insert>
<dialog title="Insert ircg_register_format_messages">ircg_register_format_messages(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ircg_set_current">
<description>
     Set current connection for output
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<return type="bool">bool</return>
<insert>ircg_set_current(resource connection);</insert>
<dialog title="Insert ircg_set_current">ircg_set_current(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ircg_set_file">
<description>
     Set logfile for connection
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="path" required="1" vallist="0" default="" type="string">path</param>
<return type="bool">bool</return>
<insert>ircg_set_file(resource connection, string path);</insert>
<dialog title="Insert ircg_set_file">ircg_set_file(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ircg_set_on_die">
<description>
     Set action to be executed when connection dies 
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="host" required="1" vallist="0" default="" type="string">host</param>
<param name="port" required="1" vallist="0" default="" type="int">port</param>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<return type="bool">bool</return>
<insert>ircg_set_on_die(resource connection, string host, int port, string data);</insert>
<dialog title="Insert ircg_set_on_die">ircg_set_on_die(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="ircg_topic">
<description>
     Set topic for channel on server
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="channel" required="1" vallist="0" default="" type="string">channel</param>
<param name="new_topic" required="1" vallist="0" default="" type="string">new_topic</param>
<return type="bool">bool</return>
<insert>ircg_topic(resource connection, string channel, string new_topic);</insert>
<dialog title="Insert ircg_topic">ircg_topic(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ircg_whois">
<description>
     Query server for user information
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="nick" required="1" vallist="0" default="" type="string">nick</param>
<return type="bool">bool</return>
<insert>ircg_whois(resource connection, string nick);</insert>
<dialog title="Insert ircg_whois">ircg_whois(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="java">
<function name="java_last_exception_clear">
<description>Clear last Java exception</description>
<return type="void">void</return>
<insert>java_last_exception_clear();</insert>
<dialog title="Insert java_last_exception_clear">java_last_exception_clear();</dialog>
<info title="Info window"></info>
</function>
<function name="java_last_exception_get">
<description>Get last Java exception</description>
<return type="exception">exception</return>
<insert>java_last_exception_get();</insert>
<dialog title="Insert java_last_exception_get">java_last_exception_get();</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="ldap">
<function name="ldap_8859_to_t61">
<description>
     Translate 8859 characters to t61 characters
    </description>
<param name="value" required="1" vallist="0" default="" type="string">value</param>
<return type="string">string</return>
<insert>ldap_8859_to_t61(string value);</insert>
<dialog title="Insert ldap_8859_to_t61">ldap_8859_to_t61(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_add">
<description>Add entries to LDAP directory</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="dn" required="1" vallist="0" default="" type="string">dn</param>
<param name="entry" required="1" vallist="0" default="" type="array">entry</param>
<return type="bool">bool</return>
<insert>ldap_add(resource link_identifier, string dn, array entry);</insert>
<dialog title="Insert ldap_add">ldap_add(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_bind">
<description>Bind to LDAP directory</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="bind_rdn" required="0" vallist="0" default="" type="string">bind_rdn</param>
<param name="bind_password" required="0" vallist="0" default="" type="string">bind_password</param>
<return type="bool">bool</return>
<insert>ldap_bind(resource link_identifier [,string bind_rdn] [,string bind_password]);</insert>
<dialog title="Insert ldap_bind">ldap_bind(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_close">
<description>Close link to LDAP server</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<return type="bool">bool</return>
<insert>ldap_close(resource link_identifier);</insert>
<dialog title="Insert ldap_close">ldap_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_compare">
<description>Compare value of attribute found in entry specified with DN</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="dn" required="1" vallist="0" default="" type="string">dn</param>
<param name="attribute" required="1" vallist="0" default="" type="string">attribute</param>
<param name="value" required="1" vallist="0" default="" type="string">value</param>
<return type="bool">bool</return>
<insert>ldap_compare(resource link_identifier, string dn, string attribute, string value);</insert>
<dialog title="Insert ldap_compare">ldap_compare(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_connect">
<description>Connect to an LDAP server</description>
<param name="hostname" required="0" vallist="0" default="" type="string">hostname</param>
<param name="port" required="0" vallist="0" default="" type="int">port</param>
<return type="resource">resource</return>
<insert>ldap_connect([string hostname] [,int port]);</insert>
<dialog title="Insert ldap_connect">ldap_connect(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_count_entries">
<description>Count the number of entries in a search</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="result_identifier" required="1" vallist="0" default="" type="resource">result_identifier</param>
<return type="int">int</return>
<insert>ldap_count_entries(resource link_identifier, resource result_identifier);</insert>
<dialog title="Insert ldap_count_entries">ldap_count_entries(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_delete">
<description>Delete an entry from a directory</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="dn" required="1" vallist="0" default="" type="string">dn</param>
<return type="bool">bool</return>
<insert>ldap_delete(resource link_identifier, string dn);</insert>
<dialog title="Insert ldap_delete">ldap_delete(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_dn2ufn">
<description>Convert DN to User Friendly Naming format</description>
<param name="dn" required="1" vallist="0" default="" type="string">dn</param>
<return type="string">string</return>
<insert>ldap_dn2ufn(string dn);</insert>
<dialog title="Insert ldap_dn2ufn">ldap_dn2ufn(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_err2str">
<description>
     Convert LDAP error number into string error message
    </description>
<param name="errno" required="1" vallist="0" default="" type="int">errno</param>
<return type="string">string</return>
<insert>ldap_err2str(int errno);</insert>
<dialog title="Insert ldap_err2str">ldap_err2str(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_errno">
<description>
     Return the LDAP error number of the last LDAP command
    </description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<return type="int">int</return>
<insert>ldap_errno(resource link_identifier);</insert>
<dialog title="Insert ldap_errno">ldap_errno(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_error">
<description>
     Return the LDAP error message of the last LDAP command
    </description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<return type="string">string</return>
<insert>ldap_error(resource link_identifier);</insert>
<dialog title="Insert ldap_error">ldap_error(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_explode_dn">
<description>Splits DN into its component parts</description>
<param name="dn" required="1" vallist="0" default="" type="string">dn</param>
<param name="with_attrib" required="1" vallist="0" default="" type="int">with_attrib</param>
<return type="array">array</return>
<insert>ldap_explode_dn(string dn, int with_attrib);</insert>
<dialog title="Insert ldap_explode_dn">ldap_explode_dn(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_first_attribute">
<description>Return first attribute</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="result_entry_identifier" required="1" vallist="0" default="" type="resource">result_entry_identifier</param>
<param name="ber_identifier" required="1" vallist="0" default="" type="int">ber_identifier</param>
<return type="string">string</return>
<insert>ldap_first_attribute(resource link_identifier, resource result_entry_identifier, int ber_identifier);</insert>
<dialog title="Insert ldap_first_attribute">ldap_first_attribute(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_first_entry">
<description>Return first result id</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="result_identifier" required="1" vallist="0" default="" type="resource">result_identifier</param>
<return type="resource">resource</return>
<insert>ldap_first_entry(resource link_identifier, resource result_identifier);</insert>
<dialog title="Insert ldap_first_entry">ldap_first_entry(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_first_reference">
<description>
     Return first reference
    </description>
<param name="link" required="1" vallist="0" default="" type="resource">link</param>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<return type="resource">resource</return>
<insert>ldap_first_reference(resource link, resource result);</insert>
<dialog title="Insert ldap_first_reference">ldap_first_reference(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_free_result">
<description>Free result memory</description>
<param name="result_identifier" required="1" vallist="0" default="" type="resource">result_identifier</param>
<return type="bool">bool</return>
<insert>ldap_free_result(resource result_identifier);</insert>
<dialog title="Insert ldap_free_result">ldap_free_result(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_get_attributes">
<description>Get attributes from a search result entry</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="result_entry_identifier" required="1" vallist="0" default="" type="resource">result_entry_identifier</param>
<return type="array">array</return>
<insert>ldap_get_attributes(resource link_identifier, resource result_entry_identifier);</insert>
<dialog title="Insert ldap_get_attributes">ldap_get_attributes(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_get_dn">
<description>Get the DN of a result entry</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="result_entry_identifier" required="1" vallist="0" default="" type="resource">result_entry_identifier</param>
<return type="string">string</return>
<insert>ldap_get_dn(resource link_identifier, resource result_entry_identifier);</insert>
<dialog title="Insert ldap_get_dn">ldap_get_dn(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_get_entries">
<description>Get all result entries</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="result_identifier" required="1" vallist="0" default="" type="resource">result_identifier</param>
<return type="array">array</return>
<insert>ldap_get_entries(resource link_identifier, resource result_identifier);</insert>
<dialog title="Insert ldap_get_entries">ldap_get_entries(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_get_option">
<description>Get the current value for given option</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="option" required="1" vallist="0" default="" type="int">option</param>
<param name="retval" required="1" vallist="0" default="" type="mixed">retval</param>
<return type="bool">bool</return>
<insert>ldap_get_option(resource link_identifier, int option, mixed retval);</insert>
<dialog title="Insert ldap_get_option">ldap_get_option(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_get_values_len">
<description>Get all binary values from a result entry</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="result_entry_identifier" required="1" vallist="0" default="" type="resource">result_entry_identifier</param>
<param name="attribute" required="1" vallist="0" default="" type="string">attribute</param>
<return type="array">array</return>
<insert>ldap_get_values_len(resource link_identifier, resource result_entry_identifier, string attribute);</insert>
<dialog title="Insert ldap_get_values_len">ldap_get_values_len(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_get_values">
<description>Get all values from a result entry</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="result_entry_identifier" required="1" vallist="0" default="" type="resource">result_entry_identifier</param>
<param name="attribute" required="1" vallist="0" default="" type="string">attribute</param>
<return type="array">array</return>
<insert>ldap_get_values(resource link_identifier, resource result_entry_identifier, string attribute);</insert>
<dialog title="Insert ldap_get_values">ldap_get_values(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_list">
<description>Single-level search</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="base_dn" required="1" vallist="0" default="" type="string">base_dn</param>
<param name="filter" required="1" vallist="0" default="" type="string">filter</param>
<param name="attributes" required="0" vallist="0" default="" type="array">attributes</param>
<param name="attrsonly" required="0" vallist="0" default="" type="int">attrsonly</param>
<param name="sizelimit" required="0" vallist="0" default="" type="int">sizelimit</param>
<param name="timelimit" required="0" vallist="0" default="" type="int">timelimit</param>
<param name="deref" required="0" vallist="0" default="" type="int">deref</param>
<return type="resource">resource</return>
<insert>ldap_list(resource link_identifier, string base_dn, string filter [,array attributes] [,int attrsonly] [,int sizelimit] [,int timelimit] [,int deref]);</insert>
<dialog title="Insert ldap_list">ldap_list(%0, %1, %2, %3, %4, %5, %6, %7);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_mod_add">
<description>Add attribute values to current attributes</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="dn" required="1" vallist="0" default="" type="string">dn</param>
<param name="entry" required="1" vallist="0" default="" type="array">entry</param>
<return type="bool">bool</return>
<insert>ldap_mod_add(resource link_identifier, string dn, array entry);</insert>
<dialog title="Insert ldap_mod_add">ldap_mod_add(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_mod_del">
<description>Delete attribute values from current attributes</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="dn" required="1" vallist="0" default="" type="string">dn</param>
<param name="entry" required="1" vallist="0" default="" type="array">entry</param>
<return type="bool">bool</return>
<insert>ldap_mod_del(resource link_identifier, string dn, array entry);</insert>
<dialog title="Insert ldap_mod_del">ldap_mod_del(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_mod_replace">
<description>Replace attribute values with new ones</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resoure">link_identifier</param>
<param name="dn" required="1" vallist="0" default="" type="string">dn</param>
<param name="entry" required="1" vallist="0" default="" type="array">entry</param>
<return type="bool">bool</return>
<insert>ldap_mod_replace(resoure link_identifier, string dn, array entry);</insert>
<dialog title="Insert ldap_mod_replace">ldap_mod_replace(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_modify">
<description>Modify an LDAP entry</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="dn" required="1" vallist="0" default="" type="string">dn</param>
<param name="entry" required="1" vallist="0" default="" type="array">entry</param>
<return type="bool">bool</return>
<insert>ldap_modify(resource link_identifier, string dn, array entry);</insert>
<dialog title="Insert ldap_modify">ldap_modify(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_next_attribute">
<description>Get the next attribute in result</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="result_entry_identifier" required="1" vallist="0" default="" type="resource">result_entry_identifier</param>
<param name="ber_identifier" required="1" vallist="0" default="" type="resource">ber_identifier</param>
<return type="string">string</return>
<insert>ldap_next_attribute(resource link_identifier, resource result_entry_identifier, resource ber_identifier);</insert>
<dialog title="Insert ldap_next_attribute">ldap_next_attribute(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_next_entry">
<description>Get next result entry</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="result_entry_identifier" required="1" vallist="0" default="" type="resource">result_entry_identifier</param>
<return type="resource">resource</return>
<insert>ldap_next_entry(resource link_identifier, resource result_entry_identifier);</insert>
<dialog title="Insert ldap_next_entry">ldap_next_entry(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_next_reference">
<description>
     Get next reference
    </description>
<param name="link" required="1" vallist="0" default="" type="resource">link</param>
<param name="entry" required="1" vallist="0" default="" type="resource">entry</param>
<return type="resource">resource</return>
<insert>ldap_next_reference(resource link, resource entry);</insert>
<dialog title="Insert ldap_next_reference">ldap_next_reference(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_parse_reference">
<description>
     Extract information from reference entry
    </description>
<param name="link" required="1" vallist="0" default="" type="resource">link</param>
<param name="entry" required="1" vallist="0" default="" type="resource">entry</param>
<param name="referrals" required="1" vallist="0" default="" type="array">referrals</param>
<return type="bool">bool</return>
<insert>ldap_parse_reference(resource link, resource entry, array referrals);</insert>
<dialog title="Insert ldap_parse_reference">ldap_parse_reference(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_parse_result">
<description>
     Extract information from result
    </description>
<param name="link" required="1" vallist="0" default="" type="resource">link</param>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="errcode" required="1" vallist="0" default="" type="int">errcode</param>
<param name="matcheddn" required="1" vallist="0" default="" type="string">matcheddn</param>
<param name="errmsg" required="1" vallist="0" default="" type="string">errmsg</param>
<param name="referrals" required="1" vallist="0" default="" type="array">referrals</param>
<return type="bool">bool</return>
<insert>ldap_parse_result(resource link, resource result, int errcode, string matcheddn, string errmsg, array referrals);</insert>
<dialog title="Insert ldap_parse_result">ldap_parse_result(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_read">
<description>Read an entry</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="base_dn" required="1" vallist="0" default="" type="string">base_dn</param>
<param name="filter" required="1" vallist="0" default="" type="string">filter</param>
<param name="attributes" required="0" vallist="0" default="" type="array">attributes</param>
<param name="attrsonly" required="0" vallist="0" default="" type="int">attrsonly</param>
<param name="sizelimit" required="0" vallist="0" default="" type="int">sizelimit</param>
<param name="timelimit" required="0" vallist="0" default="" type="int">timelimit</param>
<param name="deref" required="0" vallist="0" default="" type="int">deref</param>
<return type="resource">resource</return>
<insert>ldap_read(resource link_identifier, string base_dn, string filter [,array attributes] [,int attrsonly] [,int sizelimit] [,int timelimit] [,int deref]);</insert>
<dialog title="Insert ldap_read">ldap_read(%0, %1, %2, %3, %4, %5, %6, %7);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_rename">
<description>Modify the name of an entry</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="dn" required="1" vallist="0" default="" type="string">dn</param>
<param name="newrdn" required="1" vallist="0" default="" type="string">newrdn</param>
<param name="newparent" required="1" vallist="0" default="" type="string">newparent</param>
<param name="deleteoldrdn" required="1" vallist="0" default="" type="bool">deleteoldrdn</param>
<return type="bool">bool</return>
<insert>ldap_rename(resource link_identifier, string dn, string newrdn, string newparent, bool deleteoldrdn);</insert>
<dialog title="Insert ldap_rename">ldap_rename(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_search">
<description>Search LDAP tree</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="base_dn" required="1" vallist="0" default="" type="string">base_dn</param>
<param name="filter" required="1" vallist="0" default="" type="string">filter</param>
<param name="attributes" required="0" vallist="0" default="" type="array">attributes</param>
<param name="attrsonly" required="0" vallist="0" default="" type="int">attrsonly</param>
<param name="sizelimit" required="0" vallist="0" default="" type="int">sizelimit</param>
<param name="timelimit" required="0" vallist="0" default="" type="int">timelimit</param>
<param name="deref" required="0" vallist="0" default="" type="int">deref</param>
<return type="resource">resource</return>
<insert>ldap_search(resource link_identifier, string base_dn, string filter [,array attributes] [,int attrsonly] [,int sizelimit] [,int timelimit] [,int deref]);</insert>
<dialog title="Insert ldap_search">ldap_search(%0, %1, %2, %3, %4, %5, %6, %7);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_set_option">
<description>Set the value of the given option</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<param name="option" required="1" vallist="0" default="" type="int">option</param>
<param name="newval" required="1" vallist="0" default="" type="mixed">newval</param>
<return type="bool">bool</return>
<insert>ldap_set_option(resource link_identifier, int option, mixed newval);</insert>
<dialog title="Insert ldap_set_option">ldap_set_option(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_set_rebind_proc">
<description>
     Set a callback function to do re-binds on referral chasing.
    </description>
<param name="link" required="1" vallist="0" default="" type="resource">link</param>
<param name="callback" required="1" vallist="0" default="" type="string">callback</param>
<return type="bool">bool</return>
<insert>ldap_set_rebind_proc(resource link, string callback);</insert>
<dialog title="Insert ldap_set_rebind_proc">ldap_set_rebind_proc(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_sort">
<description>
     Sort LDAP result entries
    </description>
<param name="link" required="1" vallist="0" default="" type="resource">link</param>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="sortfilter" required="1" vallist="0" default="" type="string">sortfilter</param>
<return type="bool">bool</return>
<insert>ldap_sort(resource link, resource result, string sortfilter);</insert>
<dialog title="Insert ldap_sort">ldap_sort(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_start_tls">
<description>
     Start TLS
    </description>
<param name="link" required="1" vallist="0" default="" type="resource">link</param>
<return type="bool">bool</return>
<insert>ldap_start_tls(resource link);</insert>
<dialog title="Insert ldap_start_tls">ldap_start_tls(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_t61_to_8859">
<description>
     Translate t61 characters to 8859 characters
    </description>
<param name="value" required="1" vallist="0" default="" type="string">value</param>
<return type="string">string</return>
<insert>ldap_t61_to_8859(string value);</insert>
<dialog title="Insert ldap_t61_to_8859">ldap_t61_to_8859(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ldap_unbind">
<description>Unbind from LDAP directory</description>
<param name="link_identifier" required="1" vallist="0" default="" type="resource">link_identifier</param>
<return type="bool">bool</return>
<insert>ldap_unbind(resource link_identifier);</insert>
<dialog title="Insert ldap_unbind">ldap_unbind(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="mail">
<function name="ezmlm_hash">
<description>Calculate the hash value needed by EZMLM</description>
<param name="addr" required="1" vallist="0" default="" type="string">addr</param>
<return type="int">int</return>
<insert>ezmlm_hash(string addr);</insert>
<dialog title="Insert ezmlm_hash">ezmlm_hash(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mail">
<description>send mail</description>
<param name="to" required="1" vallist="0" default="" type="string">to</param>
<param name="subject" required="1" vallist="0" default="" type="string">subject</param>
<param name="message" required="1" vallist="0" default="" type="string">message</param>
<param name="additional_headers" required="0" vallist="0" default="" type="string">additional_headers</param>
<param name="additional_parameters" required="0" vallist="0" default="" type="string">additional_parameters</param>
<return type="bool">bool</return>
<insert>mail(string to, string subject, string message [,string additional_headers] [,string additional_parameters]);</insert>
<dialog title="Insert mail">mail(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="mailparse">
<function name="mailparse_determine_best_xfer_encoding">
<description>
     Figures out the best way of encoding the content read from the
     file pointer fp, which must be seek-able 
    </description>
<param name="fp" required="1" vallist="0" default="" type="resource">fp</param>
<return type="int">int</return>
<insert>mailparse_determine_best_xfer_encoding(resource fp);</insert>
<dialog title="Insert mailparse_determine_best_xfer_encoding">mailparse_determine_best_xfer_encoding(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mailparse_msg_create">
<description>Returns a handle that can be used to parse a message </description>
<return type="int">int</return>
<insert>mailparse_msg_create();</insert>
<dialog title="Insert mailparse_msg_create">mailparse_msg_create();</dialog>
<info title="Info window"></info>
</function>
<function name="mailparse_msg_extract_part_file">
<description>Extracts/decodes a message section, decoding the transfer encoding </description>
<param name="rfc2045" required="1" vallist="0" default="" type="resource">rfc2045</param>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="callbackfunc" required="0" vallist="0" default="" type="string">callbackfunc</param>
<return type="string">string</return>
<insert>mailparse_msg_extract_part_file(resource rfc2045, string filename [,string callbackfunc]);</insert>
<dialog title="Insert mailparse_msg_extract_part_file">mailparse_msg_extract_part_file(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mailparse_msg_extract_part">
<description>
     Extracts/decodes a message section.  If callbackfunc is not
     specified, the contents will be sent to "stdout"
    </description>
<param name="rfc2045" required="1" vallist="0" default="" type="resource">rfc2045</param>
<param name="msgbody" required="1" vallist="0" default="" type="string">msgbody</param>
<param name="callbackfunc" required="0" vallist="0" default="" type="string">callbackfunc</param>
<return type="void">void</return>
<insert>mailparse_msg_extract_part(resource rfc2045, string msgbody [,string callbackfunc]);</insert>
<dialog title="Insert mailparse_msg_extract_part">mailparse_msg_extract_part(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mailparse_msg_free">
<description>Frees a handle allocated by mailparse_msg_crea</description>
<param name="rfc2045buf" required="1" vallist="0" default="" type="resource">rfc2045buf</param>
<return type="void">void</return>
<insert>mailparse_msg_free(resource rfc2045buf);</insert>
<dialog title="Insert mailparse_msg_free">mailparse_msg_free(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mailparse_msg_get_part_data">
<description>Returns an associative array of info about the message </description>
<param name="rfc2045" required="1" vallist="0" default="" type="resource">rfc2045</param>
<return type="array">array</return>
<insert>mailparse_msg_get_part_data(resource rfc2045);</insert>
<dialog title="Insert mailparse_msg_get_part_data">mailparse_msg_get_part_data(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mailparse_msg_get_part">
<description>Returns a handle on a given section in a mimemessage </description>
<param name="rfc2045" required="1" vallist="0" default="" type="resource">rfc2045</param>
<param name="mimesection" required="1" vallist="0" default="" type="string">mimesection</param>
<return type="int">int</return>
<insert>mailparse_msg_get_part(resource rfc2045, string mimesection);</insert>
<dialog title="Insert mailparse_msg_get_part">mailparse_msg_get_part(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mailparse_msg_get_structure">
<description>Returns an array of mime section names in the supplied message </description>
<param name="rfc2045" required="1" vallist="0" default="" type="resource">rfc2045</param>
<return type="array">array</return>
<insert>mailparse_msg_get_structure(resource rfc2045);</insert>
<dialog title="Insert mailparse_msg_get_structure">mailparse_msg_get_structure(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mailparse_msg_parse_file">
<description>Parse file and return a resource representing the structure </description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="resource">resource</return>
<insert>mailparse_msg_parse_file(string filename);</insert>
<dialog title="Insert mailparse_msg_parse_file">mailparse_msg_parse_file(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mailparse_msg_parse">
<description>Incrementally parse data into buffer </description>
<param name="rfc2045buf" required="1" vallist="0" default="" type="resource">rfc2045buf</param>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<return type="void">void</return>
<insert>mailparse_msg_parse(resource rfc2045buf, string data);</insert>
<dialog title="Insert mailparse_msg_parse">mailparse_msg_parse(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mailparse_rfc822_parse_addresses">
<description>
     Parse addresses and returns a hash containing that data 
    </description>
<param name="addresses" required="1" vallist="0" default="" type="string">addresses</param>
<return type="array">array</return>
<insert>mailparse_rfc822_parse_addresses(string addresses);</insert>
<dialog title="Insert mailparse_rfc822_parse_addresses">mailparse_rfc822_parse_addresses(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mailparse_stream_encode">
<description>
     Streams data from source file pointer, apply encoding and write
     to destfp 
    </description>
<param name="sourcefp" required="1" vallist="0" default="" type="resource">sourcefp</param>
<param name="destfp" required="1" vallist="0" default="" type="resource">destfp</param>
<param name="encoding" required="1" vallist="0" default="" type="string">encoding</param>
<return type="bool">bool</return>
<insert>mailparse_stream_encode(resource sourcefp, resource destfp, string encoding);</insert>
<dialog title="Insert mailparse_stream_encode">mailparse_stream_encode(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mailparse_uudecode_all">
<description>
     Scans the data from fp and extract each embedded uuencoded
     file. Returns an array listing filename information 
    </description>
<param name="fp" required="1" vallist="0" default="" type="resource">fp</param>
<return type="array">array</return>
<insert>mailparse_uudecode_all(resource fp);</insert>
<dialog title="Insert mailparse_uudecode_all">mailparse_uudecode_all(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="math">
<function name="abs">
<description>Absolute value</description>
<param name="number" required="1" vallist="0" default="" type="mixed">number</param>
<return type="mixed">mixed</return>
<insert>abs(mixed number);</insert>
<dialog title="Insert abs">abs(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="acos">
<description>Arc cosine</description>
<param name="arg" required="1" vallist="0" default="" type="float">arg</param>
<return type="float">float</return>
<insert>acos(float arg);</insert>
<dialog title="Insert acos">acos(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="acosh">
<description>Inverse hyperbolic cosine</description>
<param name="arg" required="1" vallist="0" default="" type="float">arg</param>
<return type="float">float</return>
<insert>acosh(float arg);</insert>
<dialog title="Insert acosh">acosh(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="asin">
<description>Arc sine</description>
<param name="arg" required="1" vallist="0" default="" type="float">arg</param>
<return type="float">float</return>
<insert>asin(float arg);</insert>
<dialog title="Insert asin">asin(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="asinh">
<description>Inverse hyperbolic sine</description>
<param name="arg" required="1" vallist="0" default="" type="float">arg</param>
<return type="float">float</return>
<insert>asinh(float arg);</insert>
<dialog title="Insert asinh">asinh(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="atan">
<description>Arc tangent</description>
<param name="arg" required="1" vallist="0" default="" type="float">arg</param>
<return type="float">float</return>
<insert>atan(float arg);</insert>
<dialog title="Insert atan">atan(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="atan2">
<description>arc tangent of two variables</description>
<param name="y" required="1" vallist="0" default="" type="float">y</param>
<param name="x" required="1" vallist="0" default="" type="float">x</param>
<return type="float">float</return>
<insert>atan2(float y, float x);</insert>
<dialog title="Insert atan2">atan2(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="atanh">
<description>Inverse hyperbolic tangent</description>
<param name="arg" required="1" vallist="0" default="" type="float">arg</param>
<return type="float">float</return>
<insert>atanh(float arg);</insert>
<dialog title="Insert atanh">atanh(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="base_convert">
<description>Convert a number between arbitrary bases</description>
<param name="number" required="1" vallist="0" default="" type="string">number</param>
<param name="frombase" required="1" vallist="0" default="" type="int">frombase</param>
<param name="tobase" required="1" vallist="0" default="" type="int">tobase</param>
<return type="string">string</return>
<insert>base_convert(string number, int frombase, int tobase);</insert>
<dialog title="Insert base_convert">base_convert(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="bindec">
<description>Binary to decimal</description>
<param name="binary_string" required="1" vallist="0" default="" type="string">binary_string</param>
<return type="int">int</return>
<insert>bindec(string binary_string);</insert>
<dialog title="Insert bindec">bindec(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ceil">
<description>Round fractions up</description>
<param name="value" required="1" vallist="0" default="" type="float">value</param>
<return type="float">float</return>
<insert>ceil(float value);</insert>
<dialog title="Insert ceil">ceil(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="cos">
<description>Cosine</description>
<param name="arg" required="1" vallist="0" default="" type="float">arg</param>
<return type="float">float</return>
<insert>cos(float arg);</insert>
<dialog title="Insert cos">cos(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="cosh">
<description>Hyperbolic cosine</description>
<param name="arg" required="1" vallist="0" default="" type="float">arg</param>
<return type="float">float</return>
<insert>cosh(float arg);</insert>
<dialog title="Insert cosh">cosh(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="decbin">
<description>Decimal to binary</description>
<param name="number" required="1" vallist="0" default="" type="int">number</param>
<return type="string">string</return>
<insert>decbin(int number);</insert>
<dialog title="Insert decbin">decbin(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="dechex">
<description>Decimal to hexadecimal</description>
<param name="number" required="1" vallist="0" default="" type="int">number</param>
<return type="string">string</return>
<insert>dechex(int number);</insert>
<dialog title="Insert dechex">dechex(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="decoct">
<description>Decimal to octal</description>
<param name="number" required="1" vallist="0" default="" type="int">number</param>
<return type="string">string</return>
<insert>decoct(int number);</insert>
<dialog title="Insert decoct">decoct(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="deg2rad">
<description>
     Converts the number in degrees to the radian equivalent
    </description>
<param name="number" required="1" vallist="0" default="" type="float">number</param>
<return type="float">float</return>
<insert>deg2rad(float number);</insert>
<dialog title="Insert deg2rad">deg2rad(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="exp">
<description>Calculates the exponent of </description>
<param name="arg" required="1" vallist="0" default="" type="float">arg</param>
<return type="float">float</return>
<insert>exp(float arg);</insert>
<dialog title="Insert exp">exp(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="expm1">
<description>
     Returns exp(number) - 1, computed in a way that is accurate even
     when the value of number is close to zero
    </description>
<param name="number" required="1" vallist="0" default="" type="float">number</param>
<return type="float">float</return>
<insert>expm1(float number);</insert>
<dialog title="Insert expm1">expm1(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="floor">
<description>Round fractions down</description>
<param name="value" required="1" vallist="0" default="" type="float">value</param>
<return type="float">float</return>
<insert>floor(float value);</insert>
<dialog title="Insert floor">floor(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="fmod">
<description>Returns the floating point remainder (modulo) of the division
    of the arguments</description>
<param name="x" required="1" vallist="0" default="" type="float">x</param>
<param name="y" required="1" vallist="0" default="" type="float">y</param>
<return type="float">float</return>
<insert>fmod(float x, float y);</insert>
<dialog title="Insert fmod">fmod(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="getrandmax">
<description>Show largest possible random value</description>
<return type="int">int</return>
<insert>getrandmax();</insert>
<dialog title="Insert getrandmax">getrandmax();</dialog>
<info title="Info window"></info>
</function>
<function name="hexdec">
<description>Hexadecimal to decimal</description>
<param name="hex_string" required="1" vallist="0" default="" type="string">hex_string</param>
<return type="int">int</return>
<insert>hexdec(string hex_string);</insert>
<dialog title="Insert hexdec">hexdec(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="hypot">
<description>
     Returns sqrt( num1*num1 + num2*num2)
    </description>
<param name="num1" required="1" vallist="0" default="" type="float">num1</param>
<param name="num2" required="1" vallist="0" default="" type="float">num2</param>
<return type="float">float</return>
<insert>hypot(float num1, float num2);</insert>
<dialog title="Insert hypot">hypot(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="is_finite">
<description>
    </description>
<param name="val" required="1" vallist="0" default="" type="float">val</param>
<return type="bool">bool</return>
<insert>is_finite(float val);</insert>
<dialog title="Insert is_finite">is_finite(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="is_infinite">
<description>
    </description>
<param name="val" required="1" vallist="0" default="" type="float">val</param>
<return type="bool">bool</return>
<insert>is_infinite(float val);</insert>
<dialog title="Insert is_infinite">is_infinite(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="is_nan">
<description>
    </description>
<param name="val" required="1" vallist="0" default="" type="float">val</param>
<return type="bool">bool</return>
<insert>is_nan(float val);</insert>
<dialog title="Insert is_nan">is_nan(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="lcg_value">
<description>Combined linear congruential generator</description>
<return type="float">float</return>
<insert>lcg_value();</insert>
<dialog title="Insert lcg_value">lcg_value();</dialog>
<info title="Info window"></info>
</function>
<function name="log">
<description>Natural logarithm</description>
<param name="arg" required="1" vallist="0" default="" type="float">arg</param>
<param name="base" required="0" vallist="0" default="" type="float">base</param>
<return type="float">float</return>
<insert>log(float arg [,float base]);</insert>
<dialog title="Insert log">log(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="log10">
<description>Base-10 logarithm</description>
<param name="arg" required="1" vallist="0" default="" type="float">arg</param>
<return type="float">float</return>
<insert>log10(float arg);</insert>
<dialog title="Insert log10">log10(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="log1p">
<description>
     Returns log(1 + number), computed in a way that accurate even when the val
ue of number is close to zero
    </description>
<param name="number" required="1" vallist="0" default="" type="float">number</param>
<return type="float">float</return>
<insert>log1p(float number);</insert>
<dialog title="Insert log1p">log1p(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="max">
<description>Find highest value</description>
<param name="arg1" required="1" vallist="0" default="" type="mixed">arg1</param>
<param name="arg2" required="1" vallist="0" default="" type="mixed">arg2</param>
<param name="argn" required="1" vallist="0" default="" type="mixed">argn</param>
<return type="number">number</return>
<insert>max(mixed arg1, mixed arg2, mixed argn);</insert>
<dialog title="Insert max">max(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="min">
<description>Find lowest value</description>
<param name="arg1" required="1" vallist="0" default="" type="number">arg1</param>
<param name="arg2" required="1" vallist="0" default="" type="number">arg2</param>
<return type="number">number</return>
<insert>min(number arg1, number arg2);</insert>
<dialog title="Insert min">min(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mt_getrandmax">
<description>Show largest possible random value</description>
<return type="int">int</return>
<insert>mt_getrandmax();</insert>
<dialog title="Insert mt_getrandmax">mt_getrandmax();</dialog>
<info title="Info window"></info>
</function>
<function name="mt_rand">
<description>Generate a better random value</description>
<param name="min" required="0" vallist="0" default="" type="int">min</param>
<param name="max" required="1" vallist="0" default="" type="int">max</param>
<return type="int">int</return>
<insert>mt_rand([int min], int max);</insert>
<dialog title="Insert mt_rand">mt_rand(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mt_srand">
<description>Seed the better random number generator</description>
<param name="seed" required="1" vallist="0" default="" type="int">seed</param>
<return type="void">void</return>
<insert>mt_srand(int seed);</insert>
<dialog title="Insert mt_srand">mt_srand(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="octdec">
<description>Octal to decimal</description>
<param name="octal_string" required="1" vallist="0" default="" type="string">octal_string</param>
<return type="int">int</return>
<insert>octdec(string octal_string);</insert>
<dialog title="Insert octdec">octdec(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pi">
<description>Get value of pi</description>
<return type="float">float</return>
<insert>pi();</insert>
<dialog title="Insert pi">pi();</dialog>
<info title="Info window"></info>
</function>
<function name="pow">
<description>Exponential expression</description>
<param name="base" required="1" vallist="0" default="" type="number">base</param>
<param name="exp" required="1" vallist="0" default="" type="number">exp</param>
<return type="number">number</return>
<insert>pow(number base, number exp);</insert>
<dialog title="Insert pow">pow(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="rad2deg">
<description>
     Converts the radian number to the equivalent number in degrees
    </description>
<param name="number" required="1" vallist="0" default="" type="float">number</param>
<return type="float">float</return>
<insert>rad2deg(float number);</insert>
<dialog title="Insert rad2deg">rad2deg(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="rand">
<description>Generate a random value</description>
<param name="min" required="0" vallist="0" default="" type="int">min</param>
<param name="max" required="1" vallist="0" default="" type="int">max</param>
<return type="int">int</return>
<insert>rand([int min], int max);</insert>
<dialog title="Insert rand">rand(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="round">
<description>Rounds a float</description>
<param name="val" required="1" vallist="0" default="" type="float">val</param>
<param name="precision" required="0" vallist="0" default="" type="int">precision</param>
<return type="float">float</return>
<insert>round(float val [,int precision]);</insert>
<dialog title="Insert round">round(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="sin">
<description>Sine</description>
<param name="arg" required="1" vallist="0" default="" type="float">arg</param>
<return type="float">float</return>
<insert>sin(float arg);</insert>
<dialog title="Insert sin">sin(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sinh">
<description>Hyperbolic sine</description>
<param name="arg" required="1" vallist="0" default="" type="float">arg</param>
<return type="float">float</return>
<insert>sinh(float arg);</insert>
<dialog title="Insert sinh">sinh(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sqrt">
<description>Square root</description>
<param name="arg" required="1" vallist="0" default="" type="float">arg</param>
<return type="float">float</return>
<insert>sqrt(float arg);</insert>
<dialog title="Insert sqrt">sqrt(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="srand">
<description>Seed the random number generator</description>
<param name="seed" required="1" vallist="0" default="" type="int">seed</param>
<return type="void">void</return>
<insert>srand(int seed);</insert>
<dialog title="Insert srand">srand(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="tan">
<description>Tangent</description>
<param name="arg" required="1" vallist="0" default="" type="float">arg</param>
<return type="float">float</return>
<insert>tan(float arg);</insert>
<dialog title="Insert tan">tan(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="tanh">
<description>Hyperbolic tangent</description>
<param name="arg" required="1" vallist="0" default="" type="float">arg</param>
<return type="float">float</return>
<insert>tanh(float arg);</insert>
<dialog title="Insert tanh">tanh(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="mbstring">
<function name="mb_convert_case">
<description>Perform case folding on a string</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<param name="encoding" required="0" vallist="0" default="" type="string">encoding</param>
<return type="string">string</return>
<insert>mb_convert_case(string str, int mode [,string encoding]);</insert>
<dialog title="Insert mb_convert_case">mb_convert_case(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_convert_encoding">
<description>Convert character encoding</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="to-encoding" required="1" vallist="0" default="" type="string">to-encoding</param>
<param name="from-encoding" required="0" vallist="0" default="" type="mixed">from-encoding</param>
<return type="string">string</return>
<insert>mb_convert_encoding(string str, string to-encoding [,mixed from-encoding]);</insert>
<dialog title="Insert mb_convert_encoding">mb_convert_encoding(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_convert_kana">
<description>
     Convert "kana" one from another ("zen-kaku" ,"han-kaku" and more)
    </description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="option" required="1" vallist="0" default="" type="string">option</param>
<param name="encoding" required="0" vallist="0" default="" type="mixed">encoding</param>
<return type="string">string</return>
<insert>mb_convert_kana(string str, string option [,mixed encoding]);</insert>
<dialog title="Insert mb_convert_kana">mb_convert_kana(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_convert_variables">
<description>Convert character code in variable(s)</description>
<param name="to-encoding" required="1" vallist="0" default="" type="string">to-encoding</param>
<param name="from-encoding" required="1" vallist="0" default="" type="mixed">from-encoding</param>
<param name="vars" required="1" vallist="0" default="" type="mixed">vars</param>
<return type="string">string</return>
<insert>mb_convert_variables(string to-encoding, mixed from-encoding, mixed vars);</insert>
<dialog title="Insert mb_convert_variables">mb_convert_variables(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_decode_mimeheader">
<description>Decode string in MIME header field</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<return type="string">string</return>
<insert>mb_decode_mimeheader(string str);</insert>
<dialog title="Insert mb_decode_mimeheader">mb_decode_mimeheader(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_decode_numericentity">
<description>
     Decode HTML numeric string reference to character
    </description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="convmap" required="1" vallist="0" default="" type="array">convmap</param>
<param name="encoding" required="0" vallist="0" default="" type="string">encoding</param>
<return type="string">string</return>
<insert>mb_decode_numericentity(string str, array convmap [,string encoding]);</insert>
<dialog title="Insert mb_decode_numericentity">mb_decode_numericentity(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_detect_encoding">
<description>Detect character encoding</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="encoding-list" required="0" vallist="0" default="" type="mixed">encoding-list</param>
<return type="string">string</return>
<insert>mb_detect_encoding(string str [,mixed encoding-list]);</insert>
<dialog title="Insert mb_detect_encoding">mb_detect_encoding(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_detect_order">
<description>
     Set/Get character encoding detection order
    </description>
<param name="encoding-list" required="0" vallist="0" default="" type="mixed">encoding-list</param>
<return type="array">array</return>
<insert>mb_detect_order([mixed encoding-list]);</insert>
<dialog title="Insert mb_detect_order">mb_detect_order(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_encode_mimeheader">
<description>Encode string for MIME header</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="charset" required="0" vallist="0" default="" type="string">charset</param>
<param name="transfer-encoding" required="0" vallist="0" default="" type="string">transfer-encoding</param>
<param name="linefeed" required="0" vallist="0" default="" type="string">linefeed</param>
<return type="string">string</return>
<insert>mb_encode_mimeheader(string str [,string charset] [,string transfer-encoding] [,string linefeed]);</insert>
<dialog title="Insert mb_encode_mimeheader">mb_encode_mimeheader(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_encode_numericentity">
<description>
     Encode character to HTML numeric string reference
    </description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="convmap" required="1" vallist="0" default="" type="array">convmap</param>
<param name="encoding" required="0" vallist="0" default="" type="string">encoding</param>
<return type="string">string</return>
<insert>mb_encode_numericentity(string str, array convmap [,string encoding]);</insert>
<dialog title="Insert mb_encode_numericentity">mb_encode_numericentity(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_ereg_match">
<description>
     Regular expression match for multibyte string
    </description>
<param name="pattern" required="1" vallist="0" default="" type="string">pattern</param>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<param name="option" required="0" vallist="0" default="" type="string">option</param>
<return type="bool">bool</return>
<insert>mb_ereg_match(string pattern, string string [,string option]);</insert>
<dialog title="Insert mb_ereg_match">mb_ereg_match(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_ereg_replace">
<description>Replace regular expression with multibyte support</description>
<param name="pattern" required="1" vallist="0" default="" type="string">pattern</param>
<param name="replacement" required="1" vallist="0" default="" type="string">replacement</param>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<param name="option" required="0" vallist="0" default="" type="array">option</param>
<return type="string">string</return>
<insert>mb_ereg_replace(string pattern, string replacement, string string [,array option]);</insert>
<dialog title="Insert mb_ereg_replace">mb_ereg_replace(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_ereg_search_getpos">
<description>
     Returns start point for next regular expression match
    </description>
<return type="array">array</return>
<insert>mb_ereg_search_getpos();</insert>
<dialog title="Insert mb_ereg_search_getpos">mb_ereg_search_getpos();</dialog>
<info title="Info window"></info>
</function>
<function name="mb_ereg_search_getregs">
<description>
     Retrive the result from the last multibyte regular expression
     match
   </description>
<return type="array">array</return>
<insert>mb_ereg_search_getregs();</insert>
<dialog title="Insert mb_ereg_search_getregs">mb_ereg_search_getregs();</dialog>
<info title="Info window"></info>
</function>
<function name="mb_ereg_search_init">
<description>
     Setup string and regular expression for multibyte regular
     expression match
    </description>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<param name="pattern" required="0" vallist="0" default="" type="string">pattern</param>
<param name="option" required="0" vallist="0" default="" type="string">option</param>
<return type="array">array</return>
<insert>mb_ereg_search_init(string string [,string pattern] [,string option]);</insert>
<dialog title="Insert mb_ereg_search_init">mb_ereg_search_init(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_ereg_search_pos">
<description>
     Return position and length of matched part of multibyte regular
     expression for predefined multibyte string
    </description>
<param name="pattern" required="0" vallist="0" default="" type="string">pattern</param>
<param name="option" required="0" vallist="0" default="" type="string">option</param>
<return type="array">array</return>
<insert>mb_ereg_search_pos([string pattern] [,string option]);</insert>
<dialog title="Insert mb_ereg_search_pos">mb_ereg_search_pos(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_ereg_search_regs">
<description>
     Returns the matched part of multibyte regular expression
    </description>
<param name="pattern" required="0" vallist="0" default="" type="string">pattern</param>
<param name="option" required="0" vallist="0" default="" type="string">option</param>
<return type="array">array</return>
<insert>mb_ereg_search_regs([string pattern] [,string option]);</insert>
<dialog title="Insert mb_ereg_search_regs">mb_ereg_search_regs(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_ereg_search_setpos">
<description>
     Set start point of next regular expression match
    </description>
<return type="array">array</return>
<insert>mb_ereg_search_setpos();</insert>
<dialog title="Insert mb_ereg_search_setpos">mb_ereg_search_setpos();</dialog>
<info title="Info window"></info>
</function>
<function name="mb_ereg_search">
<description>
     Multibyte regular expression match for predefined multibyte string
    </description>
<param name="pattern" required="0" vallist="0" default="" type="string">pattern</param>
<param name="option" required="0" vallist="0" default="" type="string">option</param>
<return type="bool">bool</return>
<insert>mb_ereg_search([string pattern] [,string option]);</insert>
<dialog title="Insert mb_ereg_search">mb_ereg_search(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_ereg">
<description>Regular expression match with multibyte support</description>
<param name="pattern" required="1" vallist="0" default="" type="string">pattern</param>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<param name="regs" required="0" vallist="0" default="" type="array">regs</param>
<return type="int">int</return>
<insert>mb_ereg(string pattern, string string [,array regs]);</insert>
<dialog title="Insert mb_ereg">mb_ereg(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_eregi_replace">
<description>
     Replace regular expression with multibyte support
     ignoring case
    </description>
<param name="pattern" required="1" vallist="0" default="" type="string">pattern</param>
<param name="replace" required="1" vallist="0" default="" type="string">replace</param>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<return type="string">string</return>
<insert>mb_eregi_replace(string pattern, string replace, string string);</insert>
<dialog title="Insert mb_eregi_replace">mb_eregi_replace(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_eregi">
<description>
     Regular expression match ignoring case with multibyte support
    </description>
<param name="pattern" required="1" vallist="0" default="" type="string">pattern</param>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<param name="regs" required="0" vallist="0" default="" type="array">regs</param>
<return type="int">int</return>
<insert>mb_eregi(string pattern, string string [,array regs]);</insert>
<dialog title="Insert mb_eregi">mb_eregi(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_get_info">
<description>Get internal settings of mbstring</description>
<param name="type" required="0" vallist="0" default="" type="string">type</param>
<return type="string">string</return>
<insert>mb_get_info([string type]);</insert>
<dialog title="Insert mb_get_info">mb_get_info(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_http_input">
<description>Detect HTTP input character encoding</description>
<param name="type" required="0" vallist="0" default="" type="string">type</param>
<return type="string">string</return>
<insert>mb_http_input([string type]);</insert>
<dialog title="Insert mb_http_input">mb_http_input(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_http_output">
<description>Set/Get HTTP output character encoding</description>
<param name="encoding" required="0" vallist="0" default="" type="string">encoding</param>
<return type="string">string</return>
<insert>mb_http_output([string encoding]);</insert>
<dialog title="Insert mb_http_output">mb_http_output(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_internal_encoding">
<description>
     Set/Get internal character encoding
    </description>
<param name="encoding" required="0" vallist="0" default="" type="string">encoding</param>
<return type="string">string</return>
<insert>mb_internal_encoding([string encoding]);</insert>
<dialog title="Insert mb_internal_encoding">mb_internal_encoding(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_language">
<description>
     Set/Get current language
    </description>
<param name="language" required="0" vallist="0" default="" type="string">language</param>
<return type="string">string</return>
<insert>mb_language([string language]);</insert>
<dialog title="Insert mb_language">mb_language(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_output_handler">
<description>
     Callback function converts character encoding in output buffer
    </description>
<param name="contents" required="1" vallist="0" default="" type="string">contents</param>
<param name="status" required="1" vallist="0" default="" type="int">status</param>
<return type="string">string</return>
<insert>mb_output_handler(string contents, int status);</insert>
<dialog title="Insert mb_output_handler">mb_output_handler(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_parse_str">
<description>
      Parse GET/POST/COOKIE data and set global variable
    </description>
<param name="encoded_string" required="1" vallist="0" default="" type="string">encoded_string</param>
<param name="result" required="0" vallist="0" default="" type="array">result</param>
<return type="bool">bool</return>
<insert>mb_parse_str(string encoded_string [,array result]);</insert>
<dialog title="Insert mb_parse_str">mb_parse_str(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_preferred_mime_name">
<description>Get MIME charset string</description>
<param name="encoding" required="1" vallist="0" default="" type="string">encoding</param>
<return type="string">string</return>
<insert>mb_preferred_mime_name(string encoding);</insert>
<dialog title="Insert mb_preferred_mime_name">mb_preferred_mime_name(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_regex_encoding">
<description>
     Returns current encoding for multibyte regex as string
    </description>
<param name="encoding" required="0" vallist="0" default="" type="string">encoding</param>
<return type="string">string</return>
<insert>mb_regex_encoding([string encoding]);</insert>
<dialog title="Insert mb_regex_encoding">mb_regex_encoding(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_regex_set_options">
<description>
     Set/Get the default options for mbregex functions
    </description>
<param name="options" required="0" vallist="0" default="" type="string">options</param>
<return type="string">string</return>
<insert>mb_regex_set_options([string options]);</insert>
<dialog title="Insert mb_regex_set_options">mb_regex_set_options(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_send_mail">
<description>
     Send encoded mail.
    </description>
<param name="to" required="1" vallist="0" default="" type="string">to</param>
<param name="subject" required="1" vallist="0" default="" type="string">subject</param>
<param name="message" required="1" vallist="0" default="" type="string">message</param>
<param name="additional_headers" required="0" vallist="0" default="" type="string">additional_headers</param>
<param name="additional_parameter" required="0" vallist="0" default="" type="string">additional_parameter</param>
<return type="bool">bool</return>
<insert>mb_send_mail(string to, string subject, string message [,string additional_headers] [,string additional_parameter]);</insert>
<dialog title="Insert mb_send_mail">mb_send_mail(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_split">
<description>Split multibyte string using regular expression</description>
<param name="pattern" required="1" vallist="0" default="" type="string">pattern</param>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<param name="limit" required="0" vallist="0" default="" type="int">limit</param>
<return type="array">array</return>
<insert>mb_split(string pattern, string string [,int limit]);</insert>
<dialog title="Insert mb_split">mb_split(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_strcut">
<description>Get part of string</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="start" required="1" vallist="0" default="" type="int">start</param>
<param name="length" required="0" vallist="0" default="" type="int">length</param>
<param name="encoding" required="0" vallist="0" default="" type="string">encoding</param>
<return type="string">string</return>
<insert>mb_strcut(string str, int start [,int length] [,string encoding]);</insert>
<dialog title="Insert mb_strcut">mb_strcut(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_strimwidth">
<description>Get truncated string with specified width</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="start" required="1" vallist="0" default="" type="int">start</param>
<param name="width" required="1" vallist="0" default="" type="int">width</param>
<param name="trimmarker" required="1" vallist="0" default="" type="string">trimmarker</param>
<param name="encoding" required="0" vallist="0" default="" type="string">encoding</param>
<return type="string">string</return>
<insert>mb_strimwidth(string str, int start, int width, string trimmarker [,string encoding]);</insert>
<dialog title="Insert mb_strimwidth">mb_strimwidth(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_strlen">
<description>Get string length</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="encoding" required="0" vallist="0" default="" type="string">encoding</param>
<return type="string">string</return>
<insert>mb_strlen(string str [,string encoding]);</insert>
<dialog title="Insert mb_strlen">mb_strlen(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_strpos">
<description>
     Find position of first occurrence of string in a string
    </description>
<param name="haystack" required="1" vallist="0" default="" type="string">haystack</param>
<param name="needle" required="1" vallist="0" default="" type="string">needle</param>
<param name="offset" required="0" vallist="0" default="" type="int">offset</param>
<param name="encoding" required="0" vallist="0" default="" type="string">encoding</param>
<return type="int">int</return>
<insert>mb_strpos(string haystack, string needle [,int offset] [,string encoding]);</insert>
<dialog title="Insert mb_strpos">mb_strpos(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_strrpos">
<description>
     Find position of last occurrence of a string in a string
    </description>
<param name="haystack" required="1" vallist="0" default="" type="string">haystack</param>
<param name="needle" required="1" vallist="0" default="" type="string">needle</param>
<param name="encoding" required="0" vallist="0" default="" type="string">encoding</param>
<return type="int">int</return>
<insert>mb_strrpos(string haystack, string needle [,string encoding]);</insert>
<dialog title="Insert mb_strrpos">mb_strrpos(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_strtolower">
<description>Make a string lowercase</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="encoding" required="0" vallist="0" default="" type="string">encoding</param>
<return type="string">string</return>
<insert>mb_strtolower(string str [,string encoding]);</insert>
<dialog title="Insert mb_strtolower">mb_strtolower(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_strtoupper">
<description>Make a string uppercase</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="encoding" required="0" vallist="0" default="" type="string">encoding</param>
<return type="string">string</return>
<insert>mb_strtoupper(string str [,string encoding]);</insert>
<dialog title="Insert mb_strtoupper">mb_strtoupper(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_strwidth">
<description>Return width of string</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="encoding" required="0" vallist="0" default="" type="string">encoding</param>
<return type="int">int</return>
<insert>mb_strwidth(string str [,string encoding]);</insert>
<dialog title="Insert mb_strwidth">mb_strwidth(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_substitute_character">
<description>Set/Get substitution character</description>
<param name="substrchar" required="0" vallist="0" default="" type="mixed">substrchar</param>
<return type="mixed">mixed</return>
<insert>mb_substitute_character([mixed substrchar]);</insert>
<dialog title="Insert mb_substitute_character">mb_substitute_character(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_substr_count">
<description>Count the number of substring occurrences</description>
<param name="haystack" required="1" vallist="0" default="" type="string">haystack</param>
<param name="needle" required="1" vallist="0" default="" type="string">needle</param>
<param name="encoding" required="0" vallist="0" default="" type="string">encoding</param>
<return type="int">int</return>
<insert>mb_substr_count(string haystack, string needle [,string encoding]);</insert>
<dialog title="Insert mb_substr_count">mb_substr_count(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mb_substr">
<description>Get part of string</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="start" required="1" vallist="0" default="" type="int">start</param>
<param name="length" required="0" vallist="0" default="" type="int">length</param>
<param name="encoding" required="0" vallist="0" default="" type="string">encoding</param>
<return type="string">string</return>
<insert>mb_substr(string str, int start [,int length] [,string encoding]);</insert>
<dialog title="Insert mb_substr">mb_substr(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="mcal">
<function name="mcal_append_event">
<description>Store a new event into an MCAL calendar</description>
<param name="mcal_stream" required="1" vallist="0" default="" type="int">mcal_stream</param>
<return type="int">int</return>
<insert>mcal_append_event(int mcal_stream);</insert>
<dialog title="Insert mcal_append_event">mcal_append_event(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_close">
<description>Close an MCAL stream</description>
<param name="mcal_stream" required="1" vallist="0" default="" type="int">mcal_stream</param>
<param name="flags" required="1" vallist="0" default="" type="int">flags</param>
<return type="int">int</return>
<insert>mcal_close(int mcal_stream, int flags);</insert>
<dialog title="Insert mcal_close">mcal_close(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_create_calendar">
<description>Create a new MCAL calendar </description>
<param name="stream" required="1" vallist="0" default="" type="int">stream</param>
<param name="calendar" required="1" vallist="0" default="" type="string">calendar</param>
<return type="string">string</return>
<insert>mcal_create_calendar(int stream, string calendar);</insert>
<dialog title="Insert mcal_create_calendar">mcal_create_calendar(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_date_compare">
<description>Compares two dates</description>
<param name="a_year" required="1" vallist="0" default="" type="int">a_year</param>
<param name="a_month" required="1" vallist="0" default="" type="int">a_month</param>
<param name="a_day" required="1" vallist="0" default="" type="int">a_day</param>
<param name="b_year" required="1" vallist="0" default="" type="int">b_year</param>
<param name="b_month" required="1" vallist="0" default="" type="int">b_month</param>
<param name="b_day" required="1" vallist="0" default="" type="int">b_day</param>
<return type="int">int</return>
<insert>mcal_date_compare(int a_year, int a_month, int a_day, int b_year, int b_month, int b_day);</insert>
<dialog title="Insert mcal_date_compare">mcal_date_compare(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_date_valid">
<description>
     Returns </description>
<param name="year" required="1" vallist="0" default="" type="int">year</param>
<param name="month" required="1" vallist="0" default="" type="int">month</param>
<param name="day" required="1" vallist="0" default="" type="int">day</param>
<return type="int">int</return>
<insert>mcal_date_valid(int year, int month, int day);</insert>
<dialog title="Insert mcal_date_valid">mcal_date_valid(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_day_of_week">
<description>
     Returns the day of the week of the given date
    </description>
<param name="year" required="1" vallist="0" default="" type="int">year</param>
<param name="month" required="1" vallist="0" default="" type="int">month</param>
<param name="day" required="1" vallist="0" default="" type="int">day</param>
<return type="int">int</return>
<insert>mcal_day_of_week(int year, int month, int day);</insert>
<dialog title="Insert mcal_day_of_week">mcal_day_of_week(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_day_of_year">
<description>
     Returns the day of the year of the given date
    </description>
<param name="year" required="1" vallist="0" default="" type="int">year</param>
<param name="month" required="1" vallist="0" default="" type="int">month</param>
<param name="day" required="1" vallist="0" default="" type="int">day</param>
<return type="int">int</return>
<insert>mcal_day_of_year(int year, int month, int day);</insert>
<dialog title="Insert mcal_day_of_year">mcal_day_of_year(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_days_in_month">
<description>
     Returns the number of days in a month
    </description>
<param name="month" required="1" vallist="0" default="" type="int">month</param>
<param name="leap_year" required="1" vallist="0" default="" type="int">leap_year</param>
<return type="int">int</return>
<insert>mcal_days_in_month(int month, int leap_year);</insert>
<dialog title="Insert mcal_days_in_month">mcal_days_in_month(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_delete_calendar">
<description>Delete an MCAL calendar</description>
<param name="stream" required="1" vallist="0" default="" type="int">stream</param>
<param name="calendar" required="1" vallist="0" default="" type="string">calendar</param>
<return type="string">string</return>
<insert>mcal_delete_calendar(int stream, string calendar);</insert>
<dialog title="Insert mcal_delete_calendar">mcal_delete_calendar(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_delete_event">
<description>Delete an event from an MCAL calendar</description>
<param name="mcal_stream" required="1" vallist="0" default="" type="int">mcal_stream</param>
<param name="event_id" required="0" vallist="0" default="" type="int">event_id</param>
<return type="int">int</return>
<insert>mcal_delete_event(int mcal_stream [,int event_id]);</insert>
<dialog title="Insert mcal_delete_event">mcal_delete_event(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_event_add_attribute">
<description>
     Adds an attribute and a value to the streams global event structure
    </description>
<param name="stream" required="1" vallist="0" default="" type="int">stream</param>
<param name="attribute" required="1" vallist="0" default="" type="string">attribute</param>
<param name="value" required="1" vallist="0" default="" type="string">value</param>
<return type="void">void</return>
<insert>mcal_event_add_attribute(int stream, string attribute, string value);</insert>
<dialog title="Insert mcal_event_add_attribute">mcal_event_add_attribute(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_event_init">
<description>
     Initializes a streams global event structure
    </description>
<param name="stream" required="1" vallist="0" default="" type="int">stream</param>
<return type="int">int</return>
<insert>mcal_event_init(int stream);</insert>
<dialog title="Insert mcal_event_init">mcal_event_init(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_event_set_alarm">
<description>
     Sets the alarm of the streams global event structure
    </description>
<param name="stream" required="1" vallist="0" default="" type="int">stream</param>
<param name="alarm" required="1" vallist="0" default="" type="int">alarm</param>
<return type="int">int</return>
<insert>mcal_event_set_alarm(int stream, int alarm);</insert>
<dialog title="Insert mcal_event_set_alarm">mcal_event_set_alarm(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_event_set_category">
<description>
     Sets the category of the streams global event structure
    </description>
<param name="stream" required="1" vallist="0" default="" type="int">stream</param>
<param name="category" required="1" vallist="0" default="" type="string">category</param>
<return type="int">int</return>
<insert>mcal_event_set_category(int stream, string category);</insert>
<dialog title="Insert mcal_event_set_category">mcal_event_set_category(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_event_set_class">
<description>
     Sets the class of the streams global event structure
    </description>
<param name="stream" required="1" vallist="0" default="" type="int">stream</param>
<param name="class" required="1" vallist="0" default="" type="int">class</param>
<return type="int">int</return>
<insert>mcal_event_set_class(int stream, int class);</insert>
<dialog title="Insert mcal_event_set_class">mcal_event_set_class(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_event_set_description">
<description>
     Sets the description of the streams global event structure
    </description>
<param name="stream" required="1" vallist="0" default="" type="int">stream</param>
<param name="description" required="1" vallist="0" default="" type="string">description</param>
<return type="int">int</return>
<insert>mcal_event_set_description(int stream, string description);</insert>
<dialog title="Insert mcal_event_set_description">mcal_event_set_description(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_event_set_end">
<description>
     Sets the end date and time of the streams global event structure
    </description>
<param name="stream" required="1" vallist="0" default="" type="int">stream</param>
<param name="year" required="1" vallist="0" default="" type="int">year</param>
<param name="month" required="1" vallist="0" default="" type="int">month</param>
<param name="
        day
       " required="0" vallist="0" default="" type="int">
        day
       </param>
<param name="
        hour
       " required="0" vallist="0" default="" type="int">
        hour
       </param>
<param name="
        min
       " required="0" vallist="0" default="" type="int">
        min
       </param>
<param name="
        sec
       " required="0" vallist="0" default="" type="int">
        sec
       </param>
<return type="int">int</return>
<insert>mcal_event_set_end(int stream, int year, int month [,int 
        day
       ] [,int 
        hour
       ] [,int 
        min
       ] [,int 
        sec
       ]);</insert>
<dialog title="Insert mcal_event_set_end">mcal_event_set_end(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_event_set_recur_daily">
<description>
     Sets the recurrence of the streams global event structure
    </description>
<param name="stream" required="1" vallist="0" default="" type="int">stream</param>
<param name="year" required="1" vallist="0" default="" type="int">year</param>
<param name="month" required="1" vallist="0" default="" type="int">month</param>
<param name="day" required="1" vallist="0" default="" type="int">day</param>
<param name="interval" required="1" vallist="0" default="" type="int">interval</param>
<return type="int">int</return>
<insert>mcal_event_set_recur_daily(int stream, int year, int month, int day, int interval);</insert>
<dialog title="Insert mcal_event_set_recur_daily">mcal_event_set_recur_daily(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_event_set_recur_monthly_mday">
<description>
     Sets the recurrence of the streams global event structure
    </description>
<param name="stream" required="1" vallist="0" default="" type="int">stream</param>
<param name="year" required="1" vallist="0" default="" type="int">year</param>
<param name="month" required="1" vallist="0" default="" type="int">month</param>
<param name="day" required="1" vallist="0" default="" type="int">day</param>
<param name="interval" required="1" vallist="0" default="" type="int">interval</param>
<return type="int">int</return>
<insert>mcal_event_set_recur_monthly_mday(int stream, int year, int month, int day, int interval);</insert>
<dialog title="Insert mcal_event_set_recur_monthly_mday">mcal_event_set_recur_monthly_mday(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_event_set_recur_monthly_wday">
<description>
     Sets the recurrence of the streams global event structure
    </description>
<param name="stream" required="1" vallist="0" default="" type="int">stream</param>
<param name="year" required="1" vallist="0" default="" type="int">year</param>
<param name="month" required="1" vallist="0" default="" type="int">month</param>
<param name="day" required="1" vallist="0" default="" type="int">day</param>
<param name="interval" required="1" vallist="0" default="" type="int">interval</param>
<return type="int">int</return>
<insert>mcal_event_set_recur_monthly_wday(int stream, int year, int month, int day, int interval);</insert>
<dialog title="Insert mcal_event_set_recur_monthly_wday">mcal_event_set_recur_monthly_wday(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_event_set_recur_none">
<description>
     Sets the recurrence of the streams global event structure
    </description>
<param name="stream" required="1" vallist="0" default="" type="int">stream</param>
<return type="int">int</return>
<insert>mcal_event_set_recur_none(int stream);</insert>
<dialog title="Insert mcal_event_set_recur_none">mcal_event_set_recur_none(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_event_set_recur_weekly">
<description>
     Sets the recurrence of the streams global event structure
    </description>
<param name="stream" required="1" vallist="0" default="" type="int">stream</param>
<param name="year" required="1" vallist="0" default="" type="int">year</param>
<param name="month" required="1" vallist="0" default="" type="int">month</param>
<param name="day" required="1" vallist="0" default="" type="int">day</param>
<param name="interval" required="1" vallist="0" default="" type="int">interval</param>
<param name="weekdays" required="1" vallist="0" default="" type="int">weekdays</param>
<return type="int">int</return>
<insert>mcal_event_set_recur_weekly(int stream, int year, int month, int day, int interval, int weekdays);</insert>
<dialog title="Insert mcal_event_set_recur_weekly">mcal_event_set_recur_weekly(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_event_set_recur_yearly">
<description>
     Sets the recurrence of the streams global event structure
    </description>
<param name="stream" required="1" vallist="0" default="" type="int">stream</param>
<param name="year" required="1" vallist="0" default="" type="int">year</param>
<param name="month" required="1" vallist="0" default="" type="int">month</param>
<param name="day" required="1" vallist="0" default="" type="int">day</param>
<param name="interval" required="1" vallist="0" default="" type="int">interval</param>
<return type="int">int</return>
<insert>mcal_event_set_recur_yearly(int stream, int year, int month, int day, int interval);</insert>
<dialog title="Insert mcal_event_set_recur_yearly">mcal_event_set_recur_yearly(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_event_set_start">
<description>
     Sets the start date and time of the streams global event
     structure
    </description>
<param name="stream" required="1" vallist="0" default="" type="int">stream</param>
<param name="year" required="1" vallist="0" default="" type="int">year</param>
<param name="month" required="1" vallist="0" default="" type="int">month</param>
<param name="
        day
       " required="0" vallist="0" default="" type="int">
        day
       </param>
<param name="
        hour
       " required="0" vallist="0" default="" type="int">
        hour
       </param>
<param name="
        min" required="0" vallist="0" default="" type="int">
        min</param>
<param name="
        sec
       " required="0" vallist="0" default="" type="int">
        sec
       </param>
<return type="int">int</return>
<insert>mcal_event_set_start(int stream, int year, int month [,int 
        day
       ] [,int 
        hour
       ] [,int 
        min] [,int 
        sec
       ]);</insert>
<dialog title="Insert mcal_event_set_start">mcal_event_set_start(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_event_set_title">
<description>
     Sets the title of the streams global event structure
    </description>
<param name="stream" required="1" vallist="0" default="" type="int">stream</param>
<param name="title" required="1" vallist="0" default="" type="string">title</param>
<return type="int">int</return>
<insert>mcal_event_set_title(int stream, string title);</insert>
<dialog title="Insert mcal_event_set_title">mcal_event_set_title(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_expunge">
<description>
     Deletes all events marked for being expunged.
    </description>
<param name="stream" required="1" vallist="0" default="" type="int">stream</param>
<return type="int">int</return>
<insert>mcal_expunge(int stream);</insert>
<dialog title="Insert mcal_expunge">mcal_expunge(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_fetch_current_stream_event">
<description>
     Returns an object containing the current streams event structure
    </description>
<param name="stream" required="1" vallist="0" default="" type="int">stream</param>
<return type="object">object</return>
<insert>mcal_fetch_current_stream_event(int stream);</insert>
<dialog title="Insert mcal_fetch_current_stream_event">mcal_fetch_current_stream_event(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_fetch_event">
<description>
     Fetches an event from the calendar stream
    </description>
<param name="mcal_stream" required="1" vallist="0" default="" type="int">mcal_stream</param>
<param name="event_id" required="1" vallist="0" default="" type="int">event_id</param>
<param name="options" required="0" vallist="0" default="" type="int">options</param>
<return type="object">object</return>
<insert>mcal_fetch_event(int mcal_stream, int event_id [,int options]);</insert>
<dialog title="Insert mcal_fetch_event">mcal_fetch_event(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_is_leap_year">
<description>
     Returns if the given year is a leap year or not
    </description>
<param name="year" required="1" vallist="0" default="" type="int">year</param>
<return type="int">int</return>
<insert>mcal_is_leap_year(int year);</insert>
<dialog title="Insert mcal_is_leap_year">mcal_is_leap_year(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_list_alarms">
<description>
     Return a list of events that has an alarm triggered at the given
     datetime
    </description>
<param name="mcal_stream" required="1" vallist="0" default="" type="int">mcal_stream</param>
<param name="begin_year" required="0" vallist="0" default="" type="int">begin_year</param>
<param name="begin_month" required="0" vallist="0" default="" type="int">begin_month</param>
<param name="begin_day" required="0" vallist="0" default="" type="int">begin_day</param>
<param name="end_year" required="0" vallist="0" default="" type="int">end_year</param>
<param name="end_month" required="0" vallist="0" default="" type="int">end_month</param>
<param name="end_day" required="0" vallist="0" default="" type="int">end_day</param>
<return type="array">array</return>
<insert>mcal_list_alarms(int mcal_stream [,int begin_year] [,int begin_month] [,int begin_day] [,int end_year] [,int end_month] [,int end_day]);</insert>
<dialog title="Insert mcal_list_alarms">mcal_list_alarms(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_list_events">
<description>
     Return a list of IDs for a date or a range of dates
    </description>
<param name="mcal_stream" required="1" vallist="0" default="" type="int">mcal_stream</param>
<param name="begin_date" required="1" vallist="0" default="" type="object">begin_date</param>
<param name="end_date" required="0" vallist="0" default="" type="object">end_date</param>
<return type="array">array</return>
<insert>mcal_list_events(int mcal_stream, object begin_date [,object end_date]);</insert>
<dialog title="Insert mcal_list_events">mcal_list_events(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_next_recurrence">
<description>Returns the next recurrence of the event</description>
<param name="stream" required="1" vallist="0" default="" type="int">stream</param>
<param name="weekstart" required="1" vallist="0" default="" type="int">weekstart</param>
<param name="next" required="1" vallist="0" default="" type="array">next</param>
<return type="int">int</return>
<insert>mcal_next_recurrence(int stream, int weekstart, array next);</insert>
<dialog title="Insert mcal_next_recurrence">mcal_next_recurrence(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_open">
<description>Opens up an MCAL connection</description>
<param name="calendar" required="1" vallist="0" default="" type="string">calendar</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="options" required="0" vallist="0" default="" type="int">options</param>
<return type="int">int</return>
<insert>mcal_open(string calendar, string username, string password [,int options]);</insert>
<dialog title="Insert mcal_open">mcal_open(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_popen">
<description>Opens up a persistent MCAL connection</description>
<param name="calendar" required="1" vallist="0" default="" type="string">calendar</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="options" required="0" vallist="0" default="" type="int">options</param>
<return type="int">int</return>
<insert>mcal_popen(string calendar, string username, string password [,int options]);</insert>
<dialog title="Insert mcal_popen">mcal_popen(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_rename_calendar">
<description>Rename an MCAL calendar </description>
<param name="stream" required="1" vallist="0" default="" type="int">stream</param>
<param name="old_name" required="1" vallist="0" default="" type="string">old_name</param>
<param name="new_name" required="1" vallist="0" default="" type="string">new_name</param>
<return type="string">string</return>
<insert>mcal_rename_calendar(int stream, string old_name, string new_name);</insert>
<dialog title="Insert mcal_rename_calendar">mcal_rename_calendar(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_reopen">
<description>Reopens an MCAL connection</description>
<param name="calendar" required="1" vallist="0" default="" type="string">calendar</param>
<param name="options" required="0" vallist="0" default="" type="int">options</param>
<return type="int">int</return>
<insert>mcal_reopen(string calendar [,int options]);</insert>
<dialog title="Insert mcal_reopen">mcal_reopen(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_snooze">
<description>Turn off an alarm for an event</description>
<param name="id" required="1" vallist="0" default="" type="int">id</param>
<return type="int">int</return>
<insert>mcal_snooze(int id);</insert>
<dialog title="Insert mcal_snooze">mcal_snooze(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_store_event">
<description>Modify an existing event in an MCAL calendar</description>
<param name="mcal_stream" required="1" vallist="0" default="" type="int">mcal_stream</param>
<return type="int">int</return>
<insert>mcal_store_event(int mcal_stream);</insert>
<dialog title="Insert mcal_store_event">mcal_store_event(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_time_valid">
<description>
     Returns </description>
<param name="hour" required="1" vallist="0" default="" type="int">hour</param>
<param name="minutes" required="1" vallist="0" default="" type="int">minutes</param>
<param name="seconds" required="1" vallist="0" default="" type="int">seconds</param>
<return type="int">int</return>
<insert>mcal_time_valid(int hour, int minutes, int seconds);</insert>
<dialog title="Insert mcal_time_valid">mcal_time_valid(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mcal_week_of_year">
<description>
     Returns the week number of the given date
    </description>
<param name="day" required="1" vallist="0" default="" type="int">day</param>
<param name="month" required="1" vallist="0" default="" type="int">month</param>
<param name="year" required="1" vallist="0" default="" type="int">year</param>
<return type="int">int</return>
<insert>mcal_week_of_year(int day, int month, int year);</insert>
<dialog title="Insert mcal_week_of_year">mcal_week_of_year(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="mcrypt">
<function name="mcrypt_cbc">
<description>Encrypt/decrypt data in CBC mode</description>
<param name="cipher" required="1" vallist="0" default="" type="int">cipher</param>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<param name="iv" required="0" vallist="0" default="" type="string">iv</param>
<return type="string">string</return>
<insert>mcrypt_cbc(int cipher, string key, string data, int mode [,string iv]);</insert>
<dialog title="Insert mcrypt_cbc">mcrypt_cbc(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_cfb">
<description>Encrypt/decrypt data in CFB mode</description>
<param name="cipher" required="1" vallist="0" default="" type="int">cipher</param>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<param name="iv" required="1" vallist="0" default="" type="string">iv</param>
<return type="string">string</return>
<insert>mcrypt_cfb(int cipher, string key, string data, int mode, string iv);</insert>
<dialog title="Insert mcrypt_cfb">mcrypt_cfb(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_create_iv">
<description>
     Create an initialization vector (IV) from a random source
    </description>
<param name="size" required="1" vallist="0" default="" type="int">size</param>
<param name="source" required="1" vallist="0" default="" type="int">source</param>
<return type="string">string</return>
<insert>mcrypt_create_iv(int size, int source);</insert>
<dialog title="Insert mcrypt_create_iv">mcrypt_create_iv(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_decrypt">
<description>Decrypts crypttext with given parameters</description>
<param name="cipher" required="1" vallist="0" default="" type="string">cipher</param>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<param name="mode" required="1" vallist="0" default="" type="string">mode</param>
<param name="iv" required="0" vallist="0" default="" type="string">iv</param>
<return type="string">string</return>
<insert>mcrypt_decrypt(string cipher, string key, string data, string mode [,string iv]);</insert>
<dialog title="Insert mcrypt_decrypt">mcrypt_decrypt(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_ecb">
<description>Encrypt/decrypt data in ECB mode</description>
<param name="cipher" required="1" vallist="0" default="" type="int">cipher</param>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<return type="string">string</return>
<insert>mcrypt_ecb(int cipher, string key, string data, int mode);</insert>
<dialog title="Insert mcrypt_ecb">mcrypt_ecb(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_enc_get_algorithms_name">
<description>Returns the name of the opened algorithm</description>
<param name="td" required="1" vallist="0" default="" type="resource">td</param>
<return type="string">string</return>
<insert>mcrypt_enc_get_algorithms_name(resource td);</insert>
<dialog title="Insert mcrypt_enc_get_algorithms_name">mcrypt_enc_get_algorithms_name(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_enc_get_block_size">
<description>Returns the blocksize of the opened algorithm</description>
<param name="td" required="1" vallist="0" default="" type="resource">td</param>
<return type="int">int</return>
<insert>mcrypt_enc_get_block_size(resource td);</insert>
<dialog title="Insert mcrypt_enc_get_block_size">mcrypt_enc_get_block_size(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_enc_get_iv_size">
<description>Returns the size of the IV of the opened algorithm</description>
<param name="td" required="1" vallist="0" default="" type="resource">td</param>
<return type="int">int</return>
<insert>mcrypt_enc_get_iv_size(resource td);</insert>
<dialog title="Insert mcrypt_enc_get_iv_size">mcrypt_enc_get_iv_size(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_enc_get_key_size">
<description>Returns the maximum supported keysize of the opened mode</description>
<param name="td" required="1" vallist="0" default="" type="resource">td</param>
<return type="int">int</return>
<insert>mcrypt_enc_get_key_size(resource td);</insert>
<dialog title="Insert mcrypt_enc_get_key_size">mcrypt_enc_get_key_size(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_enc_get_modes_name">
<description>Returns the name of the opened mode</description>
<param name="td" required="1" vallist="0" default="" type="resource">td</param>
<return type="string">string</return>
<insert>mcrypt_enc_get_modes_name(resource td);</insert>
<dialog title="Insert mcrypt_enc_get_modes_name">mcrypt_enc_get_modes_name(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_enc_get_supported_key_sizes">
<description>Returns an array with the supported keysizes of the opened algorithm</description>
<param name="td" required="1" vallist="0" default="" type="resource">td</param>
<return type="array">array</return>
<insert>mcrypt_enc_get_supported_key_sizes(resource td);</insert>
<dialog title="Insert mcrypt_enc_get_supported_key_sizes">mcrypt_enc_get_supported_key_sizes(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_enc_is_block_algorithm_mode">
<description>Checks whether the encryption of the opened mode works on blocks</description>
<param name="td" required="1" vallist="0" default="" type="resource">td</param>
<return type="bool">bool</return>
<insert>mcrypt_enc_is_block_algorithm_mode(resource td);</insert>
<dialog title="Insert mcrypt_enc_is_block_algorithm_mode">mcrypt_enc_is_block_algorithm_mode(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_enc_is_block_algorithm">
<description>Checks whether the algorithm of the opened mode is a block algorithm</description>
<param name="td" required="1" vallist="0" default="" type="resource">td</param>
<return type="bool">bool</return>
<insert>mcrypt_enc_is_block_algorithm(resource td);</insert>
<dialog title="Insert mcrypt_enc_is_block_algorithm">mcrypt_enc_is_block_algorithm(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_enc_is_block_mode">
<description>Checks whether the opened mode outputs blocks</description>
<param name="td" required="1" vallist="0" default="" type="resource">td</param>
<return type="bool">bool</return>
<insert>mcrypt_enc_is_block_mode(resource td);</insert>
<dialog title="Insert mcrypt_enc_is_block_mode">mcrypt_enc_is_block_mode(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_enc_self_test">
<description>This function runs a self test on the opened module</description>
<param name="td" required="1" vallist="0" default="" type="resource">td</param>
<return type="bool">bool</return>
<insert>mcrypt_enc_self_test(resource td);</insert>
<dialog title="Insert mcrypt_enc_self_test">mcrypt_enc_self_test(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_encrypt">
<description>Encrypts plaintext with given parameters</description>
<param name="cipher" required="1" vallist="0" default="" type="string">cipher</param>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<param name="mode" required="1" vallist="0" default="" type="string">mode</param>
<param name="iv" required="0" vallist="0" default="" type="string">iv</param>
<return type="string">string</return>
<insert>mcrypt_encrypt(string cipher, string key, string data, string mode [,string iv]);</insert>
<dialog title="Insert mcrypt_encrypt">mcrypt_encrypt(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_generic_deinit">
<description>
     This function deinitializes an encryption module
    </description>
<param name="td" required="1" vallist="0" default="" type="resource">td</param>
<return type="bool">bool</return>
<insert>mcrypt_generic_deinit(resource td);</insert>
<dialog title="Insert mcrypt_generic_deinit">mcrypt_generic_deinit(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_generic_end">
<description>This function terminates encryption</description>
<param name="td" required="1" vallist="0" default="" type="resource">td</param>
<return type="bool">bool</return>
<insert>mcrypt_generic_end(resource td);</insert>
<dialog title="Insert mcrypt_generic_end">mcrypt_generic_end(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_generic_init">
<description>This function initializes all buffers needed for encryption</description>
<param name="td" required="1" vallist="0" default="" type="resource">td</param>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<param name="iv" required="1" vallist="0" default="" type="string">iv</param>
<return type="int">int</return>
<insert>mcrypt_generic_init(resource td, string key, string iv);</insert>
<dialog title="Insert mcrypt_generic_init">mcrypt_generic_init(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_generic">
<description>This function encrypts data</description>
<param name="td" required="1" vallist="0" default="" type="resource">td</param>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<return type="string">string</return>
<insert>mcrypt_generic(resource td, string data);</insert>
<dialog title="Insert mcrypt_generic">mcrypt_generic(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_get_block_size">
<description>Get the block size of the specified cipher</description>
<param name="cipher" required="1" vallist="0" default="" type="int">cipher</param>
<return type="int">int</return>
<insert>mcrypt_get_block_size(int cipher);</insert>
<dialog title="Insert mcrypt_get_block_size">mcrypt_get_block_size(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_get_cipher_name">
<description>Get the name of the specified cipher</description>
<param name="cipher" required="1" vallist="0" default="" type="int">cipher</param>
<return type="string">string</return>
<insert>mcrypt_get_cipher_name(int cipher);</insert>
<dialog title="Insert mcrypt_get_cipher_name">mcrypt_get_cipher_name(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_get_iv_size">
<description>
     Returns the size of the IV belonging to a specific cipher/mode combination
    </description>
<param name="td" required="1" vallist="0" default="" type="resource">td</param>
<return type="int">int</return>
<insert>mcrypt_get_iv_size(resource td);</insert>
<dialog title="Insert mcrypt_get_iv_size">mcrypt_get_iv_size(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_get_key_size">
<description>Get the key size of the specified cipher</description>
<param name="cipher" required="1" vallist="0" default="" type="int">cipher</param>
<return type="int">int</return>
<insert>mcrypt_get_key_size(int cipher);</insert>
<dialog title="Insert mcrypt_get_key_size">mcrypt_get_key_size(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_list_algorithms">
<description>Get an array of all supported ciphers</description>
<param name="lib_dir" required="0" vallist="0" default="" type="string">lib_dir</param>
<return type="array">array</return>
<insert>mcrypt_list_algorithms([string lib_dir]);</insert>
<dialog title="Insert mcrypt_list_algorithms">mcrypt_list_algorithms(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_list_modes">
<description>Get an array of all supported modes</description>
<param name="lib_dir" required="0" vallist="0" default="" type="string">lib_dir</param>
<return type="array">array</return>
<insert>mcrypt_list_modes([string lib_dir]);</insert>
<dialog title="Insert mcrypt_list_modes">mcrypt_list_modes(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_module_close">
<description>
     Close the mcrypt module
    </description>
<param name="td" required="1" vallist="0" default="" type="resource">td</param>
<return type="bool">bool</return>
<insert>mcrypt_module_close(resource td);</insert>
<dialog title="Insert mcrypt_module_close">mcrypt_module_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_module_get_algo_block_size">
<description>Returns the blocksize of the specified algorithm</description>
<param name="algorithm" required="1" vallist="0" default="" type="string">algorithm</param>
<param name="lib_dir" required="0" vallist="0" default="" type="string">lib_dir</param>
<return type="int">int</return>
<insert>mcrypt_module_get_algo_block_size(string algorithm [,string lib_dir]);</insert>
<dialog title="Insert mcrypt_module_get_algo_block_size">mcrypt_module_get_algo_block_size(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_module_get_algo_key_size">
<description>Returns the maximum supported keysize of the opened mode</description>
<param name="algorithm" required="1" vallist="0" default="" type="string">algorithm</param>
<param name="lib_dir" required="0" vallist="0" default="" type="string">lib_dir</param>
<return type="int">int</return>
<insert>mcrypt_module_get_algo_key_size(string algorithm [,string lib_dir]);</insert>
<dialog title="Insert mcrypt_module_get_algo_key_size">mcrypt_module_get_algo_key_size(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_module_get_supported_key_sizes">
<description>Returns an array with the supported keysizes of the opened algorithm</description>
<param name="algorithm" required="1" vallist="0" default="" type="string">algorithm</param>
<param name="lib_dir" required="0" vallist="0" default="" type="string">lib_dir</param>
<return type="array">array</return>
<insert>mcrypt_module_get_supported_key_sizes(string algorithm [,string lib_dir]);</insert>
<dialog title="Insert mcrypt_module_get_supported_key_sizes">mcrypt_module_get_supported_key_sizes(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_module_is_block_algorithm_mode">
<description>This function returns if the the specified module is a block algorithm or not</description>
<param name="mode" required="1" vallist="0" default="" type="string">mode</param>
<param name="lib_dir" required="0" vallist="0" default="" type="string">lib_dir</param>
<return type="bool">bool</return>
<insert>mcrypt_module_is_block_algorithm_mode(string mode [,string lib_dir]);</insert>
<dialog title="Insert mcrypt_module_is_block_algorithm_mode">mcrypt_module_is_block_algorithm_mode(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_module_is_block_algorithm">
<description>This function checks whether the specified algorithm is a block algorithm</description>
<param name="algorithm" required="1" vallist="0" default="" type="string">algorithm</param>
<param name="lib_dir" required="0" vallist="0" default="" type="string">lib_dir</param>
<return type="bool">bool</return>
<insert>mcrypt_module_is_block_algorithm(string algorithm [,string lib_dir]);</insert>
<dialog title="Insert mcrypt_module_is_block_algorithm">mcrypt_module_is_block_algorithm(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_module_is_block_mode">
<description>This function returns if the the specified mode outputs blocks or not</description>
<param name="mode" required="1" vallist="0" default="" type="string">mode</param>
<param name="lib_dir" required="0" vallist="0" default="" type="string">lib_dir</param>
<return type="bool">bool</return>
<insert>mcrypt_module_is_block_mode(string mode [,string lib_dir]);</insert>
<dialog title="Insert mcrypt_module_is_block_mode">mcrypt_module_is_block_mode(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_module_open">
<description>Opens the module of the algorithm and the mode to be used</description>
<param name="algorithm" required="1" vallist="0" default="" type="string">algorithm</param>
<param name="algorithm_directory" required="1" vallist="0" default="" type="string">algorithm_directory</param>
<param name="mode" required="1" vallist="0" default="" type="string">mode</param>
<param name="mode_directory" required="1" vallist="0" default="" type="string">mode_directory</param>
<return type="resource">resource</return>
<insert>mcrypt_module_open(string algorithm, string algorithm_directory, string mode, string mode_directory);</insert>
<dialog title="Insert mcrypt_module_open">mcrypt_module_open(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_module_self_test">
<description>This function runs a self test on the specified module</description>
<param name="algorithm" required="1" vallist="0" default="" type="string">algorithm</param>
<param name="lib_dir" required="0" vallist="0" default="" type="string">lib_dir</param>
<return type="bool">bool</return>
<insert>mcrypt_module_self_test(string algorithm [,string lib_dir]);</insert>
<dialog title="Insert mcrypt_module_self_test">mcrypt_module_self_test(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcrypt_ofb">
<description>Encrypt/decrypt data in OFB mode</description>
<param name="cipher" required="1" vallist="0" default="" type="int">cipher</param>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<param name="iv" required="1" vallist="0" default="" type="string">iv</param>
<return type="string">string</return>
<insert>mcrypt_ofb(int cipher, string key, string data, int mode, string iv);</insert>
<dialog title="Insert mcrypt_ofb">mcrypt_ofb(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="mdecrypt_generic">
<description>Decrypt data</description>
<param name="td" required="1" vallist="0" default="" type="resource">td</param>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<return type="string">string</return>
<insert>mdecrypt_generic(resource td, string data);</insert>
<dialog title="Insert mdecrypt_generic">mdecrypt_generic(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="mcve">
<function name="mcve_adduser">
<description> Add an MCVE user using usersetup structure </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="admin_password" required="1" vallist="0" default="" type="string">admin_password</param>
<param name="usersetup" required="1" vallist="0" default="" type="int">usersetup</param>
<return type="int">int</return>
<insert>mcve_adduser(resource conn, string admin_password, int usersetup);</insert>
<dialog title="Insert mcve_adduser">mcve_adduser(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_adduserarg">
<description> Add a value to user configuration structure </description>
<param name="usersetup" required="1" vallist="0" default="" type="resource">usersetup</param>
<param name="argtype" required="1" vallist="0" default="" type="int">argtype</param>
<param name="argval" required="1" vallist="0" default="" type="string">argval</param>
<return type="int">int</return>
<insert>mcve_adduserarg(resource usersetup, int argtype, string argval);</insert>
<dialog title="Insert mcve_adduserarg">mcve_adduserarg(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_bt">
<description> Get unsettled batch totals </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<return type="int">int</return>
<insert>mcve_bt(resource conn, string username, string password);</insert>
<dialog title="Insert mcve_bt">mcve_bt(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_checkstatus">
<description> Check to see if a transaction has completed </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="identifier" required="1" vallist="0" default="" type="int">identifier</param>
<return type="int">int</return>
<insert>mcve_checkstatus(resource conn, int identifier);</insert>
<dialog title="Insert mcve_checkstatus">mcve_checkstatus(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_chkpwd">
<description> Verify Password </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<return type="int">int</return>
<insert>mcve_chkpwd(resource conn, string username, string password);</insert>
<dialog title="Insert mcve_chkpwd">mcve_chkpwd(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_chngpwd">
<description> Change the system administrator's password </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="admin_password" required="1" vallist="0" default="" type="string">admin_password</param>
<param name="new_password" required="1" vallist="0" default="" type="string">new_password</param>
<return type="int">int</return>
<insert>mcve_chngpwd(resource conn, string admin_password, string new_password);</insert>
<dialog title="Insert mcve_chngpwd">mcve_chngpwd(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_completeauthorizations">
<description> Number of complete authorizations in queue, returning an array of their identifiers </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="&amp;array" required="1" vallist="0" default="" type="int">&amp;array</param>
<return type="int">int</return>
<insert>mcve_completeauthorizations(resource conn, int &amp;array);</insert>
<dialog title="Insert mcve_completeauthorizations">mcve_completeauthorizations(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_connect">
<description> Establish the connection to MCVE </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<return type="int">int</return>
<insert>mcve_connect(resource conn);</insert>
<dialog title="Insert mcve_connect">mcve_connect(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_connectionerror">
<description> Get a textual representation of why a connection failed </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<return type="string">string</return>
<insert>mcve_connectionerror(resource conn);</insert>
<dialog title="Insert mcve_connectionerror">mcve_connectionerror(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_deleteresponse">
<description> Delete specified transaction from MCVE_CONN structure </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="identifier" required="1" vallist="0" default="" type="int">identifier</param>
<return type="bool">bool</return>
<insert>mcve_deleteresponse(resource conn, int identifier);</insert>
<dialog title="Insert mcve_deleteresponse">mcve_deleteresponse(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_deletetrans">
<description> Delete specified transaction from MCVE_CONN structure </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="identifier" required="1" vallist="0" default="" type="int">identifier</param>
<return type="bool">bool</return>
<insert>mcve_deletetrans(resource conn, int identifier);</insert>
<dialog title="Insert mcve_deletetrans">mcve_deletetrans(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_deleteusersetup">
<description> Deallocate data associated with usersetup structure </description>
<param name="usersetup" required="1" vallist="0" default="" type="resource">usersetup</param>
<return type="void">void</return>
<insert>mcve_deleteusersetup(resource usersetup);</insert>
<dialog title="Insert mcve_deleteusersetup">mcve_deleteusersetup(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_deluser">
<description> Delete an MCVE user account </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="admin_password" required="1" vallist="0" default="" type="string">admin_password</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<return type="int">int</return>
<insert>mcve_deluser(resource conn, string admin_password, string username);</insert>
<dialog title="Insert mcve_deluser">mcve_deluser(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_destroyconn">
<description> Destroy the connection and MCVE_CONN structure </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<return type="void">void</return>
<insert>mcve_destroyconn(resource conn);</insert>
<dialog title="Insert mcve_destroyconn">mcve_destroyconn(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_destroyengine">
<description> Free memory associated with IP/SSL connectivity </description>
<return type="void">void</return>
<insert>mcve_destroyengine();</insert>
<dialog title="Insert mcve_destroyengine">mcve_destroyengine();</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_disableuser">
<description> Disable an active MCVE user account </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="admin_password" required="1" vallist="0" default="" type="string">admin_password</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<return type="int">int</return>
<insert>mcve_disableuser(resource conn, string admin_password, string username);</insert>
<dialog title="Insert mcve_disableuser">mcve_disableuser(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_edituser">
<description> Edit MCVE user using usersetup structure </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="admin_password" required="1" vallist="0" default="" type="string">admin_password</param>
<param name="usersetup" required="1" vallist="0" default="" type="int">usersetup</param>
<return type="int">int</return>
<insert>mcve_edituser(resource conn, string admin_password, int usersetup);</insert>
<dialog title="Insert mcve_edituser">mcve_edituser(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_enableuser">
<description> Enable an inactive MCVE user account </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="admin_password" required="1" vallist="0" default="" type="string">admin_password</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<return type="int">int</return>
<insert>mcve_enableuser(resource conn, string admin_password, string username);</insert>
<dialog title="Insert mcve_enableuser">mcve_enableuser(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_force">
<description> Send a FORCE to MCVE. (typically, a phone-authorization) </description>
<param name="conn" required="1" vallist="0" default="" type="resiurce">conn</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="trackdata" required="1" vallist="0" default="" type="string">trackdata</param>
<param name="account" required="1" vallist="0" default="" type="string">account</param>
<param name="expdate" required="1" vallist="0" default="" type="string">expdate</param>
<param name="amount" required="1" vallist="0" default="" type="float">amount</param>
<param name="authcode" required="1" vallist="0" default="" type="string">authcode</param>
<param name="comments" required="1" vallist="0" default="" type="string">comments</param>
<param name="clerkid" required="1" vallist="0" default="" type="string">clerkid</param>
<param name="stationid" required="1" vallist="0" default="" type="string">stationid</param>
<param name="ptrannum" required="1" vallist="0" default="" type="int">ptrannum</param>
<return type="int">int</return>
<insert>mcve_force(resiurce conn, string username, string password, string trackdata, string account, string expdate, float amount, string authcode, string comments, string clerkid, string stationid, int ptrannum);</insert>
<dialog title="Insert mcve_force">mcve_force(%0, %1, %2, %3, %4, %5, %6, %7, %8, %9, %10, %11);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_getcell">
<description> Get a specific cell from a comma delimited response by column name </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="identifier" required="1" vallist="0" default="" type="int">identifier</param>
<param name="column" required="1" vallist="0" default="" type="string">column</param>
<param name="row" required="1" vallist="0" default="" type="int">row</param>
<return type="string">string</return>
<insert>mcve_getcell(resource conn, int identifier, string column, int row);</insert>
<dialog title="Insert mcve_getcell">mcve_getcell(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_getcellbynum">
<description> Get a specific cell from a comma delimited response by column number </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="identifier" required="1" vallist="0" default="" type="int">identifier</param>
<param name="column" required="1" vallist="0" default="" type="int">column</param>
<param name="row" required="1" vallist="0" default="" type="int">row</param>
<return type="string">string</return>
<insert>mcve_getcellbynum(resource conn, int identifier, int column, int row);</insert>
<dialog title="Insert mcve_getcellbynum">mcve_getcellbynum(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_getcommadelimited">
<description> Get the RAW comma delimited data returned from MCVE </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="identifier" required="1" vallist="0" default="" type="int">identifier</param>
<return type="string">string</return>
<insert>mcve_getcommadelimited(resource conn, int identifier);</insert>
<dialog title="Insert mcve_getcommadelimited">mcve_getcommadelimited(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_getheader">
<description> Get the name of the column in a comma-delimited response </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="identifier" required="1" vallist="0" default="" type="int">identifier</param>
<param name="column_num" required="1" vallist="0" default="" type="int">column_num</param>
<return type="string">string</return>
<insert>mcve_getheader(resource conn, int identifier, int column_num);</insert>
<dialog title="Insert mcve_getheader">mcve_getheader(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_getuserarg">
<description> Grab a value from usersetup structure </description>
<param name="usersetup" required="1" vallist="0" default="" type="resource">usersetup</param>
<param name="argtype" required="1" vallist="0" default="" type="int">argtype</param>
<return type="string">string</return>
<insert>mcve_getuserarg(resource usersetup, int argtype);</insert>
<dialog title="Insert mcve_getuserarg">mcve_getuserarg(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_getuserparam">
<description> Get a user response parameter </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="identifier" required="1" vallist="0" default="" type="long">identifier</param>
<param name="key" required="1" vallist="0" default="" type="int">key</param>
<return type="string">string</return>
<insert>mcve_getuserparam(resource conn, long identifier, int key);</insert>
<dialog title="Insert mcve_getuserparam">mcve_getuserparam(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_gft">
<description> Audit MCVE for Failed transactions </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="type" required="1" vallist="0" default="" type="int">type</param>
<param name="account" required="1" vallist="0" default="" type="string">account</param>
<param name="clerkid" required="1" vallist="0" default="" type="string">clerkid</param>
<param name="stationid" required="1" vallist="0" default="" type="string">stationid</param>
<param name="comments" required="1" vallist="0" default="" type="string">comments</param>
<param name="ptrannum" required="1" vallist="0" default="" type="int">ptrannum</param>
<param name="startdate" required="1" vallist="0" default="" type="string">startdate</param>
<param name="enddate" required="1" vallist="0" default="" type="string">enddate</param>
<return type="int">int</return>
<insert>mcve_gft(resource conn, string username, string password, int type, string account, string clerkid, string stationid, string comments, int ptrannum, string startdate, string enddate);</insert>
<dialog title="Insert mcve_gft">mcve_gft(%0, %1, %2, %3, %4, %5, %6, %7, %8, %9, %10);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_gl">
<description> Audit MCVE for settled transactions </description>
<param name="conn" required="1" vallist="0" default="" type="int">conn</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="type" required="1" vallist="0" default="" type="int">type</param>
<param name="account" required="1" vallist="0" default="" type="string">account</param>
<param name="batch" required="1" vallist="0" default="" type="string">batch</param>
<param name="clerkid" required="1" vallist="0" default="" type="string">clerkid</param>
<param name="stationid" required="1" vallist="0" default="" type="string">stationid</param>
<param name="comments" required="1" vallist="0" default="" type="string">comments</param>
<param name="ptrannum" required="1" vallist="0" default="" type="int">ptrannum</param>
<param name="startdate" required="1" vallist="0" default="" type="string">startdate</param>
<param name="enddate" required="1" vallist="0" default="" type="string">enddate</param>
<return type="int">int</return>
<insert>mcve_gl(int conn, string username, string password, int type, string account, string batch, string clerkid, string stationid, string comments, int ptrannum, string startdate, string enddate);</insert>
<dialog title="Insert mcve_gl">mcve_gl(%0, %1, %2, %3, %4, %5, %6, %7, %8, %9, %10, %11);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_gut">
<description> Audit MCVE for Unsettled Transactions </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="type" required="1" vallist="0" default="" type="int">type</param>
<param name="account" required="1" vallist="0" default="" type="string">account</param>
<param name="clerkid" required="1" vallist="0" default="" type="string">clerkid</param>
<param name="stationid" required="1" vallist="0" default="" type="string">stationid</param>
<param name="comments" required="1" vallist="0" default="" type="string">comments</param>
<param name="ptrannum" required="1" vallist="0" default="" type="int">ptrannum</param>
<param name="startdate" required="1" vallist="0" default="" type="string">startdate</param>
<param name="enddate" required="1" vallist="0" default="" type="string">enddate</param>
<return type="int">int</return>
<insert>mcve_gut(resource conn, string username, string password, int type, string account, string clerkid, string stationid, string comments, int ptrannum, string startdate, string enddate);</insert>
<dialog title="Insert mcve_gut">mcve_gut(%0, %1, %2, %3, %4, %5, %6, %7, %8, %9, %10);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_initconn">
<description> Create and initialize an MCVE_CONN structure </description>
<return type="resource">resource</return>
<insert>mcve_initconn();</insert>
<dialog title="Insert mcve_initconn">mcve_initconn();</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_initengine">
<description> Ready the client for IP/SSL Communication </description>
<param name="location" required="1" vallist="0" default="" type="string">location</param>
<return type="int">int</return>
<insert>mcve_initengine(string location);</insert>
<dialog title="Insert mcve_initengine">mcve_initengine(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_initusersetup">
<description> Initialize structure to store user data </description>
<return type="resource">resource</return>
<insert>mcve_initusersetup();</insert>
<dialog title="Insert mcve_initusersetup">mcve_initusersetup();</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_iscommadelimited">
<description> Checks to see if response is comma delimited </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="identifier" required="1" vallist="0" default="" type="int">identifier</param>
<return type="int">int</return>
<insert>mcve_iscommadelimited(resource conn, int identifier);</insert>
<dialog title="Insert mcve_iscommadelimited">mcve_iscommadelimited(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_liststats">
<description> List statistics for all users on MCVE system </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="admin_password" required="1" vallist="0" default="" type="string">admin_password</param>
<return type="int">int</return>
<insert>mcve_liststats(resource conn, string admin_password);</insert>
<dialog title="Insert mcve_liststats">mcve_liststats(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_listusers">
<description> List all users on MCVE system </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="admin_password" required="1" vallist="0" default="" type="string">admin_password</param>
<return type="int">int</return>
<insert>mcve_listusers(resource conn, string admin_password);</insert>
<dialog title="Insert mcve_listusers">mcve_listusers(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_maxconntimeout">
<description> The maximum amount of time the API will attempt a connection to MCVE </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="secs" required="1" vallist="0" default="" type="int">secs</param>
<return type="bool">bool</return>
<insert>mcve_maxconntimeout(resource conn, int secs);</insert>
<dialog title="Insert mcve_maxconntimeout">mcve_maxconntimeout(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_monitor">
<description> Perform communication with MCVE (send/receive data) Non-blocking </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<return type="int">int</return>
<insert>mcve_monitor(resource conn);</insert>
<dialog title="Insert mcve_monitor">mcve_monitor(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_numcolumns">
<description> Number of columns returned in a comma delimited response </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="identifier" required="1" vallist="0" default="" type="int">identifier</param>
<return type="int">int</return>
<insert>mcve_numcolumns(resource conn, int identifier);</insert>
<dialog title="Insert mcve_numcolumns">mcve_numcolumns(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_numrows">
<description> Number of rows returned in a comma delimited response </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="identifier" required="1" vallist="0" default="" type="int">identifier</param>
<return type="int">int</return>
<insert>mcve_numrows(resource conn, int identifier);</insert>
<dialog title="Insert mcve_numrows">mcve_numrows(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_override">
<description> Send an OVERRIDE to MCVE </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="trackdata" required="1" vallist="0" default="" type="string">trackdata</param>
<param name="account" required="1" vallist="0" default="" type="string">account</param>
<param name="expdate" required="1" vallist="0" default="" type="string">expdate</param>
<param name="amount" required="1" vallist="0" default="" type="float">amount</param>
<param name="street" required="1" vallist="0" default="" type="string">street</param>
<param name="zip" required="1" vallist="0" default="" type="string">zip</param>
<param name="cv" required="1" vallist="0" default="" type="string">cv</param>
<param name="comments" required="1" vallist="0" default="" type="string">comments</param>
<param name="clerkid" required="1" vallist="0" default="" type="string">clerkid</param>
<param name="stationid" required="1" vallist="0" default="" type="string">stationid</param>
<param name="ptrannum" required="1" vallist="0" default="" type="int">ptrannum</param>
<return type="int">int</return>
<insert>mcve_override(resource conn, string username, string password, string trackdata, string account, string expdate, float amount, string street, string zip, string cv, string comments, string clerkid, string stationid, int ptrannum);</insert>
<dialog title="Insert mcve_override">mcve_override(%0, %1, %2, %3, %4, %5, %6, %7, %8, %9, %10, %11, %12, %13);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_parsecommadelimited">
<description> Parse the comma delimited response so mcve_getcell, etc will work </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="identifier" required="1" vallist="0" default="" type="int">identifier</param>
<return type="int">int</return>
<insert>mcve_parsecommadelimited(resource conn, int identifier);</insert>
<dialog title="Insert mcve_parsecommadelimited">mcve_parsecommadelimited(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_ping">
<description> Send a ping request to MCVE </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<return type="int">int</return>
<insert>mcve_ping(resource conn);</insert>
<dialog title="Insert mcve_ping">mcve_ping(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_preauth">
<description> Send a PREAUTHORIZATION to MCVE </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="trackdata" required="1" vallist="0" default="" type="string">trackdata</param>
<param name="account" required="1" vallist="0" default="" type="string">account</param>
<param name="expdate" required="1" vallist="0" default="" type="string">expdate</param>
<param name="amount" required="1" vallist="0" default="" type="float">amount</param>
<param name="street" required="1" vallist="0" default="" type="string">street</param>
<param name="zip" required="1" vallist="0" default="" type="string">zip</param>
<param name="cv" required="1" vallist="0" default="" type="string">cv</param>
<param name="comments" required="1" vallist="0" default="" type="string">comments</param>
<param name="clerkid" required="1" vallist="0" default="" type="	string">clerkid</param>
<param name="stationid" required="1" vallist="0" default="" type="string">stationid</param>
<param name="ptrannum" required="1" vallist="0" default="" type="int">ptrannum</param>
<return type="int">int</return>
<insert>mcve_preauth(resource conn, string username, string password, string trackdata, string account, string expdate, float amount, string street, string zip, string cv, string comments, 	string clerkid, string stationid, int ptrannum);</insert>
<dialog title="Insert mcve_preauth">mcve_preauth(%0, %1, %2, %3, %4, %5, %6, %7, %8, %9, %10, %11, %12, %13);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_preauthcompletion">
<description> Complete a PREAUTHORIZATION... Ready it for settlement </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="finalamount" required="1" vallist="0" default="" type="float">finalamount</param>
<param name="sid" required="1" vallist="0" default="" type="int">sid</param>
<param name="ptrannum" required="1" vallist="0" default="" type="int">ptrannum</param>
<return type="int">int</return>
<insert>mcve_preauthcompletion(resource conn, string username, string password, float finalamount, int sid, int ptrannum);</insert>
<dialog title="Insert mcve_preauthcompletion">mcve_preauthcompletion(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_qc">
<description> Audit MCVE for a list of transactions in the outgoing queue </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="clerkid" required="1" vallist="0" default="" type="string">clerkid</param>
<param name="stationid" required="1" vallist="0" default="" type="string">stationid</param>
<param name="comments" required="1" vallist="0" default="" type="string">comments</param>
<param name="ptrannum" required="1" vallist="0" default="" type="int">ptrannum</param>
<return type="int">int</return>
<insert>mcve_qc(resource conn, string username, string password, string clerkid, string stationid, string comments, int ptrannum);</insert>
<dialog title="Insert mcve_qc">mcve_qc(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_responseparam">
<description> Get a custom response parameter </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="identifier" required="1" vallist="0" default="" type="long">identifier</param>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<return type="string">string</return>
<insert>mcve_responseparam(resource conn, long identifier, string key);</insert>
<dialog title="Insert mcve_responseparam">mcve_responseparam(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_return">
<description> Issue a RETURN or CREDIT to MCVE </description>
<param name="conn" required="1" vallist="0" default="" type="int">conn</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="trackdata" required="1" vallist="0" default="" type="string">trackdata</param>
<param name="account" required="1" vallist="0" default="" type="string">account</param>
<param name="expdate" required="1" vallist="0" default="" type="string">expdate</param>
<param name="amount" required="1" vallist="0" default="" type="float">amount</param>
<param name="comments" required="1" vallist="0" default="" type="string">comments</param>
<param name="clerkid" required="1" vallist="0" default="" type="string">clerkid</param>
<param name="stationid" required="1" vallist="0" default="" type="string">stationid</param>
<param name="ptrannum" required="1" vallist="0" default="" type="int">ptrannum</param>
<return type="int">int</return>
<insert>mcve_return(int conn, string username, string password, string trackdata, string account, string expdate, float amount, string comments, string clerkid, string stationid, int ptrannum);</insert>
<dialog title="Insert mcve_return">mcve_return(%0, %1, %2, %3, %4, %5, %6, %7, %8, %9, %10);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_returncode">
<description> Grab the exact return code from the transaction </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="identifier" required="1" vallist="0" default="" type="int">identifier</param>
<return type="int">int</return>
<insert>mcve_returncode(resource conn, int identifier);</insert>
<dialog title="Insert mcve_returncode">mcve_returncode(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_returnstatus">
<description> Check to see if the transaction was successful </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="identifier" required="1" vallist="0" default="" type="int">identifier</param>
<return type="int">int</return>
<insert>mcve_returnstatus(resource conn, int identifier);</insert>
<dialog title="Insert mcve_returnstatus">mcve_returnstatus(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_sale">
<description> Send a SALE to MCVE </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="trackdata" required="1" vallist="0" default="" type="string">trackdata</param>
<param name="account" required="1" vallist="0" default="" type="string">account</param>
<param name="expdate" required="1" vallist="0" default="" type="string">expdate</param>
<param name="amount" required="1" vallist="0" default="" type="float">amount</param>
<param name="street" required="1" vallist="0" default="" type="string">street</param>
<param name="zip" required="1" vallist="0" default="" type="string">zip</param>
<param name="cv" required="1" vallist="0" default="" type="string">cv</param>
<param name="comments" required="1" vallist="0" default="" type="string">comments</param>
<param name="clerkid" required="1" vallist="0" default="" type="string">clerkid</param>
<param name="stationid" required="1" vallist="0" default="" type="string">stationid</param>
<param name="ptrannum" required="1" vallist="0" default="" type="int">ptrannum</param>
<return type="int">int</return>
<insert>mcve_sale(resource conn, string username, string password, string trackdata, string account, string expdate, float amount, string street, string zip, string cv, string comments, string clerkid, string stationid, int ptrannum);</insert>
<dialog title="Insert mcve_sale">mcve_sale(%0, %1, %2, %3, %4, %5, %6, %7, %8, %9, %10, %11, %12, %13);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_setblocking">
<description> Set blocking/non-blocking mode for connection </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="tf" required="1" vallist="0" default="" type="int">tf</param>
<return type="int">int</return>
<insert>mcve_setblocking(resource conn, int tf);</insert>
<dialog title="Insert mcve_setblocking">mcve_setblocking(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_setdropfile">
<description> Set the connection method to Drop-File </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="directory" required="1" vallist="0" default="" type="string">directory</param>
<return type="int">int</return>
<insert>mcve_setdropfile(resource conn, string directory);</insert>
<dialog title="Insert mcve_setdropfile">mcve_setdropfile(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_setip">
<description> Set the connection method to IP </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="host" required="1" vallist="0" default="" type="string">host</param>
<param name="port" required="1" vallist="0" default="" type="int">port</param>
<return type="int">int</return>
<insert>mcve_setip(resource conn, string host, int port);</insert>
<dialog title="Insert mcve_setip">mcve_setip(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_setssl">
<description> Set the connection method to SSL </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="host" required="1" vallist="0" default="" type="string">host</param>
<param name="port" required="1" vallist="0" default="" type="int">port</param>
<return type="int">int</return>
<insert>mcve_setssl(resource conn, string host, int port);</insert>
<dialog title="Insert mcve_setssl">mcve_setssl(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_settimeout">
<description> Set maximum transaction time (per trans) </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="seconds" required="1" vallist="0" default="" type="int">seconds</param>
<return type="int">int</return>
<insert>mcve_settimeout(resource conn, int seconds);</insert>
<dialog title="Insert mcve_settimeout">mcve_settimeout(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_settle">
<description> Issue a settlement command to do a batch deposit </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="batch" required="1" vallist="0" default="" type="string">batch</param>
<return type="int">int</return>
<insert>mcve_settle(resource conn, string username, string password, string batch);</insert>
<dialog title="Insert mcve_settle">mcve_settle(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_text_avs">
<description> Get a textual representation of the return_avs </description>
<param name="code" required="1" vallist="0" default="" type="string">code</param>
<return type="string">string</return>
<insert>mcve_text_avs(string code);</insert>
<dialog title="Insert mcve_text_avs">mcve_text_avs(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_text_code">
<description> Get a textual representation of the return_code </description>
<param name="code" required="1" vallist="0" default="" type="string">code</param>
<return type="string">string</return>
<insert>mcve_text_code(string code);</insert>
<dialog title="Insert mcve_text_code">mcve_text_code(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_text_cv">
<description> Get a textual representation of the return_cv </description>
<param name="code" required="1" vallist="0" default="" type="int">code</param>
<return type="string">string</return>
<insert>mcve_text_cv(int code);</insert>
<dialog title="Insert mcve_text_cv">mcve_text_cv(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_transactionauth">
<description> Get the authorization number returned for the transaction (alpha-numeric) </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="identifier" required="1" vallist="0" default="" type="int">identifier</param>
<return type="string">string</return>
<insert>mcve_transactionauth(resource conn, int identifier);</insert>
<dialog title="Insert mcve_transactionauth">mcve_transactionauth(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_transactionavs">
<description> Get the Address Verification return status </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="identifier" required="1" vallist="0" default="" type="int">identifier</param>
<return type="int">int</return>
<insert>mcve_transactionavs(resource conn, int identifier);</insert>
<dialog title="Insert mcve_transactionavs">mcve_transactionavs(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_transactionbatch">
<description> Get the batch number associated with the transaction </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="identifier" required="1" vallist="0" default="" type="int">identifier</param>
<return type="int">int</return>
<insert>mcve_transactionbatch(resource conn, int identifier);</insert>
<dialog title="Insert mcve_transactionbatch">mcve_transactionbatch(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_transactioncv">
<description> Get the CVC2/CVV2/CID return status </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="identifier" required="1" vallist="0" default="" type="int">identifier</param>
<return type="int">int</return>
<insert>mcve_transactioncv(resource conn, int identifier);</insert>
<dialog title="Insert mcve_transactioncv">mcve_transactioncv(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_transactionid">
<description> Get the unique system id for the transaction </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="identifier" required="1" vallist="0" default="" type="int">identifier</param>
<return type="int">int</return>
<insert>mcve_transactionid(resource conn, int identifier);</insert>
<dialog title="Insert mcve_transactionid">mcve_transactionid(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_transactionitem">
<description> Get the ITEM number in the associated batch for this transaction </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="identifier" required="1" vallist="0" default="" type="int">identifier</param>
<return type="int">int</return>
<insert>mcve_transactionitem(resource conn, int identifier);</insert>
<dialog title="Insert mcve_transactionitem">mcve_transactionitem(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_transactionssent">
<description> Check to see if outgoing buffer is clear </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<return type="int">int</return>
<insert>mcve_transactionssent(resource conn);</insert>
<dialog title="Insert mcve_transactionssent">mcve_transactionssent(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_transactiontext">
<description> Get verbiage (text) return from MCVE or processing institution </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="identifier" required="1" vallist="0" default="" type="int">identifier</param>
<return type="string">string</return>
<insert>mcve_transactiontext(resource conn, int identifier);</insert>
<dialog title="Insert mcve_transactiontext">mcve_transactiontext(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_transinqueue">
<description> Number of transactions in client-queue </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<return type="int">int</return>
<insert>mcve_transinqueue(resource conn);</insert>
<dialog title="Insert mcve_transinqueue">mcve_transinqueue(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_transnew">
<description> Start a new transaction </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<return type="int">int</return>
<insert>mcve_transnew(resource conn);</insert>
<dialog title="Insert mcve_transnew">mcve_transnew(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_transparam">
<description> Add a parameter to a transaction </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="identifier" required="1" vallist="0" default="" type="long">identifier</param>
<param name="key" required="1" vallist="0" default="" type="int">key</param>
<return type="int">int</return>
<insert>mcve_transparam(resource conn, long identifier, int key);</insert>
<dialog title="Insert mcve_transparam">mcve_transparam(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_transsend">
<description> Finalize and send the transaction </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="identifier" required="1" vallist="0" default="" type="long">identifier</param>
<return type="int">int</return>
<insert>mcve_transsend(resource conn, long identifier);</insert>
<dialog title="Insert mcve_transsend">mcve_transsend(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_ub">
<description> Get a list of all Unsettled batches </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<return type="int">int</return>
<insert>mcve_ub(resource conn, string username, string password);</insert>
<dialog title="Insert mcve_ub">mcve_ub(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_uwait">
<description> Wait x microsecs </description>
<param name="microsecs" required="1" vallist="0" default="" type="long">microsecs</param>
<return type="int">int</return>
<insert>mcve_uwait(long microsecs);</insert>
<dialog title="Insert mcve_uwait">mcve_uwait(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_verifyconnection">
<description> Set whether or not to PING upon connect to verify connection </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="tf" required="1" vallist="0" default="" type="int">tf</param>
<return type="bool">bool</return>
<insert>mcve_verifyconnection(resource conn, int tf);</insert>
<dialog title="Insert mcve_verifyconnection">mcve_verifyconnection(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_verifysslcert">
<description> Set whether or not to verify the server ssl certificate </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="tf" required="1" vallist="0" default="" type="int">tf</param>
<return type="bool">bool</return>
<insert>mcve_verifysslcert(resource conn, int tf);</insert>
<dialog title="Insert mcve_verifysslcert">mcve_verifysslcert(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mcve_void">
<description> VOID a transaction in the settlement queue </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="sid" required="1" vallist="0" default="" type="int">sid</param>
<param name="ptrannum" required="1" vallist="0" default="" type="int">ptrannum</param>
<return type="int">int</return>
<insert>mcve_void(resource conn, string username, string password, int sid, int ptrannum);</insert>
<dialog title="Insert mcve_void">mcve_void(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="mhash">
<function name="mhash_count">
<description>Get the highest available hash id</description>
<return type="int">int</return>
<insert>mhash_count();</insert>
<dialog title="Insert mhash_count">mhash_count();</dialog>
<info title="Info window"></info>
</function>
<function name="mhash_get_block_size">
<description>Get the block size of the specified hash</description>
<param name="hash" required="1" vallist="0" default="" type="int">hash</param>
<return type="int">int</return>
<insert>mhash_get_block_size(int hash);</insert>
<dialog title="Insert mhash_get_block_size">mhash_get_block_size(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mhash_get_hash_name">
<description>Get the name of the specified hash</description>
<param name="hash" required="1" vallist="0" default="" type="int">hash</param>
<return type="string">string</return>
<insert>mhash_get_hash_name(int hash);</insert>
<dialog title="Insert mhash_get_hash_name">mhash_get_hash_name(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mhash_keygen_s2k">
<description>Generates a key</description>
<param name="hash" required="1" vallist="0" default="" type="int">hash</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="salt" required="1" vallist="0" default="" type="string">salt</param>
<param name="bytes" required="1" vallist="0" default="" type="int">bytes</param>
<return type="string">string</return>
<insert>mhash_keygen_s2k(int hash, string password, string salt, int bytes);</insert>
<dialog title="Insert mhash_keygen_s2k">mhash_keygen_s2k(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="mhash">
<description>Compute hash</description>
<param name="hash" required="1" vallist="0" default="" type="int">hash</param>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<param name="key" required="0" vallist="0" default="" type="string">key</param>
<return type="string">string</return>
<insert>mhash(int hash, string data [,string key]);</insert>
<dialog title="Insert mhash">mhash(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="mime_magic">
<function name="mime_content_type">
<description>Detect MIME Content-type for a file</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="string">string</return>
<insert>mime_content_type(string filename);</insert>
<dialog title="Insert mime_content_type">mime_content_type(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="ming">
<function name="ming_setcubicthreshold">
<description>
     Set cubic threshold (?)
    </description>
<param name="threshold" required="1" vallist="0" default="" type="int">threshold</param>
<return type="void">void</return>
<insert>ming_setcubicthreshold(int threshold);</insert>
<dialog title="Insert ming_setcubicthreshold">ming_setcubicthreshold(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ming_setscale">
<description>
     Set scale (?)
    </description>
<param name="scale" required="1" vallist="0" default="" type="int">scale</param>
<return type="void">void</return>
<insert>ming_setscale(int scale);</insert>
<dialog title="Insert ming_setscale">ming_setscale(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ming_useswfversion">
<description>
     Use SWF version (?)
    </description>
<param name="version" required="1" vallist="0" default="" type="int">version</param>
<return type="void">void</return>
<insert>ming_useswfversion(int version);</insert>
<dialog title="Insert ming_useswfversion">ming_useswfversion(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFAction">
<description>Creates a new Action.</description>
<param name="script" required="1" vallist="0" default="" type="string">script</param>
<return type="new">new</return>
<insert>SWFAction(string script);</insert>
<dialog title="Insert SWFAction">SWFAction(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFBitmap->getHeight">
<description>Returns the bitmap's height.</description>
<return type="int">int</return>
<insert>SWFBitmap->getHeight();</insert>
<dialog title="Insert SWFBitmap->getHeight">SWFBitmap->getHeight();</dialog>
<info title="Info window"></info>
</function>
<function name="SWFBitmap->getWidth">
<description>Returns the bitmap's width.</description>
<return type="int">int</return>
<insert>SWFBitmap->getWidth();</insert>
<dialog title="Insert SWFBitmap->getWidth">SWFBitmap->getWidth();</dialog>
<info title="Info window"></info>
</function>
<function name="SWFBitmap">
<description>Loads Bitmap object</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="alphafilename" required="0" vallist="0" default="" type="int">alphafilename</param>
<return type="new">new</return>
<insert>SWFBitmap(string filename [,int alphafilename]);</insert>
<dialog title="Insert SWFBitmap">SWFBitmap(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="swfbutton_keypress">
<description>
     Returns the action flag for keyPress(char)
    </description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<return type="int">int</return>
<insert>swfbutton_keypress(string str);</insert>
<dialog title="Insert swfbutton_keypress">swfbutton_keypress(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFbutton->addAction">
<description>Adds an action</description>
<param name="action" required="1" vallist="0" default="" type="ressource">action</param>
<param name="flags" required="1" vallist="0" default="" type="int">flags</param>
<return type="void">void</return>
<insert>SWFbutton->addAction(ressource action, int flags);</insert>
<dialog title="Insert SWFbutton->addAction">SWFbutton->addAction(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFbutton->addShape">
<description>Adds a shape to a button</description>
<param name="shape" required="1" vallist="0" default="" type="ressource">shape</param>
<param name="flags" required="1" vallist="0" default="" type="int">flags</param>
<return type="void">void</return>
<insert>SWFbutton->addShape(ressource shape, int flags);</insert>
<dialog title="Insert SWFbutton->addShape">SWFbutton->addShape(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFbutton->setAction">
<description>Sets the action</description>
<param name="action" required="1" vallist="0" default="" type="ressource">action</param>
<return type="void">void</return>
<insert>SWFbutton->setAction(ressource action);</insert>
<dialog title="Insert SWFbutton->setAction">SWFbutton->setAction(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFbutton->setdown">
<description>Alias for addShape(shape, SWFBUTTON_DOWN))</description>
<param name="shape" required="1" vallist="0" default="" type="ressource">shape</param>
<return type="void">void</return>
<insert>SWFbutton->setdown(ressource shape);</insert>
<dialog title="Insert SWFbutton->setdown">SWFbutton->setdown(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFbutton->setHit">
<description>Alias for addShape(shape, SWFBUTTON_HIT)</description>
<param name="shape" required="1" vallist="0" default="" type="ressource">shape</param>
<return type="void">void</return>
<insert>SWFbutton->setHit(ressource shape);</insert>
<dialog title="Insert SWFbutton->setHit">SWFbutton->setHit(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFbutton->setOver">
<description>Alias for addShape(shape, SWFBUTTON_OVER)</description>
<param name="shape" required="1" vallist="0" default="" type="ressource">shape</param>
<return type="void">void</return>
<insert>SWFbutton->setOver(ressource shape);</insert>
<dialog title="Insert SWFbutton->setOver">SWFbutton->setOver(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFbutton->setUp">
<description>Alias for addShape(shape, SWFBUTTON_UP)</description>
<param name="shape" required="1" vallist="0" default="" type="ressource">shape</param>
<return type="void">void</return>
<insert>SWFbutton->setUp(ressource shape);</insert>
<dialog title="Insert SWFbutton->setUp">SWFbutton->setUp(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFbutton">
<description>Creates a new Button.</description>
<return type="new">new</return>
<insert>SWFbutton();</insert>
<dialog title="Insert SWFbutton">SWFbutton();</dialog>
<info title="Info window"></info>
</function>
<function name="SWFDisplayItem->addColor">
<description>Adds the given color to this item's color transform.</description>
<param name="red" required="0" vallist="0" default="" type="int">red</param>
<param name="green" required="0" vallist="0" default="" type="int">green</param>
<param name="blue" required="0" vallist="0" default="" type="int">blue</param>
<param name="a" required="0" vallist="0" default="" type="int">a</param>
<return type="void">void</return>
<insert>SWFDisplayItem->addColor([int red] [,int green] [,int blue] [,int a]);</insert>
<dialog title="Insert SWFDisplayItem->addColor">SWFDisplayItem->addColor(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFDisplayItem->move">
<description>Moves object in relative coordinates.</description>
<param name="dx" required="1" vallist="0" default="" type="int">dx</param>
<param name="dy" required="1" vallist="0" default="" type="int">dy</param>
<return type="void">void</return>
<insert>SWFDisplayItem->move(int dx, int dy);</insert>
<dialog title="Insert SWFDisplayItem->move">SWFDisplayItem->move(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFDisplayItem->moveTo">
<description>Moves object in global coordinates.</description>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<return type="void">void</return>
<insert>SWFDisplayItem->moveTo(int x, int y);</insert>
<dialog title="Insert SWFDisplayItem->moveTo">SWFDisplayItem->moveTo(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFDisplayItem->multColor">
<description>Multiplies the item's color transform.</description>
<param name="red" required="0" vallist="0" default="" type="int">red</param>
<param name="green" required="0" vallist="0" default="" type="int">green</param>
<param name="blue" required="0" vallist="0" default="" type="int">blue</param>
<param name="a" required="0" vallist="0" default="" type="int">a</param>
<return type="void">void</return>
<insert>SWFDisplayItem->multColor([int red] [,int green] [,int blue] [,int a]);</insert>
<dialog title="Insert SWFDisplayItem->multColor">SWFDisplayItem->multColor(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFDisplayItem->remove">
<description>Removes the object from the movie</description>
<return type="void">void</return>
<insert>SWFDisplayItem->remove();</insert>
<dialog title="Insert SWFDisplayItem->remove">SWFDisplayItem->remove();</dialog>
<info title="Info window"></info>
</function>
<function name="SWFDisplayItem->Rotate">
<description>Rotates in relative coordinates.</description>
<param name="ddegrees" required="1" vallist="0" default="" type="float">ddegrees</param>
<return type="void">void</return>
<insert>SWFDisplayItem->Rotate(float ddegrees);</insert>
<dialog title="Insert SWFDisplayItem->Rotate">SWFDisplayItem->Rotate(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFDisplayItem->rotateTo">
<description>Rotates the object in global coordinates.</description>
<param name="degrees" required="1" vallist="0" default="" type="float">degrees</param>
<return type="void">void</return>
<insert>SWFDisplayItem->rotateTo(float degrees);</insert>
<dialog title="Insert SWFDisplayItem->rotateTo">SWFDisplayItem->rotateTo(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFDisplayItem->scale">
<description>Scales the object in relative coordinates.</description>
<param name="dx" required="1" vallist="0" default="" type="int">dx</param>
<param name="dy" required="1" vallist="0" default="" type="int">dy</param>
<return type="void">void</return>
<insert>SWFDisplayItem->scale(int dx, int dy);</insert>
<dialog title="Insert SWFDisplayItem->scale">SWFDisplayItem->scale(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFDisplayItem->scaleTo">
<description>Scales the object in global coordinates.</description>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<return type="void">void</return>
<insert>SWFDisplayItem->scaleTo(int x, int y);</insert>
<dialog title="Insert SWFDisplayItem->scaleTo">SWFDisplayItem->scaleTo(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFDisplayItem->setDepth">
<description>Sets z-order</description>
<param name="depth" required="1" vallist="0" default="" type="float">depth</param>
<return type="void">void</return>
<insert>SWFDisplayItem->setDepth(float depth);</insert>
<dialog title="Insert SWFDisplayItem->setDepth">SWFDisplayItem->setDepth(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFDisplayItem->setName">
<description>Sets the object's name</description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="void">void</return>
<insert>SWFDisplayItem->setName(string name);</insert>
<dialog title="Insert SWFDisplayItem->setName">SWFDisplayItem->setName(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFDisplayItem->setRatio">
<description>Sets the object's ratio.</description>
<param name="ratio" required="1" vallist="0" default="" type="float">ratio</param>
<return type="void">void</return>
<insert>SWFDisplayItem->setRatio(float ratio);</insert>
<dialog title="Insert SWFDisplayItem->setRatio">SWFDisplayItem->setRatio(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFDisplayItem->skewX">
<description>Sets the X-skew.</description>
<param name="ddegrees" required="1" vallist="0" default="" type="float">ddegrees</param>
<return type="void">void</return>
<insert>SWFDisplayItem->skewX(float ddegrees);</insert>
<dialog title="Insert SWFDisplayItem->skewX">SWFDisplayItem->skewX(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFDisplayItem->skewXTo">
<description>Sets the X-skew.</description>
<param name="degrees" required="1" vallist="0" default="" type="float">degrees</param>
<return type="void">void</return>
<insert>SWFDisplayItem->skewXTo(float degrees);</insert>
<dialog title="Insert SWFDisplayItem->skewXTo">SWFDisplayItem->skewXTo(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFDisplayItem->skewY">
<description>Sets the Y-skew.</description>
<param name="ddegrees" required="1" vallist="0" default="" type="float">ddegrees</param>
<return type="void">void</return>
<insert>SWFDisplayItem->skewY(float ddegrees);</insert>
<dialog title="Insert SWFDisplayItem->skewY">SWFDisplayItem->skewY(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFDisplayItem->skewYTo">
<description>Sets the Y-skew.</description>
<param name="degrees" required="1" vallist="0" default="" type="float">degrees</param>
<return type="void">void</return>
<insert>SWFDisplayItem->skewYTo(float degrees);</insert>
<dialog title="Insert SWFDisplayItem->skewYTo">SWFDisplayItem->skewYTo(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFDisplayItem">
<description>Creates a new displayitem object.</description>
<return type="new">new</return>
<insert>SWFDisplayItem();</insert>
<dialog title="Insert SWFDisplayItem">SWFDisplayItem();</dialog>
<info title="Info window"></info>
</function>
<function name="SWFFill->moveTo">
<description>Moves fill origin</description>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<return type="void">void</return>
<insert>SWFFill->moveTo(int x, int y);</insert>
<dialog title="Insert SWFFill->moveTo">SWFFill->moveTo(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFFill->rotateTo">
<description>Sets fill's rotation</description>
<param name="degrees" required="1" vallist="0" default="" type="float">degrees</param>
<return type="void">void</return>
<insert>SWFFill->rotateTo(float degrees);</insert>
<dialog title="Insert SWFFill->rotateTo">SWFFill->rotateTo(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFFill->scaleTo">
<description>Sets fill's scale</description>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<return type="void">void</return>
<insert>SWFFill->scaleTo(int x, int y);</insert>
<dialog title="Insert SWFFill->scaleTo">SWFFill->scaleTo(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFFill->skewXTo">
<description>Sets fill x-skew</description>
<param name="x" required="1" vallist="0" default="" type="float">x</param>
<return type="void">void</return>
<insert>SWFFill->skewXTo(float x);</insert>
<dialog title="Insert SWFFill->skewXTo">SWFFill->skewXTo(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFFill->skewYTo">
<description>Sets fill y-skew</description>
<param name="y" required="1" vallist="0" default="" type="float">y</param>
<return type="void">void</return>
<insert>SWFFill->skewYTo(float y);</insert>
<dialog title="Insert SWFFill->skewYTo">SWFFill->skewYTo(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFFill">
<description>Loads SWFFill object</description>
<return type="new">new</return>
<insert>SWFFill();</insert>
<dialog title="Insert SWFFill">SWFFill();</dialog>
<info title="Info window"></info>
</function>
<function name="swffont->getwidth">
<description>Returns the string's width</description>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<return type="int">int</return>
<insert>swffont->getwidth(string string);</insert>
<dialog title="Insert swffont->getwidth">swffont->getwidth(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFFont">
<description>Loads a font definition</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="new">new</return>
<insert>SWFFont(string filename);</insert>
<dialog title="Insert SWFFont">SWFFont(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFGradient->addEntry">
<description>Adds an entry to the gradient list.</description>
<param name="ratio" required="1" vallist="0" default="" type="float">ratio</param>
<param name="red" required="1" vallist="0" default="" type="int">red</param>
<param name="green" required="1" vallist="0" default="" type="int">green</param>
<param name="blue" required="1" vallist="0" default="" type="int">blue</param>
<param name="a" required="0" vallist="0" default="" type="int">a</param>
<return type="void">void</return>
<insert>SWFGradient->addEntry(float ratio, int red, int green, int blue [,int a]);</insert>
<dialog title="Insert SWFGradient->addEntry">SWFGradient->addEntry(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFGradient">
<description>Creates a gradient object</description>
<return type="new">new</return>
<insert>SWFGradient();</insert>
<dialog title="Insert SWFGradient">SWFGradient();</dialog>
<info title="Info window"></info>
</function>
<function name="SWFMorph->getshape1">
<description>Gets a handle to the starting shape</description>
<return type="mixed">mixed</return>
<insert>SWFMorph->getshape1();</insert>
<dialog title="Insert SWFMorph->getshape1">SWFMorph->getshape1();</dialog>
<info title="Info window"></info>
</function>
<function name="SWFMorph->getshape2">
<description>Gets a handle to the ending shape</description>
<return type="mixed">mixed</return>
<insert>SWFMorph->getshape2();</insert>
<dialog title="Insert SWFMorph->getshape2">SWFMorph->getshape2();</dialog>
<info title="Info window"></info>
</function>
<function name="SWFMorph">
<description>Creates a new SWFMorph object.</description>
<return type="new">new</return>
<insert>SWFMorph();</insert>
<dialog title="Insert SWFMorph">SWFMorph();</dialog>
<info title="Info window"></info>
</function>
<function name="SWFMovie->add">
<description>Adds any type of data to a movie.</description>
<param name="instance" required="1" vallist="0" default="" type="ressource">instance</param>
<return type="void">void</return>
<insert>SWFMovie->add(ressource instance);</insert>
<dialog title="Insert SWFMovie->add">SWFMovie->add(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFMovie->nextframe">
<description>Moves to the next frame of the animation.</description>
<return type="void">void</return>
<insert>SWFMovie->nextframe();</insert>
<dialog title="Insert SWFMovie->nextframe">SWFMovie->nextframe();</dialog>
<info title="Info window"></info>
</function>
<function name="SWFMovie->output">
<description>Dumps your lovingly prepared movie out.</description>
<return type="void">void</return>
<insert>SWFMovie->output();</insert>
<dialog title="Insert SWFMovie->output">SWFMovie->output();</dialog>
<info title="Info window"></info>
</function>
<function name="swfmovie->remove">
<description>Removes the object instance from the display list.</description>
<param name="instance" required="1" vallist="0" default="" type="resource">instance</param>
<return type="void">void</return>
<insert>swfmovie->remove(resource instance);</insert>
<dialog title="Insert swfmovie->remove">swfmovie->remove(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFMovie->save">
<description>Saves your movie in a file.</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="void">void</return>
<insert>SWFMovie->save(string filename);</insert>
<dialog title="Insert SWFMovie->save">SWFMovie->save(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFMovie->setbackground">
<description>Sets the background color.</description>
<param name="red" required="1" vallist="0" default="" type="int">red</param>
<param name="green" required="1" vallist="0" default="" type="int">green</param>
<param name="blue" required="1" vallist="0" default="" type="int">blue</param>
<return type="void">void</return>
<insert>SWFMovie->setbackground(int red, int green, int blue);</insert>
<dialog title="Insert SWFMovie->setbackground">SWFMovie->setbackground(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFMovie->setdimension">
<description>Sets the movie's width and height.</description>
<param name="width" required="1" vallist="0" default="" type="int">width</param>
<param name="height" required="1" vallist="0" default="" type="int">height</param>
<return type="void">void</return>
<insert>SWFMovie->setdimension(int width, int height);</insert>
<dialog title="Insert SWFMovie->setdimension">SWFMovie->setdimension(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFMovie->setframes">
<description>Sets the total number of frames in the animation.</description>
<param name="numberofframes" required="1" vallist="0" default="" type="string">numberofframes</param>
<return type="void">void</return>
<insert>SWFMovie->setframes(string numberofframes);</insert>
<dialog title="Insert SWFMovie->setframes">SWFMovie->setframes(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFMovie->setrate">
<description>Sets the animation's frame rate.</description>
<param name="rate" required="1" vallist="0" default="" type="int">rate</param>
<return type="void">void</return>
<insert>SWFMovie->setrate(int rate);</insert>
<dialog title="Insert SWFMovie->setrate">SWFMovie->setrate(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFMovie->streammp3">
<description>Streams a MP3 file.</description>
<param name="mp3FileName" required="1" vallist="0" default="" type="string">mp3FileName</param>
<return type="void">void</return>
<insert>SWFMovie->streammp3(string mp3FileName);</insert>
<dialog title="Insert SWFMovie->streammp3">SWFMovie->streammp3(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFMovie">
<description>Creates a new movie object, representing an SWF version 4 movie.</description>
<return type="new">new</return>
<insert>SWFMovie();</insert>
<dialog title="Insert SWFMovie">SWFMovie();</dialog>
<info title="Info window"></info>
</function>
<function name="SWFShape->addFill">
<description>Adds a solid fill to the shape.</description>
<param name="red" required="1" vallist="0" default="" type="int">red</param>
<param name="green" required="1" vallist="0" default="" type="int">green</param>
<param name="blue" required="1" vallist="0" default="" type="int">blue</param>
<param name="a" required="0" vallist="0" default="" type="int">a</param>
<return type="void">void</return>
<insert>SWFShape->addFill(int red, int green, int blue [,int a]);</insert>
<dialog title="Insert SWFShape->addFill">SWFShape->addFill(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFShape->drawCurve">
<description>Draws a curve (relative).</description>
<param name="controldx" required="1" vallist="0" default="" type="int">controldx</param>
<param name="controldy" required="1" vallist="0" default="" type="int">controldy</param>
<param name="anchordx" required="1" vallist="0" default="" type="int">anchordx</param>
<param name="anchordy" required="1" vallist="0" default="" type="int">anchordy</param>
<return type="void">void</return>
<insert>SWFShape->drawCurve(int controldx, int controldy, int anchordx, int anchordy);</insert>
<dialog title="Insert SWFShape->drawCurve">SWFShape->drawCurve(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFShape->drawCurveTo">
<description>Draws a curve.</description>
<param name="controlx" required="1" vallist="0" default="" type="int">controlx</param>
<param name="controly" required="1" vallist="0" default="" type="int">controly</param>
<param name="anchorx" required="1" vallist="0" default="" type="int">anchorx</param>
<param name="anchory" required="1" vallist="0" default="" type="int">anchory</param>
<return type="void">void</return>
<insert>SWFShape->drawCurveTo(int controlx, int controly, int anchorx, int anchory);</insert>
<dialog title="Insert SWFShape->drawCurveTo">SWFShape->drawCurveTo(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFShape->drawLine">
<description>Draws a line (relative).</description>
<param name="dx" required="1" vallist="0" default="" type="int">dx</param>
<param name="dy" required="1" vallist="0" default="" type="int">dy</param>
<return type="void">void</return>
<insert>SWFShape->drawLine(int dx, int dy);</insert>
<dialog title="Insert SWFShape->drawLine">SWFShape->drawLine(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFShape->drawLineTo">
<description>Draws a line.</description>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<return type="void">void</return>
<insert>SWFShape->drawLineTo(int x, int y);</insert>
<dialog title="Insert SWFShape->drawLineTo">SWFShape->drawLineTo(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFShape->movePen">
<description>Moves the shape's pen (relative).</description>
<param name="dx" required="1" vallist="0" default="" type="int">dx</param>
<param name="dy" required="1" vallist="0" default="" type="int">dy</param>
<return type="void">void</return>
<insert>SWFShape->movePen(int dx, int dy);</insert>
<dialog title="Insert SWFShape->movePen">SWFShape->movePen(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFShape->movePenTo">
<description>Moves the shape's pen.</description>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<return type="void">void</return>
<insert>SWFShape->movePenTo(int x, int y);</insert>
<dialog title="Insert SWFShape->movePenTo">SWFShape->movePenTo(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFShape->setLeftFill">
<description>Sets left rasterizing color.</description>
<param name="fill" required="1" vallist="0" default="" type="swfgradient">fill</param>
<return type="void">void</return>
<insert>SWFShape->setLeftFill(swfgradient fill);</insert>
<dialog title="Insert SWFShape->setLeftFill">SWFShape->setLeftFill(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFShape->setLine">
<description>Sets the shape's line style.</description>
<param name="width" required="1" vallist="0" default="" type="int">width</param>
<param name="red" required="0" vallist="0" default="" type="int">red</param>
<param name="green" required="0" vallist="0" default="" type="int">green</param>
<param name="blue" required="0" vallist="0" default="" type="int">blue</param>
<param name="a" required="0" vallist="0" default="" type="int">a</param>
<return type="void">void</return>
<insert>SWFShape->setLine(int width [,int red] [,int green] [,int blue] [,int a]);</insert>
<dialog title="Insert SWFShape->setLine">SWFShape->setLine(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFShape->setRightFill">
<description>Sets right rasterizing color.</description>
<param name="fill" required="1" vallist="0" default="" type="swfgradient">fill</param>
<return type="void">void</return>
<insert>SWFShape->setRightFill(swfgradient fill);</insert>
<dialog title="Insert SWFShape->setRightFill">SWFShape->setRightFill(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFShape">
<description>Creates a new shape object.</description>
<return type="new">new</return>
<insert>SWFShape();</insert>
<dialog title="Insert SWFShape">SWFShape();</dialog>
<info title="Info window"></info>
</function>
<function name="swfsprite->add">
<description>Adds an object to a sprite</description>
<param name="object" required="1" vallist="0" default="" type="resource">object</param>
<return type="void">void</return>
<insert>swfsprite->add(resource object);</insert>
<dialog title="Insert swfsprite->add">swfsprite->add(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFSprite->nextframe">
<description>Moves to the next frame of the animation.</description>
<return type="void">void</return>
<insert>SWFSprite->nextframe();</insert>
<dialog title="Insert SWFSprite->nextframe">SWFSprite->nextframe();</dialog>
<info title="Info window"></info>
</function>
<function name="SWFSprite->remove">
<description>Removes an object to a sprite</description>
<param name="object" required="1" vallist="0" default="" type="ressource">object</param>
<return type="void">void</return>
<insert>SWFSprite->remove(ressource object);</insert>
<dialog title="Insert SWFSprite->remove">SWFSprite->remove(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFSprite->setframes">
<description>Sets the total number of frames in the animation.</description>
<param name="numberofframes" required="1" vallist="0" default="" type="int">numberofframes</param>
<return type="void">void</return>
<insert>SWFSprite->setframes(int numberofframes);</insert>
<dialog title="Insert SWFSprite->setframes">SWFSprite->setframes(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFSprite">
<description>Creates a movie clip (a sprite)</description>
<return type="new">new</return>
<insert>SWFSprite();</insert>
<dialog title="Insert SWFSprite">SWFSprite();</dialog>
<info title="Info window"></info>
</function>
<function name="SWFText->addString">
<description>Draws a string</description>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<return type="void">void</return>
<insert>SWFText->addString(string string);</insert>
<dialog title="Insert SWFText->addString">SWFText->addString(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFText->getWidth">
<description>Computes string's width</description>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<return type="void">void</return>
<insert>SWFText->getWidth(string string);</insert>
<dialog title="Insert SWFText->getWidth">SWFText->getWidth(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFText->moveTo">
<description>Moves the pen</description>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<return type="void">void</return>
<insert>SWFText->moveTo(int x, int y);</insert>
<dialog title="Insert SWFText->moveTo">SWFText->moveTo(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFText->setColor">
<description>Sets the current font color</description>
<param name="red" required="1" vallist="0" default="" type="int">red</param>
<param name="green" required="1" vallist="0" default="" type="int">green</param>
<param name="blue" required="1" vallist="0" default="" type="int">blue</param>
<param name="a" required="0" vallist="0" default="" type="int">a</param>
<return type="void">void</return>
<insert>SWFText->setColor(int red, int green, int blue [,int a]);</insert>
<dialog title="Insert SWFText->setColor">SWFText->setColor(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFText->setFont">
<description>Sets the current font</description>
<param name="font" required="1" vallist="0" default="" type="string">font</param>
<return type="void">void</return>
<insert>SWFText->setFont(string font);</insert>
<dialog title="Insert SWFText->setFont">SWFText->setFont(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFText->setHeight">
<description>Sets the current font height</description>
<param name="height" required="1" vallist="0" default="" type="int">height</param>
<return type="void">void</return>
<insert>SWFText->setHeight(int height);</insert>
<dialog title="Insert SWFText->setHeight">SWFText->setHeight(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFText->setSpacing">
<description>Sets the current font spacing</description>
<param name="spacing" required="1" vallist="0" default="" type="float">spacing</param>
<return type="void">void</return>
<insert>SWFText->setSpacing(float spacing);</insert>
<dialog title="Insert SWFText->setSpacing">SWFText->setSpacing(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFText">
<description>Creates a new SWFText object.</description>
<return type="new">new</return>
<insert>SWFText();</insert>
<dialog title="Insert SWFText">SWFText();</dialog>
<info title="Info window"></info>
</function>
<function name="SWFTextField->addstring">
<description>Concatenates the given string to the text field</description>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<return type="void">void</return>
<insert>SWFTextField->addstring(string string);</insert>
<dialog title="Insert SWFTextField->addstring">SWFTextField->addstring(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFTextField->align">
<description>Sets the text field alignment</description>
<param name="alignement" required="1" vallist="0" default="" type="int">alignement</param>
<return type="void">void</return>
<insert>SWFTextField->align(int alignement);</insert>
<dialog title="Insert SWFTextField->align">SWFTextField->align(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFTextField->setbounds">
<description>Sets the text field width and height</description>
<param name="width" required="1" vallist="0" default="" type="int">width</param>
<param name="height" required="1" vallist="0" default="" type="int">height</param>
<return type="void">void</return>
<insert>SWFTextField->setbounds(int width, int height);</insert>
<dialog title="Insert SWFTextField->setbounds">SWFTextField->setbounds(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFTextField->setcolor">
<description>Sets the color of the text field. </description>
<param name="red" required="1" vallist="0" default="" type="int">red</param>
<param name="green" required="1" vallist="0" default="" type="int">green</param>
<param name="blue" required="1" vallist="0" default="" type="int">blue</param>
<param name="a" required="0" vallist="0" default="" type="int">a</param>
<return type="void">void</return>
<insert>SWFTextField->setcolor(int red, int green, int blue [,int a]);</insert>
<dialog title="Insert SWFTextField->setcolor">SWFTextField->setcolor(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFTextField->setFont">
<description>Sets the text field font</description>
<param name="font" required="1" vallist="0" default="" type="string">font</param>
<return type="void">void</return>
<insert>SWFTextField->setFont(string font);</insert>
<dialog title="Insert SWFTextField->setFont">SWFTextField->setFont(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFTextField->setHeight">
<description>Sets the font height of this text field font.</description>
<param name="height" required="1" vallist="0" default="" type="int">height</param>
<return type="void">void</return>
<insert>SWFTextField->setHeight(int height);</insert>
<dialog title="Insert SWFTextField->setHeight">SWFTextField->setHeight(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFTextField->setindentation">
<description>Sets the indentation of the first line.</description>
<param name="width" required="1" vallist="0" default="" type="int">width</param>
<return type="void">void</return>
<insert>SWFTextField->setindentation(int width);</insert>
<dialog title="Insert SWFTextField->setindentation">SWFTextField->setindentation(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFTextField->setLeftMargin">
<description>Sets the left margin width of the text field.</description>
<param name="width" required="1" vallist="0" default="" type="int">width</param>
<return type="void">void</return>
<insert>SWFTextField->setLeftMargin(int width);</insert>
<dialog title="Insert SWFTextField->setLeftMargin">SWFTextField->setLeftMargin(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFTextField->setLineSpacing">
<description>Sets the line spacing of the text field.</description>
<param name="height" required="1" vallist="0" default="" type="int">height</param>
<return type="void">void</return>
<insert>SWFTextField->setLineSpacing(int height);</insert>
<dialog title="Insert SWFTextField->setLineSpacing">SWFTextField->setLineSpacing(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFTextField->setMargins">
<description>Sets the margins width of the text field.</description>
<param name="left" required="1" vallist="0" default="" type="int">left</param>
<param name="right" required="1" vallist="0" default="" type="int">right</param>
<return type="void">void</return>
<insert>SWFTextField->setMargins(int left, int right);</insert>
<dialog title="Insert SWFTextField->setMargins">SWFTextField->setMargins(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFTextField->setname">
<description>Sets the variable name</description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="void">void</return>
<insert>SWFTextField->setname(string name);</insert>
<dialog title="Insert SWFTextField->setname">SWFTextField->setname(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFTextField->setrightMargin">
<description>Sets the right margin width of the text field.</description>
<param name="width" required="1" vallist="0" default="" type="int">width</param>
<return type="void">void</return>
<insert>SWFTextField->setrightMargin(int width);</insert>
<dialog title="Insert SWFTextField->setrightMargin">SWFTextField->setrightMargin(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="SWFTextField">
<description>Creates a text field object</description>
<param name="flags" required="0" vallist="0" default="" type="int">flags</param>
<return type="new">new</return>
<insert>SWFTextField([int flags]);</insert>
<dialog title="Insert SWFTextField">SWFTextField(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="misc">
<function name="connection_aborted">
<description>Returns </description>
<return type="int">int</return>
<insert>connection_aborted();</insert>
<dialog title="Insert connection_aborted">connection_aborted();</dialog>
<info title="Info window"></info>
</function>
<function name="connection_status">
<description>Returns connection status bitfield</description>
<return type="int">int</return>
<insert>connection_status();</insert>
<dialog title="Insert connection_status">connection_status();</dialog>
<info title="Info window"></info>
</function>
<function name="connection_timeout">
<description>Return </description>
<return type="bool">bool</return>
<insert>connection_timeout();</insert>
<dialog title="Insert connection_timeout">connection_timeout();</dialog>
<info title="Info window"></info>
</function>
<function name="constant">
<description>Returns the value of a constant</description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="mixed">mixed</return>
<insert>constant(string name);</insert>
<dialog title="Insert constant">constant(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="define">
<description>Defines a named constant.</description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<param name="value" required="1" vallist="0" default="" type="mixed">value</param>
<param name="case_insensitive" required="0" vallist="0" default="" type="bool">case_insensitive</param>
<return type="bool">bool</return>
<insert>define(string name, mixed value [,bool case_insensitive]);</insert>
<dialog title="Insert define">define(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="defined">
<description>
     Checks whether a given named constant exists
    </description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="bool">bool</return>
<insert>defined(string name);</insert>
<dialog title="Insert defined">defined(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="eval">
<description>Evaluate a string as PHP code</description>
<param name="code_str" required="1" vallist="0" default="" type="string">code_str</param>
<return type="mixed">mixed</return>
<insert>eval(string code_str);</insert>
<dialog title="Insert eval">eval(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="exit">
<description>Output a message and terminate the current script</description>
<param name="status" required="0" vallist="0" default="" type="string">status</param>
<return type="void">void</return>
<insert>exit([string status]);</insert>
<dialog title="Insert exit">exit(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="get_browser">
<description>
     Tells what the user's browser is capable of
    </description>
<param name="user_agent" required="0" vallist="0" default="" type="string">user_agent</param>
<return type="object">object</return>
<insert>get_browser([string user_agent]);</insert>
<dialog title="Insert get_browser">get_browser(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="highlight_file">
<description>Syntax highlighting of a file</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="return" required="0" vallist="0" default="" type="bool">return</param>
<return type="mixed">mixed</return>
<insert>highlight_file(string filename [,bool return]);</insert>
<dialog title="Insert highlight_file">highlight_file(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="highlight_string">
<description>Syntax highlighting of a string</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="return" required="0" vallist="0" default="" type="bool">return</param>
<return type="mixed">mixed</return>
<insert>highlight_string(string str [,bool return]);</insert>
<dialog title="Insert highlight_string">highlight_string(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ignore_user_abort">
<description>
     Set whether a client disconnect should abort script execution
    </description>
<param name="setting" required="0" vallist="0" default="" type="int">setting</param>
<return type="int">int</return>
<insert>ignore_user_abort([int setting]);</insert>
<dialog title="Insert ignore_user_abort">ignore_user_abort(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pack">
<description>Pack data into binary string.</description>
<param name="format" required="1" vallist="0" default="" type="string">format</param>
<param name="args" required="0" vallist="0" default="" type="mixed">args</param>
<return type="string">string</return>
<insert>pack(string format [,mixed args]);</insert>
<dialog title="Insert pack">pack(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="sleep">
<description>Delay execution</description>
<param name="seconds" required="1" vallist="0" default="" type="int">seconds</param>
<return type="void">void</return>
<insert>sleep(int seconds);</insert>
<dialog title="Insert sleep">sleep(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="uniqid">
<description>Generate a unique ID</description>
<param name="prefix" required="1" vallist="0" default="" type="string">prefix</param>
<param name="lcg" required="0" vallist="0" default="" type="bool">lcg</param>
<return type="string">string</return>
<insert>uniqid(string prefix [,bool lcg]);</insert>
<dialog title="Insert uniqid">uniqid(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="unpack">
<description>Unpack data from binary string</description>
<param name="format" required="1" vallist="0" default="" type="string">format</param>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<return type="array">array</return>
<insert>unpack(string format, string data);</insert>
<dialog title="Insert unpack">unpack(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="usleep">
<description>Delay execution in microseconds</description>
<param name="micro_seconds" required="1" vallist="0" default="" type="int">micro_seconds</param>
<return type="void">void</return>
<insert>usleep(int micro_seconds);</insert>
<dialog title="Insert usleep">usleep(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="mnogosearch">
<function name="udm_add_search_limit">
<description>Add various search limits</description>
<param name="agent" required="1" vallist="0" default="" type="int">agent</param>
<param name="var" required="1" vallist="0" default="" type="int">var</param>
<param name="val" required="1" vallist="0" default="" type="string">val</param>
<return type="int">int</return>
<insert>udm_add_search_limit(int agent, int var, string val);</insert>
<dialog title="Insert udm_add_search_limit">udm_add_search_limit(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="udm_alloc_agent">
<description>Allocate mnoGoSearch session</description>
<param name="dbaddr" required="1" vallist="0" default="" type="string">dbaddr</param>
<param name="dbmode" required="0" vallist="0" default="" type="string">dbmode</param>
<return type="int">int</return>
<insert>udm_alloc_agent(string dbaddr [,string dbmode]);</insert>
<dialog title="Insert udm_alloc_agent">udm_alloc_agent(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="udm_api_version">
<description>Get mnoGoSearch API version.</description>
<return type="int">int</return>
<insert>udm_api_version();</insert>
<dialog title="Insert udm_api_version">udm_api_version();</dialog>
<info title="Info window"></info>
</function>
<function name="udm_cat_list">
<description>Get all the categories on the same level with the current one.</description>
<param name="agent" required="1" vallist="0" default="" type="int">agent</param>
<param name="category" required="1" vallist="0" default="" type="string">category</param>
<return type="array">array</return>
<insert>udm_cat_list(int agent, string category);</insert>
<dialog title="Insert udm_cat_list">udm_cat_list(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="udm_cat_path">
<description>Get the path to the current category.</description>
<param name="agent" required="1" vallist="0" default="" type="int">agent</param>
<param name="category" required="1" vallist="0" default="" type="string">category</param>
<return type="array">array</return>
<insert>udm_cat_path(int agent, string category);</insert>
<dialog title="Insert udm_cat_path">udm_cat_path(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="udm_check_charset">
<description>
     Check if the given charset is known to mnogosearch
    </description>
<param name="agent" required="1" vallist="0" default="" type="int">agent</param>
<param name="charset" required="1" vallist="0" default="" type="string">charset</param>
<return type="int">int</return>
<insert>udm_check_charset(int agent, string charset);</insert>
<dialog title="Insert udm_check_charset">udm_check_charset(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="udm_check_stored">
<description>
     Check connection to stored
    </description>
<param name="agent" required="1" vallist="0" default="" type="int">agent</param>
<param name="link" required="1" vallist="0" default="" type="int">link</param>
<param name="doc_id" required="1" vallist="0" default="" type="string">doc_id</param>
<return type="int">int</return>
<insert>udm_check_stored(int agent, int link, string doc_id);</insert>
<dialog title="Insert udm_check_stored">udm_check_stored(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="udm_clear_search_limits">
<description>Clear all mnoGoSearch search restrictions</description>
<param name="agent" required="1" vallist="0" default="" type="int">agent</param>
<return type="int">int</return>
<insert>udm_clear_search_limits(int agent);</insert>
<dialog title="Insert udm_clear_search_limits">udm_clear_search_limits(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="udm_close_stored">
<description>
     Close connection to stored
    </description>
<param name="agent" required="1" vallist="0" default="" type="int">agent</param>
<param name="link" required="1" vallist="0" default="" type="int">link</param>
<return type="int">int</return>
<insert>udm_close_stored(int agent, int link);</insert>
<dialog title="Insert udm_close_stored">udm_close_stored(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="udm_crc32">
<description>
     Return CRC32 checksum of gived string
    </description>
<param name="agent" required="1" vallist="0" default="" type="int">agent</param>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<return type="int">int</return>
<insert>udm_crc32(int agent, string str);</insert>
<dialog title="Insert udm_crc32">udm_crc32(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="udm_errno">
<description>Get mnoGoSearch error number</description>
<param name="agent" required="1" vallist="0" default="" type="int">agent</param>
<return type="int">int</return>
<insert>udm_errno(int agent);</insert>
<dialog title="Insert udm_errno">udm_errno(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="udm_error">
<description>Get mnoGoSearch error message</description>
<param name="agent" required="1" vallist="0" default="" type="int">agent</param>
<return type="string">string</return>
<insert>udm_error(int agent);</insert>
<dialog title="Insert udm_error">udm_error(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="udm_find">
<description>Perform search</description>
<param name="agent" required="1" vallist="0" default="" type="int">agent</param>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<return type="int">int</return>
<insert>udm_find(int agent, string query);</insert>
<dialog title="Insert udm_find">udm_find(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="udm_free_agent">
<description>Free mnoGoSearch session</description>
<param name="agent" required="1" vallist="0" default="" type="int">agent</param>
<return type="int">int</return>
<insert>udm_free_agent(int agent);</insert>
<dialog title="Insert udm_free_agent">udm_free_agent(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="udm_free_ispell_data">
<description>Free memory allocated for ispell data</description>
<param name="agent" required="1" vallist="0" default="" type="int">agent</param>
<return type="int">int</return>
<insert>udm_free_ispell_data(int agent);</insert>
<dialog title="Insert udm_free_ispell_data">udm_free_ispell_data(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="udm_free_res">
<description>Free mnoGoSearch result</description>
<param name="res" required="1" vallist="0" default="" type="int">res</param>
<return type="int">int</return>
<insert>udm_free_res(int res);</insert>
<dialog title="Insert udm_free_res">udm_free_res(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="udm_get_doc_count">
<description>Get total number of documents in database.</description>
<param name="agent" required="1" vallist="0" default="" type="int">agent</param>
<return type="int">int</return>
<insert>udm_get_doc_count(int agent);</insert>
<dialog title="Insert udm_get_doc_count">udm_get_doc_count(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="udm_get_res_field">
<description>Fetch mnoGoSearch result field</description>
<param name="res" required="1" vallist="0" default="" type="int">res</param>
<param name="row" required="1" vallist="0" default="" type="int">row</param>
<param name="field" required="1" vallist="0" default="" type="int">field</param>
<return type="string">string</return>
<insert>udm_get_res_field(int res, int row, int field);</insert>
<dialog title="Insert udm_get_res_field">udm_get_res_field(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="udm_get_res_param">
<description>Get mnoGoSearch result parameters</description>
<param name="res" required="1" vallist="0" default="" type="int">res</param>
<param name="param" required="1" vallist="0" default="" type="int">param</param>
<return type="string">string</return>
<insert>udm_get_res_param(int res, int param);</insert>
<dialog title="Insert udm_get_res_param">udm_get_res_param(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="udm_load_ispell_data">
<description>Load ispell data</description>
<param name="agent" required="1" vallist="0" default="" type="int">agent</param>
<param name="var" required="1" vallist="0" default="" type="int">var</param>
<param name="val1" required="1" vallist="0" default="" type="string">val1</param>
<param name="val2" required="1" vallist="0" default="" type="string">val2</param>
<param name="flag" required="1" vallist="0" default="" type="int">flag</param>
<return type="int">int</return>
<insert>udm_load_ispell_data(int agent, int var, string val1, string val2, int flag);</insert>
<dialog title="Insert udm_load_ispell_data">udm_load_ispell_data(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="udm_open_stored">
<description>
     Open connection to stored
    </description>
<param name="agent" required="1" vallist="0" default="" type="int">agent</param>
<param name="storedaddr" required="1" vallist="0" default="" type="string">storedaddr</param>
<return type="int">int</return>
<insert>udm_open_stored(int agent, string storedaddr);</insert>
<dialog title="Insert udm_open_stored">udm_open_stored(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="udm_set_agent_param">
<description>Set mnoGoSearch agent session parameters</description>
<param name="agent" required="1" vallist="0" default="" type="int">agent</param>
<param name="var" required="1" vallist="0" default="" type="int">var</param>
<param name="val" required="1" vallist="0" default="" type="string">val</param>
<return type="int">int</return>
<insert>udm_set_agent_param(int agent, int var, string val);</insert>
<dialog title="Insert udm_set_agent_param">udm_set_agent_param(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="msession">
<function name="msession_connect">
<description>Connect to msession server </description>
<param name="host" required="1" vallist="0" default="" type="string">host</param>
<param name="port" required="1" vallist="0" default="" type="string">port</param>
<return type="bool">bool</return>
<insert>msession_connect(string host, string port);</insert>
<dialog title="Insert msession_connect">msession_connect(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msession_count">
<description>Get session count </description>
<return type="int">int</return>
<insert>msession_count();</insert>
<dialog title="Insert msession_count">msession_count();</dialog>
<info title="Info window"></info>
</function>
<function name="msession_create">
<description>Create a session </description>
<param name="session" required="1" vallist="0" default="" type="string">session</param>
<return type="bool">bool</return>
<insert>msession_create(string session);</insert>
<dialog title="Insert msession_create">msession_create(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="msession_destroy">
<description>Destroy a session </description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="bool">bool</return>
<insert>msession_destroy(string name);</insert>
<dialog title="Insert msession_destroy">msession_destroy(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="msession_disconnect">
<description>Close connection to msession server </description>
<return type="void">void</return>
<insert>msession_disconnect();</insert>
<dialog title="Insert msession_disconnect">msession_disconnect();</dialog>
<info title="Info window"></info>
</function>
<function name="msession_find">
<description>Find value </description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<param name="value" required="1" vallist="0" default="" type="string">value</param>
<return type="array">array</return>
<insert>msession_find(string name, string value);</insert>
<dialog title="Insert msession_find">msession_find(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msession_get_array">
<description>Get array of ... ? </description>
<param name="session" required="1" vallist="0" default="" type="string">session</param>
<return type="array">array</return>
<insert>msession_get_array(string session);</insert>
<dialog title="Insert msession_get_array">msession_get_array(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="msession_get">
<description>Get value from session </description>
<param name="session" required="1" vallist="0" default="" type="string">session</param>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<param name="value" required="1" vallist="0" default="" type="string">value</param>
<return type="string">string</return>
<insert>msession_get(string session, string name, string value);</insert>
<dialog title="Insert msession_get">msession_get(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="msession_getdata">
<description>Get data ... ? </description>
<param name="session" required="1" vallist="0" default="" type="string">session</param>
<return type="string">string</return>
<insert>msession_getdata(string session);</insert>
<dialog title="Insert msession_getdata">msession_getdata(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="msession_inc">
<description>Increment value in session </description>
<param name="session" required="1" vallist="0" default="" type="string">session</param>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="string">string</return>
<insert>msession_inc(string session, string name);</insert>
<dialog title="Insert msession_inc">msession_inc(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msession_list">
<description>List ... ? </description>
<return type="array">array</return>
<insert>msession_list();</insert>
<dialog title="Insert msession_list">msession_list();</dialog>
<info title="Info window"></info>
</function>
<function name="msession_listvar">
<description>List sessions with variable</description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="array">array</return>
<insert>msession_listvar(string name);</insert>
<dialog title="Insert msession_listvar">msession_listvar(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="msession_lock">
<description>Lock a session </description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="int">int</return>
<insert>msession_lock(string name);</insert>
<dialog title="Insert msession_lock">msession_lock(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="msession_plugin">
<description>Call an escape function within the msession personality plugin</description>
<param name="session" required="1" vallist="0" default="" type="string">session</param>
<param name="val" required="1" vallist="0" default="" type="string">val</param>
<param name="param" required="0" vallist="0" default="" type="string">param</param>
<return type="string">string</return>
<insert>msession_plugin(string session, string val [,string param]);</insert>
<dialog title="Insert msession_plugin">msession_plugin(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="msession_randstr">
<description>Get random string </description>
<param name="param" required="1" vallist="0" default="" type="int">param</param>
<return type="string">string</return>
<insert>msession_randstr(int param);</insert>
<dialog title="Insert msession_randstr">msession_randstr(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="msession_set_array">
<description>Set array of ... </description>
<param name="session" required="1" vallist="0" default="" type="string">session</param>
<param name="tuples" required="1" vallist="0" default="" type="array">tuples</param>
<return type="bool">bool</return>
<insert>msession_set_array(string session, array tuples);</insert>
<dialog title="Insert msession_set_array">msession_set_array(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msession_set">
<description>Set value in session </description>
<param name="session" required="1" vallist="0" default="" type="string">session</param>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<param name="value" required="1" vallist="0" default="" type="string">value</param>
<return type="bool">bool</return>
<insert>msession_set(string session, string name, string value);</insert>
<dialog title="Insert msession_set">msession_set(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="msession_setdata">
<description>Set data  ... ?</description>
<param name="session" required="1" vallist="0" default="" type="string">session</param>
<param name="value" required="1" vallist="0" default="" type="string">value</param>
<return type="bool">bool</return>
<insert>msession_setdata(string session, string value);</insert>
<dialog title="Insert msession_setdata">msession_setdata(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msession_timeout">
<description>Set/get session timeout </description>
<param name="session" required="1" vallist="0" default="" type="string">session</param>
<param name="param" required="0" vallist="0" default="" type="int">param</param>
<return type="int">int</return>
<insert>msession_timeout(string session [,int param]);</insert>
<dialog title="Insert msession_timeout">msession_timeout(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msession_uniq">
<description>Get uniq id </description>
<param name="param" required="1" vallist="0" default="" type="int">param</param>
<return type="string">string</return>
<insert>msession_uniq(int param);</insert>
<dialog title="Insert msession_uniq">msession_uniq(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="msession_unlock">
<description>Unlock a session </description>
<param name="session" required="1" vallist="0" default="" type="string">session</param>
<param name="key" required="1" vallist="0" default="" type="int">key</param>
<return type="int">int</return>
<insert>msession_unlock(string session, int key);</insert>
<dialog title="Insert msession_unlock">msession_unlock(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="msql">
<function name="msql_affected_rows">
<description>Returns number of affected rows</description>
<param name="query_identifier" required="1" vallist="0" default="" type="int">query_identifier</param>
<return type="int">int</return>
<insert>msql_affected_rows(int query_identifier);</insert>
<dialog title="Insert msql_affected_rows">msql_affected_rows(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_close">
<description>Close mSQL connection</description>
<param name="link_identifier" required="1" vallist="0" default="" type="int">link_identifier</param>
<return type="int">int</return>
<insert>msql_close(int link_identifier);</insert>
<dialog title="Insert msql_close">msql_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_connect">
<description>Open mSQL connection</description>
<param name="
        hostname
       " required="0" vallist="0" default="" type="string">
        hostname
       </param>
<param name="
        server
       " required="0" vallist="0" default="" type="string">
        server
       </param>
<param name="
        username
       " required="0" vallist="0" default="" type="string">
        username
       </param>
<param name="
        password
       " required="0" vallist="0" default="" type="string">
        password
       </param>
<return type="int">int</return>
<insert>msql_connect([string 
        hostname
       ] [,string 
        server
       ] [,string 
        username
       ] [,string 
        password
       ]);</insert>
<dialog title="Insert msql_connect">msql_connect(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_create_db">
<description>Create mSQL database</description>
<param name="database_name" required="1" vallist="0" default="" type="string">database_name</param>
<param name="link_identifier" required="0" vallist="0" default="" type="int">link_identifier</param>
<return type="int">int</return>
<insert>msql_create_db(string database_name [,int link_identifier]);</insert>
<dialog title="Insert msql_create_db">msql_create_db(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_createdb">
<description>Create mSQL database</description>
<param name="database name" required="1" vallist="0" default="" type="string">database name</param>
<param name="link_identifier" required="0" vallist="0" default="" type="int">link_identifier</param>
<return type="int">int</return>
<insert>msql_createdb(string database name [,int link_identifier]);</insert>
<dialog title="Insert msql_createdb">msql_createdb(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_data_seek">
<description>Move internal row pointer</description>
<param name="query_identifier" required="1" vallist="0" default="" type="int">query_identifier</param>
<param name="row_number" required="1" vallist="0" default="" type="int">row_number</param>
<return type="int">int</return>
<insert>msql_data_seek(int query_identifier, int row_number);</insert>
<dialog title="Insert msql_data_seek">msql_data_seek(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_dbname">
<description>Get current mSQL database name</description>
<param name="query_identifier" required="1" vallist="0" default="" type="int">query_identifier</param>
<param name="i" required="1" vallist="0" default="" type="int">i</param>
<return type="string">string</return>
<insert>msql_dbname(int query_identifier, int i);</insert>
<dialog title="Insert msql_dbname">msql_dbname(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_drop_db">
<description>Drop (delete) mSQL database</description>
<param name="database_name" required="1" vallist="0" default="" type="string">database_name</param>
<param name="link_identifier" required="1" vallist="0" default="" type="int">link_identifier</param>
<return type="int">int</return>
<insert>msql_drop_db(string database_name, int link_identifier);</insert>
<dialog title="Insert msql_drop_db">msql_drop_db(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_error">
<description>Returns error message of last msql call</description>
<param name="link_identifier" required="0" vallist="0" default="" type="int">link_identifier</param>
<return type="string">string</return>
<insert>msql_error([int link_identifier]);</insert>
<dialog title="Insert msql_error">msql_error(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_fetch_array">
<description>Fetch row as array</description>
<param name="query_identifier" required="1" vallist="0" default="" type="int">query_identifier</param>
<param name="result_type" required="0" vallist="0" default="" type="int">result_type</param>
<return type="int">int</return>
<insert>msql_fetch_array(int query_identifier [,int result_type]);</insert>
<dialog title="Insert msql_fetch_array">msql_fetch_array(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_fetch_field">
<description>Get field information</description>
<param name="query_identifier" required="1" vallist="0" default="" type="int">query_identifier</param>
<param name="field_offset" required="1" vallist="0" default="" type="int">field_offset</param>
<return type="object">object</return>
<insert>msql_fetch_field(int query_identifier, int field_offset);</insert>
<dialog title="Insert msql_fetch_field">msql_fetch_field(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_fetch_object">
<description>Fetch row as object</description>
<param name="query_identifier" required="1" vallist="0" default="" type="int">query_identifier</param>
<param name="result_type" required="0" vallist="0" default="" type="int">result_type</param>
<return type="int">int</return>
<insert>msql_fetch_object(int query_identifier [,int result_type]);</insert>
<dialog title="Insert msql_fetch_object">msql_fetch_object(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_fetch_row">
<description>Get row as enumerated array</description>
<param name="query_identifier" required="1" vallist="0" default="" type="int">query_identifier</param>
<return type="array">array</return>
<insert>msql_fetch_row(int query_identifier);</insert>
<dialog title="Insert msql_fetch_row">msql_fetch_row(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_field_seek">
<description>Set field offset</description>
<param name="query_identifier" required="1" vallist="0" default="" type="int">query_identifier</param>
<param name="field_offset" required="1" vallist="0" default="" type="int">field_offset</param>
<return type="int">int</return>
<insert>msql_field_seek(int query_identifier, int field_offset);</insert>
<dialog title="Insert msql_field_seek">msql_field_seek(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_fieldflags">
<description>Get field flags</description>
<param name="query_identifier" required="1" vallist="0" default="" type="int">query_identifier</param>
<param name="i" required="1" vallist="0" default="" type="int">i</param>
<return type="string">string</return>
<insert>msql_fieldflags(int query_identifier, int i);</insert>
<dialog title="Insert msql_fieldflags">msql_fieldflags(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_fieldlen">
<description>Get field length</description>
<param name="query_identifier" required="1" vallist="0" default="" type="int">query_identifier</param>
<param name="i" required="1" vallist="0" default="" type="int">i</param>
<return type="int">int</return>
<insert>msql_fieldlen(int query_identifier, int i);</insert>
<dialog title="Insert msql_fieldlen">msql_fieldlen(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_fieldname">
<description>Get field name</description>
<param name="query_identifier" required="1" vallist="0" default="" type="int">query_identifier</param>
<param name="field" required="1" vallist="0" default="" type="int">field</param>
<return type="string">string</return>
<insert>msql_fieldname(int query_identifier, int field);</insert>
<dialog title="Insert msql_fieldname">msql_fieldname(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_fieldtable">
<description>Get table name for field</description>
<param name="query_identifier" required="1" vallist="0" default="" type="int">query_identifier</param>
<param name="field" required="1" vallist="0" default="" type="int">field</param>
<return type="int">int</return>
<insert>msql_fieldtable(int query_identifier, int field);</insert>
<dialog title="Insert msql_fieldtable">msql_fieldtable(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_fieldtype">
<description>Get field type</description>
<param name="query_identifier" required="1" vallist="0" default="" type="int">query_identifier</param>
<param name="i" required="1" vallist="0" default="" type="int">i</param>
<return type="string">string</return>
<insert>msql_fieldtype(int query_identifier, int i);</insert>
<dialog title="Insert msql_fieldtype">msql_fieldtype(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_free_result">
<description>Free result memory</description>
<param name="query_identifier" required="1" vallist="0" default="" type="int">query_identifier</param>
<return type="int">int</return>
<insert>msql_free_result(int query_identifier);</insert>
<dialog title="Insert msql_free_result">msql_free_result(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_list_dbs">
<description>List mSQL databases on server</description>
<return type="int">int</return>
<insert>msql_list_dbs();</insert>
<dialog title="Insert msql_list_dbs">msql_list_dbs();</dialog>
<info title="Info window"></info>
</function>
<function name="msql_list_fields">
<description>List result fields</description>
<param name="database" required="1" vallist="0" default="" type="string">database</param>
<param name="tablename" required="1" vallist="0" default="" type="string">tablename</param>
<return type="int">int</return>
<insert>msql_list_fields(string database, string tablename);</insert>
<dialog title="Insert msql_list_fields">msql_list_fields(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_list_tables">
<description>List tables in an mSQL database</description>
<param name="database" required="1" vallist="0" default="" type="string">database</param>
<return type="int">int</return>
<insert>msql_list_tables(string database);</insert>
<dialog title="Insert msql_list_tables">msql_list_tables(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_num_fields">
<description>Get number of fields in result</description>
<param name="query_identifier" required="1" vallist="0" default="" type="int">query_identifier</param>
<return type="int">int</return>
<insert>msql_num_fields(int query_identifier);</insert>
<dialog title="Insert msql_num_fields">msql_num_fields(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_num_rows">
<description>Get number of rows in result</description>
<param name="query_identifier" required="1" vallist="0" default="" type="int">query_identifier</param>
<return type="int">int</return>
<insert>msql_num_rows(int query_identifier);</insert>
<dialog title="Insert msql_num_rows">msql_num_rows(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_numfields">
<description>Get number of fields in result</description>
<param name="query_identifier" required="1" vallist="0" default="" type="int">query_identifier</param>
<return type="int">int</return>
<insert>msql_numfields(int query_identifier);</insert>
<dialog title="Insert msql_numfields">msql_numfields(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_numrows">
<description>Get number of rows in result</description>
<return type="int">int</return>
<insert>msql_numrows();</insert>
<dialog title="Insert msql_numrows">msql_numrows();</dialog>
<info title="Info window"></info>
</function>
<function name="msql_pconnect">
<description>Open persistent mSQL connection</description>
<param name="
        server
       " required="0" vallist="0" default="" type="string">
        server
       </param>
<param name="
        username
       " required="0" vallist="0" default="" type="string">
        username
       </param>
<param name="
        password
       " required="0" vallist="0" default="" type="string">
        password
       </param>
<return type="int">int</return>
<insert>msql_pconnect([string 
        server
       ] [,string 
        username
       ] [,string 
        password
       ]);</insert>
<dialog title="Insert msql_pconnect">msql_pconnect(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_query">
<description>Send mSQL query</description>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<param name="link_identifier" required="1" vallist="0" default="" type="int">link_identifier</param>
<return type="int">int</return>
<insert>msql_query(string query, int link_identifier);</insert>
<dialog title="Insert msql_query">msql_query(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_result">
<description>Get result data</description>
<param name="query_identifier" required="1" vallist="0" default="" type="int">query_identifier</param>
<param name="i" required="1" vallist="0" default="" type="int">i</param>
<param name="field" required="1" vallist="0" default="" type="mixed">field</param>
<return type="int">int</return>
<insert>msql_result(int query_identifier, int i, mixed field);</insert>
<dialog title="Insert msql_result">msql_result(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_select_db">
<description>Select mSQL database</description>
<param name="database_name" required="1" vallist="0" default="" type="string">database_name</param>
<param name="link_identifier" required="1" vallist="0" default="" type="int">link_identifier</param>
<return type="int">int</return>
<insert>msql_select_db(string database_name, int link_identifier);</insert>
<dialog title="Insert msql_select_db">msql_select_db(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msql_tablename">
<description>Get table name of field</description>
<param name="query_identifier" required="1" vallist="0" default="" type="int">query_identifier</param>
<param name="field" required="1" vallist="0" default="" type="int">field</param>
<return type="string">string</return>
<insert>msql_tablename(int query_identifier, int field);</insert>
<dialog title="Insert msql_tablename">msql_tablename(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msql">
<description>Send mSQL query</description>
<param name="database" required="1" vallist="0" default="" type="string">database</param>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<param name="link_identifier" required="1" vallist="0" default="" type="int">link_identifier</param>
<return type="int">int</return>
<insert>msql(string database, string query, int link_identifier);</insert>
<dialog title="Insert msql">msql(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="mssql">
<function name="mssql_bind">
<description>
     Adds a parameter to a stored procedure or a remote stored procedure
    </description>
<param name="stmt" required="1" vallist="0" default="" type="int">stmt</param>
<param name="param_name" required="1" vallist="0" default="" type="string">param_name</param>
<param name="var" required="1" vallist="0" default="" type="mixed">var</param>
<param name="type" required="1" vallist="0" default="" type="int">type</param>
<param name="is_output" required="0" vallist="0" default="" type="int">is_output</param>
<param name="is_null" required="0" vallist="0" default="" type="int">is_null</param>
<param name="maxlen" required="0" vallist="0" default="" type="int">maxlen</param>
<return type="int">int</return>
<insert>mssql_bind(int stmt, string param_name, mixed var, int type [,int is_output] [,int is_null] [,int maxlen]);</insert>
<dialog title="Insert mssql_bind">mssql_bind(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_close">
<description>Close MS SQL Server connection</description>
<param name="link_identifier" required="0" vallist="0" default="" type="int">link_identifier</param>
<return type="int">int</return>
<insert>mssql_close([int link_identifier]);</insert>
<dialog title="Insert mssql_close">mssql_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_connect">
<description>Open MS SQL server connection</description>
<param name="servername" required="0" vallist="0" default="" type="string">servername</param>
<param name="username" required="0" vallist="0" default="" type="string">username</param>
<param name="password" required="0" vallist="0" default="" type="string">password</param>
<return type="int">int</return>
<insert>mssql_connect([string servername] [,string username] [,string password]);</insert>
<dialog title="Insert mssql_connect">mssql_connect(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_data_seek">
<description>Move internal row pointer</description>
<param name="result_identifier" required="1" vallist="0" default="" type="int">result_identifier</param>
<param name="row_number" required="1" vallist="0" default="" type="int">row_number</param>
<return type="int">int</return>
<insert>mssql_data_seek(int result_identifier, int row_number);</insert>
<dialog title="Insert mssql_data_seek">mssql_data_seek(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_execute">
<description>
     Executes a stored procedure on a MS SQL server database
    </description>
<param name="stmt" required="1" vallist="0" default="" type="int">stmt</param>
<return type="int">int</return>
<insert>mssql_execute(int stmt);</insert>
<dialog title="Insert mssql_execute">mssql_execute(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_fetch_array">
<description>Fetch row as array</description>
<param name="result" required="1" vallist="0" default="" type="int">result</param>
<return type="array">array</return>
<insert>mssql_fetch_array(int result);</insert>
<dialog title="Insert mssql_fetch_array">mssql_fetch_array(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_fetch_assoc">
<description>
     Returns an associative array of the current row in the result set specified by result_id
    </description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<param name="result_type" required="0" vallist="0" default="" type="int">result_type</param>
<return type="array">array</return>
<insert>mssql_fetch_assoc(int result_id [,int result_type]);</insert>
<dialog title="Insert mssql_fetch_assoc">mssql_fetch_assoc(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_fetch_batch">
<description>
     Returns the next batch of records
    </description>
<param name="result_index" required="1" vallist="0" default="" type="string">result_index</param>
<return type="int">int</return>
<insert>mssql_fetch_batch(string result_index);</insert>
<dialog title="Insert mssql_fetch_batch">mssql_fetch_batch(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_fetch_field">
<description>Get field information</description>
<param name="result" required="1" vallist="0" default="" type="int">result</param>
<param name="field_offset" required="0" vallist="0" default="" type="int">field_offset</param>
<return type="object">object</return>
<insert>mssql_fetch_field(int result [,int field_offset]);</insert>
<dialog title="Insert mssql_fetch_field">mssql_fetch_field(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_fetch_object">
<description>Fetch row as object</description>
<param name="result" required="1" vallist="0" default="" type="int">result</param>
<return type="object">object</return>
<insert>mssql_fetch_object(int result);</insert>
<dialog title="Insert mssql_fetch_object">mssql_fetch_object(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_fetch_row">
<description>Get row as enumerated array</description>
<param name="result" required="1" vallist="0" default="" type="int">result</param>
<return type="array">array</return>
<insert>mssql_fetch_row(int result);</insert>
<dialog title="Insert mssql_fetch_row">mssql_fetch_row(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_field_length">
<description>Get the length of a field</description>
<param name="result" required="1" vallist="0" default="" type="int">result</param>
<param name="offset" required="0" vallist="0" default="" type="int">offset</param>
<return type="int">int</return>
<insert>mssql_field_length(int result [,int offset]);</insert>
<dialog title="Insert mssql_field_length">mssql_field_length(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_field_name">
<description>Get the name of a field</description>
<param name="result" required="1" vallist="0" default="" type="int">result</param>
<param name="offset" required="0" vallist="0" default="" type="int">offset</param>
<return type="int">int</return>
<insert>mssql_field_name(int result [,int offset]);</insert>
<dialog title="Insert mssql_field_name">mssql_field_name(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_field_seek">
<description>Set field offset</description>
<param name="result" required="1" vallist="0" default="" type="int">result</param>
<param name="field_offset" required="1" vallist="0" default="" type="int">field_offset</param>
<return type="int">int</return>
<insert>mssql_field_seek(int result, int field_offset);</insert>
<dialog title="Insert mssql_field_seek">mssql_field_seek(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_field_type">
<description>Get the type of a field</description>
<param name="result" required="1" vallist="0" default="" type="int">result</param>
<param name="offset" required="0" vallist="0" default="" type="int">offset</param>
<return type="string">string</return>
<insert>mssql_field_type(int result [,int offset]);</insert>
<dialog title="Insert mssql_field_type">mssql_field_type(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_free_result">
<description>Free result memory</description>
<param name="result" required="1" vallist="0" default="" type="int">result</param>
<return type="int">int</return>
<insert>mssql_free_result(int result);</insert>
<dialog title="Insert mssql_free_result">mssql_free_result(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_free_statement">
<description>Free statement memory</description>
<param name="statement" required="1" vallist="0" default="" type="int">statement</param>
<return type="int">int</return>
<insert>mssql_free_statement(int statement);</insert>
<dialog title="Insert mssql_free_statement">mssql_free_statement(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_get_last_message">
<description>
     Returns the last message from server (over
     min_message_severity?)
    </description>
<return type="string">string</return>
<insert>mssql_get_last_message();</insert>
<dialog title="Insert mssql_get_last_message">mssql_get_last_message();</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_guid_string">
<description>
     Converts a 16 byte binary GUID to a string
    </description>
<param name="binary" required="1" vallist="0" default="" type="string">binary</param>
<param name="short_format" required="0" vallist="0" default="" type="int">short_format</param>
<return type="string">string</return>
<insert>mssql_guid_string(string binary [,int short_format]);</insert>
<dialog title="Insert mssql_guid_string">mssql_guid_string(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_init">
<description>
     Initializes a stored procedure or a remote stored procedure
    </description>
<param name="sp_name" required="1" vallist="0" default="" type="string">sp_name</param>
<param name="conn_id" required="0" vallist="0" default="" type="int">conn_id</param>
<return type="int">int</return>
<insert>mssql_init(string sp_name [,int conn_id]);</insert>
<dialog title="Insert mssql_init">mssql_init(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_min_error_severity">
<description>Sets the lower error severity</description>
<param name="severity" required="1" vallist="0" default="" type="int">severity</param>
<return type="void">void</return>
<insert>mssql_min_error_severity(int severity);</insert>
<dialog title="Insert mssql_min_error_severity">mssql_min_error_severity(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_min_message_severity">
<description>Sets the lower message severity</description>
<param name="severity" required="1" vallist="0" default="" type="int">severity</param>
<return type="void">void</return>
<insert>mssql_min_message_severity(int severity);</insert>
<dialog title="Insert mssql_min_message_severity">mssql_min_message_severity(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_next_result">
<description>Move the internal result pointer to the next result</description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<return type="bool">bool</return>
<insert>mssql_next_result(int result_id);</insert>
<dialog title="Insert mssql_next_result">mssql_next_result(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_num_fields">
<description>Get number of fields in result</description>
<param name="result" required="1" vallist="0" default="" type="int">result</param>
<return type="int">int</return>
<insert>mssql_num_fields(int result);</insert>
<dialog title="Insert mssql_num_fields">mssql_num_fields(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_num_rows">
<description>Get number of rows in result</description>
<param name="result" required="1" vallist="0" default="" type="string">result</param>
<return type="int">int</return>
<insert>mssql_num_rows(string result);</insert>
<dialog title="Insert mssql_num_rows">mssql_num_rows(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_pconnect">
<description>Open persistent MS SQL connection</description>
<param name="servername" required="0" vallist="0" default="" type="string">servername</param>
<param name="username" required="0" vallist="0" default="" type="string">username</param>
<param name="password" required="0" vallist="0" default="" type="string">password</param>
<return type="int">int</return>
<insert>mssql_pconnect([string servername] [,string username] [,string password]);</insert>
<dialog title="Insert mssql_pconnect">mssql_pconnect(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_query">
<description>Send MS SQL query</description>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<param name="link_identifier" required="0" vallist="0" default="" type="int">link_identifier</param>
<return type="int">int</return>
<insert>mssql_query(string query [,int link_identifier]);</insert>
<dialog title="Insert mssql_query">mssql_query(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_result">
<description>Get result data</description>
<param name="result" required="1" vallist="0" default="" type="int">result</param>
<param name="i" required="1" vallist="0" default="" type="int">i</param>
<param name="field" required="1" vallist="0" default="" type="mixed">field</param>
<return type="int">int</return>
<insert>mssql_result(int result, int i, mixed field);</insert>
<dialog title="Insert mssql_result">mssql_result(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_rows_affected">
<description>
     Returns the number of records affected by the query
    </description>
<param name="conn_id" required="1" vallist="0" default="" type="int">conn_id</param>
<return type="int">int</return>
<insert>mssql_rows_affected(int conn_id);</insert>
<dialog title="Insert mssql_rows_affected">mssql_rows_affected(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mssql_select_db">
<description>Select MS SQL database</description>
<param name="database_name" required="1" vallist="0" default="" type="string">database_name</param>
<param name="link_identifier" required="0" vallist="0" default="" type="int">link_identifier</param>
<return type="int">int</return>
<insert>mssql_select_db(string database_name [,int link_identifier]);</insert>
<dialog title="Insert mssql_select_db">mssql_select_db(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="muscat">
<function name="muscat_close">
<description>Shuts down the muscat session and releases any memory back to PHP.</description>
<param name="muscat_handle" required="1" vallist="0" default="" type="resource">muscat_handle</param>
<return type="int">int</return>
<insert>muscat_close(resource muscat_handle);</insert>
<dialog title="Insert muscat_close">muscat_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="muscat_get">
<description>Gets a line back from the core muscat API. </description>
<param name="muscat_handle" required="1" vallist="0" default="" type="resource">muscat_handle</param>
<return type="string">string</return>
<insert>muscat_get(resource muscat_handle);</insert>
<dialog title="Insert muscat_get">muscat_get(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="muscat_give">
<description>Sends string to the core muscat API</description>
<param name="muscat_handle" required="1" vallist="0" default="" type="resource">muscat_handle</param>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<return type="int">int</return>
<insert>muscat_give(resource muscat_handle, string string);</insert>
<dialog title="Insert muscat_give">muscat_give(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="muscat_setup_net">
<description>Creates a new muscat session and returns the handle.</description>
<param name="muscat_host" required="1" vallist="0" default="" type="string">muscat_host</param>
<param name="port" required="1" vallist="0" default="" type="int">port</param>
<return type="resource">resource</return>
<insert>muscat_setup_net(string muscat_host, int port);</insert>
<dialog title="Insert muscat_setup_net">muscat_setup_net(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="muscat_setup">
<description>Creates a new muscat session and returns the handle.</description>
<param name="size" required="1" vallist="0" default="" type="int">size</param>
<param name="muscat_dir" required="0" vallist="0" default="" type="string">muscat_dir</param>
<return type="resource">resource</return>
<insert>muscat_setup(int size [,string muscat_dir]);</insert>
<dialog title="Insert muscat_setup">muscat_setup(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="mysql">
<function name="mysql_affected_rows">
<description>Get number of affected rows in previous MySQL
     operation</description>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="int">int</return>
<insert>mysql_affected_rows([resource 
        link_identifier
       ]);</insert>
<dialog title="Insert mysql_affected_rows">mysql_affected_rows(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_change_user">
<description>
     Change logged in user of the active connection
    </description>
<param name="user" required="1" vallist="0" default="" type="string">user</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="
        database
       " required="0" vallist="0" default="" type="string">
        database
       </param>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="int">int</return>
<insert>mysql_change_user(string user, string password [,string 
        database
       ] [,resource 
        link_identifier
       ]);</insert>
<dialog title="Insert mysql_change_user">mysql_change_user(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_client_encoding">
<description>Returns the name of the character set</description>
<param name="link_identifier" required="0" vallist="0" default="" type="resource">link_identifier</param>
<return type="int">int</return>
<insert>mysql_client_encoding([resource link_identifier]);</insert>
<dialog title="Insert mysql_client_encoding">mysql_client_encoding(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_close">
<description>Close MySQL connection</description>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="bool">bool</return>
<insert>mysql_close([resource 
        link_identifier
       ]);</insert>
<dialog title="Insert mysql_close">mysql_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_connect">
<description>Open a connection to a MySQL Server</description>
<param name="
        server
       " required="0" vallist="0" default="" type="string">
        server
       </param>
<param name="
        username
       " required="0" vallist="0" default="" type="string">
        username
       </param>
<param name="
        password
       " required="0" vallist="0" default="" type="string">
        password
       </param>
<param name="
        new_link
       " required="0" vallist="0" default="" type="bool">
        new_link
       </param>
<param name="
        client_flags
      " required="0" vallist="0" default="" type="int">
        client_flags
      </param>
<return type="resource">resource</return>
<insert>mysql_connect([string 
        server
       ] [,string 
        username
       ] [,string 
        password
       ] [,bool 
        new_link
       ] [,int 
        client_flags
      ]);</insert>
<dialog title="Insert mysql_connect">mysql_connect(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_create_db">
<description>Create a MySQL database</description>
<param name="database name" required="1" vallist="0" default="" type="string">database name</param>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="bool">bool</return>
<insert>mysql_create_db(string database name [,resource 
        link_identifier
       ]);</insert>
<dialog title="Insert mysql_create_db">mysql_create_db(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_data_seek">
<description>Move internal result pointer</description>
<param name="result_identifier" required="1" vallist="0" default="" type="resource">result_identifier</param>
<param name="row_number" required="1" vallist="0" default="" type="int">row_number</param>
<return type="bool">bool</return>
<insert>mysql_data_seek(resource result_identifier, int row_number);</insert>
<dialog title="Insert mysql_data_seek">mysql_data_seek(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_db_name">
<description>Get result data</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="row" required="1" vallist="0" default="" type="int">row</param>
<param name="
        field
       " required="0" vallist="0" default="" type="mixed">
        field
       </param>
<return type="string">string</return>
<insert>mysql_db_name(resource result, int row [,mixed 
        field
       ]);</insert>
<dialog title="Insert mysql_db_name">mysql_db_name(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_db_query">
<description>Send a MySQL query</description>
<param name="database" required="1" vallist="0" default="" type="string">database</param>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="resource">resource</return>
<insert>mysql_db_query(string database, string query [,resource 
        link_identifier
       ]);</insert>
<dialog title="Insert mysql_db_query">mysql_db_query(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_drop_db">
<description>Drop (delete) a MySQL database</description>
<param name="database_name" required="1" vallist="0" default="" type="string">database_name</param>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="bool">bool</return>
<insert>mysql_drop_db(string database_name [,resource 
        link_identifier
       ]);</insert>
<dialog title="Insert mysql_drop_db">mysql_drop_db(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_errno">
<description>
     Returns the numerical value of the error message from previous
     MySQL operation
    </description>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="int">int</return>
<insert>mysql_errno([resource 
        link_identifier
       ]);</insert>
<dialog title="Insert mysql_errno">mysql_errno(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_error">
<description>
     Returns the text of the error message from previous MySQL
     operation
    </description>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="string">string</return>
<insert>mysql_error([resource 
        link_identifier
       ]);</insert>
<dialog title="Insert mysql_error">mysql_error(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_escape_string">
<description>
     Escapes a string for use in a mysql_query.
    </description>
<param name="unescaped_string" required="1" vallist="0" default="" type="string">unescaped_string</param>
<return type="string">string</return>
<insert>mysql_escape_string(string unescaped_string);</insert>
<dialog title="Insert mysql_escape_string">mysql_escape_string(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_fetch_array">
<description>
     Fetch a result row as an associative array, a numeric array, or both.
    </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="
        result_type
       " required="0" vallist="0" default="" type="int">
        result_type
       </param>
<return type="array">array</return>
<insert>mysql_fetch_array(resource result [,int 
        result_type
       ]);</insert>
<dialog title="Insert mysql_fetch_array">mysql_fetch_array(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_fetch_assoc">
<description>
     Fetch a result row as an associative array
    </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<return type="array">array</return>
<insert>mysql_fetch_assoc(resource result);</insert>
<dialog title="Insert mysql_fetch_assoc">mysql_fetch_assoc(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_fetch_field">
<description>
     Get column information from a result and return as an object
    </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="
        field_offset
       " required="0" vallist="0" default="" type="int">
        field_offset
       </param>
<return type="object">object</return>
<insert>mysql_fetch_field(resource result [,int 
        field_offset
       ]);</insert>
<dialog title="Insert mysql_fetch_field">mysql_fetch_field(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_fetch_lengths">
<description>
     Get the length of each output in a result
    </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<return type="array">array</return>
<insert>mysql_fetch_lengths(resource result);</insert>
<dialog title="Insert mysql_fetch_lengths">mysql_fetch_lengths(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_fetch_object">
<description>Fetch a result row as an object</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<return type="object">object</return>
<insert>mysql_fetch_object(resource result);</insert>
<dialog title="Insert mysql_fetch_object">mysql_fetch_object(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_fetch_row">
<description>Get a result row as an enumerated array</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<return type="array">array</return>
<insert>mysql_fetch_row(resource result);</insert>
<dialog title="Insert mysql_fetch_row">mysql_fetch_row(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_field_flags">
<description>
     Get the flags associated with the specified field in a result
    </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="field_offset" required="1" vallist="0" default="" type="int">field_offset</param>
<return type="string">string</return>
<insert>mysql_field_flags(resource result, int field_offset);</insert>
<dialog title="Insert mysql_field_flags">mysql_field_flags(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_field_len">
<description>
     Returns the length of the specified field
    </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="field_offset" required="1" vallist="0" default="" type="int">field_offset</param>
<return type="int">int</return>
<insert>mysql_field_len(resource result, int field_offset);</insert>
<dialog title="Insert mysql_field_len">mysql_field_len(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_field_name">
<description>
     Get the name of the specified field in a result
    </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="field_index" required="1" vallist="0" default="" type="int">field_index</param>
<return type="string">string</return>
<insert>mysql_field_name(resource result, int field_index);</insert>
<dialog title="Insert mysql_field_name">mysql_field_name(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_field_seek">
<description>
     Set result pointer to a specified field offset
    </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="field_offset" required="1" vallist="0" default="" type="int">field_offset</param>
<return type="int">int</return>
<insert>mysql_field_seek(resource result, int field_offset);</insert>
<dialog title="Insert mysql_field_seek">mysql_field_seek(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_field_table">
<description>
     Get name of the table the specified field is in
    </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="field_offset" required="1" vallist="0" default="" type="int">field_offset</param>
<return type="string">string</return>
<insert>mysql_field_table(resource result, int field_offset);</insert>
<dialog title="Insert mysql_field_table">mysql_field_table(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_field_type">
<description>
     Get the type of the specified field in a result
    </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="field_offset" required="1" vallist="0" default="" type="int">field_offset</param>
<return type="string">string</return>
<insert>mysql_field_type(resource result, int field_offset);</insert>
<dialog title="Insert mysql_field_type">mysql_field_type(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_free_result">
<description>Free result memory</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<return type="bool">bool</return>
<insert>mysql_free_result(resource result);</insert>
<dialog title="Insert mysql_free_result">mysql_free_result(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_get_client_info">
<description>Get MySQL client info</description>
<return type="string">string</return>
<insert>mysql_get_client_info();</insert>
<dialog title="Insert mysql_get_client_info">mysql_get_client_info();</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_get_host_info">
<description>Get MySQL host info</description>
<param name="link_identifier" required="0" vallist="0" default="" type="resource">link_identifier</param>
<return type="string">string</return>
<insert>mysql_get_host_info([resource link_identifier]);</insert>
<dialog title="Insert mysql_get_host_info">mysql_get_host_info(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_get_proto_info">
<description>Get MySQL protocol info</description>
<param name="link_identifier" required="0" vallist="0" default="" type="resource">link_identifier</param>
<return type="int">int</return>
<insert>mysql_get_proto_info([resource link_identifier]);</insert>
<dialog title="Insert mysql_get_proto_info">mysql_get_proto_info(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_get_server_info">
<description>Get MySQL server info</description>
<param name="link_identifier" required="0" vallist="0" default="" type="resource">link_identifier</param>
<return type="string">string</return>
<insert>mysql_get_server_info([resource link_identifier]);</insert>
<dialog title="Insert mysql_get_server_info">mysql_get_server_info(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_info">
<description>
     Get information about the most recent query
    </description>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="string">string</return>
<insert>mysql_info([resource 
        link_identifier
       ]);</insert>
<dialog title="Insert mysql_info">mysql_info(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_insert_id">
<description>
     Get the ID generated from the previous INSERT operation
    </description>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="int">int</return>
<insert>mysql_insert_id([resource 
        link_identifier
       ]);</insert>
<dialog title="Insert mysql_insert_id">mysql_insert_id(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_list_dbs">
<description>
     List databases available on a MySQL server
    </description>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="resource">resource</return>
<insert>mysql_list_dbs([resource 
        link_identifier
       ]);</insert>
<dialog title="Insert mysql_list_dbs">mysql_list_dbs(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_list_fields">
<description>List MySQL result fields</description>
<param name="database_name" required="1" vallist="0" default="" type="string">database_name</param>
<param name="table_name" required="1" vallist="0" default="" type="string">table_name</param>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="resource">resource</return>
<insert>mysql_list_fields(string database_name, string table_name [,resource 
        link_identifier
       ]);</insert>
<dialog title="Insert mysql_list_fields">mysql_list_fields(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_list_processes">
<description>List MySQL processes</description>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="resource">resource</return>
<insert>mysql_list_processes([resource 
        link_identifier
       ]);</insert>
<dialog title="Insert mysql_list_processes">mysql_list_processes(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_list_tables">
<description>List tables in a MySQL database</description>
<param name="database" required="1" vallist="0" default="" type="string">database</param>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="resource">resource</return>
<insert>mysql_list_tables(string database [,resource 
        link_identifier
       ]);</insert>
<dialog title="Insert mysql_list_tables">mysql_list_tables(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_num_fields">
<description>Get number of fields in result</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<return type="int">int</return>
<insert>mysql_num_fields(resource result);</insert>
<dialog title="Insert mysql_num_fields">mysql_num_fields(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_num_rows">
<description>Get number of rows in result</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<return type="int">int</return>
<insert>mysql_num_rows(resource result);</insert>
<dialog title="Insert mysql_num_rows">mysql_num_rows(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_pconnect">
<description>
     Open a persistent connection to a MySQL server
    </description>
<param name="
        server
       " required="0" vallist="0" default="" type="string">
        server
       </param>
<param name="username" required="0" vallist="0" default="" type="string">username</param>
<param name="password" required="0" vallist="0" default="" type="string">password</param>
<param name="client_flags" required="0" vallist="0" default="" type="int">client_flags</param>
<return type="resource">resource</return>
<insert>mysql_pconnect([string 
        server
       ] [,string username] [,string password] [,int client_flags]);</insert>
<dialog title="Insert mysql_pconnect">mysql_pconnect(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_ping">
<description>Ping a server connection or reconnect if there is no connection</description>
<param name="
       link_identifier
       " required="0" vallist="0" default="" type="resource">
       link_identifier
       </param>
<return type="bool">bool</return>
<insert>mysql_ping([resource 
       link_identifier
       ]);</insert>
<dialog title="Insert mysql_ping">mysql_ping(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_query">
<description>Send a MySQL query</description>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<param name="link_identifier" required="0" vallist="0" default="" type="resource">link_identifier</param>
<param name="result_mode" required="0" vallist="0" default="" type="int">result_mode</param>
<return type="resource">resource</return>
<insert>mysql_query(string query [,resource link_identifier] [,int result_mode]);</insert>
<dialog title="Insert mysql_query">mysql_query(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_real_escape_string">
<description>
     Escapes special characters in a string for use in a SQL statement, taking into account the current charset of the connection.
    </description>
<param name="unescaped_string" required="1" vallist="0" default="" type="string">unescaped_string</param>
<param name="link_identifier" required="0" vallist="0" default="" type="resource">link_identifier</param>
<return type="string">string</return>
<insert>mysql_real_escape_string(string unescaped_string [,resource link_identifier]);</insert>
<dialog title="Insert mysql_real_escape_string">mysql_real_escape_string(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_result">
<description>Get result data</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="row" required="1" vallist="0" default="" type="int">row</param>
<param name="
        field
       " required="0" vallist="0" default="" type="mixed">
        field
       </param>
<return type="mixed">mixed</return>
<insert>mysql_result(resource result, int row [,mixed 
        field
       ]);</insert>
<dialog title="Insert mysql_result">mysql_result(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_select_db">
<description>Select a MySQL database</description>
<param name="database_name" required="1" vallist="0" default="" type="string">database_name</param>
<param name="
        link_identifier
       " required="0" vallist="0" default="" type="resource">
        link_identifier
       </param>
<return type="bool">bool</return>
<insert>mysql_select_db(string database_name [,resource 
        link_identifier
       ]);</insert>
<dialog title="Insert mysql_select_db">mysql_select_db(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_stat">
<description>Get current system status</description>
<param name="link_identifier" required="0" vallist="0" default="" type="resource">link_identifier</param>
<return type="string">string</return>
<insert>mysql_stat([resource link_identifier]);</insert>
<dialog title="Insert mysql_stat">mysql_stat(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_tablename">
<description>Get table name of field</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="i" required="1" vallist="0" default="" type="int">i</param>
<return type="string">string</return>
<insert>mysql_tablename(resource result, int i);</insert>
<dialog title="Insert mysql_tablename">mysql_tablename(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_thread_id">
<description>Return the current thread ID</description>
<param name="link_identifier" required="0" vallist="0" default="" type="resource">link_identifier</param>
<return type="int">int</return>
<insert>mysql_thread_id([resource link_identifier]);</insert>
<dialog title="Insert mysql_thread_id">mysql_thread_id(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mysql_unbuffered_query">
<description>
     Send an SQL query to MySQL, without fetching and buffering the
     result rows
    </description>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<param name="link_identifier" required="0" vallist="0" default="" type="resource">link_identifier</param>
<param name="result_mode" required="0" vallist="0" default="" type="int">result_mode</param>
<return type="resource">resource</return>
<insert>mysql_unbuffered_query(string query [,resource link_identifier] [,int result_mode]);</insert>
<dialog title="Insert mysql_unbuffered_query">mysql_unbuffered_query(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="mysqli">
<function name="mysqli_close">
<description>close connection</description>
<param name="link" required="1" vallist="0" default="" type="resource">link</param>
<return type="bool">bool</return>
<insert>mysqli_close(resource link);</insert>
<dialog title="Insert mysqli_close">mysqli_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mysqli_connect">
<description>open a connection to a mysql server</description>
<param name="hostname" required="0" vallist="0" default="" type="string">hostname</param>
<param name="username" required="0" vallist="0" default="" type="string">username</param>
<param name="passwd" required="0" vallist="0" default="" type="string">passwd</param>
<param name="dbname" required="0" vallist="0" default="" type="string">dbname</param>
<param name="port" required="0" vallist="0" default="" type="int">port</param>
<param name="socket" required="0" vallist="0" default="" type="string">socket</param>
<return type="resource">resource</return>
<insert>mysqli_connect([string hostname] [,string username] [,string passwd] [,string dbname] [,int port] [,string socket]);</insert>
<dialog title="Insert mysqli_connect">mysqli_connect(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="mysqli_options">
<description>set options</description>
<param name="link" required="1" vallist="0" default="" type="resource">link</param>
<param name="flags" required="1" vallist="0" default="" type="int">flags</param>
<param name="values" required="1" vallist="0" default="" type="mixed">values</param>
<return type="bool">bool</return>
<insert>mysqli_options(resource link, int flags, mixed values);</insert>
<dialog title="Insert mysqli_options">mysqli_options(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="mysqli_param_count">
<description>return the number of parameter for the given statement</description>
<param name="stmt" required="1" vallist="0" default="" type="resource">stmt</param>
<return type="int">int</return>
<insert>mysqli_param_count(resource stmt);</insert>
<dialog title="Insert mysqli_param_count">mysqli_param_count(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="mysqli_real_connect">
<description>open a connection to a mysql server</description>
<param name="link" required="1" vallist="0" default="" type="resource">link</param>
<param name="hostname" required="0" vallist="0" default="" type="string">hostname</param>
<param name="username" required="0" vallist="0" default="" type="string">username</param>
<param name="passwd" required="0" vallist="0" default="" type="string">passwd</param>
<param name="dbname" required="0" vallist="0" default="" type="string">dbname</param>
<param name="port" required="0" vallist="0" default="" type="int">port</param>
<param name="socket" required="0" vallist="0" default="" type="string">socket</param>
<return type="bool">bool</return>
<insert>mysqli_real_connect(resource link [,string hostname] [,string username] [,string passwd] [,string dbname] [,int port] [,string socket]);</insert>
<dialog title="Insert mysqli_real_connect">mysqli_real_connect(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="mysqli_real_escape_string">
<description>close statement</description>
<param name="link" required="1" vallist="0" default="" type="resource">link</param>
<param name="escapestr" required="1" vallist="0" default="" type="string">escapestr</param>
<return type="string">string</return>
<insert>mysqli_real_escape_string(resource link, string escapestr);</insert>
<dialog title="Insert mysqli_real_escape_string">mysqli_real_escape_string(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="mysqli_stmt_close">
<description>close statement</description>
<param name="stmt" required="1" vallist="0" default="" type="resource">stmt</param>
<return type="bool">bool</return>
<insert>mysqli_stmt_close(resource stmt);</insert>
<dialog title="Insert mysqli_stmt_close">mysqli_stmt_close(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="ncurses">
<function name="ncurses_addch">
<description>Add character at current position and advance cursor </description>
<param name="ch" required="1" vallist="0" default="" type="int">ch</param>
<return type="int">int</return>
<insert>ncurses_addch(int ch);</insert>
<dialog title="Insert ncurses_addch">ncurses_addch(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_addchnstr">
<description>Add attributed string with specified length at current position </description>
<param name="s" required="1" vallist="0" default="" type="string">s</param>
<param name="n" required="1" vallist="0" default="" type="int">n</param>
<return type="int">int</return>
<insert>ncurses_addchnstr(string s, int n);</insert>
<dialog title="Insert ncurses_addchnstr">ncurses_addchnstr(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_addchstr">
<description>Add attributed string at current position </description>
<param name="s" required="1" vallist="0" default="" type="string">s</param>
<return type="int">int</return>
<insert>ncurses_addchstr(string s);</insert>
<dialog title="Insert ncurses_addchstr">ncurses_addchstr(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_addnstr">
<description>Add string with specified length at current position </description>
<param name="s" required="1" vallist="0" default="" type="string">s</param>
<param name="n" required="1" vallist="0" default="" type="int">n</param>
<return type="int">int</return>
<insert>ncurses_addnstr(string s, int n);</insert>
<dialog title="Insert ncurses_addnstr">ncurses_addnstr(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_addstr">
<description>Output text at current position </description>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="int">int</return>
<insert>ncurses_addstr(string text);</insert>
<dialog title="Insert ncurses_addstr">ncurses_addstr(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_assume_default_colors">
<description>Define default colors for color 0 </description>
<param name="fg" required="1" vallist="0" default="" type="int">fg</param>
<param name="bg" required="1" vallist="0" default="" type="int">bg</param>
<return type="int">int</return>
<insert>ncurses_assume_default_colors(int fg, int bg);</insert>
<dialog title="Insert ncurses_assume_default_colors">ncurses_assume_default_colors(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_attroff">
<description>Turn off the given attributes </description>
<param name="attributes" required="1" vallist="0" default="" type="int">attributes</param>
<return type="int">int</return>
<insert>ncurses_attroff(int attributes);</insert>
<dialog title="Insert ncurses_attroff">ncurses_attroff(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_attron">
<description>Turn on the given attributes </description>
<param name="attributes" required="1" vallist="0" default="" type="int">attributes</param>
<return type="int">int</return>
<insert>ncurses_attron(int attributes);</insert>
<dialog title="Insert ncurses_attron">ncurses_attron(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_attrset">
<description>Set given attributes </description>
<param name="attributes" required="1" vallist="0" default="" type="int">attributes</param>
<return type="int">int</return>
<insert>ncurses_attrset(int attributes);</insert>
<dialog title="Insert ncurses_attrset">ncurses_attrset(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_baudrate">
<description>Returns baudrate of terminal </description>
<return type="int">int</return>
<insert>ncurses_baudrate();</insert>
<dialog title="Insert ncurses_baudrate">ncurses_baudrate();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_beep">
<description>Let the terminal beep </description>
<return type="int">int</return>
<insert>ncurses_beep();</insert>
<dialog title="Insert ncurses_beep">ncurses_beep();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_bkgd">
<description>Set background property for terminal screen </description>
<param name="attrchar" required="1" vallist="0" default="" type="int">attrchar</param>
<return type="int">int</return>
<insert>ncurses_bkgd(int attrchar);</insert>
<dialog title="Insert ncurses_bkgd">ncurses_bkgd(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_bkgdset">
<description>Control screen background </description>
<param name="attrchar" required="1" vallist="0" default="" type="int">attrchar</param>
<return type="void">void</return>
<insert>ncurses_bkgdset(int attrchar);</insert>
<dialog title="Insert ncurses_bkgdset">ncurses_bkgdset(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_border">
<description>Draw a border around the screen using attributed characters </description>
<param name="left" required="1" vallist="0" default="" type="int">left</param>
<param name="right" required="1" vallist="0" default="" type="int">right</param>
<param name="top" required="1" vallist="0" default="" type="int">top</param>
<param name="bottom" required="1" vallist="0" default="" type="int">bottom</param>
<param name="tl_corner" required="1" vallist="0" default="" type="int">tl_corner</param>
<param name="tr_corner" required="1" vallist="0" default="" type="int">tr_corner</param>
<param name="bl_corner" required="1" vallist="0" default="" type="int">bl_corner</param>
<param name="br_corner" required="1" vallist="0" default="" type="int">br_corner</param>
<return type="int">int</return>
<insert>ncurses_border(int left, int right, int top, int bottom, int tl_corner, int tr_corner, int bl_corner, int br_corner);</insert>
<dialog title="Insert ncurses_border">ncurses_border(%0, %1, %2, %3, %4, %5, %6, %7);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_can_change_color">
<description>Check if we can change terminals colors </description>
<return type="bool">bool</return>
<insert>ncurses_can_change_color();</insert>
<dialog title="Insert ncurses_can_change_color">ncurses_can_change_color();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_cbreak">
<description>Switch of input buffering </description>
<return type="bool">bool</return>
<insert>ncurses_cbreak();</insert>
<dialog title="Insert ncurses_cbreak">ncurses_cbreak();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_clear">
<description>Clear screen </description>
<return type="bool">bool</return>
<insert>ncurses_clear();</insert>
<dialog title="Insert ncurses_clear">ncurses_clear();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_clrtobot">
<description>Clear screen from current position to bottom </description>
<return type="bool">bool</return>
<insert>ncurses_clrtobot();</insert>
<dialog title="Insert ncurses_clrtobot">ncurses_clrtobot();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_clrtoeol">
<description>Clear screen from current position to end of line </description>
<return type="bool">bool</return>
<insert>ncurses_clrtoeol();</insert>
<dialog title="Insert ncurses_clrtoeol">ncurses_clrtoeol();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_color_set">
<description>Set fore- and background color </description>
<param name="pair" required="1" vallist="0" default="" type="int">pair</param>
<return type="int">int</return>
<insert>ncurses_color_set(int pair);</insert>
<dialog title="Insert ncurses_color_set">ncurses_color_set(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_curs_set">
<description>Set cursor state </description>
<param name="visibility" required="1" vallist="0" default="" type="int">visibility</param>
<return type="int">int</return>
<insert>ncurses_curs_set(int visibility);</insert>
<dialog title="Insert ncurses_curs_set">ncurses_curs_set(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_def_prog_mode">
<description>Saves terminals (program) mode</description>
<return type="bool">bool</return>
<insert>ncurses_def_prog_mode();</insert>
<dialog title="Insert ncurses_def_prog_mode">ncurses_def_prog_mode();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_def_shell_mode">
<description>Saves terminals (shell) mode</description>
<return type="bool">bool</return>
<insert>ncurses_def_shell_mode();</insert>
<dialog title="Insert ncurses_def_shell_mode">ncurses_def_shell_mode();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_define_key">
<description>Define a keycode </description>
<param name="definition" required="1" vallist="0" default="" type="string">definition</param>
<param name="keycode" required="1" vallist="0" default="" type="int">keycode</param>
<return type="int">int</return>
<insert>ncurses_define_key(string definition, int keycode);</insert>
<dialog title="Insert ncurses_define_key">ncurses_define_key(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_delay_output">
<description>Delay output on terminal using padding characters </description>
<param name="milliseconds" required="1" vallist="0" default="" type="int">milliseconds</param>
<return type="int">int</return>
<insert>ncurses_delay_output(int milliseconds);</insert>
<dialog title="Insert ncurses_delay_output">ncurses_delay_output(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_delch">
<description>Delete character at current position, move rest of line left </description>
<return type="bool">bool</return>
<insert>ncurses_delch();</insert>
<dialog title="Insert ncurses_delch">ncurses_delch();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_deleteln">
<description>Delete line at current position, move rest of screen up </description>
<return type="bool">bool</return>
<insert>ncurses_deleteln();</insert>
<dialog title="Insert ncurses_deleteln">ncurses_deleteln();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_delwin">
<description>Delete a ncurses window </description>
<param name="window" required="1" vallist="0" default="" type="resource">window</param>
<return type="int">int</return>
<insert>ncurses_delwin(resource window);</insert>
<dialog title="Insert ncurses_delwin">ncurses_delwin(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_doupdate">
<description>Write all prepared refreshes to terminal </description>
<return type="bool">bool</return>
<insert>ncurses_doupdate();</insert>
<dialog title="Insert ncurses_doupdate">ncurses_doupdate();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_echo">
<description>Activate keyboard input echo </description>
<return type="bool">bool</return>
<insert>ncurses_echo();</insert>
<dialog title="Insert ncurses_echo">ncurses_echo();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_echochar">
<description>Single character output including refresh </description>
<param name="character" required="1" vallist="0" default="" type="int">character</param>
<return type="int">int</return>
<insert>ncurses_echochar(int character);</insert>
<dialog title="Insert ncurses_echochar">ncurses_echochar(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_end">
<description>Stop using ncurses, clean up the screen </description>
<return type="int">int</return>
<insert>ncurses_end();</insert>
<dialog title="Insert ncurses_end">ncurses_end();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_erase">
<description>Erase terminal screen </description>
<return type="bool">bool</return>
<insert>ncurses_erase();</insert>
<dialog title="Insert ncurses_erase">ncurses_erase();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_erasechar">
<description>Returns current erase character </description>
<return type="string">string</return>
<insert>ncurses_erasechar();</insert>
<dialog title="Insert ncurses_erasechar">ncurses_erasechar();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_flash">
<description>Flash terminal screen (visual bell) </description>
<return type="bool">bool</return>
<insert>ncurses_flash();</insert>
<dialog title="Insert ncurses_flash">ncurses_flash();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_flushinp">
<description>Flush keyboard input buffer </description>
<return type="bool">bool</return>
<insert>ncurses_flushinp();</insert>
<dialog title="Insert ncurses_flushinp">ncurses_flushinp();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_getch">
<description>Read a character from keyboard </description>
<return type="int">int</return>
<insert>ncurses_getch();</insert>
<dialog title="Insert ncurses_getch">ncurses_getch();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_getmouse">
<description>Reads mouse event</description>
<param name="mevent" required="1" vallist="0" default="" type="array">mevent</param>
<return type="bool">bool</return>
<insert>ncurses_getmouse(array mevent);</insert>
<dialog title="Insert ncurses_getmouse">ncurses_getmouse(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_halfdelay">
<description>Put terminal into halfdelay mode </description>
<param name="tenth" required="1" vallist="0" default="" type="int">tenth</param>
<return type="int">int</return>
<insert>ncurses_halfdelay(int tenth);</insert>
<dialog title="Insert ncurses_halfdelay">ncurses_halfdelay(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_has_colors">
<description>Check if terminal has colors </description>
<return type="bool">bool</return>
<insert>ncurses_has_colors();</insert>
<dialog title="Insert ncurses_has_colors">ncurses_has_colors();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_has_ic">
<description>Check for insert- and delete-capabilities </description>
<return type="bool">bool</return>
<insert>ncurses_has_ic();</insert>
<dialog title="Insert ncurses_has_ic">ncurses_has_ic();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_has_il">
<description>Check for line insert- and delete-capabilities </description>
<return type="bool">bool</return>
<insert>ncurses_has_il();</insert>
<dialog title="Insert ncurses_has_il">ncurses_has_il();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_has_key">
<description>Check for presence of a function key on terminal keyboard </description>
<param name="keycode" required="1" vallist="0" default="" type="int">keycode</param>
<return type="int">int</return>
<insert>ncurses_has_key(int keycode);</insert>
<dialog title="Insert ncurses_has_key">ncurses_has_key(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_hline">
<description>Draw a horizontal line at current position using an attributed character and max. n characters long </description>
<param name="charattr" required="1" vallist="0" default="" type="int">charattr</param>
<param name="n" required="1" vallist="0" default="" type="int">n</param>
<return type="int">int</return>
<insert>ncurses_hline(int charattr, int n);</insert>
<dialog title="Insert ncurses_hline">ncurses_hline(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_inch">
<description>Get character and attribute at current position </description>
<return type="string">string</return>
<insert>ncurses_inch();</insert>
<dialog title="Insert ncurses_inch">ncurses_inch();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_init_color">
<description>Set new RGB value for color </description>
<param name="color" required="1" vallist="0" default="" type="int">color</param>
<param name="r" required="1" vallist="0" default="" type="int">r</param>
<param name="g" required="1" vallist="0" default="" type="int">g</param>
<param name="b" required="1" vallist="0" default="" type="int">b</param>
<return type="int">int</return>
<insert>ncurses_init_color(int color, int r, int g, int b);</insert>
<dialog title="Insert ncurses_init_color">ncurses_init_color(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_init_pair">
<description>Allocate a color pair </description>
<param name="pair" required="1" vallist="0" default="" type="int">pair</param>
<param name="fg" required="1" vallist="0" default="" type="int">fg</param>
<param name="bg" required="1" vallist="0" default="" type="int">bg</param>
<return type="int">int</return>
<insert>ncurses_init_pair(int pair, int fg, int bg);</insert>
<dialog title="Insert ncurses_init_pair">ncurses_init_pair(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_init">
<description>Initialize ncurses </description>
<return type="int">int</return>
<insert>ncurses_init();</insert>
<dialog title="Insert ncurses_init">ncurses_init();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_insch">
<description>Insert character moving rest of line including character at current position </description>
<param name="character" required="1" vallist="0" default="" type="int">character</param>
<return type="int">int</return>
<insert>ncurses_insch(int character);</insert>
<dialog title="Insert ncurses_insch">ncurses_insch(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_insdelln">
<description>Insert lines before current line scrolling down (negative numbers delete and scroll up) </description>
<param name="count" required="1" vallist="0" default="" type="int">count</param>
<return type="int">int</return>
<insert>ncurses_insdelln(int count);</insert>
<dialog title="Insert ncurses_insdelln">ncurses_insdelln(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_insertln">
<description>Insert a line, move rest of screen down </description>
<return type="bool">bool</return>
<insert>ncurses_insertln();</insert>
<dialog title="Insert ncurses_insertln">ncurses_insertln();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_insstr">
<description>Insert string at current position, moving rest of line right </description>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="int">int</return>
<insert>ncurses_insstr(string text);</insert>
<dialog title="Insert ncurses_insstr">ncurses_insstr(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_instr">
<description>Reads string from terminal screen </description>
<param name="buffer" required="1" vallist="0" default="" type="string">buffer</param>
<return type="int">int</return>
<insert>ncurses_instr(string buffer);</insert>
<dialog title="Insert ncurses_instr">ncurses_instr(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_isendwin">
<description>Ncurses is in endwin mode, normal screen output may be performed </description>
<return type="bool">bool</return>
<insert>ncurses_isendwin();</insert>
<dialog title="Insert ncurses_isendwin">ncurses_isendwin();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_keyok">
<description>Enable or disable a keycode </description>
<param name="keycode" required="1" vallist="0" default="" type="int">keycode</param>
<param name="enable" required="1" vallist="0" default="" type="bool">enable</param>
<return type="int">int</return>
<insert>ncurses_keyok(int keycode, bool enable);</insert>
<dialog title="Insert ncurses_keyok">ncurses_keyok(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_killchar">
<description>Returns current line kill character </description>
<return type="bool">bool</return>
<insert>ncurses_killchar();</insert>
<dialog title="Insert ncurses_killchar">ncurses_killchar();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_longname">
<description>Returns terminals description</description>
<return type="string">string</return>
<insert>ncurses_longname();</insert>
<dialog title="Insert ncurses_longname">ncurses_longname();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_mouseinterval">
<description>Set timeout for mouse button clicks </description>
<param name="milliseconds" required="1" vallist="0" default="" type="int">milliseconds</param>
<return type="int">int</return>
<insert>ncurses_mouseinterval(int milliseconds);</insert>
<dialog title="Insert ncurses_mouseinterval">ncurses_mouseinterval(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_mousemask">
<description>Sets mouse options</description>
<param name="newmask" required="1" vallist="0" default="" type="int">newmask</param>
<param name="oldmask" required="1" vallist="0" default="" type="int">oldmask</param>
<return type="int">int</return>
<insert>ncurses_mousemask(int newmask, int oldmask);</insert>
<dialog title="Insert ncurses_mousemask">ncurses_mousemask(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_move">
<description>Move output position </description>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<return type="int">int</return>
<insert>ncurses_move(int y, int x);</insert>
<dialog title="Insert ncurses_move">ncurses_move(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_mvaddch">
<description>Move current position and add character </description>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="c" required="1" vallist="0" default="" type="int">c</param>
<return type="int">int</return>
<insert>ncurses_mvaddch(int y, int x, int c);</insert>
<dialog title="Insert ncurses_mvaddch">ncurses_mvaddch(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_mvaddchnstr">
<description>Move position and add attrributed string with specified length </description>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="s" required="1" vallist="0" default="" type="string">s</param>
<param name="n" required="1" vallist="0" default="" type="int">n</param>
<return type="int">int</return>
<insert>ncurses_mvaddchnstr(int y, int x, string s, int n);</insert>
<dialog title="Insert ncurses_mvaddchnstr">ncurses_mvaddchnstr(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_mvaddchstr">
<description>Move position and add attributed string </description>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="s" required="1" vallist="0" default="" type="string">s</param>
<return type="int">int</return>
<insert>ncurses_mvaddchstr(int y, int x, string s);</insert>
<dialog title="Insert ncurses_mvaddchstr">ncurses_mvaddchstr(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_mvaddnstr">
<description>Move position and add string with specified length </description>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="s" required="1" vallist="0" default="" type="string">s</param>
<param name="n" required="1" vallist="0" default="" type="int">n</param>
<return type="int">int</return>
<insert>ncurses_mvaddnstr(int y, int x, string s, int n);</insert>
<dialog title="Insert ncurses_mvaddnstr">ncurses_mvaddnstr(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_mvaddstr">
<description>Move position and add string </description>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="s" required="1" vallist="0" default="" type="string">s</param>
<return type="int">int</return>
<insert>ncurses_mvaddstr(int y, int x, string s);</insert>
<dialog title="Insert ncurses_mvaddstr">ncurses_mvaddstr(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_mvcur">
<description>Move cursor immediately </description>
<param name="old_y" required="1" vallist="0" default="" type="int">old_y</param>
<param name="old_x" required="1" vallist="0" default="" type="int">old_x</param>
<param name="new_y" required="1" vallist="0" default="" type="int">new_y</param>
<param name="new_x" required="1" vallist="0" default="" type="int">new_x</param>
<return type="int">int</return>
<insert>ncurses_mvcur(int old_y, int old_x, int new_y, int new_x);</insert>
<dialog title="Insert ncurses_mvcur">ncurses_mvcur(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_mvdelch">
<description>Move position and delete character, shift rest of line left </description>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<return type="int">int</return>
<insert>ncurses_mvdelch(int y, int x);</insert>
<dialog title="Insert ncurses_mvdelch">ncurses_mvdelch(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_mvgetch">
<description>Move position and get character at new position </description>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<return type="int">int</return>
<insert>ncurses_mvgetch(int y, int x);</insert>
<dialog title="Insert ncurses_mvgetch">ncurses_mvgetch(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_mvhline">
<description>Set new position and draw a horizontal line using an attributed character and max. n characters long </description>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="attrchar" required="1" vallist="0" default="" type="int">attrchar</param>
<param name="n" required="1" vallist="0" default="" type="int">n</param>
<return type="int">int</return>
<insert>ncurses_mvhline(int y, int x, int attrchar, int n);</insert>
<dialog title="Insert ncurses_mvhline">ncurses_mvhline(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_mvinch">
<description>Move position and get attributed character at new position </description>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<return type="int">int</return>
<insert>ncurses_mvinch(int y, int x);</insert>
<dialog title="Insert ncurses_mvinch">ncurses_mvinch(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_mvvline">
<description>Set new position and draw a vertical line using an attributed character and max. n characters long </description>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="attrchar" required="1" vallist="0" default="" type="int">attrchar</param>
<param name="n" required="1" vallist="0" default="" type="int">n</param>
<return type="int">int</return>
<insert>ncurses_mvvline(int y, int x, int attrchar, int n);</insert>
<dialog title="Insert ncurses_mvvline">ncurses_mvvline(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_mvwaddstr">
<description>Add string at new position in window </description>
<param name="window" required="1" vallist="0" default="" type="resource">window</param>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="int">int</return>
<insert>ncurses_mvwaddstr(resource window, int y, int x, string text);</insert>
<dialog title="Insert ncurses_mvwaddstr">ncurses_mvwaddstr(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_napms">
<description>Sleep </description>
<param name="milliseconds" required="1" vallist="0" default="" type="int">milliseconds</param>
<return type="int">int</return>
<insert>ncurses_napms(int milliseconds);</insert>
<dialog title="Insert ncurses_napms">ncurses_napms(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_newwin">
<description>Create a new window </description>
<param name="rows" required="1" vallist="0" default="" type="int">rows</param>
<param name="cols" required="1" vallist="0" default="" type="int">cols</param>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<return type="int">int</return>
<insert>ncurses_newwin(int rows, int cols, int y, int x);</insert>
<dialog title="Insert ncurses_newwin">ncurses_newwin(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_nl">
<description>Translate newline and carriage return / line feed </description>
<return type="bool">bool</return>
<insert>ncurses_nl();</insert>
<dialog title="Insert ncurses_nl">ncurses_nl();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_nocbreak">
<description>Switch terminal to cooked mode </description>
<return type="bool">bool</return>
<insert>ncurses_nocbreak();</insert>
<dialog title="Insert ncurses_nocbreak">ncurses_nocbreak();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_noecho">
<description>Switch off keyboard input echo </description>
<return type="bool">bool</return>
<insert>ncurses_noecho();</insert>
<dialog title="Insert ncurses_noecho">ncurses_noecho();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_nonl">
<description>Do not translate newline and carriage return / line feed </description>
<return type="bool">bool</return>
<insert>ncurses_nonl();</insert>
<dialog title="Insert ncurses_nonl">ncurses_nonl();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_noqiflush">
<description>Do not flush on signal characters</description>
<return type="int">int</return>
<insert>ncurses_noqiflush();</insert>
<dialog title="Insert ncurses_noqiflush">ncurses_noqiflush();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_noraw">
<description>Switch terminal out of raw mode </description>
<return type="bool">bool</return>
<insert>ncurses_noraw();</insert>
<dialog title="Insert ncurses_noraw">ncurses_noraw();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_qiflush">
<description>Flush on signal characters </description>
<return type="int">int</return>
<insert>ncurses_qiflush();</insert>
<dialog title="Insert ncurses_qiflush">ncurses_qiflush();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_raw">
<description>Switch terminal into raw mode </description>
<return type="bool">bool</return>
<insert>ncurses_raw();</insert>
<dialog title="Insert ncurses_raw">ncurses_raw();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_refresh">
<description>Refresh screen </description>
<param name="ch" required="1" vallist="0" default="" type="int">ch</param>
<return type="int">int</return>
<insert>ncurses_refresh(int ch);</insert>
<dialog title="Insert ncurses_refresh">ncurses_refresh(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_resetty">
<description>Restores saved terminal state </description>
<return type="bool">bool</return>
<insert>ncurses_resetty();</insert>
<dialog title="Insert ncurses_resetty">ncurses_resetty();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_savetty">
<description>Saves terminal state </description>
<return type="bool">bool</return>
<insert>ncurses_savetty();</insert>
<dialog title="Insert ncurses_savetty">ncurses_savetty();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_scr_dump">
<description>Dump screen content to file </description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="int">int</return>
<insert>ncurses_scr_dump(string filename);</insert>
<dialog title="Insert ncurses_scr_dump">ncurses_scr_dump(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_scr_init">
<description>Initialize screen from file dump </description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="int">int</return>
<insert>ncurses_scr_init(string filename);</insert>
<dialog title="Insert ncurses_scr_init">ncurses_scr_init(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_scr_restore">
<description>Restore screen from file dump </description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="int">int</return>
<insert>ncurses_scr_restore(string filename);</insert>
<dialog title="Insert ncurses_scr_restore">ncurses_scr_restore(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_scr_set">
<description>Inherit screen from file dump </description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="int">int</return>
<insert>ncurses_scr_set(string filename);</insert>
<dialog title="Insert ncurses_scr_set">ncurses_scr_set(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_scrl">
<description>Scroll window content up or down without changing current position </description>
<param name="count" required="1" vallist="0" default="" type="int">count</param>
<return type="int">int</return>
<insert>ncurses_scrl(int count);</insert>
<dialog title="Insert ncurses_scrl">ncurses_scrl(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_slk_attr">
<description>Returns current soft label key attribute</description>
<return type="bool">bool</return>
<insert>ncurses_slk_attr();</insert>
<dialog title="Insert ncurses_slk_attr">ncurses_slk_attr();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_slk_clear">
<description>Clears soft labels from screen</description>
<return type="bool">bool</return>
<insert>ncurses_slk_clear();</insert>
<dialog title="Insert ncurses_slk_clear">ncurses_slk_clear();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_slk_color">
<description>Sets color for soft label keys</description>
<param name="intarg" required="1" vallist="0" default="" type="int">intarg</param>
<return type="int">int</return>
<insert>ncurses_slk_color(int intarg);</insert>
<dialog title="Insert ncurses_slk_color">ncurses_slk_color(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_slk_init">
<description>Initializes soft label key functions</description>
<param name="format" required="1" vallist="0" default="" type="int">format</param>
<return type="bool">bool</return>
<insert>ncurses_slk_init(int format);</insert>
<dialog title="Insert ncurses_slk_init">ncurses_slk_init(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_slk_noutrefresh">
<description>Copies soft label keys to virtual screen</description>
<return type="bool">bool</return>
<insert>ncurses_slk_noutrefresh();</insert>
<dialog title="Insert ncurses_slk_noutrefresh">ncurses_slk_noutrefresh();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_slk_refresh">
<description>Copies soft label keys to screen</description>
<return type="bool">bool</return>
<insert>ncurses_slk_refresh();</insert>
<dialog title="Insert ncurses_slk_refresh">ncurses_slk_refresh();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_slk_restore">
<description>Restores soft label keys</description>
<return type="bool">bool</return>
<insert>ncurses_slk_restore();</insert>
<dialog title="Insert ncurses_slk_restore">ncurses_slk_restore();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_slk_touch">
<description>Fources output when ncurses_slk_noutrefresh is performed</description>
<return type="bool">bool</return>
<insert>ncurses_slk_touch();</insert>
<dialog title="Insert ncurses_slk_touch">ncurses_slk_touch();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_standend">
<description>Stop using 'standout' attribute </description>
<return type="int">int</return>
<insert>ncurses_standend();</insert>
<dialog title="Insert ncurses_standend">ncurses_standend();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_standout">
<description>Start using 'standout' attribute </description>
<return type="int">int</return>
<insert>ncurses_standout();</insert>
<dialog title="Insert ncurses_standout">ncurses_standout();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_start_color">
<description>Start using colors </description>
<return type="int">int</return>
<insert>ncurses_start_color();</insert>
<dialog title="Insert ncurses_start_color">ncurses_start_color();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_termattrs">
<description>Returns a logical OR of all attribute flags supported by terminal </description>
<return type="bool">bool</return>
<insert>ncurses_termattrs();</insert>
<dialog title="Insert ncurses_termattrs">ncurses_termattrs();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_termname">
<description>Returns terminals (short)-name</description>
<return type="string">string</return>
<insert>ncurses_termname();</insert>
<dialog title="Insert ncurses_termname">ncurses_termname();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_timeout">
<description>Set timeout for special key sequences </description>
<param name="millisec" required="1" vallist="0" default="" type="int">millisec</param>
<return type="void">void</return>
<insert>ncurses_timeout(int millisec);</insert>
<dialog title="Insert ncurses_timeout">ncurses_timeout(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_typeahead">
<description>Specify different filedescriptor for typeahead checking </description>
<param name="fd" required="1" vallist="0" default="" type="int">fd</param>
<return type="int">int</return>
<insert>ncurses_typeahead(int fd);</insert>
<dialog title="Insert ncurses_typeahead">ncurses_typeahead(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_ungetch">
<description>Put a character back into the input stream </description>
<param name="keycode" required="1" vallist="0" default="" type="int">keycode</param>
<return type="int">int</return>
<insert>ncurses_ungetch(int keycode);</insert>
<dialog title="Insert ncurses_ungetch">ncurses_ungetch(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_ungetmouse">
<description>Pushes mouse event to queue</description>
<param name="mevent" required="1" vallist="0" default="" type="array">mevent</param>
<return type="bool">bool</return>
<insert>ncurses_ungetmouse(array mevent);</insert>
<dialog title="Insert ncurses_ungetmouse">ncurses_ungetmouse(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_use_default_colors">
<description>Assign terminal default colors to color id -1 </description>
<return type="bool">bool</return>
<insert>ncurses_use_default_colors();</insert>
<dialog title="Insert ncurses_use_default_colors">ncurses_use_default_colors();</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_use_env">
<description>Control use of environment information about terminal size </description>
<param name="flag" required="1" vallist="0" default="" type="bool">flag</param>
<return type="void">void</return>
<insert>ncurses_use_env(bool flag);</insert>
<dialog title="Insert ncurses_use_env">ncurses_use_env(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_use_extended_names">
<description>Control use of extended names in terminfo descriptions </description>
<param name="flag" required="1" vallist="0" default="" type="bool">flag</param>
<return type="int">int</return>
<insert>ncurses_use_extended_names(bool flag);</insert>
<dialog title="Insert ncurses_use_extended_names">ncurses_use_extended_names(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_vline">
<description>Draw a vertical line at current position using an attributed character and max. n characters long </description>
<param name="charattr" required="1" vallist="0" default="" type="int">charattr</param>
<param name="n" required="1" vallist="0" default="" type="int">n</param>
<return type="int">int</return>
<insert>ncurses_vline(int charattr, int n);</insert>
<dialog title="Insert ncurses_vline">ncurses_vline(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ncurses_wrefresh">
<description>Refresh window on terminal screen </description>
<param name="window" required="1" vallist="0" default="" type="resource">window</param>
<return type="int">int</return>
<insert>ncurses_wrefresh(resource window);</insert>
<dialog title="Insert ncurses_wrefresh">ncurses_wrefresh(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="network">
<function name="checkdnsrr">
<description>
     Check DNS records corresponding to a given Internet host name or
     IP address
    </description>
<param name="host" required="1" vallist="0" default="" type="string">host</param>
<param name="type" required="0" vallist="0" default="" type="string">type</param>
<return type="int">int</return>
<insert>checkdnsrr(string host [,string type]);</insert>
<dialog title="Insert checkdnsrr">checkdnsrr(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="closelog">
<description>Close connection to system logger</description>
<return type="int">int</return>
<insert>closelog();</insert>
<dialog title="Insert closelog">closelog();</dialog>
<info title="Info window"></info>
</function>
<function name="debugger_off">
<description>Disable internal PHP debugger (PHP 3)</description>
<return type="int">int</return>
<insert>debugger_off();</insert>
<dialog title="Insert debugger_off">debugger_off();</dialog>
<info title="Info window"></info>
</function>
<function name="debugger_on">
<description>Enable internal PHP debugger (PHP 3)</description>
<param name="address" required="1" vallist="0" default="" type="string">address</param>
<return type="int">int</return>
<insert>debugger_on(string address);</insert>
<dialog title="Insert debugger_on">debugger_on(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="define_syslog_variables">
<description>Initializes all syslog related constants</description>
<return type="void">void</return>
<insert>define_syslog_variables();</insert>
<dialog title="Insert define_syslog_variables">define_syslog_variables();</dialog>
<info title="Info window"></info>
</function>
<function name="dns_check_record">
<description>Synonym for </description>
<param name="host" required="1" vallist="0" default="" type="string">host</param>
<param name="type" required="0" vallist="0" default="" type="string">type</param>
<return type="int">int</return>
<insert>dns_check_record(string host [,string type]);</insert>
<dialog title="Insert dns_check_record">dns_check_record(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="dns_get_mx">
<description>Synonym for </description>
<param name="hostname" required="1" vallist="0" default="" type="string">hostname</param>
<param name="mxhosts" required="1" vallist="0" default="" type="array">mxhosts</param>
<param name="&amp;weight" required="0" vallist="0" default="" type="array">&amp;weight</param>
<return type="int">int</return>
<insert>dns_get_mx(string hostname, array mxhosts [,array &amp;weight]);</insert>
<dialog title="Insert dns_get_mx">dns_get_mx(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="dns_get_record">
<description>
      Fetch DNS Resource Records associated with a hostname
     </description>
<param name="hostname" required="1" vallist="0" default="" type="string">hostname</param>
<param name="type" required="0" vallist="0" default="" type="int">type</param>
<param name="&amp;authns" required="0" vallist="0" default="" type="array">&amp;authns</param>
<param name="&amp;addtl" required="1" vallist="0" default="" type="array">&amp;addtl</param>
<return type="array">array</return>
<insert>dns_get_record(string hostname [,int type] [,array &amp;authns], array &amp;addtl);</insert>
<dialog title="Insert dns_get_record">dns_get_record(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="fsockopen">
<description>
     Open Internet or Unix domain socket connection
    </description>
<param name="hostname" required="1" vallist="0" default="" type="string">hostname</param>
<param name="port" required="1" vallist="0" default="" type="int">port</param>
<param name="errno" required="0" vallist="0" default="" type="int">errno</param>
<param name="errstr" required="0" vallist="0" default="" type="string">errstr</param>
<param name="timeout" required="0" vallist="0" default="" type="float">timeout</param>
<return type="int">int</return>
<insert>fsockopen(string hostname, int port [,int errno] [,string errstr] [,float timeout]);</insert>
<dialog title="Insert fsockopen">fsockopen(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="gethostbyaddr">
<description>
     Get the Internet host name corresponding to a given IP address
    </description>
<param name="ip_address" required="1" vallist="0" default="" type="string">ip_address</param>
<return type="string">string</return>
<insert>gethostbyaddr(string ip_address);</insert>
<dialog title="Insert gethostbyaddr">gethostbyaddr(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="gethostbyname">
<description>
     Get the IP address corresponding to a given Internet host name
    </description>
<param name="hostname" required="1" vallist="0" default="" type="string">hostname</param>
<return type="string">string</return>
<insert>gethostbyname(string hostname);</insert>
<dialog title="Insert gethostbyname">gethostbyname(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="gethostbynamel">
<description>
     Get a list of IP addresses corresponding to a given Internet host
     name
    </description>
<param name="hostname" required="1" vallist="0" default="" type="string">hostname</param>
<return type="array">array</return>
<insert>gethostbynamel(string hostname);</insert>
<dialog title="Insert gethostbynamel">gethostbynamel(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="getmxrr">
<description>
     Get MX records corresponding to a given Internet host name
    </description>
<param name="hostname" required="1" vallist="0" default="" type="string">hostname</param>
<param name="mxhosts" required="1" vallist="0" default="" type="array">mxhosts</param>
<param name="weight" required="0" vallist="0" default="" type="array">weight</param>
<return type="int">int</return>
<insert>getmxrr(string hostname, array mxhosts [,array weight]);</insert>
<dialog title="Insert getmxrr">getmxrr(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="getprotobyname">
<description>
     Get protocol number associated with protocol name
    </description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="int">int</return>
<insert>getprotobyname(string name);</insert>
<dialog title="Insert getprotobyname">getprotobyname(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="getprotobynumber">
<description>
     Get protocol name associated with protocol number
    </description>
<param name="number" required="1" vallist="0" default="" type="int">number</param>
<return type="string">string</return>
<insert>getprotobynumber(int number);</insert>
<dialog title="Insert getprotobynumber">getprotobynumber(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="getservbyname">
<description>
     Get port number associated with an Internet service and protocol
    </description>
<param name="service" required="1" vallist="0" default="" type="string">service</param>
<param name="protocol" required="1" vallist="0" default="" type="string">protocol</param>
<return type="int">int</return>
<insert>getservbyname(string service, string protocol);</insert>
<dialog title="Insert getservbyname">getservbyname(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="getservbyport">
<description>
     Get Internet service which corresponds to port and protocol
    </description>
<param name="port" required="1" vallist="0" default="" type="int">port</param>
<param name="protocol" required="1" vallist="0" default="" type="string">protocol</param>
<return type="string">string</return>
<insert>getservbyport(int port, string protocol);</insert>
<dialog title="Insert getservbyport">getservbyport(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ip2long">
<description>
      Converts a string containing an (IPv4) Internet Protocol dotted address
      into a proper address.
    </description>
<param name="ip_address" required="1" vallist="0" default="" type="string">ip_address</param>
<return type="int">int</return>
<insert>ip2long(string ip_address);</insert>
<dialog title="Insert ip2long">ip2long(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="long2ip">
<description>
      Converts an (IPv4) Internet network address into a string in Internet
      standard dotted format 
    </description>
<param name="proper_address" required="1" vallist="0" default="" type="int">proper_address</param>
<return type="string">string</return>
<insert>long2ip(int proper_address);</insert>
<dialog title="Insert long2ip">long2ip(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="openlog">
<description>Open connection to system logger</description>
<param name="ident" required="1" vallist="0" default="" type="string">ident</param>
<param name="option" required="1" vallist="0" default="" type="int">option</param>
<param name="facility" required="1" vallist="0" default="" type="int">facility</param>
<return type="int">int</return>
<insert>openlog(string ident, int option, int facility);</insert>
<dialog title="Insert openlog">openlog(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pfsockopen">
<description>
     Open persistent Internet or Unix domain socket connection
    </description>
<param name="hostname" required="1" vallist="0" default="" type="string">hostname</param>
<param name="port" required="1" vallist="0" default="" type="int">port</param>
<param name="errno" required="0" vallist="0" default="" type="int">errno</param>
<param name="errstr" required="0" vallist="0" default="" type="string">errstr</param>
<param name="timeout" required="0" vallist="0" default="" type="int">timeout</param>
<return type="int">int</return>
<insert>pfsockopen(string hostname, int port [,int errno] [,string errstr] [,int timeout]);</insert>
<dialog title="Insert pfsockopen">pfsockopen(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="syslog">
<description>Generate a system log message</description>
<param name="priority" required="1" vallist="0" default="" type="int">priority</param>
<param name="message" required="1" vallist="0" default="" type="string">message</param>
<return type="int">int</return>
<insert>syslog(int priority, string message);</insert>
<dialog title="Insert syslog">syslog(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="nis">
<function name="yp_all">
<description>
     Traverse the map and call a function on each entry
    </description>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<param name="map" required="1" vallist="0" default="" type="string">map</param>
<param name="callback" required="1" vallist="0" default="" type="string">callback</param>
<return type="void">void</return>
<insert>yp_all(string domain, string map, string callback);</insert>
<dialog title="Insert yp_all">yp_all(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="yp_cat">
<description>
     Return an array containing the entire map
    </description>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<param name="map" required="1" vallist="0" default="" type="string">map</param>
<return type="array">array</return>
<insert>yp_cat(string domain, string map);</insert>
<dialog title="Insert yp_cat">yp_cat(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="yp_err_string">
<description>
    Returns the error string associated with the previous operation
   </description>
<return type="string">string</return>
<insert>yp_err_string();</insert>
<dialog title="Insert yp_err_string">yp_err_string();</dialog>
<info title="Info window"></info>
</function>
<function name="yp_errno">
<description>
     Returns the error code of the previous operation
    </description>
<return type="int">int</return>
<insert>yp_errno();</insert>
<dialog title="Insert yp_errno">yp_errno();</dialog>
<info title="Info window"></info>
</function>
<function name="yp_first">
<description>
     Returns the first key-value pair from the named map
    </description>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<param name="map" required="1" vallist="0" default="" type="string">map</param>
<return type="array">array</return>
<insert>yp_first(string domain, string map);</insert>
<dialog title="Insert yp_first">yp_first(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="yp_get_default_domain">
<description>Fetches the machine's default NIS domain</description>
<return type="int">int</return>
<insert>yp_get_default_domain();</insert>
<dialog title="Insert yp_get_default_domain">yp_get_default_domain();</dialog>
<info title="Info window"></info>
</function>
<function name="yp_master">
<description>
     Returns the machine name of the master NIS server for a map
    </description>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<param name="map" required="1" vallist="0" default="" type="string">map</param>
<return type="string">string</return>
<insert>yp_master(string domain, string map);</insert>
<dialog title="Insert yp_master">yp_master(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="yp_match">
<description>Returns the matched line</description>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<param name="map" required="1" vallist="0" default="" type="string">map</param>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<return type="string">string</return>
<insert>yp_match(string domain, string map, string key);</insert>
<dialog title="Insert yp_match">yp_match(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="yp_next">
<description>Returns the next key-value pair in the named
     map.</description>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<param name="map" required="1" vallist="0" default="" type="string">map</param>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<return type="array">array</return>
<insert>yp_next(string domain, string map, string key);</insert>
<dialog title="Insert yp_next">yp_next(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="yp_order">
<description>Returns the order number for a map</description>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<param name="map" required="1" vallist="0" default="" type="string">map</param>
<return type="int">int</return>
<insert>yp_order(string domain, string map);</insert>
<dialog title="Insert yp_order">yp_order(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="notes">
<function name="notes_body">
<description>Open the message msg_number in the specified mailbox on the specified server (leave serv</description>
<param name="server" required="1" vallist="0" default="" type="string">server</param>
<param name="mailbox" required="1" vallist="0" default="" type="string">mailbox</param>
<param name="msg_number" required="1" vallist="0" default="" type="int">msg_number</param>
<return type="array">array</return>
<insert>notes_body(string server, string mailbox, int msg_number);</insert>
<dialog title="Insert notes_body">notes_body(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="notes_copy_db">
<description>Create a note using form form_name </description>
<param name="from_database_name" required="1" vallist="0" default="" type="string">from_database_name</param>
<param name="to_database_name" required="1" vallist="0" default="" type="string">to_database_name</param>
<return type="string">string</return>
<insert>notes_copy_db(string from_database_name, string to_database_name);</insert>
<dialog title="Insert notes_copy_db">notes_copy_db(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="notes_create_db">
<description>Create a Lotus Notes database </description>
<param name="database_name" required="1" vallist="0" default="" type="string">database_name</param>
<return type="bool">bool</return>
<insert>notes_create_db(string database_name);</insert>
<dialog title="Insert notes_create_db">notes_create_db(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="notes_create_note">
<description>Create a note using form form_name </description>
<param name="database_name" required="1" vallist="0" default="" type="string">database_name</param>
<param name="form_name" required="1" vallist="0" default="" type="string">form_name</param>
<return type="string">string</return>
<insert>notes_create_note(string database_name, string form_name);</insert>
<dialog title="Insert notes_create_note">notes_create_note(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="notes_drop_db">
<description>Drop a Lotus Notes database </description>
<param name="database_name" required="1" vallist="0" default="" type="string">database_name</param>
<return type="bool">bool</return>
<insert>notes_drop_db(string database_name);</insert>
<dialog title="Insert notes_drop_db">notes_drop_db(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="notes_find_note">
<description>Returns a note id found in database_name. Specify the name of the note. Leaving type bla</description>
<param name="database_name" required="1" vallist="0" default="" type="string">database_name</param>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<param name="type" required="0" vallist="0" default="" type="string">type</param>
<return type="bool">bool</return>
<insert>notes_find_note(string database_name, string name [,string type]);</insert>
<dialog title="Insert notes_find_note">notes_find_note(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="notes_header_info">
<description>Open the message msg_number in the specified mailbox on the specified server (leave serv</description>
<param name="server" required="1" vallist="0" default="" type="string">server</param>
<param name="mailbox" required="1" vallist="0" default="" type="string">mailbox</param>
<param name="msg_number" required="1" vallist="0" default="" type="int">msg_number</param>
<return type="object">object</return>
<insert>notes_header_info(string server, string mailbox, int msg_number);</insert>
<dialog title="Insert notes_header_info">notes_header_info(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="notes_list_msgs">
<description>Returns the notes from a selected database_name</description>
<param name="db" required="1" vallist="0" default="" type="string">db</param>
<return type="bool">bool</return>
<insert>notes_list_msgs(string db);</insert>
<dialog title="Insert notes_list_msgs">notes_list_msgs(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="notes_mark_read">
<description>Mark a note_id as read for the User user_name</description>
<param name="database_name" required="1" vallist="0" default="" type="string">database_name</param>
<param name="user_name" required="1" vallist="0" default="" type="string">user_name</param>
<param name="note_id" required="1" vallist="0" default="" type="string">note_id</param>
<return type="string">string</return>
<insert>notes_mark_read(string database_name, string user_name, string note_id);</insert>
<dialog title="Insert notes_mark_read">notes_mark_read(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="notes_mark_unread">
<description>Mark a note_id as unread for the User user_name</description>
<param name="database_name" required="1" vallist="0" default="" type="string">database_name</param>
<param name="user_name" required="1" vallist="0" default="" type="string">user_name</param>
<param name="note_id" required="1" vallist="0" default="" type="string">note_id</param>
<return type="string">string</return>
<insert>notes_mark_unread(string database_name, string user_name, string note_id);</insert>
<dialog title="Insert notes_mark_unread">notes_mark_unread(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="notes_nav_create">
<description>Create a navigator name, in database_name  </description>
<param name="database_name" required="1" vallist="0" default="" type="string">database_name</param>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="bool">bool</return>
<insert>notes_nav_create(string database_name, string name);</insert>
<dialog title="Insert notes_nav_create">notes_nav_create(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="notes_search">
<description>Find notes that match keywords in database_name</description>
<param name="database_name" required="1" vallist="0" default="" type="string">database_name</param>
<param name="keywords" required="1" vallist="0" default="" type="string">keywords</param>
<return type="string">string</return>
<insert>notes_search(string database_name, string keywords);</insert>
<dialog title="Insert notes_search">notes_search(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="notes_unread">
<description>Returns the unread note id's for the current User user_name</description>
<param name="database_name" required="1" vallist="0" default="" type="string">database_name</param>
<param name="user_name" required="1" vallist="0" default="" type="string">user_name</param>
<return type="string">string</return>
<insert>notes_unread(string database_name, string user_name);</insert>
<dialog title="Insert notes_unread">notes_unread(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="notes_version">
<description>Get the version Lotus Notes </description>
<param name="database_name" required="1" vallist="0" default="" type="string">database_name</param>
<return type="string">string</return>
<insert>notes_version(string database_name);</insert>
<dialog title="Insert notes_version">notes_version(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="objaggregation">
<function name="aggregate_info">
<description>
     returns an associative array of the methods and properties from
     each class that has been aggregated to the object.
    </description>
<param name="object" required="1" vallist="0" default="" type="object">object</param>
<return type="array">array</return>
<insert>aggregate_info(object object);</insert>
<dialog title="Insert aggregate_info">aggregate_info(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="aggregate_methods_by_list">
<description>
     selective dynamic class methods aggregation to an object
    </description>
<param name="object" required="1" vallist="0" default="" type="object">object</param>
<param name="class_name" required="1" vallist="0" default="" type="string">class_name</param>
<param name="methods_list" required="1" vallist="0" default="" type="array">methods_list</param>
<param name="exclude" required="0" vallist="0" default="" type="bool">exclude</param>
<return type="void">void</return>
<insert>aggregate_methods_by_list(object object, string class_name, array methods_list [,bool exclude]);</insert>
<dialog title="Insert aggregate_methods_by_list">aggregate_methods_by_list(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="aggregate_methods_by_regexp">
<description>
     selective class methods aggregation to an object using a regular
     expression
    </description>
<param name="object" required="1" vallist="0" default="" type="object">object</param>
<param name="class_name" required="1" vallist="0" default="" type="string">class_name</param>
<param name="regexp" required="1" vallist="0" default="" type="string">regexp</param>
<param name="exclude" required="0" vallist="0" default="" type="bool">exclude</param>
<return type="void">void</return>
<insert>aggregate_methods_by_regexp(object object, string class_name, string regexp [,bool exclude]);</insert>
<dialog title="Insert aggregate_methods_by_regexp">aggregate_methods_by_regexp(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="aggregate_methods">
<description>
     dynamic class and object aggregation of methods
    </description>
<param name="object" required="1" vallist="0" default="" type="object">object</param>
<param name="class_name" required="1" vallist="0" default="" type="string">class_name</param>
<return type="void">void</return>
<insert>aggregate_methods(object object, string class_name);</insert>
<dialog title="Insert aggregate_methods">aggregate_methods(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="aggregate_properties_by_list">
<description>
     selective dynamic class properties aggregation to an object
    </description>
<param name="object" required="1" vallist="0" default="" type="object">object</param>
<param name="class_name" required="1" vallist="0" default="" type="string">class_name</param>
<param name="properties_list" required="1" vallist="0" default="" type="array">properties_list</param>
<param name="exclude" required="0" vallist="0" default="" type="bool">exclude</param>
<return type="void">void</return>
<insert>aggregate_properties_by_list(object object, string class_name, array properties_list [,bool exclude]);</insert>
<dialog title="Insert aggregate_properties_by_list">aggregate_properties_by_list(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="aggregate_properties_by_regexp">
<description>
     selective class properties aggregation to an object using a regular
     expression
    </description>
<param name="object" required="1" vallist="0" default="" type="object">object</param>
<param name="class_name" required="1" vallist="0" default="" type="string">class_name</param>
<param name="regexp" required="1" vallist="0" default="" type="string">regexp</param>
<param name="exclude" required="0" vallist="0" default="" type="bool">exclude</param>
<return type="void">void</return>
<insert>aggregate_properties_by_regexp(object object, string class_name, string regexp [,bool exclude]);</insert>
<dialog title="Insert aggregate_properties_by_regexp">aggregate_properties_by_regexp(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="aggregate_properties">
<description>
     dynamic aggregation of  class properties to an object
    </description>
<param name="object" required="1" vallist="0" default="" type="object">object</param>
<param name="class_name" required="1" vallist="0" default="" type="string">class_name</param>
<return type="void">void</return>
<insert>aggregate_properties(object object, string class_name);</insert>
<dialog title="Insert aggregate_properties">aggregate_properties(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="aggregate">
<description>
     dynamic class and object aggregation of methods and properties
    </description>
<param name="object" required="1" vallist="0" default="" type="object">object</param>
<param name="class_name" required="1" vallist="0" default="" type="string">class_name</param>
<return type="void">void</return>
<insert>aggregate(object object, string class_name);</insert>
<dialog title="Insert aggregate">aggregate(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="deaggregate">
<description>
     Removes the aggregated methods and properties from an object
    </description>
<param name="object" required="1" vallist="0" default="" type="object">object</param>
<param name="class_name" required="0" vallist="0" default="" type="string">class_name</param>
<return type="void">void</return>
<insert>deaggregate(object object [,string class_name]);</insert>
<dialog title="Insert deaggregate">deaggregate(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="oci8">
<function name="OCIBindByName">
<description>
     Bind a PHP variable to an Oracle Placeholder
    </description>
<param name="stmt" required="1" vallist="0" default="" type="int">stmt</param>
<param name="ph_name" required="1" vallist="0" default="" type="string">ph_name</param>
<param name="variable" required="1" vallist="0" default="" type="mixed &amp;">variable</param>
<param name="length" required="1" vallist="0" default="" type="int">length</param>
<param name="
       type" required="0" vallist="0" default="" type="int">
       type</param>
<return type="bool">bool</return>
<insert>OCIBindByName(int stmt, string ph_name, mixed &amp; variable, int length [,int 
       type]);</insert>
<dialog title="Insert OCIBindByName">OCIBindByName(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="OCICancel">
<description>Cancel reading from cursor</description>
<param name="stmt" required="1" vallist="0" default="" type="int">stmt</param>
<return type="bool">bool</return>
<insert>OCICancel(int stmt);</insert>
<dialog title="Insert OCICancel">OCICancel(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ocicollappend">
<description>Coming soon</description>
<param name="collection" required="1" vallist="0" default="" type="object">collection</param>
<param name="object" required="1" vallist="0" default="" type="object">object</param>
<return type="bool">bool</return>
<insert>ocicollappend(object collection, object object);</insert>
<dialog title="Insert ocicollappend">ocicollappend(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ocicollassign">
<description>Coming soon</description>
<param name="collection" required="1" vallist="0" default="" type="object">collection</param>
<param name="object" required="1" vallist="0" default="" type="object">object</param>
<return type="bool">bool</return>
<insert>ocicollassign(object collection, object object);</insert>
<dialog title="Insert ocicollassign">ocicollassign(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="OCICollAssignElem">
<description>Coming soon</description>
<param name="collection" required="1" vallist="0" default="" type="object">collection</param>
<param name="ndx" required="1" vallist="0" default="" type="string">ndx</param>
<param name="val" required="1" vallist="0" default="" type="string">val</param>
<return type="bool">bool</return>
<insert>OCICollAssignElem(object collection, string ndx, string val);</insert>
<dialog title="Insert OCICollAssignElem">OCICollAssignElem(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ocicollgetelem">
<description>Coming soon</description>
<param name="collection" required="1" vallist="0" default="" type="object">collection</param>
<param name="ndx" required="1" vallist="0" default="" type="string">ndx</param>
<return type="string">string</return>
<insert>ocicollgetelem(object collection, string ndx);</insert>
<dialog title="Insert ocicollgetelem">ocicollgetelem(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ocicollmax">
<description>Coming soon</description>
<param name="collection" required="1" vallist="0" default="" type="object">collection</param>
<return type="int">int</return>
<insert>ocicollmax(object collection);</insert>
<dialog title="Insert ocicollmax">ocicollmax(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ocicollsize">
<description>Coming soon</description>
<param name="collection" required="1" vallist="0" default="" type="object">collection</param>
<return type="int">int</return>
<insert>ocicollsize(object collection);</insert>
<dialog title="Insert ocicollsize">ocicollsize(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ocicolltrim">
<description>Coming soon</description>
<param name="collection" required="1" vallist="0" default="" type="object">collection</param>
<param name="num" required="1" vallist="0" default="" type="int">num</param>
<return type="bool">bool</return>
<insert>ocicolltrim(object collection, int num);</insert>
<dialog title="Insert ocicolltrim">ocicolltrim(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ocicolumnisnull">
<description>Test whether a result column is </description>
<param name="stmt" required="1" vallist="0" default="" type="resource">stmt</param>
<param name="column" required="1" vallist="0" default="" type="mixed">column</param>
<return type="bool">bool</return>
<insert>ocicolumnisnull(resource stmt, mixed column);</insert>
<dialog title="Insert ocicolumnisnull">ocicolumnisnull(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ocicolumnname">
<description>Returns the name of a column</description>
<param name="stmt" required="1" vallist="0" default="" type="int">stmt</param>
<param name="col" required="1" vallist="0" default="" type="int">col</param>
<return type="string">string</return>
<insert>ocicolumnname(int stmt, int col);</insert>
<dialog title="Insert ocicolumnname">ocicolumnname(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ocicolumnprecision">
<description>Coming soon</description>
<param name="stmt" required="1" vallist="0" default="" type="int">stmt</param>
<param name="col" required="1" vallist="0" default="" type="int">col</param>
<return type="int">int</return>
<insert>ocicolumnprecision(int stmt, int col);</insert>
<dialog title="Insert ocicolumnprecision">ocicolumnprecision(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ocicolumnscale">
<description>Coming soon</description>
<param name="stmt" required="1" vallist="0" default="" type="int">stmt</param>
<param name="col" required="1" vallist="0" default="" type="int">col</param>
<return type="int">int</return>
<insert>ocicolumnscale(int stmt, int col);</insert>
<dialog title="Insert ocicolumnscale">ocicolumnscale(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ocicolumnsize">
<description>Return result column size</description>
<param name="stmt" required="1" vallist="0" default="" type="int">stmt</param>
<param name="column" required="1" vallist="0" default="" type="mixed">column</param>
<return type="int">int</return>
<insert>ocicolumnsize(int stmt, mixed column);</insert>
<dialog title="Insert ocicolumnsize">ocicolumnsize(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ocicolumntype">
<description>Returns the data type of a column</description>
<param name="stmt" required="1" vallist="0" default="" type="int">stmt</param>
<param name="col" required="1" vallist="0" default="" type="int">col</param>
<return type="mixed">mixed</return>
<insert>ocicolumntype(int stmt, int col);</insert>
<dialog title="Insert ocicolumntype">ocicolumntype(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ocicolumntyperaw">
<description>Coming soon</description>
<param name="stmt" required="1" vallist="0" default="" type="int">stmt</param>
<param name="col" required="1" vallist="0" default="" type="int">col</param>
<return type="mixed">mixed</return>
<insert>ocicolumntyperaw(int stmt, int col);</insert>
<dialog title="Insert ocicolumntyperaw">ocicolumntyperaw(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="OCICommit">
<description>Commits outstanding transactions</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<return type="bool">bool</return>
<insert>OCICommit(int connection);</insert>
<dialog title="Insert OCICommit">OCICommit(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="OCIDefineByName">
<description>
     Use a PHP variable for the define-step during a SELECT
    </description>
<param name="stmt" required="1" vallist="0" default="" type="int">stmt</param>
<param name="Column-Name" required="1" vallist="0" default="" type="string">Column-Name</param>
<param name="variable" required="1" vallist="0" default="" type="mixed">variable</param>
<param name="type" required="0" vallist="0" default="" type="int">type</param>
<return type="bool">bool</return>
<insert>OCIDefineByName(int stmt, string Column-Name, mixed variable [,int type]);</insert>
<dialog title="Insert OCIDefineByName">OCIDefineByName(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="OCIError">
<description>Return the last error of stmt|conn|global</description>
<param name="stmt|conn|global" required="0" vallist="0" default="" type="int">stmt|conn|global</param>
<return type="array">array</return>
<insert>OCIError([int stmt|conn|global]);</insert>
<dialog title="Insert OCIError">OCIError(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ociexecute">
<description>Execute a statement</description>
<param name="statement" required="1" vallist="0" default="" type="int">statement</param>
<param name="mode" required="0" vallist="0" default="" type="int">mode</param>
<return type="int">int</return>
<insert>ociexecute(int statement [,int mode]);</insert>
<dialog title="Insert ociexecute">ociexecute(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ocifetch">
<description>Fetches the next row into result-buffer</description>
<param name="statement" required="1" vallist="0" default="" type="int">statement</param>
<return type="bool">bool</return>
<insert>ocifetch(int statement);</insert>
<dialog title="Insert ocifetch">ocifetch(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ocifetchinto">
<description>Fetches the next row into result-array</description>
<param name="stmt" required="1" vallist="0" default="" type="int">stmt</param>
<param name="&amp;result" required="1" vallist="0" default="" type="array">&amp;result</param>
<param name="mode" required="0" vallist="0" default="" type="int">mode</param>
<return type="int">int</return>
<insert>ocifetchinto(int stmt, array &amp;result [,int mode]);</insert>
<dialog title="Insert ocifetchinto">ocifetchinto(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ocifetchstatement">
<description>Fetch all rows of result data into an array</description>
<param name="stmt" required="1" vallist="0" default="" type="resource">stmt</param>
<param name="variable" required="1" vallist="0" default="" type="array &amp;">variable</param>
<return type="int">int</return>
<insert>ocifetchstatement(resource stmt, array &amp; variable);</insert>
<dialog title="Insert ocifetchstatement">ocifetchstatement(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ocifreecollection">
<description>Coming soon</description>
<param name="lob" required="1" vallist="0" default="" type="object">lob</param>
<return type="bool">bool</return>
<insert>ocifreecollection(object lob);</insert>
<dialog title="Insert ocifreecollection">ocifreecollection(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ocifreecursor">
<description>
     Free all resources associated with a cursor
    </description>
<param name="stmt" required="1" vallist="0" default="" type="int">stmt</param>
<return type="int">int</return>
<insert>ocifreecursor(int stmt);</insert>
<dialog title="Insert ocifreecursor">ocifreecursor(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ocifreedesc">
<description>Deletes a large object descriptor</description>
<param name="lob" required="1" vallist="0" default="" type="object">lob</param>
<return type="bool">bool</return>
<insert>ocifreedesc(object lob);</insert>
<dialog title="Insert ocifreedesc">ocifreedesc(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ocifreestatement">
<description>
     Free all resources associated with a statement
    </description>
<param name="stmt" required="1" vallist="0" default="" type="resource">stmt</param>
<return type="bool">bool</return>
<insert>ocifreestatement(resource stmt);</insert>
<dialog title="Insert ocifreestatement">ocifreestatement(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ociinternaldebug">
<description>
     Enables or disables internal debug output
    </description>
<param name="onoff" required="1" vallist="0" default="" type="int">onoff</param>
<return type="void">void</return>
<insert>ociinternaldebug(int onoff);</insert>
<dialog title="Insert ociinternaldebug">ociinternaldebug(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ociloadlob">
<description>Coming soon</description>
<param name="lob" required="1" vallist="0" default="" type="object">lob</param>
<return type="string">string</return>
<insert>ociloadlob(object lob);</insert>
<dialog title="Insert ociloadlob">ociloadlob(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ocilogoff">
<description>Disconnects from Oracle server</description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<return type="bool">bool</return>
<insert>ocilogoff(resource connection);</insert>
<dialog title="Insert ocilogoff">ocilogoff(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ocilogon">
<description>Establishes a connection to Oracle</description>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="db" required="0" vallist="0" default="" type="string">db</param>
<return type="int">int</return>
<insert>ocilogon(string username, string password [,string db]);</insert>
<dialog title="Insert ocilogon">ocilogon(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ocinewcollection">
<description>Coming soon</description>
<param name="conn" required="1" vallist="0" default="" type="int">conn</param>
<param name="tdo" required="1" vallist="0" default="" type="string">tdo</param>
<param name="shema" required="0" vallist="0" default="" type="string">shema</param>
<return type="bool">bool</return>
<insert>ocinewcollection(int conn, string tdo [,string shema]);</insert>
<dialog title="Insert ocinewcollection">ocinewcollection(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ocinewcursor">
<description>
     Return a new cursor (Statement-Handle)
    </description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<return type="resource">resource</return>
<insert>ocinewcursor(resource conn);</insert>
<dialog title="Insert ocinewcursor">ocinewcursor(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ocinewdescriptor">
<description>
     Initialize a new empty LOB or FILE descriptor 
    </description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<param name="type" required="0" vallist="0" default="" type="int">type</param>
<return type="string">string</return>
<insert>ocinewdescriptor(int connection [,int type]);</insert>
<dialog title="Insert ocinewdescriptor">ocinewdescriptor(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ocinlogon">
<description>Establishes a new connection to Oracle</description>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="db" required="0" vallist="0" default="" type="string">db</param>
<return type="int">int</return>
<insert>ocinlogon(string username, string password [,string db]);</insert>
<dialog title="Insert ocinlogon">ocinlogon(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ocinumcols">
<description>
     Return the number of result columns in a statement
    </description>
<param name="stmt" required="1" vallist="0" default="" type="resource">stmt</param>
<return type="int">int</return>
<insert>ocinumcols(resource stmt);</insert>
<dialog title="Insert ocinumcols">ocinumcols(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ociparse">
<description>Parse a query and return an Oracle statement</description>
<param name="conn" required="1" vallist="0" default="" type="int">conn</param>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<return type="int">int</return>
<insert>ociparse(int conn, string query);</insert>
<dialog title="Insert ociparse">ociparse(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ociplogon">
<description>
      Connect to an Oracle database using a persistent connection
    </description>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="db" required="0" vallist="0" default="" type="string">db</param>
<return type="int">int</return>
<insert>ociplogon(string username, string password [,string db]);</insert>
<dialog title="Insert ociplogon">ociplogon(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ociresult">
<description>Returns column value for fetched row</description>
<param name="statement" required="1" vallist="0" default="" type="int">statement</param>
<param name="column" required="1" vallist="0" default="" type="mixed">column</param>
<return type="mixed">mixed</return>
<insert>ociresult(int statement, mixed column);</insert>
<dialog title="Insert ociresult">ociresult(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ocirollback">
<description>Rolls back outstanding transactions</description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<return type="bool">bool</return>
<insert>ocirollback(resource connection);</insert>
<dialog title="Insert ocirollback">ocirollback(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ocirowcount">
<description>Gets the number of affected rows</description>
<param name="statement" required="1" vallist="0" default="" type="resource">statement</param>
<return type="int">int</return>
<insert>ocirowcount(resource statement);</insert>
<dialog title="Insert ocirowcount">ocirowcount(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ocisavelob">
<description>Coming soon</description>
<param name="lob" required="1" vallist="0" default="" type="object">lob</param>
<return type="bool">bool</return>
<insert>ocisavelob(object lob);</insert>
<dialog title="Insert ocisavelob">ocisavelob(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ocisavelobfile">
<description>Coming soon</description>
<param name="lob" required="1" vallist="0" default="" type="object">lob</param>
<return type="bool">bool</return>
<insert>ocisavelobfile(object lob);</insert>
<dialog title="Insert ocisavelobfile">ocisavelobfile(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ociserverversion">
<description>Return a string containing server version
    information</description>
<param name="conn" required="1" vallist="0" default="" type="resource">conn</param>
<return type="string">string</return>
<insert>ociserverversion(resource conn);</insert>
<dialog title="Insert ociserverversion">ociserverversion(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ocisetprefetch">
<description>Sets number of rows to be prefetched</description>
<param name="stmt" required="1" vallist="0" default="" type="resource">stmt</param>
<param name="rows" required="1" vallist="0" default="" type="int">rows</param>
<return type="int">int</return>
<insert>ocisetprefetch(resource stmt, int rows);</insert>
<dialog title="Insert ocisetprefetch">ocisetprefetch(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ocistatementtype">
<description>Return the type of an OCI statement</description>
<param name="stmt" required="1" vallist="0" default="" type="resource">stmt</param>
<return type="string">string</return>
<insert>ocistatementtype(resource stmt);</insert>
<dialog title="Insert ocistatementtype">ocistatementtype(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ociwritelobtofile">
<description>Coming soon</description>
<param name="lob" required="1" vallist="0" default="" type="object">lob</param>
<param name="filename" required="0" vallist="0" default="" type="string">filename</param>
<param name="start" required="0" vallist="0" default="" type="int">start</param>
<param name="lenght" required="0" vallist="0" default="" type="int">lenght</param>
<return type="bool">bool</return>
<insert>ociwritelobtofile(object lob [,string filename] [,int start] [,int lenght]);</insert>
<dialog title="Insert ociwritelobtofile">ociwritelobtofile(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="openssl">
<function name="openssl_csr_export_to_file">
<description>Exports a CSR to a file</description>
<param name="csr" required="1" vallist="0" default="" type="resource">csr</param>
<param name="outfilename" required="1" vallist="0" default="" type="string">outfilename</param>
<param name="notext" required="0" vallist="0" default="" type="bool">notext</param>
<return type="bool">bool</return>
<insert>openssl_csr_export_to_file(resource csr, string outfilename [,bool notext]);</insert>
<dialog title="Insert openssl_csr_export_to_file">openssl_csr_export_to_file(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_csr_export">
<description>Exports a CSR as a string</description>
<param name="csr" required="1" vallist="0" default="" type="resource">csr</param>
<param name="&amp;out" required="1" vallist="0" default="" type="string">&amp;out</param>
<param name="notext" required="0" vallist="0" default="" type="bool">notext</param>
<return type="bool">bool</return>
<insert>openssl_csr_export(resource csr, string &amp;out [,bool notext]);</insert>
<dialog title="Insert openssl_csr_export">openssl_csr_export(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_csr_new">
<description>Generates a CSR</description>
<param name="dn" required="1" vallist="0" default="" type="array">dn</param>
<param name="privkey" required="1" vallist="0" default="" type="resource">privkey</param>
<param name="configargs" required="0" vallist="0" default="" type="array">configargs</param>
<param name="extraattribs" required="0" vallist="0" default="" type="array">extraattribs</param>
<return type="bool">bool</return>
<insert>openssl_csr_new(array dn, resource privkey [,array configargs] [,array extraattribs]);</insert>
<dialog title="Insert openssl_csr_new">openssl_csr_new(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_csr_sign">
<description>Sign a CSR with another certificate (or itself) and generate a certificate</description>
<param name="csr" required="1" vallist="0" default="" type="mixed">csr</param>
<param name="cacert" required="1" vallist="0" default="" type="mixed">cacert</param>
<param name="priv_key" required="1" vallist="0" default="" type="mixed">priv_key</param>
<param name="days" required="1" vallist="0" default="" type="long">days</param>
<return type="resource">resource</return>
<insert>openssl_csr_sign(mixed csr, mixed cacert, mixed priv_key, long days);</insert>
<dialog title="Insert openssl_csr_sign">openssl_csr_sign(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_error_string">
<description>Return openSSL error message</description>
<return type="mixed">mixed</return>
<insert>openssl_error_string();</insert>
<dialog title="Insert openssl_error_string">openssl_error_string();</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_free_key">
<description>Free key resource</description>
<param name="key_identifier" required="1" vallist="0" default="" type="resource">key_identifier</param>
<return type="void">void</return>
<insert>openssl_free_key(resource key_identifier);</insert>
<dialog title="Insert openssl_free_key">openssl_free_key(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_get_privatekey">
<description>Get a private key</description>
<param name="key" required="1" vallist="0" default="" type="mixed">key</param>
<param name="passphrase" required="0" vallist="0" default="" type="string">passphrase</param>
<return type="resource">resource</return>
<insert>openssl_get_privatekey(mixed key [,string passphrase]);</insert>
<dialog title="Insert openssl_get_privatekey">openssl_get_privatekey(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_get_publickey">
<description>Extract public key from certificate and prepare it for use</description>
<param name="certificate" required="1" vallist="0" default="" type="mixed">certificate</param>
<return type="resource">resource</return>
<insert>openssl_get_publickey(mixed certificate);</insert>
<dialog title="Insert openssl_get_publickey">openssl_get_publickey(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_open">
<description>Open sealed data</description>
<param name="sealed_data" required="1" vallist="0" default="" type="string">sealed_data</param>
<param name="open_data" required="1" vallist="0" default="" type="string">open_data</param>
<param name="env_key" required="1" vallist="0" default="" type="string">env_key</param>
<param name="priv_key_id" required="1" vallist="0" default="" type="mixed">priv_key_id</param>
<return type="bool">bool</return>
<insert>openssl_open(string sealed_data, string open_data, string env_key, mixed priv_key_id);</insert>
<dialog title="Insert openssl_open">openssl_open(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_pkcs7_decrypt">
<description>Decrypts an S/MIME encrypted message</description>
<param name="infilename" required="1" vallist="0" default="" type="string">infilename</param>
<param name="outfilename" required="1" vallist="0" default="" type="string">outfilename</param>
<param name="recipcert" required="1" vallist="0" default="" type="mixed">recipcert</param>
<param name="recipkey" required="0" vallist="0" default="" type="mixed">recipkey</param>
<return type="bool">bool</return>
<insert>openssl_pkcs7_decrypt(string infilename, string outfilename, mixed recipcert [,mixed recipkey]);</insert>
<dialog title="Insert openssl_pkcs7_decrypt">openssl_pkcs7_decrypt(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_pkcs7_encrypt">
<description>Encrypt an S/MIME message</description>
<param name="infile" required="1" vallist="0" default="" type="string">infile</param>
<param name="outfile" required="1" vallist="0" default="" type="string">outfile</param>
<param name="recipcerts" required="1" vallist="0" default="" type="mixed">recipcerts</param>
<param name="headers" required="1" vallist="0" default="" type="array">headers</param>
<param name="flags" required="0" vallist="0" default="" type="long">flags</param>
<return type="bool">bool</return>
<insert>openssl_pkcs7_encrypt(string infile, string outfile, mixed recipcerts, array headers [,long flags]);</insert>
<dialog title="Insert openssl_pkcs7_encrypt">openssl_pkcs7_encrypt(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_pkcs7_sign">
<description>sign an S/MIME message</description>
<param name="infilename" required="1" vallist="0" default="" type="string">infilename</param>
<param name="outfilename" required="1" vallist="0" default="" type="string">outfilename</param>
<param name="signcert" required="1" vallist="0" default="" type="mixed">signcert</param>
<param name="privkey" required="1" vallist="0" default="" type="mixed">privkey</param>
<param name="headers" required="1" vallist="0" default="" type="array">headers</param>
<param name="flags" required="0" vallist="0" default="" type="long">flags</param>
<param name="extracertsfilename" required="0" vallist="0" default="" type="string">extracertsfilename</param>
<return type="bool">bool</return>
<insert>openssl_pkcs7_sign(string infilename, string outfilename, mixed signcert, mixed privkey, array headers [,long flags] [,string extracertsfilename]);</insert>
<dialog title="Insert openssl_pkcs7_sign">openssl_pkcs7_sign(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_pkcs7_verify">
<description>Verifies the signature of an S/MIME signed message</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="flags" required="1" vallist="0" default="" type="int">flags</param>
<param name="outfilename" required="0" vallist="0" default="" type="string">outfilename</param>
<param name="cainfo" required="0" vallist="0" default="" type="array">cainfo</param>
<param name="extracerts" required="0" vallist="0" default="" type="string">extracerts</param>
<return type="bool">bool</return>
<insert>openssl_pkcs7_verify(string filename, int flags [,string outfilename] [,array cainfo] [,string extracerts]);</insert>
<dialog title="Insert openssl_pkcs7_verify">openssl_pkcs7_verify(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_pkey_export_to_file">
<description>Gets an exportable representation of a key into a file </description>
<param name="key" required="1" vallist="0" default="" type="mixed">key</param>
<param name="outfilename" required="1" vallist="0" default="" type="string">outfilename</param>
<param name="passphrase" required="0" vallist="0" default="" type="string">passphrase</param>
<param name="configargs" required="0" vallist="0" default="" type="array">configargs</param>
<return type="bool">bool</return>
<insert>openssl_pkey_export_to_file(mixed key, string outfilename [,string passphrase] [,array configargs]);</insert>
<dialog title="Insert openssl_pkey_export_to_file">openssl_pkey_export_to_file(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_pkey_export">
<description>Gets an exportable representation of a key into a string</description>
<param name="key" required="1" vallist="0" default="" type="mixed">key</param>
<param name="&amp;out" required="1" vallist="0" default="" type="string">&amp;out</param>
<param name="passphrase" required="0" vallist="0" default="" type="string">passphrase</param>
<param name="configargs" required="0" vallist="0" default="" type="array">configargs</param>
<return type="bool">bool</return>
<insert>openssl_pkey_export(mixed key, string &amp;out [,string passphrase] [,array configargs]);</insert>
<dialog title="Insert openssl_pkey_export">openssl_pkey_export(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_pkey_get_private">
<description>Get a private key</description>
<param name="key" required="1" vallist="0" default="" type="mixed">key</param>
<param name="passphrase" required="0" vallist="0" default="" type="string">passphrase</param>
<return type="resource">resource</return>
<insert>openssl_pkey_get_private(mixed key [,string passphrase]);</insert>
<dialog title="Insert openssl_pkey_get_private">openssl_pkey_get_private(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_pkey_get_public">
<description>Extract public key from certificate and prepare it for use</description>
<param name="certificate" required="1" vallist="0" default="" type="mixed">certificate</param>
<return type="resource">resource</return>
<insert>openssl_pkey_get_public(mixed certificate);</insert>
<dialog title="Insert openssl_pkey_get_public">openssl_pkey_get_public(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_pkey_new">
<description>Generates a new private key </description>
<param name="configargs" required="0" vallist="0" default="" type="array">configargs</param>
<return type="resource">resource</return>
<insert>openssl_pkey_new([array configargs]);</insert>
<dialog title="Insert openssl_pkey_new">openssl_pkey_new(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_private_decrypt">
<description>Decrypts data with private key </description>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<param name="&amp;decrypted" required="1" vallist="0" default="" type="string">&amp;decrypted</param>
<param name="key" required="1" vallist="0" default="" type="mixed">key</param>
<param name="padding" required="0" vallist="0" default="" type="int">padding</param>
<return type="bool">bool</return>
<insert>openssl_private_decrypt(string data, string &amp;decrypted, mixed key [,int padding]);</insert>
<dialog title="Insert openssl_private_decrypt">openssl_private_decrypt(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_private_encrypt">
<description>Encrypts data with private key </description>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<param name="crypted" required="1" vallist="0" default="" type="string">crypted</param>
<param name="key" required="1" vallist="0" default="" type="mixed">key</param>
<param name="padding" required="0" vallist="0" default="" type="int">padding</param>
<return type="bool">bool</return>
<insert>openssl_private_encrypt(string data, string crypted, mixed key [,int padding]);</insert>
<dialog title="Insert openssl_private_encrypt">openssl_private_encrypt(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_public_decrypt">
<description>Decrypts data with public key </description>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<param name="crypted" required="1" vallist="0" default="" type="string">crypted</param>
<param name="key" required="1" vallist="0" default="" type="resource">key</param>
<param name="padding" required="0" vallist="0" default="" type="int">padding</param>
<return type="bool">bool</return>
<insert>openssl_public_decrypt(string data, string crypted, resource key [,int padding]);</insert>
<dialog title="Insert openssl_public_decrypt">openssl_public_decrypt(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_public_encrypt">
<description>Encrypts data with public key </description>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<param name="crypted" required="1" vallist="0" default="" type="string">crypted</param>
<param name="key" required="1" vallist="0" default="" type="mixed">key</param>
<param name="padding" required="0" vallist="0" default="" type="int">padding</param>
<return type="bool">bool</return>
<insert>openssl_public_encrypt(string data, string crypted, mixed key [,int padding]);</insert>
<dialog title="Insert openssl_public_encrypt">openssl_public_encrypt(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_seal">
<description>Seal (encrypt) data</description>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<param name="sealed_data" required="1" vallist="0" default="" type="string">sealed_data</param>
<param name="env_keys" required="1" vallist="0" default="" type="array">env_keys</param>
<param name="pub_key_ids" required="1" vallist="0" default="" type="array">pub_key_ids</param>
<return type="int">int</return>
<insert>openssl_seal(string data, string sealed_data, array env_keys, array pub_key_ids);</insert>
<dialog title="Insert openssl_seal">openssl_seal(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_sign">
<description>Generate signature</description>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<param name="signature" required="1" vallist="0" default="" type="string">signature</param>
<param name="priv_key_id" required="1" vallist="0" default="" type="mixed">priv_key_id</param>
<return type="bool">bool</return>
<insert>openssl_sign(string data, string signature, mixed priv_key_id);</insert>
<dialog title="Insert openssl_sign">openssl_sign(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_verify">
<description>Verify signature</description>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<param name="signature" required="1" vallist="0" default="" type="string">signature</param>
<param name="pub_key_id" required="1" vallist="0" default="" type="mixed">pub_key_id</param>
<return type="int">int</return>
<insert>openssl_verify(string data, string signature, mixed pub_key_id);</insert>
<dialog title="Insert openssl_verify">openssl_verify(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_x509_check_private_key">
<description>Checks if a private key corresponds to a certificate</description>
<param name="cert" required="1" vallist="0" default="" type="mixed">cert</param>
<param name="key" required="1" vallist="0" default="" type="mixed">key</param>
<return type="bool">bool</return>
<insert>openssl_x509_check_private_key(mixed cert, mixed key);</insert>
<dialog title="Insert openssl_x509_check_private_key">openssl_x509_check_private_key(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_x509_checkpurpose">
<description>Verifies if a certificate can be used for a particular
   purpose</description>
<param name="x509cert" required="1" vallist="0" default="" type="mixed">x509cert</param>
<param name="purpose" required="1" vallist="0" default="" type="int">purpose</param>
<param name="cainfo" required="1" vallist="0" default="" type="array">cainfo</param>
<param name="untrustedfile" required="0" vallist="0" default="" type="string">untrustedfile</param>
<return type="bool">bool</return>
<insert>openssl_x509_checkpurpose(mixed x509cert, int purpose, array cainfo [,string untrustedfile]);</insert>
<dialog title="Insert openssl_x509_checkpurpose">openssl_x509_checkpurpose(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_x509_export_to_file">
<description>Exports a certificate to file</description>
<param name="x509" required="1" vallist="0" default="" type="mixed">x509</param>
<param name="outfilename" required="1" vallist="0" default="" type="string">outfilename</param>
<param name="notext" required="0" vallist="0" default="" type="bool">notext</param>
<return type="bool">bool</return>
<insert>openssl_x509_export_to_file(mixed x509, string outfilename [,bool notext]);</insert>
<dialog title="Insert openssl_x509_export_to_file">openssl_x509_export_to_file(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_x509_export">
<description>Exports a certificate as a string</description>
<param name="x509" required="1" vallist="0" default="" type="mixed">x509</param>
<param name="&amp;output" required="1" vallist="0" default="" type="string">&amp;output</param>
<param name="notext" required="0" vallist="0" default="" type="bool">notext</param>
<return type="bool">bool</return>
<insert>openssl_x509_export(mixed x509, string &amp;output [,bool notext]);</insert>
<dialog title="Insert openssl_x509_export">openssl_x509_export(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_x509_free">
<description>Free certificate resource</description>
<param name="x509cert" required="1" vallist="0" default="" type="resource">x509cert</param>
<return type="void">void</return>
<insert>openssl_x509_free(resource x509cert);</insert>
<dialog title="Insert openssl_x509_free">openssl_x509_free(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_x509_parse">
<description>Parse an X509 certificate and return the information as an
   array</description>
<param name="x509cert" required="1" vallist="0" default="" type="mixed">x509cert</param>
<param name="shortnames" required="0" vallist="0" default="" type="bool">shortnames</param>
<return type="array">array</return>
<insert>openssl_x509_parse(mixed x509cert [,bool shortnames]);</insert>
<dialog title="Insert openssl_x509_parse">openssl_x509_parse(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="openssl_x509_read">
<description>Parse an X.509 certificate and return a resource identifier for
   it</description>
<param name="x509certdata" required="1" vallist="0" default="" type="mixed">x509certdata</param>
<return type="resource">resource</return>
<insert>openssl_x509_read(mixed x509certdata);</insert>
<dialog title="Insert openssl_x509_read">openssl_x509_read(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="oracle">
<function name="Ora_Bind">
<description>bind a PHP variable to an Oracle parameter</description>
<param name="cursor" required="1" vallist="0" default="" type="int">cursor</param>
<param name="PHP variable name" required="1" vallist="0" default="" type="string">PHP variable name</param>
<param name="SQL parameter name" required="1" vallist="0" default="" type="string">SQL parameter name</param>
<param name="length" required="1" vallist="0" default="" type="int">length</param>
<param name="type" required="0" vallist="0" default="" type="int">type</param>
<return type="int">int</return>
<insert>Ora_Bind(int cursor, string PHP variable name, string SQL parameter name, int length [,int type]);</insert>
<dialog title="Insert Ora_Bind">Ora_Bind(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="Ora_Close">
<description>close an Oracle cursor</description>
<param name="cursor" required="1" vallist="0" default="" type="int">cursor</param>
<return type="int">int</return>
<insert>Ora_Close(int cursor);</insert>
<dialog title="Insert Ora_Close">Ora_Close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ora_columnname">
<description>Get name of Oracle result column</description>
<param name="cursor" required="1" vallist="0" default="" type="int">cursor</param>
<param name="column" required="1" vallist="0" default="" type="int">column</param>
<return type="string">string</return>
<insert>ora_columnname(int cursor, int column);</insert>
<dialog title="Insert ora_columnname">ora_columnname(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ora_columnsize">
<description>get size of Oracle result column</description>
<param name="cursor" required="1" vallist="0" default="" type="int">cursor</param>
<param name="column" required="1" vallist="0" default="" type="int">column</param>
<return type="int">int</return>
<insert>ora_columnsize(int cursor, int column);</insert>
<dialog title="Insert ora_columnsize">ora_columnsize(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ora_columntype">
<description>Get type of Oracle result column</description>
<param name="cursor" required="1" vallist="0" default="" type="resource">cursor</param>
<param name="column" required="1" vallist="0" default="" type="int">column</param>
<return type="string">string</return>
<insert>ora_columntype(resource cursor, int column);</insert>
<dialog title="Insert ora_columntype">ora_columntype(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ora_commit">
<description>commit an Oracle transaction</description>
<param name="conn" required="1" vallist="0" default="" type="int">conn</param>
<return type="int">int</return>
<insert>ora_commit(int conn);</insert>
<dialog title="Insert ora_commit">ora_commit(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ora_commitoff">
<description>disable automatic commit</description>
<param name="conn" required="1" vallist="0" default="" type="int">conn</param>
<return type="int">int</return>
<insert>ora_commitoff(int conn);</insert>
<dialog title="Insert ora_commitoff">ora_commitoff(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="Ora_CommitOn">
<description>enable automatic commit</description>
<param name="conn" required="1" vallist="0" default="" type="int">conn</param>
<return type="int">int</return>
<insert>Ora_CommitOn(int conn);</insert>
<dialog title="Insert Ora_CommitOn">Ora_CommitOn(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="Ora_Do">
<description>Parse, Exec, Fetch</description>
<param name="conn" required="1" vallist="0" default="" type="int">conn</param>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<return type="int">int</return>
<insert>Ora_Do(int conn, string query);</insert>
<dialog title="Insert Ora_Do">Ora_Do(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ora_error">
<description>get Oracle error message</description>
<param name="cursor_or_connection" required="1" vallist="0" default="" type="int">cursor_or_connection</param>
<return type="string">string</return>
<insert>ora_error(int cursor_or_connection);</insert>
<dialog title="Insert ora_error">ora_error(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ora_errorcode">
<description>get Oracle error code</description>
<param name="cursor_or_connection" required="1" vallist="0" default="" type="int">cursor_or_connection</param>
<return type="int">int</return>
<insert>ora_errorcode(int cursor_or_connection);</insert>
<dialog title="Insert ora_errorcode">ora_errorcode(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ora_exec">
<description>Execute parsed statement on an Oracle cursor</description>
<param name="cursor" required="1" vallist="0" default="" type="resource">cursor</param>
<return type="bool">bool</return>
<insert>ora_exec(resource cursor);</insert>
<dialog title="Insert ora_exec">ora_exec(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="Ora_Fetch_Into">
<description>Fetch a row into the specified result array</description>
<param name="cursor" required="1" vallist="0" default="" type="int">cursor</param>
<param name="result" required="1" vallist="0" default="" type="array">result</param>
<param name="
        flags
       " required="0" vallist="0" default="" type="int">
        flags
       </param>
<return type="int">int</return>
<insert>Ora_Fetch_Into(int cursor, array result [,int 
        flags
       ]);</insert>
<dialog title="Insert Ora_Fetch_Into">Ora_Fetch_Into(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="Ora_Fetch">
<description>fetch a row of data from a cursor</description>
<param name="cursor" required="1" vallist="0" default="" type="int">cursor</param>
<return type="int">int</return>
<insert>Ora_Fetch(int cursor);</insert>
<dialog title="Insert Ora_Fetch">Ora_Fetch(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ora_getcolumn">
<description>Get data from a fetched column</description>
<param name="cursor" required="1" vallist="0" default="" type="int">cursor</param>
<param name="column" required="1" vallist="0" default="" type="mixed">column</param>
<return type="mixed">mixed</return>
<insert>ora_getcolumn(int cursor, mixed column);</insert>
<dialog title="Insert ora_getcolumn">ora_getcolumn(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ora_logoff">
<description>Close an Oracle connection</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<return type="int">int</return>
<insert>ora_logoff(int connection);</insert>
<dialog title="Insert ora_logoff">ora_logoff(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ora_logon">
<description>Open an Oracle connection</description>
<param name="user" required="1" vallist="0" default="" type="string">user</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<return type="resource">resource</return>
<insert>ora_logon(string user, string password);</insert>
<dialog title="Insert ora_logon">ora_logon(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ora_numcols">
<description>Returns the number of columns</description>
<param name="cursor_ind" required="1" vallist="0" default="" type="int">cursor_ind</param>
<return type="int">int</return>
<insert>ora_numcols(int cursor_ind);</insert>
<dialog title="Insert ora_numcols">ora_numcols(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ora_numrows">
<description>Returns the number of rows</description>
<param name="cursor_ind" required="1" vallist="0" default="" type="int">cursor_ind</param>
<return type="int">int</return>
<insert>ora_numrows(int cursor_ind);</insert>
<dialog title="Insert ora_numrows">ora_numrows(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ora_open">
<description>open an Oracle cursor</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<return type="int">int</return>
<insert>ora_open(int connection);</insert>
<dialog title="Insert ora_open">ora_open(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ora_parse">
<description>Parse an SQL statement with Oracle</description>
<param name="cursor_ind" required="1" vallist="0" default="" type="int">cursor_ind</param>
<param name="sql_statement" required="1" vallist="0" default="" type="string">sql_statement</param>
<param name="defer" required="1" vallist="0" default="" type="int">defer</param>
<return type="int">int</return>
<insert>ora_parse(int cursor_ind, string sql_statement, int defer);</insert>
<dialog title="Insert ora_parse">ora_parse(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ora_plogon">
<description>
     Open a persistent Oracle connection
    </description>
<param name="user" required="1" vallist="0" default="" type="string">user</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<return type="int">int</return>
<insert>ora_plogon(string user, string password);</insert>
<dialog title="Insert ora_plogon">ora_plogon(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="Ora_Rollback">
<description>roll back transaction</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<return type="int">int</return>
<insert>Ora_Rollback(int connection);</insert>
<dialog title="Insert Ora_Rollback">Ora_Rollback(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="outcontrol">
<function name="flush">
<description>Flush the output buffer</description>
<return type="void">void</return>
<insert>flush();</insert>
<dialog title="Insert flush">flush();</dialog>
<info title="Info window"></info>
</function>
<function name="ob_clean">
<description>
     Clean (erase) the output buffer
    </description>
<return type="void">void</return>
<insert>ob_clean();</insert>
<dialog title="Insert ob_clean">ob_clean();</dialog>
<info title="Info window"></info>
</function>
<function name="ob_end_clean">
<description>
     Clean (erase) the output buffer and turn off output buffering
    </description>
<return type="void">void</return>
<insert>ob_end_clean();</insert>
<dialog title="Insert ob_end_clean">ob_end_clean();</dialog>
<info title="Info window"></info>
</function>
<function name="ob_end_flush">
<description>
     Flush (send) the output buffer and turn off output buffering    
    </description>
<return type="void">void</return>
<insert>ob_end_flush();</insert>
<dialog title="Insert ob_end_flush">ob_end_flush();</dialog>
<info title="Info window"></info>
</function>
<function name="ob_flush">
<description>
     Flush (send) the output buffer
    </description>
<return type="void">void</return>
<insert>ob_flush();</insert>
<dialog title="Insert ob_flush">ob_flush();</dialog>
<info title="Info window"></info>
</function>
<function name="ob_get_contents">
<description>
     Return the contents of the output buffer
    </description>
<return type="string">string</return>
<insert>ob_get_contents();</insert>
<dialog title="Insert ob_get_contents">ob_get_contents();</dialog>
<info title="Info window"></info>
</function>
<function name="ob_get_length">
<description>
     Return the length of the output buffer
    </description>
<return type="int">int</return>
<insert>ob_get_length();</insert>
<dialog title="Insert ob_get_length">ob_get_length();</dialog>
<info title="Info window"></info>
</function>
<function name="ob_get_level">
<description>
     Return the nesting level of the output buffering mechanism
    </description>
<return type="int">int</return>
<insert>ob_get_level();</insert>
<dialog title="Insert ob_get_level">ob_get_level();</dialog>
<info title="Info window"></info>
</function>
<function name="ob_get_status">
<description>
     Get status of output buffers
    </description>
<param name="
      full_status" required="0" vallist="0" default="" type="bool">
      full_status</param>
<return type="array">array</return>
<insert>ob_get_status([bool 
      full_status]);</insert>
<dialog title="Insert ob_get_status">ob_get_status(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ob_gzhandler">
<description>
     ob_start callback function to gzip output buffer
    </description>
<param name="buffer" required="1" vallist="0" default="" type="string">buffer</param>
<param name="mode" required="0" vallist="0" default="" type="int">mode</param>
<return type="string">string</return>
<insert>ob_gzhandler(string buffer [,int mode]);</insert>
<dialog title="Insert ob_gzhandler">ob_gzhandler(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ob_implicit_flush">
<description>
     Turn implicit flush on/off 
    </description>
<param name="flag" required="0" vallist="0" default="" type="int">flag</param>
<return type="void">void</return>
<insert>ob_implicit_flush([int flag]);</insert>
<dialog title="Insert ob_implicit_flush">ob_implicit_flush(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ob_start">
<description>Turn on output buffering</description>
<param name="
        output_callback
       " required="0" vallist="0" default="" type="string">
        output_callback
       </param>
<return type="void">void</return>
<insert>ob_start([string 
        output_callback
       ]);</insert>
<dialog title="Insert ob_start">ob_start(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="overload">
<function name="overload">
<description>Enable property and method call overloading for a class</description>
<param name="class_name" required="0" vallist="0" default="" type="string">class_name</param>
<return type="void">void</return>
<insert>overload([string class_name]);</insert>
<dialog title="Insert overload">overload(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="ovrimos">
<function name="ovrimos_close">
<description>Closes the connection to ovrimos</description>
<param name="connection" required="1" vallist="0" default="" type="int">connection</param>
<return type="void">void</return>
<insert>ovrimos_close(int connection);</insert>
<dialog title="Insert ovrimos_close">ovrimos_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ovrimos_commit">
<description>Commits the transaction</description>
<param name="connection_id" required="1" vallist="0" default="" type="int">connection_id</param>
<return type="int">int</return>
<insert>ovrimos_commit(int connection_id);</insert>
<dialog title="Insert ovrimos_commit">ovrimos_commit(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ovrimos_connect">
<description>Connect to the specified database</description>
<param name="host" required="1" vallist="0" default="" type="string">host</param>
<param name="db" required="1" vallist="0" default="" type="string">db</param>
<param name="user" required="1" vallist="0" default="" type="string">user</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<return type="int">int</return>
<insert>ovrimos_connect(string host, string db, string user, string password);</insert>
<dialog title="Insert ovrimos_connect">ovrimos_connect(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="ovrimos_cursor">
<description>Returns the name of the cursor</description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<return type="int">int</return>
<insert>ovrimos_cursor(int result_id);</insert>
<dialog title="Insert ovrimos_cursor">ovrimos_cursor(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ovrimos_exec">
<description>Executes an SQL statement</description>
<param name="connection_id" required="1" vallist="0" default="" type="int">connection_id</param>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<return type="int">int</return>
<insert>ovrimos_exec(int connection_id, string query);</insert>
<dialog title="Insert ovrimos_exec">ovrimos_exec(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ovrimos_execute">
<description>Executes a prepared SQL statement</description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<param name="parameters_array" required="0" vallist="0" default="" type="array">parameters_array</param>
<return type="bool">bool</return>
<insert>ovrimos_execute(int result_id [,array parameters_array]);</insert>
<dialog title="Insert ovrimos_execute">ovrimos_execute(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ovrimos_fetch_into">
<description>Fetches a row from the result set</description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<param name="result_array" required="1" vallist="0" default="" type="array">result_array</param>
<param name="how" required="0" vallist="0" default="" type="string">how</param>
<param name="rownumber" required="0" vallist="0" default="" type="int">rownumber</param>
<return type="bool">bool</return>
<insert>ovrimos_fetch_into(int result_id, array result_array [,string how] [,int rownumber]);</insert>
<dialog title="Insert ovrimos_fetch_into">ovrimos_fetch_into(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="ovrimos_fetch_row">
<description>Fetches a row from the result set</description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<param name="how" required="0" vallist="0" default="" type="int">how</param>
<param name="row_number" required="0" vallist="0" default="" type="int">row_number</param>
<return type="bool">bool</return>
<insert>ovrimos_fetch_row(int result_id [,int how] [,int row_number]);</insert>
<dialog title="Insert ovrimos_fetch_row">ovrimos_fetch_row(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ovrimos_field_len">
<description>Returns the length of the output column</description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<param name="field_number" required="1" vallist="0" default="" type="int">field_number</param>
<return type="int">int</return>
<insert>ovrimos_field_len(int result_id, int field_number);</insert>
<dialog title="Insert ovrimos_field_len">ovrimos_field_len(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ovrimos_field_name">
<description>Returns the output column name</description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<param name="field_number" required="1" vallist="0" default="" type="int">field_number</param>
<return type="int">int</return>
<insert>ovrimos_field_name(int result_id, int field_number);</insert>
<dialog title="Insert ovrimos_field_name">ovrimos_field_name(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ovrimos_field_num">
<description>
     Returns the (1-based) index of the output column
    </description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<param name="field_name" required="1" vallist="0" default="" type="string">field_name</param>
<return type="int">int</return>
<insert>ovrimos_field_num(int result_id, string field_name);</insert>
<dialog title="Insert ovrimos_field_num">ovrimos_field_num(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ovrimos_field_type">
<description>
     Returns the (numeric) type of the output column
    </description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<param name="field_number" required="1" vallist="0" default="" type="int">field_number</param>
<return type="int">int</return>
<insert>ovrimos_field_type(int result_id, int field_number);</insert>
<dialog title="Insert ovrimos_field_type">ovrimos_field_type(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ovrimos_free_result">
<description>Frees the specified result_id</description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<return type="bool">bool</return>
<insert>ovrimos_free_result(int result_id);</insert>
<dialog title="Insert ovrimos_free_result">ovrimos_free_result(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ovrimos_longreadlen">
<description>
     Specifies how many bytes are to be retrieved from long datatypes
    </description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<param name="length" required="1" vallist="0" default="" type="int">length</param>
<return type="int">int</return>
<insert>ovrimos_longreadlen(int result_id, int length);</insert>
<dialog title="Insert ovrimos_longreadlen">ovrimos_longreadlen(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ovrimos_num_fields">
<description>Returns the number of columns</description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<return type="int">int</return>
<insert>ovrimos_num_fields(int result_id);</insert>
<dialog title="Insert ovrimos_num_fields">ovrimos_num_fields(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ovrimos_num_rows">
<description>
     Returns the number of rows affected by update operations
    </description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<return type="int">int</return>
<insert>ovrimos_num_rows(int result_id);</insert>
<dialog title="Insert ovrimos_num_rows">ovrimos_num_rows(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ovrimos_prepare">
<description>Prepares an SQL statement</description>
<param name="connection_id" required="1" vallist="0" default="" type="int">connection_id</param>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<return type="int">int</return>
<insert>ovrimos_prepare(int connection_id, string query);</insert>
<dialog title="Insert ovrimos_prepare">ovrimos_prepare(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ovrimos_result_all">
<description>
     Prints the whole result set as an HTML table
    </description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<param name="format" required="0" vallist="0" default="" type="string">format</param>
<return type="bool">bool</return>
<insert>ovrimos_result_all(int result_id [,string format]);</insert>
<dialog title="Insert ovrimos_result_all">ovrimos_result_all(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ovrimos_result">
<description>Retrieves the output column</description>
<param name="result_id" required="1" vallist="0" default="" type="int">result_id</param>
<param name="field" required="1" vallist="0" default="" type="mixed">field</param>
<return type="int">int</return>
<insert>ovrimos_result(int result_id, mixed field);</insert>
<dialog title="Insert ovrimos_result">ovrimos_result(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ovrimos_rollback">
<description>Rolls back the transaction</description>
<param name="connection_id" required="1" vallist="0" default="" type="int">connection_id</param>
<return type="int">int</return>
<insert>ovrimos_rollback(int connection_id);</insert>
<dialog title="Insert ovrimos_rollback">ovrimos_rollback(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="pcntl">
<function name="pcntl_exec">
<description>
     Executes specified program in current process space
    </description>
<param name="path" required="1" vallist="0" default="" type="string">path</param>
<param name="args" required="0" vallist="0" default="" type="array">args</param>
<param name="envs" required="0" vallist="0" default="" type="array">envs</param>
<return type="bool">bool</return>
<insert>pcntl_exec(string path [,array args] [,array envs]);</insert>
<dialog title="Insert pcntl_exec">pcntl_exec(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pcntl_fork">
<description>Forks the currently running process</description>
<return type="int">int</return>
<insert>pcntl_fork();</insert>
<dialog title="Insert pcntl_fork">pcntl_fork();</dialog>
<info title="Info window"></info>
</function>
<function name="pcntl_signal">
<description>Installs a signal handler</description>
<param name="signo" required="1" vallist="0" default="" type="int">signo</param>
<param name="handle" required="1" vallist="0" default="" type="mixed">handle</param>
<param name="restart_syscalls" required="0" vallist="0" default="" type="bool">restart_syscalls</param>
<return type="bool">bool</return>
<insert>pcntl_signal(int signo, mixed handle [,bool restart_syscalls]);</insert>
<dialog title="Insert pcntl_signal">pcntl_signal(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pcntl_waitpid">
<description>Waits on or returns the status of a forked child</description>
<param name="pid" required="1" vallist="0" default="" type="int">pid</param>
<param name="status" required="1" vallist="0" default="" type="int">status</param>
<param name="options" required="1" vallist="0" default="" type="int">options</param>
<return type="int">int</return>
<insert>pcntl_waitpid(int pid, int status, int options);</insert>
<dialog title="Insert pcntl_waitpid">pcntl_waitpid(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pcntl_wexitstatus">
<description>
    Returns the return code of a terminated child
   </description>
<param name="status" required="1" vallist="0" default="" type="int">status</param>
<return type="int">int</return>
<insert>pcntl_wexitstatus(int status);</insert>
<dialog title="Insert pcntl_wexitstatus">pcntl_wexitstatus(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pcntl_wifexited">
<description>
    Returns </description>
<param name="status" required="1" vallist="0" default="" type="int">status</param>
<return type="int">int</return>
<insert>pcntl_wifexited(int status);</insert>
<dialog title="Insert pcntl_wifexited">pcntl_wifexited(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pcntl_wifsignaled">
<description>
    Returns </description>
<param name="status" required="1" vallist="0" default="" type="int">status</param>
<return type="int">int</return>
<insert>pcntl_wifsignaled(int status);</insert>
<dialog title="Insert pcntl_wifsignaled">pcntl_wifsignaled(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pcntl_wifstopped">
<description>
    Returns </description>
<param name="status" required="1" vallist="0" default="" type="int">status</param>
<return type="int">int</return>
<insert>pcntl_wifstopped(int status);</insert>
<dialog title="Insert pcntl_wifstopped">pcntl_wifstopped(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pcntl_wstopsig">
<description>
    Returns the signal which caused the child to stop
   </description>
<param name="status" required="1" vallist="0" default="" type="int">status</param>
<return type="int">int</return>
<insert>pcntl_wstopsig(int status);</insert>
<dialog title="Insert pcntl_wstopsig">pcntl_wstopsig(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pcntl_wtermsig">
<description>
    Returns the signal which caused the child to terminate
   </description>
<param name="status" required="1" vallist="0" default="" type="int">status</param>
<return type="int">int</return>
<insert>pcntl_wtermsig(int status);</insert>
<dialog title="Insert pcntl_wtermsig">pcntl_wtermsig(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="pcre">
<function name="preg_grep">
<description>
     Return array entries that match the pattern
    </description>
<param name="pattern" required="1" vallist="0" default="" type="string">pattern</param>
<param name="input" required="1" vallist="0" default="" type="array">input</param>
<return type="array">array</return>
<insert>preg_grep(string pattern, array input);</insert>
<dialog title="Insert preg_grep">preg_grep(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="preg_match_all">
<description>Perform a global regular expression match</description>
<param name="pattern" required="1" vallist="0" default="" type="string">pattern</param>
<param name="subject" required="1" vallist="0" default="" type="string">subject</param>
<param name="matches" required="1" vallist="0" default="" type="array">matches</param>
<param name="flags" required="0" vallist="0" default="" type="int">flags</param>
<return type="int">int</return>
<insert>preg_match_all(string pattern, string subject, array matches [,int flags]);</insert>
<dialog title="Insert preg_match_all">preg_match_all(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="preg_match">
<description>Perform a regular expression match</description>
<param name="pattern" required="1" vallist="0" default="" type="string">pattern</param>
<param name="subject" required="1" vallist="0" default="" type="string">subject</param>
<param name="matches" required="0" vallist="0" default="" type="array">matches</param>
<param name="flags" required="0" vallist="0" default="" type="int">flags</param>
<return type="int">int</return>
<insert>preg_match(string pattern, string subject [,array matches] [,int flags]);</insert>
<dialog title="Insert preg_match">preg_match(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="preg_quote">
<description>Quote regular expression characters</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="delimiter" required="0" vallist="0" default="" type="string">delimiter</param>
<return type="string">string</return>
<insert>preg_quote(string str [,string delimiter]);</insert>
<dialog title="Insert preg_quote">preg_quote(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="preg_replace_callback">
<description>Perform a regular expression search and replace using a callback</description>
<param name="pattern" required="1" vallist="0" default="" type="mixed">pattern</param>
<param name="callback" required="1" vallist="0" default="" type="callback">callback</param>
<param name="subject" required="1" vallist="0" default="" type="mixed">subject</param>
<param name="limit" required="0" vallist="0" default="" type="int">limit</param>
<return type="mixed">mixed</return>
<insert>preg_replace_callback(mixed pattern, callback callback, mixed subject [,int limit]);</insert>
<dialog title="Insert preg_replace_callback">preg_replace_callback(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="preg_replace">
<description>Perform a regular expression search and replace</description>
<param name="pattern" required="1" vallist="0" default="" type="mixed">pattern</param>
<param name="replacement" required="1" vallist="0" default="" type="mixed">replacement</param>
<param name="subject" required="1" vallist="0" default="" type="mixed">subject</param>
<param name="limit" required="0" vallist="0" default="" type="int">limit</param>
<return type="mixed">mixed</return>
<insert>preg_replace(mixed pattern, mixed replacement, mixed subject [,int limit]);</insert>
<dialog title="Insert preg_replace">preg_replace(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="preg_split">
<description>Split string by a regular expression</description>
<param name="pattern" required="1" vallist="0" default="" type="string">pattern</param>
<param name="subject" required="1" vallist="0" default="" type="string">subject</param>
<param name="limit" required="0" vallist="0" default="" type="int">limit</param>
<param name="flags" required="0" vallist="0" default="" type="int">flags</param>
<return type="array">array</return>
<insert>preg_split(string pattern, string subject [,int limit] [,int flags]);</insert>
<dialog title="Insert preg_split">preg_split(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="pdf">
<function name="pdf_add_bookmark">
<description>Adds bookmark for current page</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<param name="parent" required="0" vallist="0" default="" type="int">parent</param>
<param name="open" required="0" vallist="0" default="" type="int">open</param>
<return type="int">int</return>
<insert>pdf_add_bookmark(int pdf_object, string text [,int parent] [,int open]);</insert>
<dialog title="Insert pdf_add_bookmark">pdf_add_bookmark(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_add_launchlink">
<description>Add a launch annotation for current page</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="llx" required="1" vallist="0" default="" type="float">llx</param>
<param name="lly" required="1" vallist="0" default="" type="float">lly</param>
<param name="urx" required="1" vallist="0" default="" type="float">urx</param>
<param name="ury" required="1" vallist="0" default="" type="float">ury</param>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="int">int</return>
<insert>pdf_add_launchlink(int pdf_object, float llx, float lly, float urx, float ury, string filename);</insert>
<dialog title="Insert pdf_add_launchlink">pdf_add_launchlink(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_add_locallink">
<description>Add a link annotation for current page</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="llx" required="1" vallist="0" default="" type="float">llx</param>
<param name="lly" required="1" vallist="0" default="" type="float">lly</param>
<param name="urx" required="1" vallist="0" default="" type="float">urx</param>
<param name="ury" required="1" vallist="0" default="" type="float">ury</param>
<param name="page" required="1" vallist="0" default="" type="int">page</param>
<param name="dest" required="1" vallist="0" default="" type="string">dest</param>
<return type="int">int</return>
<insert>pdf_add_locallink(int pdf_object, float llx, float lly, float urx, float ury, int page, string dest);</insert>
<dialog title="Insert pdf_add_locallink">pdf_add_locallink(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_add_note">
<description>Add a note annotation for current page</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="llx" required="1" vallist="0" default="" type="float">llx</param>
<param name="lly" required="1" vallist="0" default="" type="float">lly</param>
<param name="urx" required="1" vallist="0" default="" type="float">urx</param>
<param name="ury" required="1" vallist="0" default="" type="float">ury</param>
<param name="contents" required="1" vallist="0" default="" type="string">contents</param>
<param name="title" required="1" vallist="0" default="" type="string">title</param>
<param name="icon" required="1" vallist="0" default="" type="string">icon</param>
<param name="open" required="1" vallist="0" default="" type="int">open</param>
<return type="int">int</return>
<insert>pdf_add_note(int pdf_object, float llx, float lly, float urx, float ury, string contents, string title, string icon, int open);</insert>
<dialog title="Insert pdf_add_note">pdf_add_note(%0, %1, %2, %3, %4, %5, %6, %7, %8);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_add_pdflink">
<description>Adds file link annotation for current page</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="llx" required="1" vallist="0" default="" type="float">llx</param>
<param name="lly" required="1" vallist="0" default="" type="float">lly</param>
<param name="urx" required="1" vallist="0" default="" type="float">urx</param>
<param name="ury" required="1" vallist="0" default="" type="float">ury</param>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="page" required="1" vallist="0" default="" type="int">page</param>
<param name="dest" required="1" vallist="0" default="" type="string">dest</param>
<return type="int">int</return>
<insert>pdf_add_pdflink(int pdf_object, float llx, float lly, float urx, float ury, string filename, int page, string dest);</insert>
<dialog title="Insert pdf_add_pdflink">pdf_add_pdflink(%0, %1, %2, %3, %4, %5, %6, %7);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_add_thumbnail">
<description>Adds thumbnail for current page</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="image" required="1" vallist="0" default="" type="int">image</param>
<return type="int">int</return>
<insert>pdf_add_thumbnail(int pdf_object, int image);</insert>
<dialog title="Insert pdf_add_thumbnail">pdf_add_thumbnail(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_add_weblink">
<description>Adds weblink for current page</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="llx" required="1" vallist="0" default="" type="float">llx</param>
<param name="lly" required="1" vallist="0" default="" type="float">lly</param>
<param name="urx" required="1" vallist="0" default="" type="float">urx</param>
<param name="ury" required="1" vallist="0" default="" type="float">ury</param>
<param name="url" required="1" vallist="0" default="" type="string">url</param>
<return type="int">int</return>
<insert>pdf_add_weblink(int pdf_object, float llx, float lly, float urx, float ury, string url);</insert>
<dialog title="Insert pdf_add_weblink">pdf_add_weblink(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_arc">
<description>Draws an arc (counterclockwise)</description>
<param name="pdf_object" required="1" vallist="0" default="" type="resource">pdf_object</param>
<param name="x" required="1" vallist="0" default="" type="float">x</param>
<param name="y" required="1" vallist="0" default="" type="float">y</param>
<param name="r" required="1" vallist="0" default="" type="float">r</param>
<param name="alpha" required="1" vallist="0" default="" type="float">alpha</param>
<param name="beta" required="1" vallist="0" default="" type="float">beta</param>
<return type="void">void</return>
<insert>pdf_arc(resource pdf_object, float x, float y, float r, float alpha, float beta);</insert>
<dialog title="Insert pdf_arc">pdf_arc(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_arcn">
<description>Draws an arc (clockwise)</description>
<param name="pdf_object" required="1" vallist="0" default="" type="resource">pdf_object</param>
<param name="x" required="1" vallist="0" default="" type="float">x</param>
<param name="y" required="1" vallist="0" default="" type="float">y</param>
<param name="r" required="1" vallist="0" default="" type="float">r</param>
<param name="alpha" required="1" vallist="0" default="" type="float">alpha</param>
<param name="beta" required="1" vallist="0" default="" type="float">beta</param>
<return type="void">void</return>
<insert>pdf_arcn(resource pdf_object, float x, float y, float r, float alpha, float beta);</insert>
<dialog title="Insert pdf_arcn">pdf_arcn(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_attach_file">
<description>Adds a file attachement for current page</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="llx" required="1" vallist="0" default="" type="float">llx</param>
<param name="lly" required="1" vallist="0" default="" type="float">lly</param>
<param name="urx" required="1" vallist="0" default="" type="float">urx</param>
<param name="ury" required="1" vallist="0" default="" type="float">ury</param>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="description" required="1" vallist="0" default="" type="string">description</param>
<param name="author" required="1" vallist="0" default="" type="string">author</param>
<param name="mimetype" required="1" vallist="0" default="" type="string">mimetype</param>
<param name="icon" required="1" vallist="0" default="" type="string">icon</param>
<return type="int">int</return>
<insert>pdf_attach_file(int pdf_object, float llx, float lly, float urx, float ury, string filename, string description, string author, string mimetype, string icon);</insert>
<dialog title="Insert pdf_attach_file">pdf_attach_file(%0, %1, %2, %3, %4, %5, %6, %7, %8, %9);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_begin_page">
<description>Starts new page</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="width" required="1" vallist="0" default="" type="float">width</param>
<param name="height" required="1" vallist="0" default="" type="float">height</param>
<return type="void">void</return>
<insert>pdf_begin_page(int pdf_object, float width, float height);</insert>
<dialog title="Insert pdf_begin_page">pdf_begin_page(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_begin_pattern">
<description>Starts new pattern</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="width" required="1" vallist="0" default="" type="float">width</param>
<param name="height" required="1" vallist="0" default="" type="float">height</param>
<param name="xstep" required="1" vallist="0" default="" type="float">xstep</param>
<param name="ystep" required="1" vallist="0" default="" type="float">ystep</param>
<param name="painttype" required="1" vallist="0" default="" type="int">painttype</param>
<return type="int">int</return>
<insert>pdf_begin_pattern(int pdf_object, float width, float height, float xstep, float ystep, int painttype);</insert>
<dialog title="Insert pdf_begin_pattern">pdf_begin_pattern(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_begin_template">
<description>Starts new template</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="width" required="1" vallist="0" default="" type="float">width</param>
<param name="height" required="1" vallist="0" default="" type="float">height</param>
<return type="int">int</return>
<insert>pdf_begin_template(int pdf_object, float width, float height);</insert>
<dialog title="Insert pdf_begin_template">pdf_begin_template(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_circle">
<description>Draws a circle</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="x" required="1" vallist="0" default="" type="float">x</param>
<param name="y" required="1" vallist="0" default="" type="float">y</param>
<param name="r" required="1" vallist="0" default="" type="float">r</param>
<return type="void">void</return>
<insert>pdf_circle(int pdf_object, float x, float y, float r);</insert>
<dialog title="Insert pdf_circle">pdf_circle(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_clip">
<description>Clips to current path</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<return type="void">void</return>
<insert>pdf_clip(int pdf_object);</insert>
<dialog title="Insert pdf_clip">pdf_clip(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_close_image">
<description>Closes an image</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="image" required="1" vallist="0" default="" type="int">image</param>
<return type="void">void</return>
<insert>pdf_close_image(int pdf_object, int image);</insert>
<dialog title="Insert pdf_close_image">pdf_close_image(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_close_pdi_page">
<description>
        Close the page handle
      </description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="pagehandle" required="1" vallist="0" default="" type="int">pagehandle</param>
<return type="void">void</return>
<insert>pdf_close_pdi_page(int pdf_object, int pagehandle);</insert>
<dialog title="Insert pdf_close_pdi_page">pdf_close_pdi_page(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_close_pdi">
<description>
     Close the input PDF document
    </description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="dochandle" required="1" vallist="0" default="" type="int">dochandle</param>
<return type="void">void</return>
<insert>pdf_close_pdi(int pdf_object, int dochandle);</insert>
<dialog title="Insert pdf_close_pdi">pdf_close_pdi(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_close">
<description>Closes a pdf object</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<return type="void">void</return>
<insert>pdf_close(int pdf_object);</insert>
<dialog title="Insert pdf_close">pdf_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_closepath_fill_stroke">
<description>Closes, fills and strokes current path</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<return type="void">void</return>
<insert>pdf_closepath_fill_stroke(int pdf_object);</insert>
<dialog title="Insert pdf_closepath_fill_stroke">pdf_closepath_fill_stroke(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_closepath_stroke">
<description>Closes path and draws line along path</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<return type="void">void</return>
<insert>pdf_closepath_stroke(int pdf_object);</insert>
<dialog title="Insert pdf_closepath_stroke">pdf_closepath_stroke(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_closepath">
<description>Closes path</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<return type="void">void</return>
<insert>pdf_closepath(int pdf_object);</insert>
<dialog title="Insert pdf_closepath">pdf_closepath(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_concat">
<description>Concatenate a matrix to the CTM</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="a" required="1" vallist="0" default="" type="float">a</param>
<param name="b" required="1" vallist="0" default="" type="float">b</param>
<param name="c" required="1" vallist="0" default="" type="float">c</param>
<param name="d" required="1" vallist="0" default="" type="float">d</param>
<param name="e" required="1" vallist="0" default="" type="float">e</param>
<param name="f" required="1" vallist="0" default="" type="float">f</param>
<return type="void">void</return>
<insert>pdf_concat(int pdf_object, float a, float b, float c, float d, float e, float f);</insert>
<dialog title="Insert pdf_concat">pdf_concat(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_continue_text">
<description>Outputs text in next line</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="void">void</return>
<insert>pdf_continue_text(int pdf_object, string text);</insert>
<dialog title="Insert pdf_continue_text">pdf_continue_text(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_curveto">
<description>Draws a curve</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="x1" required="1" vallist="0" default="" type="float">x1</param>
<param name="y1" required="1" vallist="0" default="" type="float">y1</param>
<param name="x2" required="1" vallist="0" default="" type="float">x2</param>
<param name="y2" required="1" vallist="0" default="" type="float">y2</param>
<param name="x3" required="1" vallist="0" default="" type="float">x3</param>
<param name="y3" required="1" vallist="0" default="" type="float">y3</param>
<return type="void">void</return>
<insert>pdf_curveto(int pdf_object, float x1, float y1, float x2, float y2, float x3, float y3);</insert>
<dialog title="Insert pdf_curveto">pdf_curveto(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_delete">
<description>Deletes a PDF object</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<return type="void">void</return>
<insert>pdf_delete(int pdf_object);</insert>
<dialog title="Insert pdf_delete">pdf_delete(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_end_page">
<description>Ends a page</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<return type="void">void</return>
<insert>pdf_end_page(int pdf_object);</insert>
<dialog title="Insert pdf_end_page">pdf_end_page(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_end_pattern">
<description>Finish pattern</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<return type="void">void</return>
<insert>pdf_end_pattern(int pdf_object);</insert>
<dialog title="Insert pdf_end_pattern">pdf_end_pattern(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_end_template">
<description>Finish template</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<return type="void">void</return>
<insert>pdf_end_template(int pdf_object);</insert>
<dialog title="Insert pdf_end_template">pdf_end_template(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_fill_stroke">
<description>Fills and strokes current path</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<return type="void">void</return>
<insert>pdf_fill_stroke(int pdf_object);</insert>
<dialog title="Insert pdf_fill_stroke">pdf_fill_stroke(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_fill">
<description>Fills current path</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<return type="void">void</return>
<insert>pdf_fill(int pdf_object);</insert>
<dialog title="Insert pdf_fill">pdf_fill(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_findfont">
<description>Prepare font for later use with </description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="fontname" required="1" vallist="0" default="" type="string">fontname</param>
<param name="encoding" required="1" vallist="0" default="" type="string">encoding</param>
<param name="embed" required="1" vallist="0" default="" type="int">embed</param>
<return type="int">int</return>
<insert>pdf_findfont(int pdf_object, string fontname, string encoding, int embed);</insert>
<dialog title="Insert pdf_findfont">pdf_findfont(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_get_buffer">
<description>Fetch the buffer containig the generated PDF data.</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<return type="string">string</return>
<insert>pdf_get_buffer(int pdf_object);</insert>
<dialog title="Insert pdf_get_buffer">pdf_get_buffer(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_get_image_height">
<description>Returns height of an image</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="image" required="1" vallist="0" default="" type="int">image</param>
<return type="string">string</return>
<insert>pdf_get_image_height(int pdf_object, int image);</insert>
<dialog title="Insert pdf_get_image_height">pdf_get_image_height(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_get_image_width">
<description>Returns width of an image</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="image" required="1" vallist="0" default="" type="int">image</param>
<return type="string">string</return>
<insert>pdf_get_image_width(int pdf_object, int image);</insert>
<dialog title="Insert pdf_get_image_width">pdf_get_image_width(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_get_majorversion">
<description>
     Returns the major version number of the PDFlib
    </description>
<return type="int">int</return>
<insert>pdf_get_majorversion();</insert>
<dialog title="Insert pdf_get_majorversion">pdf_get_majorversion();</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_get_minorversion">
<description>
     Returns the minor version number of the PDFlib
    </description>
<return type="int">int</return>
<insert>pdf_get_minorversion();</insert>
<dialog title="Insert pdf_get_minorversion">pdf_get_minorversion();</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_get_parameter">
<description>Gets certain parameters</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<param name="modifier" required="0" vallist="0" default="" type="float">modifier</param>
<return type="string">string</return>
<insert>pdf_get_parameter(int pdf_object, string key [,float modifier]);</insert>
<dialog title="Insert pdf_get_parameter">pdf_get_parameter(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_get_pdi_parameter">
<description>Get some PDI string parameters</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<param name="doc" required="1" vallist="0" default="" type="int">doc</param>
<param name="page" required="1" vallist="0" default="" type="int">page</param>
<param name="index" required="1" vallist="0" default="" type="int">index</param>
<return type="string">string</return>
<insert>pdf_get_pdi_parameter(int pdf_object, string key, int doc, int page, int index);</insert>
<dialog title="Insert pdf_get_pdi_parameter">pdf_get_pdi_parameter(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_get_pdi_value">
<description>Gets some PDI numerical parameters</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<param name="doc" required="1" vallist="0" default="" type="int">doc</param>
<param name="page" required="1" vallist="0" default="" type="int">page</param>
<param name="index" required="1" vallist="0" default="" type="int">index</param>
<return type="string">string</return>
<insert>pdf_get_pdi_value(int pdf_object, string key, int doc, int page, int index);</insert>
<dialog title="Insert pdf_get_pdi_value">pdf_get_pdi_value(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_get_value">
<description>Gets certain numerical value</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<param name="modifier" required="0" vallist="0" default="" type="float">modifier</param>
<return type="float">float</return>
<insert>pdf_get_value(int pdf_object, string key [,float modifier]);</insert>
<dialog title="Insert pdf_get_value">pdf_get_value(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_initgraphics">
<description>Resets graphic state</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<return type="void">void</return>
<insert>pdf_initgraphics(int pdf_object);</insert>
<dialog title="Insert pdf_initgraphics">pdf_initgraphics(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_lineto">
<description>Draws a line</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="x" required="1" vallist="0" default="" type="float">x</param>
<param name="y" required="1" vallist="0" default="" type="float">y</param>
<return type="void">void</return>
<insert>pdf_lineto(int pdf_object, float x, float y);</insert>
<dialog title="Insert pdf_lineto">pdf_lineto(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_makespotcolor">
<description>Makes a spotcolor</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="spotname" required="1" vallist="0" default="" type="string">spotname</param>
<return type="void">void</return>
<insert>pdf_makespotcolor(int pdf_object, string spotname);</insert>
<dialog title="Insert pdf_makespotcolor">pdf_makespotcolor(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_moveto">
<description>Sets current point</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="x" required="1" vallist="0" default="" type="float">x</param>
<param name="y" required="1" vallist="0" default="" type="float">y</param>
<return type="void">void</return>
<insert>pdf_moveto(int pdf_object, float x, float y);</insert>
<dialog title="Insert pdf_moveto">pdf_moveto(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_new">
<description>Creates a new pdf object</description>
<return type="int">int</return>
<insert>pdf_new();</insert>
<dialog title="Insert pdf_new">pdf_new();</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_open_CCITT">
<description>Opens a new image file with raw CCITT data</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="width" required="1" vallist="0" default="" type="int">width</param>
<param name="height" required="1" vallist="0" default="" type="int">height</param>
<param name="BitReverse" required="1" vallist="0" default="" type="int">BitReverse</param>
<param name="k" required="1" vallist="0" default="" type="int">k</param>
<param name="Blackls1" required="1" vallist="0" default="" type="int">Blackls1</param>
<return type="int">int</return>
<insert>pdf_open_CCITT(int pdf_object, string filename, int width, int height, int BitReverse, int k, int Blackls1);</insert>
<dialog title="Insert pdf_open_CCITT">pdf_open_CCITT(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_open_file">
<description>Opens a new pdf object</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="filename" required="0" vallist="0" default="" type="string">filename</param>
<return type="int">int</return>
<insert>pdf_open_file(int pdf_object [,string filename]);</insert>
<dialog title="Insert pdf_open_file">pdf_open_file(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_open_image_file">
<description>Reads an image from a file</description>
<param name="PDF-document" required="1" vallist="0" default="" type="int">PDF-document</param>
<param name="imagetype" required="1" vallist="0" default="" type="string">imagetype</param>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="stringparam" required="0" vallist="0" default="" type="string">stringparam</param>
<param name="intparam" required="0" vallist="0" default="" type="string">intparam</param>
<return type="int">int</return>
<insert>pdf_open_image_file(int PDF-document, string imagetype, string filename [,string stringparam] [,string intparam]);</insert>
<dialog title="Insert pdf_open_image_file">pdf_open_image_file(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_open_image">
<description>Versatile function for images</description>
<param name="PDF-document" required="1" vallist="0" default="" type="int">PDF-document</param>
<param name="imagetype" required="1" vallist="0" default="" type="string">imagetype</param>
<param name="source" required="1" vallist="0" default="" type="string">source</param>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<param name="length" required="1" vallist="0" default="" type="long">length</param>
<param name="width" required="1" vallist="0" default="" type="int">width</param>
<param name="height" required="1" vallist="0" default="" type="int">height</param>
<param name="components" required="1" vallist="0" default="" type="int">components</param>
<param name="bpc" required="1" vallist="0" default="" type="int">bpc</param>
<param name="params" required="1" vallist="0" default="" type="string">params</param>
<return type="int">int</return>
<insert>pdf_open_image(int PDF-document, string imagetype, string source, string data, long length, int width, int height, int components, int bpc, string params);</insert>
<dialog title="Insert pdf_open_image">pdf_open_image(%0, %1, %2, %3, %4, %5, %6, %7, %8, %9);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_open_memory_image">
<description>Opens an image created with PHP's image functions</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="image" required="1" vallist="0" default="" type="int">image</param>
<return type="int">int</return>
<insert>pdf_open_memory_image(int pdf_object, int image);</insert>
<dialog title="Insert pdf_open_memory_image">pdf_open_memory_image(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_open_pdi_page">
<description>
        Prepare a page
      </description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="dochandle" required="1" vallist="0" default="" type="int">dochandle</param>
<param name="pagenumber" required="1" vallist="0" default="" type="int">pagenumber</param>
<param name="pagelabel" required="1" vallist="0" default="" type="string">pagelabel</param>
<return type="int">int</return>
<insert>pdf_open_pdi_page(int pdf_object, int dochandle, int pagenumber, string pagelabel);</insert>
<dialog title="Insert pdf_open_pdi_page">pdf_open_pdi_page(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_open_pdi">
<description>
        Opens a PDF file
      </description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="stringparam" required="1" vallist="0" default="" type="string">stringparam</param>
<param name="intparam" required="1" vallist="0" default="" type="int">intparam</param>
<return type="int">int</return>
<insert>pdf_open_pdi(int pdf_object, string filename, string stringparam, int intparam);</insert>
<dialog title="Insert pdf_open_pdi">pdf_open_pdi(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_open_tiff">
<description>Deprecated: Opens a TIFF image</description>
<param name="PDF-document" required="1" vallist="0" default="" type="int">PDF-document</param>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="int">int</return>
<insert>pdf_open_tiff(int PDF-document, string filename);</insert>
<dialog title="Insert pdf_open_tiff">pdf_open_tiff(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_place_image">
<description>Places an image on the page</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="image" required="1" vallist="0" default="" type="int">image</param>
<param name="x" required="1" vallist="0" default="" type="float">x</param>
<param name="y" required="1" vallist="0" default="" type="float">y</param>
<param name="scale" required="1" vallist="0" default="" type="float">scale</param>
<return type="void">void</return>
<insert>pdf_place_image(int pdf_object, int image, float x, float y, float scale);</insert>
<dialog title="Insert pdf_place_image">pdf_place_image(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_place_pdi_page">
<description>Places an image on the page</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="page" required="1" vallist="0" default="" type="int">page</param>
<param name="x" required="1" vallist="0" default="" type="float">x</param>
<param name="y" required="1" vallist="0" default="" type="float">y</param>
<param name="sx" required="1" vallist="0" default="" type="float">sx</param>
<param name="sy" required="1" vallist="0" default="" type="float">sy</param>
<return type="void">void</return>
<insert>pdf_place_pdi_page(int pdf_object, int page, float x, float y, float sx, float sy);</insert>
<dialog title="Insert pdf_place_pdi_page">pdf_place_pdi_page(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_rect">
<description>Draws a rectangle</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="x" required="1" vallist="0" default="" type="float">x</param>
<param name="y" required="1" vallist="0" default="" type="float">y</param>
<param name="width" required="1" vallist="0" default="" type="float">width</param>
<param name="height" required="1" vallist="0" default="" type="float">height</param>
<return type="void">void</return>
<insert>pdf_rect(int pdf_object, float x, float y, float width, float height);</insert>
<dialog title="Insert pdf_rect">pdf_rect(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_restore">
<description>Restores formerly saved environment</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<return type="void">void</return>
<insert>pdf_restore(int pdf_object);</insert>
<dialog title="Insert pdf_restore">pdf_restore(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_rotate">
<description>Sets rotation</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="phi" required="1" vallist="0" default="" type="float">phi</param>
<return type="void">void</return>
<insert>pdf_rotate(int pdf_object, float phi);</insert>
<dialog title="Insert pdf_rotate">pdf_rotate(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_save">
<description>Saves the current environment</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<return type="void">void</return>
<insert>pdf_save(int pdf_object);</insert>
<dialog title="Insert pdf_save">pdf_save(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_scale">
<description>Sets scaling</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="x-scale" required="1" vallist="0" default="" type="float">x-scale</param>
<param name="y-scale" required="1" vallist="0" default="" type="float">y-scale</param>
<return type="void">void</return>
<insert>pdf_scale(int pdf_object, float x-scale, float y-scale);</insert>
<dialog title="Insert pdf_scale">pdf_scale(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_set_border_color">
<description>Sets color of border around links and annotations</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="red" required="1" vallist="0" default="" type="float">red</param>
<param name="green" required="1" vallist="0" default="" type="float">green</param>
<param name="blue" required="1" vallist="0" default="" type="float">blue</param>
<return type="void">void</return>
<insert>pdf_set_border_color(int pdf_object, float red, float green, float blue);</insert>
<dialog title="Insert pdf_set_border_color">pdf_set_border_color(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_set_border_dash">
<description>Sets dash style of border around links and annotations</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="black" required="1" vallist="0" default="" type="float">black</param>
<param name="white" required="1" vallist="0" default="" type="float">white</param>
<return type="void">void</return>
<insert>pdf_set_border_dash(int pdf_object, float black, float white);</insert>
<dialog title="Insert pdf_set_border_dash">pdf_set_border_dash(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_set_border_style">
<description>Sets style of border around links and annotations</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="style" required="1" vallist="0" default="" type="string">style</param>
<param name="width" required="1" vallist="0" default="" type="float">width</param>
<return type="void">void</return>
<insert>pdf_set_border_style(int pdf_object, string style, float width);</insert>
<dialog title="Insert pdf_set_border_style">pdf_set_border_style(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_set_horiz_scaling">
<description>Sets horizontal scaling of text</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="scale" required="1" vallist="0" default="" type="float">scale</param>
<return type="void">void</return>
<insert>pdf_set_horiz_scaling(int pdf_object, float scale);</insert>
<dialog title="Insert pdf_set_horiz_scaling">pdf_set_horiz_scaling(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_set_info_author">
<description>
     Fills the author field of the document
    </description>
<param name="pdfdoc" required="1" vallist="0" default="" type="int">pdfdoc</param>
<param name="author" required="1" vallist="0" default="" type="string">author</param>
<return type="bool">bool</return>
<insert>pdf_set_info_author(int pdfdoc, string author);</insert>
<dialog title="Insert pdf_set_info_author">pdf_set_info_author(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_set_info_creator">
<description>
     Fills the creator field of the document
    </description>
<param name="pdfdoc" required="1" vallist="0" default="" type="int">pdfdoc</param>
<param name="creator" required="1" vallist="0" default="" type="string">creator</param>
<return type="bool">bool</return>
<insert>pdf_set_info_creator(int pdfdoc, string creator);</insert>
<dialog title="Insert pdf_set_info_creator">pdf_set_info_creator(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_set_info_keywords">
<description>
     Fills the keywords field of the document
    </description>
<param name="pdfdoc" required="1" vallist="0" default="" type="int">pdfdoc</param>
<param name="keywords" required="1" vallist="0" default="" type="string">keywords</param>
<return type="bool">bool</return>
<insert>pdf_set_info_keywords(int pdfdoc, string keywords);</insert>
<dialog title="Insert pdf_set_info_keywords">pdf_set_info_keywords(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_set_info_subject">
<description>
     Fills the subject field of the document
    </description>
<param name="pdfdoc" required="1" vallist="0" default="" type="int">pdfdoc</param>
<param name="subject" required="1" vallist="0" default="" type="string">subject</param>
<return type="bool">bool</return>
<insert>pdf_set_info_subject(int pdfdoc, string subject);</insert>
<dialog title="Insert pdf_set_info_subject">pdf_set_info_subject(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_set_info_title">
<description>
     Fills the title field of the document
    </description>
<param name="pdfdoc" required="1" vallist="0" default="" type="int">pdfdoc</param>
<param name="title" required="1" vallist="0" default="" type="string">title</param>
<return type="bool">bool</return>
<insert>pdf_set_info_title(int pdfdoc, string title);</insert>
<dialog title="Insert pdf_set_info_title">pdf_set_info_title(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_set_info">
<description>Fills a field of the document information</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<param name="value" required="1" vallist="0" default="" type="string">value</param>
<return type="void">void</return>
<insert>pdf_set_info(int pdf_object, string key, string value);</insert>
<dialog title="Insert pdf_set_info">pdf_set_info(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_set_parameter">
<description>Sets certain parameters</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<param name="value" required="1" vallist="0" default="" type="string">value</param>
<return type="void">void</return>
<insert>pdf_set_parameter(int pdf_object, string key, string value);</insert>
<dialog title="Insert pdf_set_parameter">pdf_set_parameter(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_set_text_pos">
<description>Sets text position</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="x" required="1" vallist="0" default="" type="float">x</param>
<param name="y" required="1" vallist="0" default="" type="float">y</param>
<return type="void">void</return>
<insert>pdf_set_text_pos(int pdf_object, float x, float y);</insert>
<dialog title="Insert pdf_set_text_pos">pdf_set_text_pos(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_set_value">
<description>Sets certain numerical value</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="key" required="1" vallist="0" default="" type="string">key</param>
<param name="value" required="1" vallist="0" default="" type="float">value</param>
<return type="void">void</return>
<insert>pdf_set_value(int pdf_object, string key, float value);</insert>
<dialog title="Insert pdf_set_value">pdf_set_value(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_setcolor">
<description>Sets fill and stroke color</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="type" required="1" vallist="0" default="" type="string">type</param>
<param name="colorspace" required="1" vallist="0" default="" type="string">colorspace</param>
<param name="c1" required="1" vallist="0" default="" type="float">c1</param>
<param name="c2" required="0" vallist="0" default="" type="float">c2</param>
<param name="c3" required="0" vallist="0" default="" type="float">c3</param>
<param name="c4" required="0" vallist="0" default="" type="float">c4</param>
<return type="void">void</return>
<insert>pdf_setcolor(int pdf_object, string type, string colorspace, float c1 [,float c2] [,float c3] [,float c4]);</insert>
<dialog title="Insert pdf_setcolor">pdf_setcolor(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_setdash">
<description>Sets dash pattern</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="b" required="1" vallist="0" default="" type="float">b</param>
<param name="w" required="1" vallist="0" default="" type="float">w</param>
<return type="void">void</return>
<insert>pdf_setdash(int pdf_object, float b, float w);</insert>
<dialog title="Insert pdf_setdash">pdf_setdash(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_setflat">
<description>Sets flatness</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="flatness" required="1" vallist="0" default="" type="float">flatness</param>
<return type="void">void</return>
<insert>pdf_setflat(int pdf_object, float flatness);</insert>
<dialog title="Insert pdf_setflat">pdf_setflat(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_setfont">
<description>Set the current font</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="font" required="1" vallist="0" default="" type="int">font</param>
<param name="size" required="1" vallist="0" default="" type="float">size</param>
<return type="void">void</return>
<insert>pdf_setfont(int pdf_object, int font, float size);</insert>
<dialog title="Insert pdf_setfont">pdf_setfont(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_setgray_fill">
<description>Sets filling color to gray value</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="gray" required="1" vallist="0" default="" type="float">gray</param>
<return type="void">void</return>
<insert>pdf_setgray_fill(int pdf_object, float gray);</insert>
<dialog title="Insert pdf_setgray_fill">pdf_setgray_fill(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_setgray_stroke">
<description>Sets drawing color to gray value</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="gray" required="1" vallist="0" default="" type="float">gray</param>
<return type="void">void</return>
<insert>pdf_setgray_stroke(int pdf_object, float gray);</insert>
<dialog title="Insert pdf_setgray_stroke">pdf_setgray_stroke(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_setgray">
<description>Sets drawing and filling color to gray value</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="gray" required="1" vallist="0" default="" type="float">gray</param>
<return type="void">void</return>
<insert>pdf_setgray(int pdf_object, float gray);</insert>
<dialog title="Insert pdf_setgray">pdf_setgray(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_setlinecap">
<description>Sets linecap parameter</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="linecap" required="1" vallist="0" default="" type="int">linecap</param>
<return type="void">void</return>
<insert>pdf_setlinecap(int pdf_object, int linecap);</insert>
<dialog title="Insert pdf_setlinecap">pdf_setlinecap(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_setlinejoin">
<description>Sets linejoin parameter</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="value" required="1" vallist="0" default="" type="int">value</param>
<return type="void">void</return>
<insert>pdf_setlinejoin(int pdf_object, int value);</insert>
<dialog title="Insert pdf_setlinejoin">pdf_setlinejoin(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_setlinewidth">
<description>Sets line width</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="width" required="1" vallist="0" default="" type="float">width</param>
<return type="void">void</return>
<insert>pdf_setlinewidth(int pdf_object, float width);</insert>
<dialog title="Insert pdf_setlinewidth">pdf_setlinewidth(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_setmatrix">
<description>Sets current transformation matrix</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="a" required="1" vallist="0" default="" type="float">a</param>
<param name="b" required="1" vallist="0" default="" type="float">b</param>
<param name="c" required="1" vallist="0" default="" type="float">c</param>
<param name="d" required="1" vallist="0" default="" type="float">d</param>
<param name="e" required="1" vallist="0" default="" type="float">e</param>
<param name="f" required="1" vallist="0" default="" type="float">f</param>
<return type="void">void</return>
<insert>pdf_setmatrix(int pdf_object, float a, float b, float c, float d, float e, float f);</insert>
<dialog title="Insert pdf_setmatrix">pdf_setmatrix(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_setmiterlimit">
<description>Sets miter limit</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="miter" required="1" vallist="0" default="" type="float">miter</param>
<return type="void">void</return>
<insert>pdf_setmiterlimit(int pdf_object, float miter);</insert>
<dialog title="Insert pdf_setmiterlimit">pdf_setmiterlimit(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_setpolydash">
<description>Sets complicated dash pattern</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="dasharray" required="1" vallist="0" default="" type="float *">dasharray</param>
<return type="void">void</return>
<insert>pdf_setpolydash(int pdf_object, float * dasharray);</insert>
<dialog title="Insert pdf_setpolydash">pdf_setpolydash(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_setrgbcolor_fill">
<description>Sets filling color to rgb color value</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="red value" required="1" vallist="0" default="" type="float">red value</param>
<param name="green value" required="1" vallist="0" default="" type="float">green value</param>
<param name="blue value" required="1" vallist="0" default="" type="float">blue value</param>
<return type="void">void</return>
<insert>pdf_setrgbcolor_fill(int pdf_object, float red value, float green value, float blue value);</insert>
<dialog title="Insert pdf_setrgbcolor_fill">pdf_setrgbcolor_fill(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_setrgbcolor_stroke">
<description>Sets drawing color to rgb color value</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="red value" required="1" vallist="0" default="" type="float">red value</param>
<param name="green value" required="1" vallist="0" default="" type="float">green value</param>
<param name="blue value" required="1" vallist="0" default="" type="float">blue value</param>
<return type="void">void</return>
<insert>pdf_setrgbcolor_stroke(int pdf_object, float red value, float green value, float blue value);</insert>
<dialog title="Insert pdf_setrgbcolor_stroke">pdf_setrgbcolor_stroke(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_setrgbcolor">
<description>Sets drawing and filling color to rgb color value</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="red value" required="1" vallist="0" default="" type="float">red value</param>
<param name="green value" required="1" vallist="0" default="" type="float">green value</param>
<param name="blue value" required="1" vallist="0" default="" type="float">blue value</param>
<return type="void">void</return>
<insert>pdf_setrgbcolor(int pdf_object, float red value, float green value, float blue value);</insert>
<dialog title="Insert pdf_setrgbcolor">pdf_setrgbcolor(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_show_boxed">
<description>Output text in a box</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<param name="left" required="1" vallist="0" default="" type="float">left</param>
<param name="top" required="1" vallist="0" default="" type="float">top</param>
<param name="width" required="1" vallist="0" default="" type="float">width</param>
<param name="height" required="1" vallist="0" default="" type="float">height</param>
<param name="hmode" required="1" vallist="0" default="" type="string">hmode</param>
<param name="feature" required="0" vallist="0" default="" type="string">feature</param>
<return type="int">int</return>
<insert>pdf_show_boxed(int pdf_object, string text, float left, float top, float width, float height, string hmode [,string feature]);</insert>
<dialog title="Insert pdf_show_boxed">pdf_show_boxed(%0, %1, %2, %3, %4, %5, %6, %7);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_show_xy">
<description>Output text at given position</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<param name="x" required="1" vallist="0" default="" type="float">x</param>
<param name="y" required="1" vallist="0" default="" type="float">y</param>
<return type="void">void</return>
<insert>pdf_show_xy(int pdf_object, string text, float x, float y);</insert>
<dialog title="Insert pdf_show_xy">pdf_show_xy(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_show">
<description>Output text at current position</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<return type="void">void</return>
<insert>pdf_show(int pdf_object, string text);</insert>
<dialog title="Insert pdf_show">pdf_show(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_skew">
<description>Skews the coordinate system</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="alpha" required="1" vallist="0" default="" type="float">alpha</param>
<param name="beta" required="1" vallist="0" default="" type="float">beta</param>
<return type="void">void</return>
<insert>pdf_skew(int pdf_object, float alpha, float beta);</insert>
<dialog title="Insert pdf_skew">pdf_skew(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_stringwidth">
<description>Returns width of text using current font</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<param name="font" required="0" vallist="0" default="" type="int">font</param>
<param name="size" required="0" vallist="0" default="" type="float">size</param>
<return type="float">float</return>
<insert>pdf_stringwidth(int pdf_object, string text [,int font] [,float size]);</insert>
<dialog title="Insert pdf_stringwidth">pdf_stringwidth(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_stroke">
<description>Draws line along path</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<return type="void">void</return>
<insert>pdf_stroke(int pdf_object);</insert>
<dialog title="Insert pdf_stroke">pdf_stroke(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pdf_translate">
<description>Sets origin of coordinate system</description>
<param name="pdf_object" required="1" vallist="0" default="" type="int">pdf_object</param>
<param name="tx" required="1" vallist="0" default="" type="float">tx</param>
<param name="ty" required="1" vallist="0" default="" type="float">ty</param>
<return type="void">void</return>
<insert>pdf_translate(int pdf_object, float tx, float ty);</insert>
<dialog title="Insert pdf_translate">pdf_translate(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="pfpro">
<function name="pfpro_cleanup">
<description>Shuts down the Payflow Pro library</description>
<return type="void">void</return>
<insert>pfpro_cleanup();</insert>
<dialog title="Insert pfpro_cleanup">pfpro_cleanup();</dialog>
<info title="Info window"></info>
</function>
<function name="pfpro_init">
<description>Initialises the Payflow Pro library</description>
<return type="void">void</return>
<insert>pfpro_init();</insert>
<dialog title="Insert pfpro_init">pfpro_init();</dialog>
<info title="Info window"></info>
</function>
<function name="pfpro_process_raw">
<description>Process a raw transaction with Payflow Pro</description>
<param name="parameters" required="1" vallist="0" default="" type="string">parameters</param>
<param name="address" required="0" vallist="0" default="" type="string">address</param>
<param name="port" required="0" vallist="0" default="" type="int">port</param>
<param name="timeout" required="0" vallist="0" default="" type="int">timeout</param>
<param name="proxy address" required="0" vallist="0" default="" type="string">proxy address</param>
<param name="proxy port" required="0" vallist="0" default="" type="int">proxy port</param>
<param name="proxy logon" required="0" vallist="0" default="" type="string">proxy logon</param>
<param name="proxy password" required="0" vallist="0" default="" type="string">proxy password</param>
<return type="string">string</return>
<insert>pfpro_process_raw(string parameters [,string address] [,int port] [,int timeout] [,string proxy address] [,int proxy port] [,string proxy logon] [,string proxy password]);</insert>
<dialog title="Insert pfpro_process_raw">pfpro_process_raw(%0, %1, %2, %3, %4, %5, %6, %7);</dialog>
<info title="Info window"></info>
</function>
<function name="pfpro_process">
<description>Process a transaction with Payflow Pro</description>
<param name="parameters" required="1" vallist="0" default="" type="array">parameters</param>
<param name="address" required="0" vallist="0" default="" type="string">address</param>
<param name="port" required="0" vallist="0" default="" type="int">port</param>
<param name="timeout" required="0" vallist="0" default="" type="int">timeout</param>
<param name="proxy address" required="0" vallist="0" default="" type="string">proxy address</param>
<param name="proxy port" required="0" vallist="0" default="" type="int">proxy port</param>
<param name="proxy logon" required="0" vallist="0" default="" type="string">proxy logon</param>
<param name="proxy password" required="0" vallist="0" default="" type="string">proxy password</param>
<return type="array">array</return>
<insert>pfpro_process(array parameters [,string address] [,int port] [,int timeout] [,string proxy address] [,int proxy port] [,string proxy logon] [,string proxy password]);</insert>
<dialog title="Insert pfpro_process">pfpro_process(%0, %1, %2, %3, %4, %5, %6, %7);</dialog>
<info title="Info window"></info>
</function>
<function name="pfpro_version">
<description>Returns the version of the Payflow Pro software</description>
<return type="string">string</return>
<insert>pfpro_version();</insert>
<dialog title="Insert pfpro_version">pfpro_version();</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="pgsql">
<function name="pg_affected_rows">
<description>Returns number of affected records(tuples)</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<return type="int">int</return>
<insert>pg_affected_rows(resource result);</insert>
<dialog title="Insert pg_affected_rows">pg_affected_rows(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_cancel_query">
<description>
     Cancel async query
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<return type="bool">bool</return>
<insert>pg_cancel_query(resource connection);</insert>
<dialog title="Insert pg_cancel_query">pg_cancel_query(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_client_encoding">
<description>
     Get the client encoding
    </description>
<param name="connection" required="0" vallist="0" default="" type="resource">connection</param>
<return type="string">string</return>
<insert>pg_client_encoding([resource connection]);</insert>
<dialog title="Insert pg_client_encoding">pg_client_encoding(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_close">
<description>Close a PostgreSQL connection</description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<return type="bool">bool</return>
<insert>pg_close(resource connection);</insert>
<dialog title="Insert pg_close">pg_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_connect">
<description>Open a PostgreSQL connection</description>
<param name="connection_string" required="1" vallist="0" default="" type="string">connection_string</param>
<return type="resource">resource</return>
<insert>pg_connect(string connection_string);</insert>
<dialog title="Insert pg_connect">pg_connect(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_connection_busy">
<description>
     Get connection is busy or not
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<return type="bool">bool</return>
<insert>pg_connection_busy(resource connection);</insert>
<dialog title="Insert pg_connection_busy">pg_connection_busy(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_connection_reset">
<description>
     Reset connection (reconnect)
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<return type="bool">bool</return>
<insert>pg_connection_reset(resource connection);</insert>
<dialog title="Insert pg_connection_reset">pg_connection_reset(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_connection_status">
<description>
     Get connection status
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<return type="int">int</return>
<insert>pg_connection_status(resource connection);</insert>
<dialog title="Insert pg_connection_status">pg_connection_status(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_convert">
<description>
     Convert associative array value into suitable for SQL statement.
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="table_name" required="1" vallist="0" default="" type="string">table_name</param>
<param name="assoc_array" required="1" vallist="0" default="" type="array">assoc_array</param>
<param name="options" required="0" vallist="0" default="" type="int">options</param>
<return type="array">array</return>
<insert>pg_convert(resource connection, string table_name, array assoc_array [,int options]);</insert>
<dialog title="Insert pg_convert">pg_convert(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_copy_from">
<description>
     Insert records into a table from an array
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="table_name" required="1" vallist="0" default="" type="string">table_name</param>
<param name="rows" required="1" vallist="0" default="" type="array">rows</param>
<param name="delimiter" required="0" vallist="0" default="" type="string">delimiter</param>
<param name="null_as" required="0" vallist="0" default="" type="string">null_as</param>
<return type="bool">bool</return>
<insert>pg_copy_from(resource connection, string table_name, array rows [,string delimiter] [,string null_as]);</insert>
<dialog title="Insert pg_copy_from">pg_copy_from(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_copy_to">
<description>
     Copy a table to an array
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="table_name" required="1" vallist="0" default="" type="string">table_name</param>
<param name="delimiter" required="0" vallist="0" default="" type="string">delimiter</param>
<param name="null_as" required="0" vallist="0" default="" type="string">null_as</param>
<return type="array">array</return>
<insert>pg_copy_to(resource connection, string table_name [,string delimiter] [,string null_as]);</insert>
<dialog title="Insert pg_copy_to">pg_copy_to(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_dbname">
<description>Get the database name</description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<return type="string">string</return>
<insert>pg_dbname(resource connection);</insert>
<dialog title="Insert pg_dbname">pg_dbname(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_delete">
<description>
     Delete records.
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="table_name" required="1" vallist="0" default="" type="string">table_name</param>
<param name="assoc_array" required="1" vallist="0" default="" type="array">assoc_array</param>
<param name="options" required="0" vallist="0" default="" type="int">options</param>
<return type="mixed">mixed</return>
<insert>pg_delete(resource connection, string table_name, array assoc_array [,int options]);</insert>
<dialog title="Insert pg_delete">pg_delete(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_end_copy">
<description>Sync with PostgreSQL backend</description>
<param name="connection" required="0" vallist="0" default="" type="resource">connection</param>
<return type="bool">bool</return>
<insert>pg_end_copy([resource connection]);</insert>
<dialog title="Insert pg_end_copy">pg_end_copy(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_escape_bytea">
<description>
     Escape binary for bytea type
    </description>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<return type="string">string</return>
<insert>pg_escape_bytea(string data);</insert>
<dialog title="Insert pg_escape_bytea">pg_escape_bytea(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_escape_string">
<description>
     Escape string for text/char type
    </description>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<return type="string">string</return>
<insert>pg_escape_string(string data);</insert>
<dialog title="Insert pg_escape_string">pg_escape_string(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_fetch_all">
<description>Fetch a row as an array</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="row" required="0" vallist="0" default="" type="int">row</param>
<return type="array">array</return>
<insert>pg_fetch_all(resource result [,int row]);</insert>
<dialog title="Insert pg_fetch_all">pg_fetch_all(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_fetch_array">
<description>Fetch a row as an array</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="row" required="0" vallist="0" default="" type="int">row</param>
<param name="result_type" required="0" vallist="0" default="" type="int">result_type</param>
<return type="array">array</return>
<insert>pg_fetch_array(resource result [,int row] [,int result_type]);</insert>
<dialog title="Insert pg_fetch_array">pg_fetch_array(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_fetch_assoc">
<description>Fetch a row as an array</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="row" required="0" vallist="0" default="" type="int">row</param>
<return type="array">array</return>
<insert>pg_fetch_assoc(resource result [,int row]);</insert>
<dialog title="Insert pg_fetch_assoc">pg_fetch_assoc(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_fetch_object">
<description>Fetch a row as an object</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="row" required="0" vallist="0" default="" type="int">row</param>
<param name="result_type" required="0" vallist="0" default="" type="int">result_type</param>
<return type="object">object</return>
<insert>pg_fetch_object(resource result [,int row] [,int result_type]);</insert>
<dialog title="Insert pg_fetch_object">pg_fetch_object(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_fetch_result">
<description>Returns values from a result resource</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="row" required="1" vallist="0" default="" type="int">row</param>
<param name="field" required="1" vallist="0" default="" type="mixed">field</param>
<return type="mixed">mixed</return>
<insert>pg_fetch_result(resource result, int row, mixed field);</insert>
<dialog title="Insert pg_fetch_result">pg_fetch_result(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_fetch_row">
<description>Get a row as an enumerated array</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="row" required="1" vallist="0" default="" type="int">row</param>
<return type="array">array</return>
<insert>pg_fetch_row(resource result, int row);</insert>
<dialog title="Insert pg_fetch_row">pg_fetch_row(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_field_is_null">
<description>Test if a field is </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="row" required="1" vallist="0" default="" type="int">row</param>
<param name="field" required="1" vallist="0" default="" type="mixed">field</param>
<return type="int">int</return>
<insert>pg_field_is_null(resource result, int row, mixed field);</insert>
<dialog title="Insert pg_field_is_null">pg_field_is_null(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_field_name">
<description>Returns the name of a field</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="field_number" required="1" vallist="0" default="" type="int">field_number</param>
<return type="string">string</return>
<insert>pg_field_name(resource result, int field_number);</insert>
<dialog title="Insert pg_field_name">pg_field_name(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_field_num">
<description>Returns the field number of the named field</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="field_name" required="1" vallist="0" default="" type="string">field_name</param>
<return type="int">int</return>
<insert>pg_field_num(resource result, string field_name);</insert>
<dialog title="Insert pg_field_num">pg_field_num(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_field_prtlen">
<description>Returns the printed length</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="row_number" required="1" vallist="0" default="" type="int">row_number</param>
<param name="field_name" required="1" vallist="0" default="" type="string">field_name</param>
<return type="int">int</return>
<insert>pg_field_prtlen(resource result, int row_number, string field_name);</insert>
<dialog title="Insert pg_field_prtlen">pg_field_prtlen(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_field_size">
<description>
     Returns the internal storage size of the named field
    </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="field_number" required="1" vallist="0" default="" type="int">field_number</param>
<return type="int">int</return>
<insert>pg_field_size(resource result, int field_number);</insert>
<dialog title="Insert pg_field_size">pg_field_size(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_field_type">
<description>
     Returns the type name for the corresponding field number
    </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="field_number" required="1" vallist="0" default="" type="int">field_number</param>
<return type="string">string</return>
<insert>pg_field_type(resource result, int field_number);</insert>
<dialog title="Insert pg_field_type">pg_field_type(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_free_result">
<description>Free result memory</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<return type="bool">bool</return>
<insert>pg_free_result(resource result);</insert>
<dialog title="Insert pg_free_result">pg_free_result(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_get_notify">
<description>Ping database connection</description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="result_type" required="0" vallist="0" default="" type="int">result_type</param>
<return type="array">array</return>
<insert>pg_get_notify(resource connection [,int result_type]);</insert>
<dialog title="Insert pg_get_notify">pg_get_notify(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_get_pid">
<description>Ping database connection</description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<return type="int">int</return>
<insert>pg_get_pid(resource connection);</insert>
<dialog title="Insert pg_get_pid">pg_get_pid(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_get_result">
<description>
     Get asynchronous query result
    </description>
<param name="connection" required="0" vallist="0" default="" type="resource">connection</param>
<return type="resource">resource</return>
<insert>pg_get_result([resource connection]);</insert>
<dialog title="Insert pg_get_result">pg_get_result(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_host">
<description>
     Returns the host name associated with the connection
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<return type="string">string</return>
<insert>pg_host(resource connection);</insert>
<dialog title="Insert pg_host">pg_host(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_insert">
<description>
     Insert array into table.
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="table_name" required="1" vallist="0" default="" type="string">table_name</param>
<param name="assoc_array" required="1" vallist="0" default="" type="array">assoc_array</param>
<param name="options" required="0" vallist="0" default="" type="int">options</param>
<return type="bool">bool</return>
<insert>pg_insert(resource connection, string table_name, array assoc_array [,int options]);</insert>
<dialog title="Insert pg_insert">pg_insert(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_last_error">
<description>Get the last error message string of a connection</description>
<param name="connection" required="0" vallist="0" default="" type="resource">connection</param>
<return type="string">string</return>
<insert>pg_last_error([resource connection]);</insert>
<dialog title="Insert pg_last_error">pg_last_error(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_last_notice">
<description>
     Returns the last notice message from PostgreSQL server
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<return type="string">string</return>
<insert>pg_last_notice(resource connection);</insert>
<dialog title="Insert pg_last_notice">pg_last_notice(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_last_oid">
<description>Returns the last object's oid</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<return type="int">int</return>
<insert>pg_last_oid(resource result);</insert>
<dialog title="Insert pg_last_oid">pg_last_oid(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_lo_close">
<description>Close a large object</description>
<param name="large_object" required="1" vallist="0" default="" type="resource">large_object</param>
<return type="bool">bool</return>
<insert>pg_lo_close(resource large_object);</insert>
<dialog title="Insert pg_lo_close">pg_lo_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_lo_create">
<description>Create a large object</description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<return type="int">int</return>
<insert>pg_lo_create(resource connection);</insert>
<dialog title="Insert pg_lo_create">pg_lo_create(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_lo_export">
<description>Export a large object to file</description>
<param name="oid" required="1" vallist="0" default="" type="int">oid</param>
<param name="pathname" required="1" vallist="0" default="" type="string">pathname</param>
<param name="connection" required="0" vallist="0" default="" type="resource">connection</param>
<return type="bool">bool</return>
<insert>pg_lo_export(int oid, string pathname [,resource connection]);</insert>
<dialog title="Insert pg_lo_export">pg_lo_export(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_lo_import">
<description>Import a large object from file</description>
<param name="connection" required="0" vallist="0" default="" type="resource">connection</param>
<param name="pathname" required="1" vallist="0" default="" type="string">pathname</param>
<return type="int">int</return>
<insert>pg_lo_import([resource connection], string pathname);</insert>
<dialog title="Insert pg_lo_import">pg_lo_import(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_lo_open">
<description>Open a large object</description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="oid" required="1" vallist="0" default="" type="int">oid</param>
<param name="mode" required="1" vallist="0" default="" type="string">mode</param>
<return type="resource">resource</return>
<insert>pg_lo_open(resource connection, int oid, string mode);</insert>
<dialog title="Insert pg_lo_open">pg_lo_open(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_lo_read_all">
<description>
     Read a entire large object and send straight to browser
    </description>
<param name="large_object" required="1" vallist="0" default="" type="resource">large_object</param>
<return type="int">int</return>
<insert>pg_lo_read_all(resource large_object);</insert>
<dialog title="Insert pg_lo_read_all">pg_lo_read_all(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_lo_read">
<description>Read a large object</description>
<param name="large_object" required="1" vallist="0" default="" type="resource">large_object</param>
<param name="len" required="1" vallist="0" default="" type="int">len</param>
<return type="string">string</return>
<insert>pg_lo_read(resource large_object, int len);</insert>
<dialog title="Insert pg_lo_read">pg_lo_read(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_lo_seek">
<description>
     Seeks position of large object
    </description>
<param name="large_object" required="1" vallist="0" default="" type="resource">large_object</param>
<param name="offset" required="1" vallist="0" default="" type="int">offset</param>
<param name="whence" required="0" vallist="0" default="" type="int">whence</param>
<return type="bool">bool</return>
<insert>pg_lo_seek(resource large_object, int offset [,int whence]);</insert>
<dialog title="Insert pg_lo_seek">pg_lo_seek(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_lo_tell">
<description>
     Returns current position of large object
    </description>
<param name="large_object" required="1" vallist="0" default="" type="resource">large_object</param>
<return type="int">int</return>
<insert>pg_lo_tell(resource large_object);</insert>
<dialog title="Insert pg_lo_tell">pg_lo_tell(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_lo_unlink">
<description>Delete a large object</description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="oid" required="1" vallist="0" default="" type="int">oid</param>
<return type="bool">bool</return>
<insert>pg_lo_unlink(resource connection, int oid);</insert>
<dialog title="Insert pg_lo_unlink">pg_lo_unlink(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_lo_write">
<description>Write a large object</description>
<param name="large_object" required="1" vallist="0" default="" type="resource">large_object</param>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<return type="int">int</return>
<insert>pg_lo_write(resource large_object, string data);</insert>
<dialog title="Insert pg_lo_write">pg_lo_write(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_meta_data">
<description>
     Get meta data for table.
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="table_name" required="1" vallist="0" default="" type="string">table_name</param>
<return type="array">array</return>
<insert>pg_meta_data(resource connection, string table_name);</insert>
<dialog title="Insert pg_meta_data">pg_meta_data(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_num_fields">
<description>Returns the number of fields</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<return type="int">int</return>
<insert>pg_num_fields(resource result);</insert>
<dialog title="Insert pg_num_fields">pg_num_fields(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_num_rows">
<description>Returns the number of rows</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<return type="int">int</return>
<insert>pg_num_rows(resource result);</insert>
<dialog title="Insert pg_num_rows">pg_num_rows(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_options">
<description>Get the options associated with the connection</description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<return type="string">string</return>
<insert>pg_options(resource connection);</insert>
<dialog title="Insert pg_options">pg_options(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_pconnect">
<description>Open a persistent PostgreSQL connection</description>
<param name="connection_string" required="1" vallist="0" default="" type="string">connection_string</param>
<return type="resource">resource</return>
<insert>pg_pconnect(string connection_string);</insert>
<dialog title="Insert pg_pconnect">pg_pconnect(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_ping">
<description>Ping database connection</description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<return type="bool">bool</return>
<insert>pg_ping(resource connection);</insert>
<dialog title="Insert pg_ping">pg_ping(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_port">
<description>
     Return the port number associated with the connection
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<return type="int">int</return>
<insert>pg_port(resource connection);</insert>
<dialog title="Insert pg_port">pg_port(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_put_line">
<description>Send a NULL-terminated string to PostgreSQL backend</description>
<param name="connection" required="0" vallist="0" default="" type="resource">connection</param>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<return type="bool">bool</return>
<insert>pg_put_line([resource connection], string data);</insert>
<dialog title="Insert pg_put_line">pg_put_line(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_query">
<description>Execute a query</description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<return type="resource">resource</return>
<insert>pg_query(resource connection, string query);</insert>
<dialog title="Insert pg_query">pg_query(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_result_error">
<description>
     Get error message associated with result
    </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<return type="string">string</return>
<insert>pg_result_error(resource result);</insert>
<dialog title="Insert pg_result_error">pg_result_error(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_result_seek">
<description>Set internal row offset in result resource</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="offset" required="1" vallist="0" default="" type="int">offset</param>
<return type="array">array</return>
<insert>pg_result_seek(resource result, int offset);</insert>
<dialog title="Insert pg_result_seek">pg_result_seek(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_result_status">
<description>
     Get status of query result
    </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<return type="int">int</return>
<insert>pg_result_status(resource result);</insert>
<dialog title="Insert pg_result_status">pg_result_status(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_select">
<description>
     Select records.
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="table_name" required="1" vallist="0" default="" type="string">table_name</param>
<param name="assoc_array" required="1" vallist="0" default="" type="array">assoc_array</param>
<param name="options" required="0" vallist="0" default="" type="int">options</param>
<return type="array">array</return>
<insert>pg_select(resource connection, string table_name, array assoc_array [,int options]);</insert>
<dialog title="Insert pg_select">pg_select(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_send_query">
<description>
     Send asynchronous query
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<return type="bool">bool</return>
<insert>pg_send_query(resource connection, string query);</insert>
<dialog title="Insert pg_send_query">pg_send_query(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_set_client_encoding">
<description>
     Set the client encoding
    </description>
<param name="connection" required="0" vallist="0" default="" type="resource">connection</param>
<param name="encoding" required="1" vallist="0" default="" type="string">encoding</param>
<return type="int">int</return>
<insert>pg_set_client_encoding([resource connection], string encoding);</insert>
<dialog title="Insert pg_set_client_encoding">pg_set_client_encoding(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_trace">
<description>Enable tracing a PostgreSQL connection</description>
<param name="pathname" required="1" vallist="0" default="" type="string">pathname</param>
<param name="mode" required="0" vallist="0" default="" type="string">mode</param>
<param name="connection" required="0" vallist="0" default="" type="resource">connection</param>
<return type="bool">bool</return>
<insert>pg_trace(string pathname [,string mode] [,resource connection]);</insert>
<dialog title="Insert pg_trace">pg_trace(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_tty">
<description>
     Return the tty name associated with the connection
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<return type="string">string</return>
<insert>pg_tty(resource connection);</insert>
<dialog title="Insert pg_tty">pg_tty(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_unescape_bytea">
<description>
     Escape binary for bytea type
    </description>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<return type="string">string</return>
<insert>pg_unescape_bytea(string data);</insert>
<dialog title="Insert pg_unescape_bytea">pg_unescape_bytea(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_untrace">
<description>Disable tracing of a PostgreSQL connection</description>
<param name="connection" required="0" vallist="0" default="" type="resource">connection</param>
<return type="bool">bool</return>
<insert>pg_untrace([resource connection]);</insert>
<dialog title="Insert pg_untrace">pg_untrace(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pg_update">
<description>
     Update table.
    </description>
<param name="connection" required="1" vallist="0" default="" type="resource">connection</param>
<param name="table_name" required="1" vallist="0" default="" type="string">table_name</param>
<param name="condition" required="1" vallist="0" default="" type="array">condition</param>
<param name="data" required="1" vallist="0" default="" type="array">data</param>
<param name="options" required="0" vallist="0" default="" type="int">options</param>
<return type="mixed">mixed</return>
<insert>pg_update(resource connection, string table_name, array condition, array data [,int options]);</insert>
<dialog title="Insert pg_update">pg_update(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="posix">
<function name="posix_ctermid">
<description>Get path name of controlling terminal</description>
<return type="string">string</return>
<insert>posix_ctermid();</insert>
<dialog title="Insert posix_ctermid">posix_ctermid();</dialog>
<info title="Info window"></info>
</function>
<function name="posix_getcwd">
<description>Pathname of current directory</description>
<return type="string">string</return>
<insert>posix_getcwd();</insert>
<dialog title="Insert posix_getcwd">posix_getcwd();</dialog>
<info title="Info window"></info>
</function>
<function name="posix_getegid">
<description>
     Return the effective group ID of the current process
    </description>
<return type="int">int</return>
<insert>posix_getegid();</insert>
<dialog title="Insert posix_getegid">posix_getegid();</dialog>
<info title="Info window"></info>
</function>
<function name="posix_geteuid">
<description>
     Return the effective user ID of the current process
    </description>
<return type="int">int</return>
<insert>posix_geteuid();</insert>
<dialog title="Insert posix_geteuid">posix_geteuid();</dialog>
<info title="Info window"></info>
</function>
<function name="posix_getgid">
<description>
     Return the real group ID of the current process
    </description>
<return type="int">int</return>
<insert>posix_getgid();</insert>
<dialog title="Insert posix_getgid">posix_getgid();</dialog>
<info title="Info window"></info>
</function>
<function name="posix_getgrgid">
<description>Return info about a group by group id</description>
<param name="gid" required="1" vallist="0" default="" type="int">gid</param>
<return type="array">array</return>
<insert>posix_getgrgid(int gid);</insert>
<dialog title="Insert posix_getgrgid">posix_getgrgid(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="posix_getgrnam">
<description>Return info about a group by name</description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="array">array</return>
<insert>posix_getgrnam(string name);</insert>
<dialog title="Insert posix_getgrnam">posix_getgrnam(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="posix_getgroups">
<description>
     Return the group set of the current process
    </description>
<return type="array">array</return>
<insert>posix_getgroups();</insert>
<dialog title="Insert posix_getgroups">posix_getgroups();</dialog>
<info title="Info window"></info>
</function>
<function name="posix_getlogin">
<description>Return login name</description>
<return type="string">string</return>
<insert>posix_getlogin();</insert>
<dialog title="Insert posix_getlogin">posix_getlogin();</dialog>
<info title="Info window"></info>
</function>
<function name="posix_getpgid">
<description>Get process group id for job control</description>
<param name="pid" required="1" vallist="0" default="" type="int">pid</param>
<return type="int">int</return>
<insert>posix_getpgid(int pid);</insert>
<dialog title="Insert posix_getpgid">posix_getpgid(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="posix_getpgrp">
<description>
     Return the current process group identifier
    </description>
<return type="int">int</return>
<insert>posix_getpgrp();</insert>
<dialog title="Insert posix_getpgrp">posix_getpgrp();</dialog>
<info title="Info window"></info>
</function>
<function name="posix_getpid">
<description>Return the current process identifier</description>
<return type="int">int</return>
<insert>posix_getpid();</insert>
<dialog title="Insert posix_getpid">posix_getpid();</dialog>
<info title="Info window"></info>
</function>
<function name="posix_getppid">
<description>Return the parent process identifier</description>
<return type="int">int</return>
<insert>posix_getppid();</insert>
<dialog title="Insert posix_getppid">posix_getppid();</dialog>
<info title="Info window"></info>
</function>
<function name="posix_getpwnam">
<description>Return info about a user by username</description>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<return type="array">array</return>
<insert>posix_getpwnam(string username);</insert>
<dialog title="Insert posix_getpwnam">posix_getpwnam(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="posix_getpwuid">
<description>Return info about a user by user id</description>
<param name="uid" required="1" vallist="0" default="" type="int">uid</param>
<return type="array">array</return>
<insert>posix_getpwuid(int uid);</insert>
<dialog title="Insert posix_getpwuid">posix_getpwuid(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="posix_getrlimit">
<description>Return info about system ressource limits</description>
<return type="array">array</return>
<insert>posix_getrlimit();</insert>
<dialog title="Insert posix_getrlimit">posix_getrlimit();</dialog>
<info title="Info window"></info>
</function>
<function name="posix_getsid">
<description>Get the current sid of the process</description>
<param name="pid" required="1" vallist="0" default="" type="int">pid</param>
<return type="int">int</return>
<insert>posix_getsid(int pid);</insert>
<dialog title="Insert posix_getsid">posix_getsid(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="posix_getuid">
<description>
     Return the real user ID of the current process
    </description>
<return type="int">int</return>
<insert>posix_getuid();</insert>
<dialog title="Insert posix_getuid">posix_getuid();</dialog>
<info title="Info window"></info>
</function>
<function name="posix_isatty">
<description>
     Determine if a file descriptor is an interactive terminal
    </description>
<param name="fd" required="1" vallist="0" default="" type="int">fd</param>
<return type="bool">bool</return>
<insert>posix_isatty(int fd);</insert>
<dialog title="Insert posix_isatty">posix_isatty(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="posix_kill">
<description>Send a signal to a process</description>
<param name="pid" required="1" vallist="0" default="" type="int">pid</param>
<param name="sig" required="1" vallist="0" default="" type="int">sig</param>
<return type="bool">bool</return>
<insert>posix_kill(int pid, int sig);</insert>
<dialog title="Insert posix_kill">posix_kill(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="posix_mkfifo">
<description>
     Create a fifo special file (a named pipe)
    </description>
<param name="pathname" required="1" vallist="0" default="" type="string">pathname</param>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<return type="bool">bool</return>
<insert>posix_mkfifo(string pathname, int mode);</insert>
<dialog title="Insert posix_mkfifo">posix_mkfifo(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="posix_setegid">
<description>
     Set the effective GID of the current process
    </description>
<param name="gid" required="1" vallist="0" default="" type="int">gid</param>
<return type="bool">bool</return>
<insert>posix_setegid(int gid);</insert>
<dialog title="Insert posix_setegid">posix_setegid(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="posix_seteuid">
<description>
     Set the effective UID of the current process
    </description>
<param name="uid" required="1" vallist="0" default="" type="int">uid</param>
<return type="bool">bool</return>
<insert>posix_seteuid(int uid);</insert>
<dialog title="Insert posix_seteuid">posix_seteuid(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="posix_setgid">
<description>
     Set the GID of the current process
    </description>
<param name="gid" required="1" vallist="0" default="" type="int">gid</param>
<return type="bool">bool</return>
<insert>posix_setgid(int gid);</insert>
<dialog title="Insert posix_setgid">posix_setgid(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="posix_setpgid">
<description>set process group id for job control</description>
<param name="pid" required="1" vallist="0" default="" type="int">pid</param>
<param name="pgid" required="1" vallist="0" default="" type="int">pgid</param>
<return type="int">int</return>
<insert>posix_setpgid(int pid, int pgid);</insert>
<dialog title="Insert posix_setpgid">posix_setpgid(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="posix_setsid">
<description>Make the current process a session leader</description>
<return type="int">int</return>
<insert>posix_setsid();</insert>
<dialog title="Insert posix_setsid">posix_setsid();</dialog>
<info title="Info window"></info>
</function>
<function name="posix_setuid">
<description>
     Set the UID of the current process
    </description>
<param name="uid" required="1" vallist="0" default="" type="int">uid</param>
<return type="bool">bool</return>
<insert>posix_setuid(int uid);</insert>
<dialog title="Insert posix_setuid">posix_setuid(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="posix_times">
<description>Get process times</description>
<return type="array">array</return>
<insert>posix_times();</insert>
<dialog title="Insert posix_times">posix_times();</dialog>
<info title="Info window"></info>
</function>
<function name="posix_ttyname">
<description>Determine terminal device name</description>
<param name="fd" required="1" vallist="0" default="" type="int">fd</param>
<return type="string">string</return>
<insert>posix_ttyname(int fd);</insert>
<dialog title="Insert posix_ttyname">posix_ttyname(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="posix_uname">
<description>Get system name</description>
<return type="array">array</return>
<insert>posix_uname();</insert>
<dialog title="Insert posix_uname">posix_uname();</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="printer">
<function name="printer_abort">
<description>Deletes the printer's spool file</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="void">void</return>
<insert>printer_abort(resource handle);</insert>
<dialog title="Insert printer_abort">printer_abort(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_close">
<description>Close an open printer connection</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="void">void</return>
<insert>printer_close(resource handle);</insert>
<dialog title="Insert printer_close">printer_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_create_brush">
<description>Create a new brush</description>
<param name="style" required="1" vallist="0" default="" type="int">style</param>
<param name="color" required="1" vallist="0" default="" type="string">color</param>
<return type="mixed">mixed</return>
<insert>printer_create_brush(int style, string color);</insert>
<dialog title="Insert printer_create_brush">printer_create_brush(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_create_dc">
<description>Create a new device context</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="void">void</return>
<insert>printer_create_dc(resource handle);</insert>
<dialog title="Insert printer_create_dc">printer_create_dc(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_create_font">
<description>Create a new font</description>
<param name="face" required="1" vallist="0" default="" type="string">face</param>
<param name="height" required="1" vallist="0" default="" type="int">height</param>
<param name="width" required="1" vallist="0" default="" type="int">width</param>
<param name="font_weight" required="1" vallist="0" default="" type="int">font_weight</param>
<param name="italic" required="1" vallist="0" default="" type="bool">italic</param>
<param name="underline" required="1" vallist="0" default="" type="bool">underline</param>
<param name="strikeout" required="1" vallist="0" default="" type="bool">strikeout</param>
<param name="orientaton" required="1" vallist="0" default="" type="int">orientaton</param>
<return type="mixed">mixed</return>
<insert>printer_create_font(string face, int height, int width, int font_weight, bool italic, bool underline, bool strikeout, int orientaton);</insert>
<dialog title="Insert printer_create_font">printer_create_font(%0, %1, %2, %3, %4, %5, %6, %7);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_create_pen">
<description>Create a new pen</description>
<param name="style" required="1" vallist="0" default="" type="int">style</param>
<param name="width" required="1" vallist="0" default="" type="int">width</param>
<param name="color" required="1" vallist="0" default="" type="string">color</param>
<return type="mixed">mixed</return>
<insert>printer_create_pen(int style, int width, string color);</insert>
<dialog title="Insert printer_create_pen">printer_create_pen(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_delete_brush">
<description>Delete a brush</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="bool">bool</return>
<insert>printer_delete_brush(resource handle);</insert>
<dialog title="Insert printer_delete_brush">printer_delete_brush(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_delete_dc">
<description>Delete a device context</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="bool">bool</return>
<insert>printer_delete_dc(resource handle);</insert>
<dialog title="Insert printer_delete_dc">printer_delete_dc(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_delete_font">
<description>Delete a font</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="bool">bool</return>
<insert>printer_delete_font(resource handle);</insert>
<dialog title="Insert printer_delete_font">printer_delete_font(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_delete_pen">
<description>Delete a pen</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="bool">bool</return>
<insert>printer_delete_pen(resource handle);</insert>
<dialog title="Insert printer_delete_pen">printer_delete_pen(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_draw_bmp">
<description>Draw a bmp</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<return type="void">void</return>
<insert>printer_draw_bmp(resource handle, string filename, int x, int y);</insert>
<dialog title="Insert printer_draw_bmp">printer_draw_bmp(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_draw_chord">
<description>Draw a chord</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<param name="rec_x" required="1" vallist="0" default="" type="int">rec_x</param>
<param name="rec_y" required="1" vallist="0" default="" type="int">rec_y</param>
<param name="rec_x1" required="1" vallist="0" default="" type="int">rec_x1</param>
<param name="rec_y1" required="1" vallist="0" default="" type="int">rec_y1</param>
<param name="rad_x" required="1" vallist="0" default="" type="int">rad_x</param>
<param name="rad_y" required="1" vallist="0" default="" type="int">rad_y</param>
<param name="rad_x1" required="1" vallist="0" default="" type="int">rad_x1</param>
<param name="rad_y1" required="1" vallist="0" default="" type="int">rad_y1</param>
<return type="void">void</return>
<insert>printer_draw_chord(resource handle, int rec_x, int rec_y, int rec_x1, int rec_y1, int rad_x, int rad_y, int rad_x1, int rad_y1);</insert>
<dialog title="Insert printer_draw_chord">printer_draw_chord(%0, %1, %2, %3, %4, %5, %6, %7, %8);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_draw_elipse">
<description>Draw an ellipse</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<param name="ul_x" required="1" vallist="0" default="" type="int">ul_x</param>
<param name="ul_y" required="1" vallist="0" default="" type="int">ul_y</param>
<param name="lr_x" required="1" vallist="0" default="" type="int">lr_x</param>
<param name="lr_y" required="1" vallist="0" default="" type="int">lr_y</param>
<return type="void">void</return>
<insert>printer_draw_elipse(resource handle, int ul_x, int ul_y, int lr_x, int lr_y);</insert>
<dialog title="Insert printer_draw_elipse">printer_draw_elipse(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_draw_line">
<description>Draw a line</description>
<param name="printer_handle" required="1" vallist="0" default="" type="resource">printer_handle</param>
<param name="from_x" required="1" vallist="0" default="" type="int">from_x</param>
<param name="from_y" required="1" vallist="0" default="" type="int">from_y</param>
<param name="to_x" required="1" vallist="0" default="" type="int">to_x</param>
<param name="to_y" required="1" vallist="0" default="" type="int">to_y</param>
<return type="void">void</return>
<insert>printer_draw_line(resource printer_handle, int from_x, int from_y, int to_x, int to_y);</insert>
<dialog title="Insert printer_draw_line">printer_draw_line(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_draw_pie">
<description>Draw a pie</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<param name="rec_x" required="1" vallist="0" default="" type="int">rec_x</param>
<param name="rec_y" required="1" vallist="0" default="" type="int">rec_y</param>
<param name="rec_x1" required="1" vallist="0" default="" type="int">rec_x1</param>
<param name="rec_y1" required="1" vallist="0" default="" type="int">rec_y1</param>
<param name="rad1_x" required="1" vallist="0" default="" type="int">rad1_x</param>
<param name="rad1_y" required="1" vallist="0" default="" type="int">rad1_y</param>
<param name="rad2_x" required="1" vallist="0" default="" type="int">rad2_x</param>
<param name="rad2_y" required="1" vallist="0" default="" type="int">rad2_y</param>
<return type="void">void</return>
<insert>printer_draw_pie(resource handle, int rec_x, int rec_y, int rec_x1, int rec_y1, int rad1_x, int rad1_y, int rad2_x, int rad2_y);</insert>
<dialog title="Insert printer_draw_pie">printer_draw_pie(%0, %1, %2, %3, %4, %5, %6, %7, %8);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_draw_rectangle">
<description>Draw a rectangle</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<param name="ul_x" required="1" vallist="0" default="" type="int">ul_x</param>
<param name="ul_y" required="1" vallist="0" default="" type="int">ul_y</param>
<param name="lr_x" required="1" vallist="0" default="" type="int">lr_x</param>
<param name="lr_y" required="1" vallist="0" default="" type="int">lr_y</param>
<return type="void">void</return>
<insert>printer_draw_rectangle(resource handle, int ul_x, int ul_y, int lr_x, int lr_y);</insert>
<dialog title="Insert printer_draw_rectangle">printer_draw_rectangle(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_draw_roundrect">
<description>Draw a rectangle with rounded corners</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<param name="ul_x" required="1" vallist="0" default="" type="int">ul_x</param>
<param name="ul_y" required="1" vallist="0" default="" type="int">ul_y</param>
<param name="lr_x" required="1" vallist="0" default="" type="int">lr_x</param>
<param name="lr_y" required="1" vallist="0" default="" type="int">lr_y</param>
<param name="width" required="1" vallist="0" default="" type="int">width</param>
<param name="height" required="1" vallist="0" default="" type="int">height</param>
<return type="void">void</return>
<insert>printer_draw_roundrect(resource handle, int ul_x, int ul_y, int lr_x, int lr_y, int width, int height);</insert>
<dialog title="Insert printer_draw_roundrect">printer_draw_roundrect(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_draw_text">
<description>Draw text</description>
<param name="printer_handle" required="1" vallist="0" default="" type="resource">printer_handle</param>
<param name="text" required="1" vallist="0" default="" type="string">text</param>
<param name="x" required="1" vallist="0" default="" type="int">x</param>
<param name="y" required="1" vallist="0" default="" type="int">y</param>
<return type="void">void</return>
<insert>printer_draw_text(resource printer_handle, string text, int x, int y);</insert>
<dialog title="Insert printer_draw_text">printer_draw_text(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_end_doc">
<description>Close document</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="bool">bool</return>
<insert>printer_end_doc(resource handle);</insert>
<dialog title="Insert printer_end_doc">printer_end_doc(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_end_page">
<description>Close active page</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="bool">bool</return>
<insert>printer_end_page(resource handle);</insert>
<dialog title="Insert printer_end_page">printer_end_page(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_get_option">
<description>Retrieve printer configuration data</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<param name="option" required="1" vallist="0" default="" type="string">option</param>
<return type="mixed">mixed</return>
<insert>printer_get_option(resource handle, string option);</insert>
<dialog title="Insert printer_get_option">printer_get_option(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_list">
<description>Return an array of printers attached to the server
    </description>
<param name="enumtype" required="1" vallist="0" default="" type="int">enumtype</param>
<param name="name" required="0" vallist="0" default="" type="string">name</param>
<param name="level" required="0" vallist="0" default="" type="int">level</param>
<return type="array">array</return>
<insert>printer_list(int enumtype [,string name] [,int level]);</insert>
<dialog title="Insert printer_list">printer_list(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_logical_fontheight">
<description>Get logical font height</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<param name="height" required="1" vallist="0" default="" type="int">height</param>
<return type="int">int</return>
<insert>printer_logical_fontheight(resource handle, int height);</insert>
<dialog title="Insert printer_logical_fontheight">printer_logical_fontheight(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_open">
<description>Open connection to a printer</description>
<param name="devicename" required="0" vallist="0" default="" type="string">devicename</param>
<return type="mixed">mixed</return>
<insert>printer_open([string devicename]);</insert>
<dialog title="Insert printer_open">printer_open(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_select_brush">
<description>Select a brush</description>
<param name="printer_handle" required="1" vallist="0" default="" type="resource">printer_handle</param>
<param name="brush_handle" required="1" vallist="0" default="" type="resource">brush_handle</param>
<return type="void">void</return>
<insert>printer_select_brush(resource printer_handle, resource brush_handle);</insert>
<dialog title="Insert printer_select_brush">printer_select_brush(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_select_font">
<description>Select a font</description>
<param name="printer_handle" required="1" vallist="0" default="" type="resource">printer_handle</param>
<param name="font_handle" required="1" vallist="0" default="" type="resource">font_handle</param>
<return type="void">void</return>
<insert>printer_select_font(resource printer_handle, resource font_handle);</insert>
<dialog title="Insert printer_select_font">printer_select_font(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_select_pen">
<description>Select a pen</description>
<param name="printer_handle" required="1" vallist="0" default="" type="resource">printer_handle</param>
<param name="pen_handle" required="1" vallist="0" default="" type="resource">pen_handle</param>
<return type="void">void</return>
<insert>printer_select_pen(resource printer_handle, resource pen_handle);</insert>
<dialog title="Insert printer_select_pen">printer_select_pen(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_set_option">
<description>Configure the printer connection</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<param name="option" required="1" vallist="0" default="" type="int">option</param>
<param name="value" required="1" vallist="0" default="" type="mixed">value</param>
<return type="bool">bool</return>
<insert>printer_set_option(resource handle, int option, mixed value);</insert>
<dialog title="Insert printer_set_option">printer_set_option(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_start_doc">
<description>Start a new document</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<param name="document" required="0" vallist="0" default="" type="string">document</param>
<return type="bool">bool</return>
<insert>printer_start_doc(resource handle [,string document]);</insert>
<dialog title="Insert printer_start_doc">printer_start_doc(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_start_page">
<description>Start a new page</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="bool">bool</return>
<insert>printer_start_page(resource handle);</insert>
<dialog title="Insert printer_start_page">printer_start_page(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="printer_write">
<description>Write data to the printer</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<param name="content" required="1" vallist="0" default="" type="string">content</param>
<return type="bool">bool</return>
<insert>printer_write(resource handle, string content);</insert>
<dialog title="Insert printer_write">printer_write(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="pspell">
<function name="pspell_add_to_personal">
<description>Add the word to a personal wordlist</description>
<param name="dictionary_link" required="1" vallist="0" default="" type="int">dictionary_link</param>
<param name="word" required="1" vallist="0" default="" type="string">word</param>
<return type="int">int</return>
<insert>pspell_add_to_personal(int dictionary_link, string word);</insert>
<dialog title="Insert pspell_add_to_personal">pspell_add_to_personal(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pspell_add_to_session">
<description>Add the word to the wordlist in the current session
    </description>
<param name="dictionary_link" required="1" vallist="0" default="" type="int">dictionary_link</param>
<param name="word" required="1" vallist="0" default="" type="string">word</param>
<return type="int">int</return>
<insert>pspell_add_to_session(int dictionary_link, string word);</insert>
<dialog title="Insert pspell_add_to_session">pspell_add_to_session(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pspell_check">
<description>Check a word</description>
<param name="dictionary_link" required="1" vallist="0" default="" type="int">dictionary_link</param>
<param name="word" required="1" vallist="0" default="" type="string">word</param>
<return type="bool">bool</return>
<insert>pspell_check(int dictionary_link, string word);</insert>
<dialog title="Insert pspell_check">pspell_check(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pspell_clear_session">
<description>Clear the current session</description>
<param name="dictionary_link" required="1" vallist="0" default="" type="int">dictionary_link</param>
<return type="int">int</return>
<insert>pspell_clear_session(int dictionary_link);</insert>
<dialog title="Insert pspell_clear_session">pspell_clear_session(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pspell_config_create">
<description>Create a config used to open a dictionary</description>
<param name="language" required="1" vallist="0" default="" type="string">language</param>
<param name="
        spelling
       " required="0" vallist="0" default="" type="string">
        spelling
       </param>
<param name="
        jargon
       " required="0" vallist="0" default="" type="string">
        jargon
       </param>
<param name="
        encoding
       " required="0" vallist="0" default="" type="string">
        encoding
       </param>
<return type="int">int</return>
<insert>pspell_config_create(string language [,string 
        spelling
       ] [,string 
        jargon
       ] [,string 
        encoding
       ]);</insert>
<dialog title="Insert pspell_config_create">pspell_config_create(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="pspell_config_ignore">
<description>Ignore words less than N characters long</description>
<param name="dictionary_link" required="1" vallist="0" default="" type="int">dictionary_link</param>
<param name="n" required="1" vallist="0" default="" type="int">n</param>
<return type="int">int</return>
<insert>pspell_config_ignore(int dictionary_link, int n);</insert>
<dialog title="Insert pspell_config_ignore">pspell_config_ignore(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pspell_config_mode">
<description>Change the mode number of suggestions returned</description>
<param name="dictionary_link" required="1" vallist="0" default="" type="int">dictionary_link</param>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<return type="int">int</return>
<insert>pspell_config_mode(int dictionary_link, int mode);</insert>
<dialog title="Insert pspell_config_mode">pspell_config_mode(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pspell_config_personal">
<description>Set a file that contains personal wordlist</description>
<param name="dictionary_link" required="1" vallist="0" default="" type="int">dictionary_link</param>
<param name="file" required="1" vallist="0" default="" type="string">file</param>
<return type="int">int</return>
<insert>pspell_config_personal(int dictionary_link, string file);</insert>
<dialog title="Insert pspell_config_personal">pspell_config_personal(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pspell_config_repl">
<description>Set a file that contains replacement pairs</description>
<param name="dictionary_link" required="1" vallist="0" default="" type="int">dictionary_link</param>
<param name="file" required="1" vallist="0" default="" type="string">file</param>
<return type="int">int</return>
<insert>pspell_config_repl(int dictionary_link, string file);</insert>
<dialog title="Insert pspell_config_repl">pspell_config_repl(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pspell_config_runtogether">
<description>Consider run-together words as valid compounds</description>
<param name="dictionary_link" required="1" vallist="0" default="" type="int">dictionary_link</param>
<param name="flag" required="1" vallist="0" default="" type="bool">flag</param>
<return type="int">int</return>
<insert>pspell_config_runtogether(int dictionary_link, bool flag);</insert>
<dialog title="Insert pspell_config_runtogether">pspell_config_runtogether(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pspell_config_save_repl">
<description>Determine whether to save a replacement pairs list
    along with the wordlist</description>
<param name="dictionary_link" required="1" vallist="0" default="" type="int">dictionary_link</param>
<param name="flag" required="1" vallist="0" default="" type="bool">flag</param>
<return type="int">int</return>
<insert>pspell_config_save_repl(int dictionary_link, bool flag);</insert>
<dialog title="Insert pspell_config_save_repl">pspell_config_save_repl(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="pspell_new_config">
<description>Load a new dictionary with settings based on a given config
    </description>
<param name="config" required="1" vallist="0" default="" type="int">config</param>
<return type="int">int</return>
<insert>pspell_new_config(int config);</insert>
<dialog title="Insert pspell_new_config">pspell_new_config(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pspell_new_personal">
<description>Load a new dictionary with personal wordlist</description>
<param name="personal" required="1" vallist="0" default="" type="string">personal</param>
<param name="language" required="1" vallist="0" default="" type="string">language</param>
<param name="
        spelling
       " required="0" vallist="0" default="" type="string">
        spelling
       </param>
<param name="
        jargon
       " required="0" vallist="0" default="" type="string">
        jargon
       </param>
<param name="
        encoding
       " required="0" vallist="0" default="" type="string">
        encoding
       </param>
<param name="
        mode
       " required="0" vallist="0" default="" type="int">
        mode
       </param>
<return type="int">int</return>
<insert>pspell_new_personal(string personal, string language [,string 
        spelling
       ] [,string 
        jargon
       ] [,string 
        encoding
       ] [,int 
        mode
       ]);</insert>
<dialog title="Insert pspell_new_personal">pspell_new_personal(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="pspell_new">
<description>Load a new dictionary</description>
<param name="language" required="1" vallist="0" default="" type="string">language</param>
<param name="
        spelling
       " required="0" vallist="0" default="" type="string">
        spelling
       </param>
<param name="
        jargon
       " required="0" vallist="0" default="" type="string">
        jargon
       </param>
<param name="
        encoding
       " required="0" vallist="0" default="" type="string">
        encoding
       </param>
<param name="
        mode
       " required="0" vallist="0" default="" type="int">
        mode
       </param>
<return type="int">int</return>
<insert>pspell_new(string language [,string 
        spelling
       ] [,string 
        jargon
       ] [,string 
        encoding
       ] [,int 
        mode
       ]);</insert>
<dialog title="Insert pspell_new">pspell_new(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="pspell_save_wordlist">
<description>Save the personal wordlist to a file</description>
<param name="dictionary_link" required="1" vallist="0" default="" type="int">dictionary_link</param>
<return type="int">int</return>
<insert>pspell_save_wordlist(int dictionary_link);</insert>
<dialog title="Insert pspell_save_wordlist">pspell_save_wordlist(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="pspell_store_replacement">
<description>Store a replacement pair for a word</description>
<param name="dictionary_link" required="1" vallist="0" default="" type="int">dictionary_link</param>
<param name="misspelled" required="1" vallist="0" default="" type="string">misspelled</param>
<param name="correct" required="1" vallist="0" default="" type="string">correct</param>
<return type="int">int</return>
<insert>pspell_store_replacement(int dictionary_link, string misspelled, string correct);</insert>
<dialog title="Insert pspell_store_replacement">pspell_store_replacement(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="pspell_suggest">
<description>Suggest spellings of a word</description>
<param name="dictionary_link" required="1" vallist="0" default="" type="int">dictionary_link</param>
<param name="word" required="1" vallist="0" default="" type="string">word</param>
<return type="array">array</return>
<insert>pspell_suggest(int dictionary_link, string word);</insert>
<dialog title="Insert pspell_suggest">pspell_suggest(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="qtdom">
<function name="qdom_error">
<description>Returns the error string from the last QDOM operation or FALSE if no errors occured</description>
<return type="string">string</return>
<insert>qdom_error();</insert>
<dialog title="Insert qdom_error">qdom_error();</dialog>
<info title="Info window"></info>
</function>
<function name="qdom_tree">
<description>creates a tree of an xml string</description>
<return type="object">object</return>
<insert>qdom_tree();</insert>
<dialog title="Insert qdom_tree">qdom_tree();</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="readline">
<function name="readline_add_history">
<description>Adds a line to the history</description>
<param name="line" required="1" vallist="0" default="" type="string">line</param>
<return type="void">void</return>
<insert>readline_add_history(string line);</insert>
<dialog title="Insert readline_add_history">readline_add_history(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="readline_clear_history">
<description>Clears the history</description>
<return type="bool">bool</return>
<insert>readline_clear_history();</insert>
<dialog title="Insert readline_clear_history">readline_clear_history();</dialog>
<info title="Info window"></info>
</function>
<function name="readline_completion_function">
<description>Registers a completion function</description>
<param name="line" required="1" vallist="0" default="" type="string">line</param>
<return type="bool">bool</return>
<insert>readline_completion_function(string line);</insert>
<dialog title="Insert readline_completion_function">readline_completion_function(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="readline_info">
<description>Gets/sets various internal readline variables</description>
<param name="varname" required="0" vallist="0" default="" type="string">varname</param>
<param name="newvalue" required="0" vallist="0" default="" type="string">newvalue</param>
<return type="mixed">mixed</return>
<insert>readline_info([string varname] [,string newvalue]);</insert>
<dialog title="Insert readline_info">readline_info(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="readline_list_history">
<description>Lists the history</description>
<return type="array">array</return>
<insert>readline_list_history();</insert>
<dialog title="Insert readline_list_history">readline_list_history();</dialog>
<info title="Info window"></info>
</function>
<function name="readline_read_history">
<description>Reads the history</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="bool">bool</return>
<insert>readline_read_history(string filename);</insert>
<dialog title="Insert readline_read_history">readline_read_history(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="readline_write_history">
<description>Writes the history</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="bool">bool</return>
<insert>readline_write_history(string filename);</insert>
<dialog title="Insert readline_write_history">readline_write_history(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="readline">
<description>Reads a line</description>
<param name="prompt" required="0" vallist="0" default="" type="string">prompt</param>
<return type="string">string</return>
<insert>readline([string prompt]);</insert>
<dialog title="Insert readline">readline(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="recode">
<function name="recode_file">
<description>
     Recode from file to file according to recode request
    </description>
<param name="request" required="1" vallist="0" default="" type="string">request</param>
<param name="input" required="1" vallist="0" default="" type="resource">input</param>
<param name="output" required="1" vallist="0" default="" type="resource">output</param>
<return type="bool">bool</return>
<insert>recode_file(string request, resource input, resource output);</insert>
<dialog title="Insert recode_file">recode_file(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="recode_string">
<description>Recode a string according to a recode request</description>
<param name="request" required="1" vallist="0" default="" type="string">request</param>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<return type="string">string</return>
<insert>recode_string(string request, string string);</insert>
<dialog title="Insert recode_string">recode_string(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="regex">
<function name="ereg_replace">
<description>Replace regular expression</description>
<param name="pattern" required="1" vallist="0" default="" type="string">pattern</param>
<param name="replacement" required="1" vallist="0" default="" type="string">replacement</param>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<return type="string">string</return>
<insert>ereg_replace(string pattern, string replacement, string string);</insert>
<dialog title="Insert ereg_replace">ereg_replace(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="ereg">
<description>Regular expression match</description>
<param name="pattern" required="1" vallist="0" default="" type="string">pattern</param>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<param name="regs" required="0" vallist="0" default="" type="array">regs</param>
<return type="bool">bool</return>
<insert>ereg(string pattern, string string [,array regs]);</insert>
<dialog title="Insert ereg">ereg(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="eregi_replace">
<description>replace regular expression case insensitive</description>
<param name="pattern" required="1" vallist="0" default="" type="string">pattern</param>
<param name="replacement" required="1" vallist="0" default="" type="string">replacement</param>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<return type="string">string</return>
<insert>eregi_replace(string pattern, string replacement, string string);</insert>
<dialog title="Insert eregi_replace">eregi_replace(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="eregi">
<description>case insensitive regular expression match</description>
<param name="pattern" required="1" vallist="0" default="" type="string">pattern</param>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<param name="regs" required="0" vallist="0" default="" type="array">regs</param>
<return type="bool">bool</return>
<insert>eregi(string pattern, string string [,array regs]);</insert>
<dialog title="Insert eregi">eregi(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="split">
<description>split string into array by regular expression</description>
<param name="pattern" required="1" vallist="0" default="" type="string">pattern</param>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<param name="limit" required="0" vallist="0" default="" type="int">limit</param>
<return type="array">array</return>
<insert>split(string pattern, string string [,int limit]);</insert>
<dialog title="Insert split">split(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="spliti">
<description>
     Split string into array by regular expression case insensitive
    </description>
<param name="pattern" required="1" vallist="0" default="" type="string">pattern</param>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<param name="limit" required="0" vallist="0" default="" type="int">limit</param>
<return type="array">array</return>
<insert>spliti(string pattern, string string [,int limit]);</insert>
<dialog title="Insert spliti">spliti(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="sql_regcase">
<description>
     Make regular expression for case insensitive match
    </description>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<return type="string">string</return>
<insert>sql_regcase(string string);</insert>
<dialog title="Insert sql_regcase">sql_regcase(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="sem">
<function name="ftok">
<description>
     Convert a pathname and a project identifier to a System V IPC key
    </description>
<param name="pathname" required="1" vallist="0" default="" type="string">pathname</param>
<param name="proj" required="1" vallist="0" default="" type="string">proj</param>
<return type="int">int</return>
<insert>ftok(string pathname, string proj);</insert>
<dialog title="Insert ftok">ftok(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msg_get_queue">
<description>
     Create or attach to a message queue
    </description>
<param name="key" required="1" vallist="0" default="" type="int">key</param>
<param name="perms" required="0" vallist="0" default="" type="int">perms</param>
<return type="int">int</return>
<insert>msg_get_queue(int key [,int perms]);</insert>
<dialog title="Insert msg_get_queue">msg_get_queue(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msg_receive">
<description>
     Receive a message from a message queue
    </description>
<param name="queue" required="1" vallist="0" default="" type="int">queue</param>
<param name="desiredmsgtype" required="1" vallist="0" default="" type="int">desiredmsgtype</param>
<param name="msgtype" required="1" vallist="0" default="" type="int">msgtype</param>
<param name="maxsize" required="1" vallist="0" default="" type="int">maxsize</param>
<param name="message" required="1" vallist="0" default="" type="mixed">message</param>
<param name="unserialize" required="0" vallist="0" default="" type="bool">unserialize</param>
<param name="flags" required="0" vallist="0" default="" type="int">flags</param>
<param name="errorcode" required="0" vallist="0" default="" type="int">errorcode</param>
<return type="bool">bool</return>
<insert>msg_receive(int queue, int desiredmsgtype, int msgtype, int maxsize, mixed message [,bool unserialize] [,int flags] [,int errorcode]);</insert>
<dialog title="Insert msg_receive">msg_receive(%0, %1, %2, %3, %4, %5, %6, %7);</dialog>
<info title="Info window"></info>
</function>
<function name="msg_remove_queue">
<description>
     Destroy a message queue
    </description>
<param name="queue" required="1" vallist="0" default="" type="int">queue</param>
<return type="bool">bool</return>
<insert>msg_remove_queue(int queue);</insert>
<dialog title="Insert msg_remove_queue">msg_remove_queue(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="msg_send">
<description>
     Send a message to a message queue
    </description>
<param name="queue" required="1" vallist="0" default="" type="int">queue</param>
<param name="msgtype" required="1" vallist="0" default="" type="int">msgtype</param>
<param name="message" required="1" vallist="0" default="" type="mixed">message</param>
<param name="serialize" required="0" vallist="0" default="" type="bool">serialize</param>
<param name="blocking" required="0" vallist="0" default="" type="bool">blocking</param>
<param name="errorcode" required="0" vallist="0" default="" type="int">errorcode</param>
<return type="bool">bool</return>
<insert>msg_send(int queue, int msgtype, mixed message [,bool serialize] [,bool blocking] [,int errorcode]);</insert>
<dialog title="Insert msg_send">msg_send(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="msg_set_queue">
<description>
     Set information in the message queue data structure
    </description>
<param name="queue" required="1" vallist="0" default="" type="int">queue</param>
<param name="data" required="1" vallist="0" default="" type="array">data</param>
<return type="bool">bool</return>
<insert>msg_set_queue(int queue, array data);</insert>
<dialog title="Insert msg_set_queue">msg_set_queue(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="msg_stat_queue">
<description>
     Returns information from the message queue data structure
    </description>
<param name="queue" required="1" vallist="0" default="" type="int">queue</param>
<return type="array">array</return>
<insert>msg_stat_queue(int queue);</insert>
<dialog title="Insert msg_stat_queue">msg_stat_queue(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sem_acquire">
<description>Acquire a semaphore</description>
<param name="sem_identifier" required="1" vallist="0" default="" type="int">sem_identifier</param>
<return type="bool">bool</return>
<insert>sem_acquire(int sem_identifier);</insert>
<dialog title="Insert sem_acquire">sem_acquire(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sem_get">
<description>Get a semaphore id</description>
<param name="key" required="1" vallist="0" default="" type="int">key</param>
<param name="max_acquire" required="0" vallist="0" default="" type="int">max_acquire</param>
<param name="perm" required="0" vallist="0" default="" type="int">perm</param>
<return type="int">int</return>
<insert>sem_get(int key [,int max_acquire] [,int perm]);</insert>
<dialog title="Insert sem_get">sem_get(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="sem_release">
<description>Release a semaphore</description>
<param name="sem_identifier" required="1" vallist="0" default="" type="int">sem_identifier</param>
<return type="bool">bool</return>
<insert>sem_release(int sem_identifier);</insert>
<dialog title="Insert sem_release">sem_release(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sem_remove">
<description>Remove a semaphore</description>
<param name="sem_identifier" required="1" vallist="0" default="" type="int">sem_identifier</param>
<return type="bool">bool</return>
<insert>sem_remove(int sem_identifier);</insert>
<dialog title="Insert sem_remove">sem_remove(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="shm_attach">
<description>Creates or open a shared memory segment</description>
<param name="key" required="1" vallist="0" default="" type="int">key</param>
<param name="memsize" required="0" vallist="0" default="" type="int">memsize</param>
<param name="perm" required="0" vallist="0" default="" type="int">perm</param>
<return type="int">int</return>
<insert>shm_attach(int key [,int memsize] [,int perm]);</insert>
<dialog title="Insert shm_attach">shm_attach(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="shm_detach">
<description>Disconnects from shared memory segment</description>
<param name="shm_identifier" required="1" vallist="0" default="" type="int">shm_identifier</param>
<return type="bool">bool</return>
<insert>shm_detach(int shm_identifier);</insert>
<dialog title="Insert shm_detach">shm_detach(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="shm_get_var">
<description>Returns a variable from shared memory</description>
<param name="id" required="1" vallist="0" default="" type="int">id</param>
<param name="variable_key" required="1" vallist="0" default="" type="int">variable_key</param>
<return type="mixed">mixed</return>
<insert>shm_get_var(int id, int variable_key);</insert>
<dialog title="Insert shm_get_var">shm_get_var(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="shm_put_var">
<description>Inserts or updates a variable in shared
     memory</description>
<param name="shm_identifier" required="1" vallist="0" default="" type="int">shm_identifier</param>
<param name="variable_key" required="1" vallist="0" default="" type="int">variable_key</param>
<param name="variable" required="1" vallist="0" default="" type="mixed">variable</param>
<return type="int">int</return>
<insert>shm_put_var(int shm_identifier, int variable_key, mixed variable);</insert>
<dialog title="Insert shm_put_var">shm_put_var(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="shm_remove_var">
<description>Removes a variable from shared memory
    </description>
<param name="id" required="1" vallist="0" default="" type="int">id</param>
<param name="variable_key" required="1" vallist="0" default="" type="int">variable_key</param>
<return type="int">int</return>
<insert>shm_remove_var(int id, int variable_key);</insert>
<dialog title="Insert shm_remove_var">shm_remove_var(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="shm_remove">
<description>Removes shared memory from Unix systems</description>
<param name="shm_identifier" required="1" vallist="0" default="" type="int">shm_identifier</param>
<return type="int">int</return>
<insert>shm_remove(int shm_identifier);</insert>
<dialog title="Insert shm_remove">shm_remove(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="sesam">
<function name="sesam_affected_rows">
<description>
     Get number of rows affected by an immediate query
    </description>
<param name="result_id" required="1" vallist="0" default="" type="string">result_id</param>
<return type="int">int</return>
<insert>sesam_affected_rows(string result_id);</insert>
<dialog title="Insert sesam_affected_rows">sesam_affected_rows(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sesam_commit">
<description>
     Commit pending updates to the SESAM database
    </description>
<return type="bool">bool</return>
<insert>sesam_commit();</insert>
<dialog title="Insert sesam_commit">sesam_commit();</dialog>
<info title="Info window"></info>
</function>
<function name="sesam_connect">
<description>Open SESAM database connection</description>
<param name="catalog" required="1" vallist="0" default="" type="string">catalog</param>
<param name="schema" required="1" vallist="0" default="" type="string">schema</param>
<param name="user" required="1" vallist="0" default="" type="string">user</param>
<return type="bool">bool</return>
<insert>sesam_connect(string catalog, string schema, string user);</insert>
<dialog title="Insert sesam_connect">sesam_connect(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="sesam_diagnostic">
<description>
     Return status information for last SESAM call
    </description>
<return type="array">array</return>
<insert>sesam_diagnostic();</insert>
<dialog title="Insert sesam_diagnostic">sesam_diagnostic();</dialog>
<info title="Info window"></info>
</function>
<function name="sesam_disconnect">
<description>Detach from SESAM connection</description>
<return type="bool">bool</return>
<insert>sesam_disconnect();</insert>
<dialog title="Insert sesam_disconnect">sesam_disconnect();</dialog>
<info title="Info window"></info>
</function>
<function name="sesam_errormsg">
<description>Returns error message of last SESAM call</description>
<return type="string">string</return>
<insert>sesam_errormsg();</insert>
<dialog title="Insert sesam_errormsg">sesam_errormsg();</dialog>
<info title="Info window"></info>
</function>
<function name="sesam_execimm">
<description>Execute an "immediate" SQL-statement</description>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<return type="string">string</return>
<insert>sesam_execimm(string query);</insert>
<dialog title="Insert sesam_execimm">sesam_execimm(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sesam_fetch_array">
<description>Fetch one row as an associative array</description>
<param name="result_id" required="1" vallist="0" default="" type="string">result_id</param>
<param name="whence" required="0" vallist="0" default="" type="int">whence</param>
<param name="offset" required="0" vallist="0" default="" type="int">offset</param>
<return type="array">array</return>
<insert>sesam_fetch_array(string result_id [,int whence] [,int offset]);</insert>
<dialog title="Insert sesam_fetch_array">sesam_fetch_array(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="sesam_fetch_result">
<description>Return all or part of a query result</description>
<param name="result_id" required="1" vallist="0" default="" type="string">result_id</param>
<param name="max_rows" required="0" vallist="0" default="" type="int">max_rows</param>
<return type="mixed">mixed</return>
<insert>sesam_fetch_result(string result_id [,int max_rows]);</insert>
<dialog title="Insert sesam_fetch_result">sesam_fetch_result(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="sesam_fetch_row">
<description>Fetch one row as an array</description>
<param name="result_id" required="1" vallist="0" default="" type="string">result_id</param>
<param name="whence" required="0" vallist="0" default="" type="int">whence</param>
<param name="offset" required="0" vallist="0" default="" type="int">offset</param>
<return type="array">array</return>
<insert>sesam_fetch_row(string result_id [,int whence] [,int offset]);</insert>
<dialog title="Insert sesam_fetch_row">sesam_fetch_row(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="sesam_field_array">
<description>
     Return meta information about individual columns in a result
    </description>
<param name="result_id" required="1" vallist="0" default="" type="string">result_id</param>
<return type="array">array</return>
<insert>sesam_field_array(string result_id);</insert>
<dialog title="Insert sesam_field_array">sesam_field_array(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sesam_field_name">
<description>
     Return one column name of the result set
    </description>
<param name="result_id" required="1" vallist="0" default="" type="string">result_id</param>
<param name="index" required="1" vallist="0" default="" type="int">index</param>
<return type="int">int</return>
<insert>sesam_field_name(string result_id, int index);</insert>
<dialog title="Insert sesam_field_name">sesam_field_name(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="sesam_free_result">
<description>Releases resources for the query</description>
<param name="result_id" required="1" vallist="0" default="" type="string">result_id</param>
<return type="int">int</return>
<insert>sesam_free_result(string result_id);</insert>
<dialog title="Insert sesam_free_result">sesam_free_result(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sesam_num_fields">
<description>
     Return the number of fields/columns in a result set
    </description>
<param name="result_id" required="1" vallist="0" default="" type="string">result_id</param>
<return type="int">int</return>
<insert>sesam_num_fields(string result_id);</insert>
<dialog title="Insert sesam_num_fields">sesam_num_fields(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sesam_query">
<description>Perform a SESAM SQL query and prepare the result</description>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<param name="scrollable" required="0" vallist="0" default="" type="bool">scrollable</param>
<return type="string">string</return>
<insert>sesam_query(string query [,bool scrollable]);</insert>
<dialog title="Insert sesam_query">sesam_query(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="sesam_rollback">
<description>
     Discard any pending updates to the SESAM database
    </description>
<return type="bool">bool</return>
<insert>sesam_rollback();</insert>
<dialog title="Insert sesam_rollback">sesam_rollback();</dialog>
<info title="Info window"></info>
</function>
<function name="sesam_seek_row">
<description>
     Set scrollable cursor mode for subsequent fetches
    </description>
<param name="result_id" required="1" vallist="0" default="" type="string">result_id</param>
<param name="whence" required="1" vallist="0" default="" type="int">whence</param>
<param name="offset" required="0" vallist="0" default="" type="int">offset</param>
<return type="bool">bool</return>
<insert>sesam_seek_row(string result_id, int whence [,int offset]);</insert>
<dialog title="Insert sesam_seek_row">sesam_seek_row(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="sesam_settransaction">
<description>Set SESAM transaction parameters</description>
<param name="isolation_level" required="1" vallist="0" default="" type="int">isolation_level</param>
<param name="read_only" required="1" vallist="0" default="" type="int">read_only</param>
<return type="bool">bool</return>
<insert>sesam_settransaction(int isolation_level, int read_only);</insert>
<dialog title="Insert sesam_settransaction">sesam_settransaction(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="session">
<function name="session_cache_expire">
<description>Return current cache expire</description>
<param name="new_cache_expire" required="0" vallist="0" default="" type="int">new_cache_expire</param>
<return type="int">int</return>
<insert>session_cache_expire([int new_cache_expire]);</insert>
<dialog title="Insert session_cache_expire">session_cache_expire(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="session_cache_limiter">
<description>Get and/or set the current cache limiter</description>
<param name="cache_limiter" required="0" vallist="0" default="" type="string">cache_limiter</param>
<return type="string">string</return>
<insert>session_cache_limiter([string cache_limiter]);</insert>
<dialog title="Insert session_cache_limiter">session_cache_limiter(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="session_decode">
<description>Decodes session data from a string</description>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<return type="bool">bool</return>
<insert>session_decode(string data);</insert>
<dialog title="Insert session_decode">session_decode(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="session_destroy">
<description>Destroys all data registered to a session</description>
<return type="bool">bool</return>
<insert>session_destroy();</insert>
<dialog title="Insert session_destroy">session_destroy();</dialog>
<info title="Info window"></info>
</function>
<function name="session_encode">
<description>
     Encodes the current session data as a string
    </description>
<return type="string">string</return>
<insert>session_encode();</insert>
<dialog title="Insert session_encode">session_encode();</dialog>
<info title="Info window"></info>
</function>
<function name="session_get_cookie_params">
<description>
     Get the session cookie parameters
    </description>
<return type="array">array</return>
<insert>session_get_cookie_params();</insert>
<dialog title="Insert session_get_cookie_params">session_get_cookie_params();</dialog>
<info title="Info window"></info>
</function>
<function name="session_id">
<description>Get and/or set the current session id</description>
<param name="id" required="0" vallist="0" default="" type="string">id</param>
<return type="string">string</return>
<insert>session_id([string id]);</insert>
<dialog title="Insert session_id">session_id(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="session_is_registered">
<description>
     Find out whether a global variable is registered in a session
    </description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="bool">bool</return>
<insert>session_is_registered(string name);</insert>
<dialog title="Insert session_is_registered">session_is_registered(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="session_module_name">
<description>Get and/or set the current session module</description>
<param name="module" required="0" vallist="0" default="" type="string">module</param>
<return type="string">string</return>
<insert>session_module_name([string module]);</insert>
<dialog title="Insert session_module_name">session_module_name(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="session_name">
<description>Get and/or set the current session name</description>
<param name="name" required="0" vallist="0" default="" type="string">name</param>
<return type="string">string</return>
<insert>session_name([string name]);</insert>
<dialog title="Insert session_name">session_name(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="session_readonly">
<description>Begin session - reinitializes frozen variables, but no writeback on request end</description>
<return type="void">void</return>
<insert>session_readonly();</insert>
<dialog title="Insert session_readonly">session_readonly();</dialog>
<info title="Info window"></info>
</function>
<function name="session_register">
<description>
     Register one or more global variables with the current session
    </description>
<param name="name" required="1" vallist="0" default="" type="mixed">name</param>
<param name="..." required="0" vallist="0" default="" type="mixed">...</param>
<return type="bool">bool</return>
<insert>session_register(mixed name [,mixed ...]);</insert>
<dialog title="Insert session_register">session_register(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="session_save_path">
<description>Get and/or set the current session save path</description>
<param name="path" required="0" vallist="0" default="" type="string">path</param>
<return type="string">string</return>
<insert>session_save_path([string path]);</insert>
<dialog title="Insert session_save_path">session_save_path(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="session_set_cookie_params">
<description>
     Set the session cookie parameters
    </description>
<param name="lifetime" required="1" vallist="0" default="" type="int">lifetime</param>
<param name="path" required="0" vallist="0" default="" type="string">path</param>
<param name="domain" required="0" vallist="0" default="" type="string">domain</param>
<param name="secure" required="0" vallist="0" default="" type="bool">secure</param>
<return type="void">void</return>
<insert>session_set_cookie_params(int lifetime [,string path] [,string domain] [,bool secure]);</insert>
<dialog title="Insert session_set_cookie_params">session_set_cookie_params(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="session_set_save_handler">
<description>
     Sets user-level session storage functions
    </description>
<param name="open" required="1" vallist="0" default="" type="string">open</param>
<param name="close" required="1" vallist="0" default="" type="string">close</param>
<param name="read" required="1" vallist="0" default="" type="string">read</param>
<param name="write" required="1" vallist="0" default="" type="string">write</param>
<param name="destroy" required="1" vallist="0" default="" type="string">destroy</param>
<param name="gc" required="1" vallist="0" default="" type="string">gc</param>
<return type="bool">bool</return>
<insert>session_set_save_handler(string open, string close, string read, string write, string destroy, string gc);</insert>
<dialog title="Insert session_set_save_handler">session_set_save_handler(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="session_start">
<description>Initialize session data</description>
<return type="bool">bool</return>
<insert>session_start();</insert>
<dialog title="Insert session_start">session_start();</dialog>
<info title="Info window"></info>
</function>
<function name="session_unregister">
<description>
     Unregister a global variable from the current session
    </description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="bool">bool</return>
<insert>session_unregister(string name);</insert>
<dialog title="Insert session_unregister">session_unregister(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="session_unset">
<description>
     Free all session variables
    </description>
<return type="void">void</return>
<insert>session_unset();</insert>
<dialog title="Insert session_unset">session_unset();</dialog>
<info title="Info window"></info>
</function>
<function name="session_write_close">
<description>Write session data and end session</description>
<return type="void">void</return>
<insert>session_write_close();</insert>
<dialog title="Insert session_write_close">session_write_close();</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="shmop">
<function name="shmop_close">
<description>Close shared memory block</description>
<param name="shmid" required="1" vallist="0" default="" type="int">shmid</param>
<return type="int">int</return>
<insert>shmop_close(int shmid);</insert>
<dialog title="Insert shmop_close">shmop_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="shmop_delete">
<description>Delete shared memory block</description>
<param name="shmid" required="1" vallist="0" default="" type="int">shmid</param>
<return type="int">int</return>
<insert>shmop_delete(int shmid);</insert>
<dialog title="Insert shmop_delete">shmop_delete(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="shmop_open">
<description>Create or open shared memory block</description>
<param name="key" required="1" vallist="0" default="" type="int">key</param>
<param name="flags" required="1" vallist="0" default="" type="string">flags</param>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<param name="size" required="1" vallist="0" default="" type="int">size</param>
<return type="int">int</return>
<insert>shmop_open(int key, string flags, int mode, int size);</insert>
<dialog title="Insert shmop_open">shmop_open(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="shmop_read">
<description>Read data from shared memory block</description>
<param name="shmid" required="1" vallist="0" default="" type="int">shmid</param>
<param name="start" required="1" vallist="0" default="" type="int">start</param>
<param name="count" required="1" vallist="0" default="" type="int">count</param>
<return type="string">string</return>
<insert>shmop_read(int shmid, int start, int count);</insert>
<dialog title="Insert shmop_read">shmop_read(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="shmop_size">
<description>Get size of shared memory block</description>
<param name="shmid" required="1" vallist="0" default="" type="int">shmid</param>
<return type="int">int</return>
<insert>shmop_size(int shmid);</insert>
<dialog title="Insert shmop_size">shmop_size(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="shmop_write">
<description>Write data into shared memory block</description>
<param name="shmid" required="1" vallist="0" default="" type="int">shmid</param>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<param name="offset" required="1" vallist="0" default="" type="int">offset</param>
<return type="int">int</return>
<insert>shmop_write(int shmid, string data, int offset);</insert>
<dialog title="Insert shmop_write">shmop_write(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="snmp">
<function name="snmp_get_quick_print">
<description>Fetch the current value of the UCD library's quick_print setting
    </description>
<return type="bool">bool</return>
<insert>snmp_get_quick_print();</insert>
<dialog title="Insert snmp_get_quick_print">snmp_get_quick_print();</dialog>
<info title="Info window"></info>
</function>
<function name="snmp_set_quick_print">
<description>Set the value of quick_print within the UCD SNMP library
    </description>
<param name="quick_print" required="1" vallist="0" default="" type="bool">quick_print</param>
<return type="void">void</return>
<insert>snmp_set_quick_print(bool quick_print);</insert>
<dialog title="Insert snmp_set_quick_print">snmp_set_quick_print(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="snmpget">
<description>Fetch an SNMP object</description>
<param name="hostname" required="1" vallist="0" default="" type="string">hostname</param>
<param name="community" required="1" vallist="0" default="" type="string">community</param>
<param name="object_id" required="1" vallist="0" default="" type="string">object_id</param>
<param name="timeout" required="0" vallist="0" default="" type="int">timeout</param>
<param name="retries" required="0" vallist="0" default="" type="int">retries</param>
<return type="string">string</return>
<insert>snmpget(string hostname, string community, string object_id [,int timeout] [,int retries]);</insert>
<dialog title="Insert snmpget">snmpget(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="snmprealwalk">
<description>
     Return all objects including their respective object ID within the specified one
    </description>
<param name="host" required="1" vallist="0" default="" type="string">host</param>
<param name="community" required="1" vallist="0" default="" type="string">community</param>
<param name="object_id" required="1" vallist="0" default="" type="string">object_id</param>
<param name="timeout" required="0" vallist="0" default="" type="int">timeout</param>
<param name="retries" required="0" vallist="0" default="" type="int">retries</param>
<return type="array">array</return>
<insert>snmprealwalk(string host, string community, string object_id [,int timeout] [,int retries]);</insert>
<dialog title="Insert snmprealwalk">snmprealwalk(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="snmpset">
<description>Set an SNMP object</description>
<param name="hostname" required="1" vallist="0" default="" type="string">hostname</param>
<param name="community" required="1" vallist="0" default="" type="string">community</param>
<param name="object_id" required="1" vallist="0" default="" type="string">object_id</param>
<param name="type" required="1" vallist="0" default="" type="string">type</param>
<param name="value" required="1" vallist="0" default="" type="mixed">value</param>
<param name="timeout" required="0" vallist="0" default="" type="int">timeout</param>
<param name="retries" required="0" vallist="0" default="" type="int">retries</param>
<return type="bool">bool</return>
<insert>snmpset(string hostname, string community, string object_id, string type, mixed value [,int timeout] [,int retries]);</insert>
<dialog title="Insert snmpset">snmpset(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="snmpwalk">
<description>Fetch all the SNMP objects from an agent</description>
<param name="hostname" required="1" vallist="0" default="" type="string">hostname</param>
<param name="community" required="1" vallist="0" default="" type="string">community</param>
<param name="object_id" required="1" vallist="0" default="" type="string">object_id</param>
<param name="timeout" required="0" vallist="0" default="" type="int">timeout</param>
<param name="retries" required="0" vallist="0" default="" type="int">retries</param>
<return type="array">array</return>
<insert>snmpwalk(string hostname, string community, string object_id [,int timeout] [,int retries]);</insert>
<dialog title="Insert snmpwalk">snmpwalk(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="snmpwalkoid">
<description>Query for a tree of information about a network entity
    </description>
<param name="hostname" required="1" vallist="0" default="" type="string">hostname</param>
<param name="community" required="1" vallist="0" default="" type="string">community</param>
<param name="object_id" required="1" vallist="0" default="" type="string">object_id</param>
<param name="timeout" required="0" vallist="0" default="" type="int">timeout</param>
<param name="retries" required="0" vallist="0" default="" type="int">retries</param>
<return type="array">array</return>
<insert>snmpwalkoid(string hostname, string community, string object_id [,int timeout] [,int retries]);</insert>
<dialog title="Insert snmpwalkoid">snmpwalkoid(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="sockets">
<function name="socket_accept">
<description>Accepts a connection on a socket</description>
<param name="socket" required="1" vallist="0" default="" type="resource">socket</param>
<return type="resource">resource</return>
<insert>socket_accept(resource socket);</insert>
<dialog title="Insert socket_accept">socket_accept(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_bind">
<description>Binds a name to a socket</description>
<param name="socket" required="1" vallist="0" default="" type="resource">socket</param>
<param name="address" required="1" vallist="0" default="" type="string">address</param>
<param name="port" required="0" vallist="0" default="" type="int">port</param>
<return type="bool">bool</return>
<insert>socket_bind(resource socket, string address [,int port]);</insert>
<dialog title="Insert socket_bind">socket_bind(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_clear_error">
<description>Clears the error on the socket or the last error code</description>
<param name="socket" required="0" vallist="0" default="" type="resource">socket</param>
<return type="void">void</return>
<insert>socket_clear_error([resource socket]);</insert>
<dialog title="Insert socket_clear_error">socket_clear_error(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_close">
<description>Closes a socket resource</description>
<param name="socket" required="1" vallist="0" default="" type="resource">socket</param>
<return type="void">void</return>
<insert>socket_close(resource socket);</insert>
<dialog title="Insert socket_close">socket_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_connect">
<description>Initiates a connection on a socket</description>
<param name="socket" required="1" vallist="0" default="" type="resource">socket</param>
<param name="address" required="1" vallist="0" default="" type="string">address</param>
<param name="port" required="0" vallist="0" default="" type="int">port</param>
<return type="bool">bool</return>
<insert>socket_connect(resource socket, string address [,int port]);</insert>
<dialog title="Insert socket_connect">socket_connect(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_create_listen">
<description>Opens a socket on port to accept connections </description>
<param name="port" required="1" vallist="0" default="" type="int">port</param>
<param name="backlog" required="0" vallist="0" default="" type="int">backlog</param>
<return type="resource">resource</return>
<insert>socket_create_listen(int port [,int backlog]);</insert>
<dialog title="Insert socket_create_listen">socket_create_listen(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_create_pair">
<description>Creates a pair of indistinguishable sockets and stores them in fds. </description>
<param name="domain" required="1" vallist="0" default="" type="int">domain</param>
<param name="type" required="1" vallist="0" default="" type="int">type</param>
<param name="protocol" required="1" vallist="0" default="" type="int">protocol</param>
<param name="&amp;fd" required="1" vallist="0" default="" type="array">&amp;fd</param>
<return type="bool">bool</return>
<insert>socket_create_pair(int domain, int type, int protocol, array &amp;fd);</insert>
<dialog title="Insert socket_create_pair">socket_create_pair(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_create">
<description>Create a socket (endpoint for communication)</description>
<param name="domain" required="1" vallist="0" default="" type="int">domain</param>
<param name="type" required="1" vallist="0" default="" type="int">type</param>
<param name="protocol" required="1" vallist="0" default="" type="int">protocol</param>
<return type="resource">resource</return>
<insert>socket_create(int domain, int type, int protocol);</insert>
<dialog title="Insert socket_create">socket_create(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_get_option">
<description>Gets socket options for the socket </description>
<param name="socket" required="1" vallist="0" default="" type="resource">socket</param>
<param name="level" required="1" vallist="0" default="" type="int">level</param>
<param name="optname" required="1" vallist="0" default="" type="int">optname</param>
<return type="mixed">mixed</return>
<insert>socket_get_option(resource socket, int level, int optname);</insert>
<dialog title="Insert socket_get_option">socket_get_option(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_getpeername">
<description>
     Queries the remote side of the given socket which may either result in host/port
     or in a UNIX filesystem path, dependent on its type.
    </description>
<param name="socket" required="1" vallist="0" default="" type="resource">socket</param>
<param name="&amp;addr" required="1" vallist="0" default="" type="string">&amp;addr</param>
<param name="&amp;port" required="0" vallist="0" default="" type="int">&amp;port</param>
<return type="bool">bool</return>
<insert>socket_getpeername(resource socket, string &amp;addr [,int &amp;port]);</insert>
<dialog title="Insert socket_getpeername">socket_getpeername(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_getsockname">
<description>
     Queries the local side of the given socket which may either result in host/port
     or in a UNIX filesystem path, dependent on its type.
    </description>
<param name="socket" required="1" vallist="0" default="" type="resource">socket</param>
<param name="&amp;addr" required="1" vallist="0" default="" type="string">&amp;addr</param>
<param name="&amp;port" required="0" vallist="0" default="" type="int">&amp;port</param>
<return type="bool">bool</return>
<insert>socket_getsockname(resource socket, string &amp;addr [,int &amp;port]);</insert>
<dialog title="Insert socket_getsockname">socket_getsockname(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_iovec_add">
<description>Adds a new vector to the scatter/gather array </description>
<param name="iovec" required="1" vallist="0" default="" type="resource">iovec</param>
<param name="iov_len" required="1" vallist="0" default="" type="int">iov_len</param>
<return type="bool">bool</return>
<insert>socket_iovec_add(resource iovec, int iov_len);</insert>
<dialog title="Insert socket_iovec_add">socket_iovec_add(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_iovec_alloc">
<description>...]) Builds a 'struct iovec' for use with sendmsg, recvmsg, writev, and readv </description>
<param name="num_vectors" required="1" vallist="0" default="" type="int">num_vectors</param>
<return type="resource">resource</return>
<insert>socket_iovec_alloc(int num_vectors);</insert>
<dialog title="Insert socket_iovec_alloc">socket_iovec_alloc(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_iovec_delete">
<description>Deletes a vector from an array of vectors </description>
<param name="iovec" required="1" vallist="0" default="" type="resource">iovec</param>
<param name="iov_pos" required="1" vallist="0" default="" type="int">iov_pos</param>
<return type="bool">bool</return>
<insert>socket_iovec_delete(resource iovec, int iov_pos);</insert>
<dialog title="Insert socket_iovec_delete">socket_iovec_delete(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_iovec_fetch">
<description>Returns the data held in the iovec specified by iovec_id[iovec_position] </description>
<param name="iovec" required="1" vallist="0" default="" type="resource">iovec</param>
<param name="iovec_position" required="1" vallist="0" default="" type="int">iovec_position</param>
<return type="string">string</return>
<insert>socket_iovec_fetch(resource iovec, int iovec_position);</insert>
<dialog title="Insert socket_iovec_fetch">socket_iovec_fetch(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_iovec_free">
<description>Frees the iovec specified by iovec_id </description>
<param name="iovec" required="1" vallist="0" default="" type="resource">iovec</param>
<return type="bool">bool</return>
<insert>socket_iovec_free(resource iovec);</insert>
<dialog title="Insert socket_iovec_free">socket_iovec_free(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_iovec_set">
<description>Sets the data held in iovec_id[iovec_position] to new_val </description>
<param name="iovec" required="1" vallist="0" default="" type="resource">iovec</param>
<param name="iovec_position" required="1" vallist="0" default="" type="int">iovec_position</param>
<param name="new_val" required="1" vallist="0" default="" type="string">new_val</param>
<return type="bool">bool</return>
<insert>socket_iovec_set(resource iovec, int iovec_position, string new_val);</insert>
<dialog title="Insert socket_iovec_set">socket_iovec_set(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_last_error">
<description>Returns the last error on the socket </description>
<param name="socket" required="0" vallist="0" default="" type="resource">socket</param>
<return type="int">int</return>
<insert>socket_last_error([resource socket]);</insert>
<dialog title="Insert socket_last_error">socket_last_error(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_listen">
<description>Listens for a connection on a socket</description>
<param name="socket" required="1" vallist="0" default="" type="resource">socket</param>
<param name="backlog" required="0" vallist="0" default="" type="int">backlog</param>
<return type="bool">bool</return>
<insert>socket_listen(resource socket [,int backlog]);</insert>
<dialog title="Insert socket_listen">socket_listen(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_read">
<description>Reads a maximum of length bytes from a socket</description>
<param name="socket" required="1" vallist="0" default="" type="resource">socket</param>
<param name="length" required="1" vallist="0" default="" type="int">length</param>
<param name="type" required="0" vallist="0" default="" type="int">type</param>
<return type="string">string</return>
<insert>socket_read(resource socket, int length [,int type]);</insert>
<dialog title="Insert socket_read">socket_read(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_readv">
<description>Reads from an fd, using the scatter-gather array defined by iovec_id </description>
<param name="socket" required="1" vallist="0" default="" type="resource">socket</param>
<param name="iovec_id" required="1" vallist="0" default="" type="resource">iovec_id</param>
<return type="bool">bool</return>
<insert>socket_readv(resource socket, resource iovec_id);</insert>
<dialog title="Insert socket_readv">socket_readv(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_recv">
<description>Receives data from a connected socket </description>
<param name="socket" required="1" vallist="0" default="" type="resource">socket</param>
<param name="&amp;buf" required="1" vallist="0" default="" type="string">&amp;buf</param>
<param name="len" required="1" vallist="0" default="" type="int">len</param>
<param name="flags" required="1" vallist="0" default="" type="int">flags</param>
<return type="int">int</return>
<insert>socket_recv(resource socket, string &amp;buf, int len, int flags);</insert>
<dialog title="Insert socket_recv">socket_recv(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_recvfrom">
<description>Receives data from a socket, connected or not </description>
<param name="socket" required="1" vallist="0" default="" type="resource">socket</param>
<param name="&amp;buf" required="1" vallist="0" default="" type="string">&amp;buf</param>
<param name="len" required="1" vallist="0" default="" type="int">len</param>
<param name="flags" required="1" vallist="0" default="" type="int">flags</param>
<param name="&amp;name" required="1" vallist="0" default="" type="string">&amp;name</param>
<param name="&amp;port" required="0" vallist="0" default="" type="int">&amp;port</param>
<return type="int">int</return>
<insert>socket_recvfrom(resource socket, string &amp;buf, int len, int flags, string &amp;name [,int &amp;port]);</insert>
<dialog title="Insert socket_recvfrom">socket_recvfrom(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_recvmsg">
<description>Used to receive messages on a socket, whether connection-oriented or not </description>
<param name="socket" required="1" vallist="0" default="" type="resource">socket</param>
<param name="iovec" required="1" vallist="0" default="" type="resource">iovec</param>
<param name="&amp;control" required="1" vallist="0" default="" type="array">&amp;control</param>
<param name="&amp;controllen" required="1" vallist="0" default="" type="int">&amp;controllen</param>
<param name="&amp;flags" required="1" vallist="0" default="" type="int">&amp;flags</param>
<param name="&amp;addr" required="1" vallist="0" default="" type="string">&amp;addr</param>
<param name="&amp;port" required="0" vallist="0" default="" type="int">&amp;port</param>
<return type="bool">bool</return>
<insert>socket_recvmsg(resource socket, resource iovec, array &amp;control, int &amp;controllen, int &amp;flags, string &amp;addr [,int &amp;port]);</insert>
<dialog title="Insert socket_recvmsg">socket_recvmsg(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_select">
<description>Runs the select() system call on the given arrays of sockets with a timeout specified by tv_sec and tv_usec </description>
<param name="&amp;read" required="1" vallist="0" default="" type="resource">&amp;read</param>
<param name="&amp;write" required="1" vallist="0" default="" type="resource">&amp;write</param>
<param name="&amp;except" required="1" vallist="0" default="" type="resource">&amp;except</param>
<param name="tv_sec" required="1" vallist="0" default="" type="int">tv_sec</param>
<param name="tv_usec" required="0" vallist="0" default="" type="int">tv_usec</param>
<return type="int">int</return>
<insert>socket_select(resource &amp;read, resource &amp;write, resource &amp;except, int tv_sec [,int tv_usec]);</insert>
<dialog title="Insert socket_select">socket_select(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_send">
<description>Sends data to a connected socket </description>
<param name="socket" required="1" vallist="0" default="" type="resource">socket</param>
<param name="buf" required="1" vallist="0" default="" type="string">buf</param>
<param name="len" required="1" vallist="0" default="" type="int">len</param>
<param name="flags" required="1" vallist="0" default="" type="int">flags</param>
<return type="int">int</return>
<insert>socket_send(resource socket, string buf, int len, int flags);</insert>
<dialog title="Insert socket_send">socket_send(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_sendmsg">
<description>Sends a message to a socket, regardless of whether it is connection-oriented or not </description>
<param name="socket" required="1" vallist="0" default="" type="resource">socket</param>
<param name="iovec" required="1" vallist="0" default="" type="resource">iovec</param>
<param name="flags" required="1" vallist="0" default="" type="int">flags</param>
<param name="addr" required="1" vallist="0" default="" type="string">addr</param>
<param name="port" required="0" vallist="0" default="" type="int">port</param>
<return type="bool">bool</return>
<insert>socket_sendmsg(resource socket, resource iovec, int flags, string addr [,int port]);</insert>
<dialog title="Insert socket_sendmsg">socket_sendmsg(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_sendto">
<description>Sends a message to a socket, whether it is connected or not </description>
<param name="socket" required="1" vallist="0" default="" type="resource">socket</param>
<param name="buf" required="1" vallist="0" default="" type="string">buf</param>
<param name="len" required="1" vallist="0" default="" type="int">len</param>
<param name="flags" required="1" vallist="0" default="" type="int">flags</param>
<param name="addr" required="1" vallist="0" default="" type="string">addr</param>
<param name="port" required="0" vallist="0" default="" type="int">port</param>
<return type="int">int</return>
<insert>socket_sendto(resource socket, string buf, int len, int flags, string addr [,int port]);</insert>
<dialog title="Insert socket_sendto">socket_sendto(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_set_nonblock">
<description>Sets nonblocking mode for file descriptor fd </description>
<param name="socket" required="1" vallist="0" default="" type="resource">socket</param>
<return type="bool">bool</return>
<insert>socket_set_nonblock(resource socket);</insert>
<dialog title="Insert socket_set_nonblock">socket_set_nonblock(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_set_option">
<description>Sets socket options for the socket</description>
<param name="socket" required="1" vallist="0" default="" type="resource">socket</param>
<param name="level" required="1" vallist="0" default="" type="int">level</param>
<param name="optname" required="1" vallist="0" default="" type="int">optname</param>
<param name="optval" required="1" vallist="0" default="" type="mixed">optval</param>
<return type="bool">bool</return>
<insert>socket_set_option(resource socket, int level, int optname, mixed optval);</insert>
<dialog title="Insert socket_set_option">socket_set_option(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_shutdown">
<description>Shuts down a socket for receiving, sending, or both. </description>
<param name="socket" required="1" vallist="0" default="" type="resource">socket</param>
<param name="how" required="0" vallist="0" default="" type="int">how</param>
<return type="bool">bool</return>
<insert>socket_shutdown(resource socket [,int how]);</insert>
<dialog title="Insert socket_shutdown">socket_shutdown(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_strerror">
<description>Return a string describing a socket error</description>
<param name="errno" required="1" vallist="0" default="" type="int">errno</param>
<return type="string">string</return>
<insert>socket_strerror(int errno);</insert>
<dialog title="Insert socket_strerror">socket_strerror(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_write">
<description>Write to a socket</description>
<param name="socket" required="1" vallist="0" default="" type="resource">socket</param>
<param name="buffer" required="1" vallist="0" default="" type="string">buffer</param>
<param name="length" required="0" vallist="0" default="" type="int">length</param>
<return type="int">int</return>
<insert>socket_write(resource socket, string buffer [,int length]);</insert>
<dialog title="Insert socket_write">socket_write(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="socket_writev">
<description>Writes to a file descriptor, fd, using the scatter-gather array defined by iovec_id </description>
<param name="socket" required="1" vallist="0" default="" type="resource">socket</param>
<param name="iovec_id" required="1" vallist="0" default="" type="resource">iovec_id</param>
<return type="bool">bool</return>
<insert>socket_writev(resource socket, resource iovec_id);</insert>
<dialog title="Insert socket_writev">socket_writev(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="stream">
<function name="stream_context_create">
<description>Create a streams context</description>
<param name="params" required="1" vallist="0" default="" type="array">params</param>
<return type="resource">resource</return>
<insert>stream_context_create(array params);</insert>
<dialog title="Insert stream_context_create">stream_context_create(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="stream_context_get_options">
<description>Retrieve options for a stream/wrapper/context</description>
<param name="stream|context" required="1" vallist="0" default="" type="resource">stream|context</param>
<return type="bool">bool</return>
<insert>stream_context_get_options(resource stream|context);</insert>
<dialog title="Insert stream_context_get_options">stream_context_get_options(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="stream_context_set_option">
<description>Sets an option for a stream/wrapper/context</description>
<param name="context|stream" required="1" vallist="0" default="" type="resource">context|stream</param>
<param name="wrapper" required="1" vallist="0" default="" type="string">wrapper</param>
<param name="option" required="1" vallist="0" default="" type="string">option</param>
<param name="value" required="1" vallist="0" default="" type="mixed">value</param>
<return type="bool">bool</return>
<insert>stream_context_set_option(resource context|stream, string wrapper, string option, mixed value);</insert>
<dialog title="Insert stream_context_set_option">stream_context_set_option(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="stream_context_set_params">
<description>Set parameters for a stream/wrapper/context</description>
<param name="stream|context" required="1" vallist="0" default="" type="resource">stream|context</param>
<param name="params" required="1" vallist="0" default="" type="array">params</param>
<return type="bool">bool</return>
<insert>stream_context_set_params(resource stream|context, array params);</insert>
<dialog title="Insert stream_context_set_params">stream_context_set_params(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="stream_filter_append">
<description>Attach a filter to a stream.</description>
<param name="stream" required="1" vallist="0" default="" type="resource">stream</param>
<param name="filtername" required="1" vallist="0" default="" type="string">filtername</param>
<param name="read_write" required="0" vallist="0" default="" type="int">read_write</param>
<param name="params" required="0" vallist="0" default="" type="string">params</param>
<return type="bool">bool</return>
<insert>stream_filter_append(resource stream, string filtername [,int read_write] [,string params]);</insert>
<dialog title="Insert stream_filter_append">stream_filter_append(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="stream_filter_prepend">
<description>Attach a filter to a stream.</description>
<param name="stream" required="1" vallist="0" default="" type="resource">stream</param>
<param name="filtername" required="1" vallist="0" default="" type="string">filtername</param>
<param name="read_write" required="0" vallist="0" default="" type="int">read_write</param>
<param name="params" required="0" vallist="0" default="" type="string">params</param>
<return type="bool">bool</return>
<insert>stream_filter_prepend(resource stream, string filtername [,int read_write] [,string params]);</insert>
<dialog title="Insert stream_filter_prepend">stream_filter_prepend(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="stream_get_filters">
<description>Retrieve list of registered filters</description>
<return type="array">array</return>
<insert>stream_get_filters();</insert>
<dialog title="Insert stream_get_filters">stream_get_filters();</dialog>
<info title="Info window"></info>
</function>
<function name="stream_get_meta_data">
<description>Retrieves header/meta data from streams/file pointers</description>
<param name="stream" required="1" vallist="0" default="" type="resource">stream</param>
<return type="array">array</return>
<insert>stream_get_meta_data(resource stream);</insert>
<dialog title="Insert stream_get_meta_data">stream_get_meta_data(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="stream_get_wrappers">
<description>Retrieve list of registered streams</description>
<return type="array">array</return>
<insert>stream_get_wrappers();</insert>
<dialog title="Insert stream_get_wrappers">stream_get_wrappers();</dialog>
<info title="Info window"></info>
</function>
<function name="stream_register_filter">
<description>Register a stream filter implemented as a PHP class derived from </description>
<param name="filtername" required="1" vallist="0" default="" type="string">filtername</param>
<param name="classname" required="1" vallist="0" default="" type="string">classname</param>
<return type="bool">bool</return>
<insert>stream_register_filter(string filtername, string classname);</insert>
<dialog title="Insert stream_register_filter">stream_register_filter(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="stream_register_wrapper">
<description>Register a URL wrapper implemented as a PHP class</description>
<param name="protocol" required="1" vallist="0" default="" type="string">protocol</param>
<param name="classname" required="1" vallist="0" default="" type="string">classname</param>
<return type="bool">bool</return>
<insert>stream_register_wrapper(string protocol, string classname);</insert>
<dialog title="Insert stream_register_wrapper">stream_register_wrapper(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="stream_select">
<description>Runs the equivalent of the select() system call on the given 
     arrays of streams with a timeout specified by tv_sec and tv_usec </description>
<param name="&amp;read" required="1" vallist="0" default="" type="resource">&amp;read</param>
<param name="&amp;write" required="1" vallist="0" default="" type="resource">&amp;write</param>
<param name="&amp;except" required="1" vallist="0" default="" type="resource">&amp;except</param>
<param name="tv_sec" required="1" vallist="0" default="" type="int">tv_sec</param>
<param name="tv_usec" required="0" vallist="0" default="" type="int">tv_usec</param>
<return type="int">int</return>
<insert>stream_select(resource &amp;read, resource &amp;write, resource &amp;except, int tv_sec [,int tv_usec]);</insert>
<dialog title="Insert stream_select">stream_select(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="stream_set_blocking">
<description>Set blocking/non-blocking mode on a stream</description>
<param name="stream" required="1" vallist="0" default="" type="resource">stream</param>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<return type="bool">bool</return>
<insert>stream_set_blocking(resource stream, int mode);</insert>
<dialog title="Insert stream_set_blocking">stream_set_blocking(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="stream_set_timeout">
<description>Set timeout period on a stream</description>
<param name="stream" required="1" vallist="0" default="" type="resource">stream</param>
<param name="seconds" required="1" vallist="0" default="" type="int">seconds</param>
<param name="microseconds" required="1" vallist="0" default="" type="int">microseconds</param>
<return type="bool">bool</return>
<insert>stream_set_timeout(resource stream, int seconds, int microseconds);</insert>
<dialog title="Insert stream_set_timeout">stream_set_timeout(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="stream_set_write_buffer">
<description>Sets file buffering on the given stream</description>
<param name="stream" required="1" vallist="0" default="" type="resource">stream</param>
<param name="buffer" required="1" vallist="0" default="" type="int">buffer</param>
<return type="int">int</return>
<insert>stream_set_write_buffer(resource stream, int buffer);</insert>
<dialog title="Insert stream_set_write_buffer">stream_set_write_buffer(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="strings">
<function name="addcslashes">
<description>Quote string with slashes in a C style</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="charlist" required="1" vallist="0" default="" type="string">charlist</param>
<return type="string">string</return>
<insert>addcslashes(string str, string charlist);</insert>
<dialog title="Insert addcslashes">addcslashes(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="addslashes">
<description>Quote string with slashes</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<return type="string">string</return>
<insert>addslashes(string str);</insert>
<dialog title="Insert addslashes">addslashes(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="bin2hex">
<description>
     Convert binary data into hexadecimal representation
    </description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<return type="string">string</return>
<insert>bin2hex(string str);</insert>
<dialog title="Insert bin2hex">bin2hex(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="chr">
<description>Return a specific character</description>
<param name="ascii" required="1" vallist="0" default="" type="int">ascii</param>
<return type="string">string</return>
<insert>chr(int ascii);</insert>
<dialog title="Insert chr">chr(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="chunk_split">
<description>Split a string into smaller chunks</description>
<param name="body" required="1" vallist="0" default="" type="string">body</param>
<param name="chunklen" required="0" vallist="0" default="" type="int">chunklen</param>
<param name="end" required="0" vallist="0" default="" type="string">end</param>
<return type="string">string</return>
<insert>chunk_split(string body [,int chunklen] [,string end]);</insert>
<dialog title="Insert chunk_split">chunk_split(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="convert_cyr_string">
<description>
     Convert from one Cyrillic character set to another
    </description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="from" required="1" vallist="0" default="" type="string">from</param>
<param name="to" required="1" vallist="0" default="" type="string">to</param>
<return type="string">string</return>
<insert>convert_cyr_string(string str, string from, string to);</insert>
<dialog title="Insert convert_cyr_string">convert_cyr_string(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="count_chars">
<description>
     Return information about characters used in a string
    </description>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<param name="mode" required="0" vallist="0" default="" type="int">mode</param>
<return type="mixed">mixed</return>
<insert>count_chars(string string [,int mode]);</insert>
<dialog title="Insert count_chars">count_chars(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="crc32">
<description>Calculates the crc32 polynomial of a string</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<return type="int">int</return>
<insert>crc32(string str);</insert>
<dialog title="Insert crc32">crc32(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="crypt">
<description>One-way string encryption (hashing)</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="salt" required="0" vallist="0" default="" type="string">salt</param>
<return type="string">string</return>
<insert>crypt(string str [,string salt]);</insert>
<dialog title="Insert crypt">crypt(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="echo">
<description>Output one or more strings</description>
<param name="arg1" required="1" vallist="0" default="" type="string">arg1</param>
<param name="argn..." required="0" vallist="0" default="" type="string">argn...</param>
<return type="void">void</return>
<insert>echo(string arg1 [,string argn...]);</insert>
<dialog title="Insert echo">echo(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="explode">
<description>Split a string by string</description>
<param name="separator" required="1" vallist="0" default="" type="string">separator</param>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<param name="limit" required="0" vallist="0" default="" type="int">limit</param>
<return type="array">array</return>
<insert>explode(string separator, string string [,int limit]);</insert>
<dialog title="Insert explode">explode(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="fprintf">
<description>Write a formatted string to a stream</description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<param name="format" required="1" vallist="0" default="" type="string">format</param>
<param name="args" required="0" vallist="0" default="" type="mixed">args</param>
<return type="int">int</return>
<insert>fprintf(resource handle, string format [,mixed args]);</insert>
<dialog title="Insert fprintf">fprintf(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="get_html_translation_table">
<description>
     Returns the translation table used by
     </description>
<param name="table" required="1" vallist="0" default="" type="int">table</param>
<param name="quote_style" required="0" vallist="0" default="" type="int">quote_style</param>
<return type="array">array</return>
<insert>get_html_translation_table(int table [,int quote_style]);</insert>
<dialog title="Insert get_html_translation_table">get_html_translation_table(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hebrev">
<description>
     Convert logical Hebrew text to visual text
    </description>
<param name="hebrew_text" required="1" vallist="0" default="" type="string">hebrew_text</param>
<param name="max_chars_per_line" required="0" vallist="0" default="" type="int">max_chars_per_line</param>
<return type="string">string</return>
<insert>hebrev(string hebrew_text [,int max_chars_per_line]);</insert>
<dialog title="Insert hebrev">hebrev(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="hebrevc">
<description>
     Convert logical Hebrew text to visual text with newline conversion
    </description>
<param name="hebrew_text" required="1" vallist="0" default="" type="string">hebrew_text</param>
<param name="max_chars_per_line" required="0" vallist="0" default="" type="int">max_chars_per_line</param>
<return type="string">string</return>
<insert>hebrevc(string hebrew_text [,int max_chars_per_line]);</insert>
<dialog title="Insert hebrevc">hebrevc(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="html_entity_decode">
<description>
     Convert all HTML entities to their applicable characters
    </description>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<param name="quote_style" required="0" vallist="0" default="" type="int">quote_style</param>
<param name="charset" required="0" vallist="0" default="" type="string">charset</param>
<return type="string">string</return>
<insert>html_entity_decode(string string [,int quote_style] [,string charset]);</insert>
<dialog title="Insert html_entity_decode">html_entity_decode(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="htmlentities">
<description>
     Convert all applicable characters to HTML entities
    </description>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<param name="quote_style" required="0" vallist="0" default="" type="int">quote_style</param>
<param name="charset" required="0" vallist="0" default="" type="string">charset</param>
<return type="string">string</return>
<insert>htmlentities(string string [,int quote_style] [,string charset]);</insert>
<dialog title="Insert htmlentities">htmlentities(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="htmlspecialchars">
<description>
     Convert special characters to HTML entities
    </description>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<param name="quote_style" required="0" vallist="0" default="" type="int">quote_style</param>
<param name="charset" required="0" vallist="0" default="" type="string">charset</param>
<return type="string">string</return>
<insert>htmlspecialchars(string string [,int quote_style] [,string charset]);</insert>
<dialog title="Insert htmlspecialchars">htmlspecialchars(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="implode">
<description>Join array elements with a string</description>
<param name="glue" required="1" vallist="0" default="" type="string">glue</param>
<param name="pieces" required="1" vallist="0" default="" type="array">pieces</param>
<return type="string">string</return>
<insert>implode(string glue, array pieces);</insert>
<dialog title="Insert implode">implode(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="levenshtein">
<description>
     Calculate Levenshtein distance between two strings
    </description>
<param name="str1" required="1" vallist="0" default="" type="string">str1</param>
<param name="str2" required="1" vallist="0" default="" type="string">str2</param>
<return type="int">int</return>
<insert>levenshtein(string str1, string str2);</insert>
<dialog title="Insert levenshtein">levenshtein(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="localeconv">
<description>Get numeric formatting information</description>
<return type="array">array</return>
<insert>localeconv();</insert>
<dialog title="Insert localeconv">localeconv();</dialog>
<info title="Info window"></info>
</function>
<function name="ltrim">
<description>
     Strip whitespace from the beginning of a string
    </description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="charlist" required="0" vallist="0" default="" type="string">charlist</param>
<return type="string">string</return>
<insert>ltrim(string str [,string charlist]);</insert>
<dialog title="Insert ltrim">ltrim(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="md5_file">
<description>Calculates the md5 hash of a given filename</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="raw_output" required="0" vallist="0" default="" type="bool">raw_output</param>
<return type="string">string</return>
<insert>md5_file(string filename [,bool raw_output]);</insert>
<dialog title="Insert md5_file">md5_file(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="md5">
<description>Calculate the md5 hash of a string</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="raw_output" required="0" vallist="0" default="" type="bool">raw_output</param>
<return type="string">string</return>
<insert>md5(string str [,bool raw_output]);</insert>
<dialog title="Insert md5">md5(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="metaphone">
<description>Calculate the metaphone key of a string</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<return type="string">string</return>
<insert>metaphone(string str);</insert>
<dialog title="Insert metaphone">metaphone(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="money_format">
<description>Formats a number as a currency string</description>
<param name="format" required="1" vallist="0" default="" type="string">format</param>
<param name="number" required="1" vallist="0" default="" type="float">number</param>
<return type="string">string</return>
<insert>money_format(string format, float number);</insert>
<dialog title="Insert money_format">money_format(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="nl_langinfo">
<description>
     Query language and locale information
    </description>
<param name="item" required="1" vallist="0" default="" type="int">item</param>
<return type="string">string</return>
<insert>nl_langinfo(int item);</insert>
<dialog title="Insert nl_langinfo">nl_langinfo(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="nl2br">
<description>
     Inserts HTML line breaks before all newlines in a string
    </description>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<return type="string">string</return>
<insert>nl2br(string string);</insert>
<dialog title="Insert nl2br">nl2br(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="number_format">
<description>Format a number with grouped thousands</description>
<param name="number" required="1" vallist="0" default="" type="float">number</param>
<param name="decimals" required="0" vallist="0" default="" type="int">decimals</param>
<param name="dec_point" required="0" vallist="0" default="" type="string">dec_point</param>
<param name="thousands_sep" required="0" vallist="0" default="" type="string">thousands_sep</param>
<return type="string">string</return>
<insert>number_format(float number [,int decimals] [,string dec_point] [,string thousands_sep]);</insert>
<dialog title="Insert number_format">number_format(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="ord">
<description>Return ASCII value of character</description>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<return type="int">int</return>
<insert>ord(string string);</insert>
<dialog title="Insert ord">ord(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="parse_str">
<description>Parses the string into variables</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="arr
       " required="0" vallist="0" default="" type="array">arr
       </param>
<return type="void">void</return>
<insert>parse_str(string str [,array arr
       ]);</insert>
<dialog title="Insert parse_str">parse_str(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="print">
<description>Output a string</description>
<param name="arg" required="1" vallist="0" default="" type="string">arg</param>
<return type="void">void</return>
<insert>print(string arg);</insert>
<dialog title="Insert print">print(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="printf">
<description>Output a formatted string</description>
<param name="format" required="1" vallist="0" default="" type="string">format</param>
<param name="args" required="0" vallist="0" default="" type="mixed">args</param>
<return type="void">void</return>
<insert>printf(string format [,mixed args]);</insert>
<dialog title="Insert printf">printf(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="quoted_printable_decode">
<description>
     Convert a quoted-printable string to an 8 bit string
    </description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<return type="string">string</return>
<insert>quoted_printable_decode(string str);</insert>
<dialog title="Insert quoted_printable_decode">quoted_printable_decode(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="quotemeta">
<description>Quote meta characters</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<return type="string">string</return>
<insert>quotemeta(string str);</insert>
<dialog title="Insert quotemeta">quotemeta(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="rtrim">
<description>
     Strip whitespace from the end of a string
    </description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="charlist" required="0" vallist="0" default="" type="string">charlist</param>
<return type="string">string</return>
<insert>rtrim(string str [,string charlist]);</insert>
<dialog title="Insert rtrim">rtrim(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="setlocale">
<description>Set locale information</description>
<param name="category" required="1" vallist="0" default="" type="mixed">category</param>
<param name="locale" required="1" vallist="0" default="" type="string">locale</param>
<param name="..." required="0" vallist="0" default="" type="string">...</param>
<return type="string">string</return>
<insert>setlocale(mixed category, string locale [,string ...]);</insert>
<dialog title="Insert setlocale">setlocale(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="sha1_file">
<description>Calculate the sha1 hash of a file</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="raw_output" required="0" vallist="0" default="" type="bool">raw_output</param>
<return type="string">string</return>
<insert>sha1_file(string filename [,bool raw_output]);</insert>
<dialog title="Insert sha1_file">sha1_file(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="sha1">
<description>Calculate the sha1 hash of a string</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="raw_output" required="0" vallist="0" default="" type="bool">raw_output</param>
<return type="string">string</return>
<insert>sha1(string str [,bool raw_output]);</insert>
<dialog title="Insert sha1">sha1(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="similar_text">
<description>
     Calculate the similarity between two strings
    </description>
<param name="first" required="1" vallist="0" default="" type="string">first</param>
<param name="second" required="1" vallist="0" default="" type="string">second</param>
<param name="percent" required="0" vallist="0" default="" type="float">percent</param>
<return type="int">int</return>
<insert>similar_text(string first, string second [,float percent]);</insert>
<dialog title="Insert similar_text">similar_text(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="soundex">
<description>Calculate the soundex key of a string</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<return type="string">string</return>
<insert>soundex(string str);</insert>
<dialog title="Insert soundex">soundex(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sprintf">
<description>Return a formatted string</description>
<param name="format" required="1" vallist="0" default="" type="string">format</param>
<param name="args" required="0" vallist="0" default="" type="mixed">args</param>
<return type="string">string</return>
<insert>sprintf(string format [,mixed args]);</insert>
<dialog title="Insert sprintf">sprintf(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="sscanf">
<description>
     Parses input from a string according to a format
    </description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="format" required="1" vallist="0" default="" type="string">format</param>
<param name="var1" required="0" vallist="0" default="" type="string">var1</param>
<return type="mixed">mixed</return>
<insert>sscanf(string str, string format [,string var1]);</insert>
<dialog title="Insert sscanf">sscanf(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="str_ireplace">
<description>
     Case-insensitive version of </description>
<param name="search" required="1" vallist="0" default="" type="mixed">search</param>
<param name="replace" required="1" vallist="0" default="" type="mixed">replace</param>
<param name="subject" required="1" vallist="0" default="" type="mixed">subject</param>
<return type="mixed">mixed</return>
<insert>str_ireplace(mixed search, mixed replace, mixed subject);</insert>
<dialog title="Insert str_ireplace">str_ireplace(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="str_pad">
<description>
     Pad a string to a certain length with another string
    </description>
<param name="input" required="1" vallist="0" default="" type="string">input</param>
<param name="pad_length" required="1" vallist="0" default="" type="int">pad_length</param>
<param name="pad_string" required="0" vallist="0" default="" type="string">pad_string</param>
<param name="pad_type" required="0" vallist="0" default="" type="int">pad_type</param>
<return type="string">string</return>
<insert>str_pad(string input, int pad_length [,string pad_string] [,int pad_type]);</insert>
<dialog title="Insert str_pad">str_pad(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="str_repeat">
<description>Repeat a string</description>
<param name="input" required="1" vallist="0" default="" type="string">input</param>
<param name="multiplier" required="1" vallist="0" default="" type="int">multiplier</param>
<return type="string">string</return>
<insert>str_repeat(string input, int multiplier);</insert>
<dialog title="Insert str_repeat">str_repeat(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="str_replace">
<description>
     Replace all occurrences of the search string with the replacement string
    </description>
<param name="search" required="1" vallist="0" default="" type="mixed">search</param>
<param name="replace" required="1" vallist="0" default="" type="mixed">replace</param>
<param name="subject" required="1" vallist="0" default="" type="mixed">subject</param>
<return type="mixed">mixed</return>
<insert>str_replace(mixed search, mixed replace, mixed subject);</insert>
<dialog title="Insert str_replace">str_replace(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="str_rot13">
<description>Perform the rot13 transform on a string</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<return type="string">string</return>
<insert>str_rot13(string str);</insert>
<dialog title="Insert str_rot13">str_rot13(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="str_shuffle">
<description>Randomly shuffles a string</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<return type="string">string</return>
<insert>str_shuffle(string str);</insert>
<dialog title="Insert str_shuffle">str_shuffle(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="str_word_count">
<description>
     Return information about words used in a string
    </description>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<param name="format" required="0" vallist="0" default="" type="int">format</param>
<return type="mixed">mixed</return>
<insert>str_word_count(string string [,int format]);</insert>
<dialog title="Insert str_word_count">str_word_count(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="strcasecmp">
<description>
     Binary safe case-insensitive string comparison
    </description>
<param name="str1" required="1" vallist="0" default="" type="string">str1</param>
<param name="str2" required="1" vallist="0" default="" type="string">str2</param>
<return type="int">int</return>
<insert>strcasecmp(string str1, string str2);</insert>
<dialog title="Insert strcasecmp">strcasecmp(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="strcmp">
<description>Binary safe string comparison</description>
<param name="str1" required="1" vallist="0" default="" type="string">str1</param>
<param name="str2" required="1" vallist="0" default="" type="string">str2</param>
<return type="int">int</return>
<insert>strcmp(string str1, string str2);</insert>
<dialog title="Insert strcmp">strcmp(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="strcoll">
<description>Locale based string comparison</description>
<param name="str1" required="1" vallist="0" default="" type="string">str1</param>
<param name="str2" required="1" vallist="0" default="" type="string">str2</param>
<return type="int">int</return>
<insert>strcoll(string str1, string str2);</insert>
<dialog title="Insert strcoll">strcoll(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="strcspn">
<description>
     Find length of initial segment not matching mask
    </description>
<param name="str1" required="1" vallist="0" default="" type="string">str1</param>
<param name="str2" required="1" vallist="0" default="" type="string">str2</param>
<return type="int">int</return>
<insert>strcspn(string str1, string str2);</insert>
<dialog title="Insert strcspn">strcspn(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="strip_tags">
<description>Strip HTML and PHP tags from a string</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="allowable_tags" required="0" vallist="0" default="" type="string">allowable_tags</param>
<return type="string">string</return>
<insert>strip_tags(string str [,string allowable_tags]);</insert>
<dialog title="Insert strip_tags">strip_tags(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="stripcslashes">
<description>
     Un-quote string quoted with </description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<return type="string">string</return>
<insert>stripcslashes(string str);</insert>
<dialog title="Insert stripcslashes">stripcslashes(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="stripos">
<description>
     Find position of first occurrence of a case-insensitive string
    </description>
<param name="haystack" required="1" vallist="0" default="" type="string">haystack</param>
<param name="needle" required="1" vallist="0" default="" type="string">needle</param>
<param name="offset" required="0" vallist="0" default="" type="int">offset</param>
<return type="int">int</return>
<insert>stripos(string haystack, string needle [,int offset]);</insert>
<dialog title="Insert stripos">stripos(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="stripslashes">
<description>
     Un-quote string quoted with </description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<return type="string">string</return>
<insert>stripslashes(string str);</insert>
<dialog title="Insert stripslashes">stripslashes(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="stristr">
<description>
     Case-insensitive </description>
<param name="haystack" required="1" vallist="0" default="" type="string">haystack</param>
<param name="needle" required="1" vallist="0" default="" type="string">needle</param>
<return type="string">string</return>
<insert>stristr(string haystack, string needle);</insert>
<dialog title="Insert stristr">stristr(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="strlen">
<description>Get string length</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<return type="int">int</return>
<insert>strlen(string str);</insert>
<dialog title="Insert strlen">strlen(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="strnatcasecmp">
<description>
     Case insensitive string comparisons using a "natural order"
     algorithm
    </description>
<param name="str1" required="1" vallist="0" default="" type="string">str1</param>
<param name="str2" required="1" vallist="0" default="" type="string">str2</param>
<return type="int">int</return>
<insert>strnatcasecmp(string str1, string str2);</insert>
<dialog title="Insert strnatcasecmp">strnatcasecmp(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="strnatcmp">
<description>
     String comparisons using a "natural order" algorithm
    </description>
<param name="str1" required="1" vallist="0" default="" type="string">str1</param>
<param name="str2" required="1" vallist="0" default="" type="string">str2</param>
<return type="int">int</return>
<insert>strnatcmp(string str1, string str2);</insert>
<dialog title="Insert strnatcmp">strnatcmp(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="strncasecmp">
<description>
     Binary safe case-insensitive string comparison of the first n
     characters
    </description>
<param name="str1" required="1" vallist="0" default="" type="string">str1</param>
<param name="str2" required="1" vallist="0" default="" type="string">str2</param>
<param name="len" required="1" vallist="0" default="" type="int">len</param>
<return type="int">int</return>
<insert>strncasecmp(string str1, string str2, int len);</insert>
<dialog title="Insert strncasecmp">strncasecmp(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="strncmp">
<description>
     Binary safe string comparison of the first n characters
    </description>
<param name="str1" required="1" vallist="0" default="" type="string">str1</param>
<param name="str2" required="1" vallist="0" default="" type="string">str2</param>
<param name="len" required="1" vallist="0" default="" type="int">len</param>
<return type="int">int</return>
<insert>strncmp(string str1, string str2, int len);</insert>
<dialog title="Insert strncmp">strncmp(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="strpos">
<description>
     Find position of first occurrence of a string
    </description>
<param name="haystack" required="1" vallist="0" default="" type="string">haystack</param>
<param name="needle" required="1" vallist="0" default="" type="string">needle</param>
<param name="offset" required="0" vallist="0" default="" type="int">offset</param>
<return type="int">int</return>
<insert>strpos(string haystack, string needle [,int offset]);</insert>
<dialog title="Insert strpos">strpos(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="strrchr">
<description>
     Find the last occurrence of a character in a string
    </description>
<param name="haystack" required="1" vallist="0" default="" type="string">haystack</param>
<param name="needle" required="1" vallist="0" default="" type="string">needle</param>
<return type="string">string</return>
<insert>strrchr(string haystack, string needle);</insert>
<dialog title="Insert strrchr">strrchr(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="strrev">
<description>Reverse a string</description>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<return type="string">string</return>
<insert>strrev(string string);</insert>
<dialog title="Insert strrev">strrev(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="strrpos">
<description>
     Find position of last occurrence of a char in a string
    </description>
<param name="haystack" required="1" vallist="0" default="" type="string">haystack</param>
<param name="needle" required="1" vallist="0" default="" type="char">needle</param>
<return type="int">int</return>
<insert>strrpos(string haystack, char needle);</insert>
<dialog title="Insert strrpos">strrpos(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="strspn">
<description>
     Find length of initial segment matching mask
    </description>
<param name="str1" required="1" vallist="0" default="" type="string">str1</param>
<param name="str2" required="1" vallist="0" default="" type="string">str2</param>
<return type="int">int</return>
<insert>strspn(string str1, string str2);</insert>
<dialog title="Insert strspn">strspn(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="strstr">
<description>Find first occurrence of a string</description>
<param name="haystack" required="1" vallist="0" default="" type="string">haystack</param>
<param name="needle" required="1" vallist="0" default="" type="string">needle</param>
<return type="string">string</return>
<insert>strstr(string haystack, string needle);</insert>
<dialog title="Insert strstr">strstr(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="strtok">
<description>Tokenize string</description>
<param name="arg1" required="1" vallist="0" default="" type="string">arg1</param>
<param name="arg2" required="1" vallist="0" default="" type="string">arg2</param>
<return type="string">string</return>
<insert>strtok(string arg1, string arg2);</insert>
<dialog title="Insert strtok">strtok(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="strtolower">
<description>Make a string lowercase</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<return type="string">string</return>
<insert>strtolower(string str);</insert>
<dialog title="Insert strtolower">strtolower(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="strtoupper">
<description>Make a string uppercase</description>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<return type="string">string</return>
<insert>strtoupper(string string);</insert>
<dialog title="Insert strtoupper">strtoupper(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="strtr">
<description>Translate certain characters</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="from" required="1" vallist="0" default="" type="string">from</param>
<param name="to" required="1" vallist="0" default="" type="string">to</param>
<return type="string">string</return>
<insert>strtr(string str, string from, string to);</insert>
<dialog title="Insert strtr">strtr(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="substr_count">
<description>Count the number of substring occurrences</description>
<param name="haystack" required="1" vallist="0" default="" type="string">haystack</param>
<param name="needle" required="1" vallist="0" default="" type="string">needle</param>
<return type="int">int</return>
<insert>substr_count(string haystack, string needle);</insert>
<dialog title="Insert substr_count">substr_count(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="substr_replace">
<description>Replace text within a portion of a string</description>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<param name="replacement" required="1" vallist="0" default="" type="string">replacement</param>
<param name="start" required="1" vallist="0" default="" type="int">start</param>
<param name="length" required="0" vallist="0" default="" type="int">length</param>
<return type="string">string</return>
<insert>substr_replace(string string, string replacement, int start [,int length]);</insert>
<dialog title="Insert substr_replace">substr_replace(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="substr">
<description>Return part of a string</description>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<param name="start" required="1" vallist="0" default="" type="int">start</param>
<param name="length" required="0" vallist="0" default="" type="int">length</param>
<return type="string">string</return>
<insert>substr(string string, int start [,int length]);</insert>
<dialog title="Insert substr">substr(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="trim">
<description>
     Strip whitespace from the beginning and end of a string
    </description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="charlist" required="0" vallist="0" default="" type="string">charlist</param>
<return type="string">string</return>
<insert>trim(string str [,string charlist]);</insert>
<dialog title="Insert trim">trim(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="ucfirst">
<description>Make a string's first character uppercase</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<return type="string">string</return>
<insert>ucfirst(string str);</insert>
<dialog title="Insert ucfirst">ucfirst(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="ucwords">
<description>
     Uppercase the first character of each word in a string
    </description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<return type="string">string</return>
<insert>ucwords(string str);</insert>
<dialog title="Insert ucwords">ucwords(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="vprintf">
<description>Output a formatted string</description>
<param name="format" required="1" vallist="0" default="" type="string">format</param>
<param name="args" required="1" vallist="0" default="" type="array">args</param>
<return type="void">void</return>
<insert>vprintf(string format, array args);</insert>
<dialog title="Insert vprintf">vprintf(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="vsprintf">
<description>Return a formatted string</description>
<param name="format" required="1" vallist="0" default="" type="string">format</param>
<param name="args" required="1" vallist="0" default="" type="array">args</param>
<return type="string">string</return>
<insert>vsprintf(string format, array args);</insert>
<dialog title="Insert vsprintf">vsprintf(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="wordwrap">
<description>
     Wraps a string to a given number of characters using a string
     break character.
    </description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="width" required="0" vallist="0" default="" type="int">width</param>
<param name="break" required="0" vallist="0" default="" type="string">break</param>
<param name="cut" required="0" vallist="0" default="" type="boolean">cut</param>
<return type="string">string</return>
<insert>wordwrap(string str [,int width] [,string break] [,boolean cut]);</insert>
<dialog title="Insert wordwrap">wordwrap(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="swf">
<function name="swf_actiongeturl">
<description>Get a URL from a Shockwave Flash movie</description>
<param name="url" required="1" vallist="0" default="" type="string">url</param>
<param name="target" required="1" vallist="0" default="" type="string">target</param>
<return type="void">void</return>
<insert>swf_actiongeturl(string url, string target);</insert>
<dialog title="Insert swf_actiongeturl">swf_actiongeturl(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_actiongotoframe">
<description>Play a frame and then stop</description>
<param name="framenumber" required="1" vallist="0" default="" type="int">framenumber</param>
<return type="void">void</return>
<insert>swf_actiongotoframe(int framenumber);</insert>
<dialog title="Insert swf_actiongotoframe">swf_actiongotoframe(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_actiongotolabel">
<description>
     Display a frame with the specified label
    </description>
<param name="label" required="1" vallist="0" default="" type="string">label</param>
<return type="void">void</return>
<insert>swf_actiongotolabel(string label);</insert>
<dialog title="Insert swf_actiongotolabel">swf_actiongotolabel(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_actionnextframe">
<description>Go foward one frame</description>
<return type="void">void</return>
<insert>swf_actionnextframe();</insert>
<dialog title="Insert swf_actionnextframe">swf_actionnextframe();</dialog>
<info title="Info window"></info>
</function>
<function name="swf_actionplay">
<description>
     Start playing the flash movie from the current frame
    </description>
<return type="void">void</return>
<insert>swf_actionplay();</insert>
<dialog title="Insert swf_actionplay">swf_actionplay();</dialog>
<info title="Info window"></info>
</function>
<function name="swf_actionprevframe">
<description>Go backwards one frame</description>
<return type="void">void</return>
<insert>swf_actionprevframe();</insert>
<dialog title="Insert swf_actionprevframe">swf_actionprevframe();</dialog>
<info title="Info window"></info>
</function>
<function name="swf_actionsettarget">
<description>Set the context for actions</description>
<param name="target" required="1" vallist="0" default="" type="string">target</param>
<return type="void">void</return>
<insert>swf_actionsettarget(string target);</insert>
<dialog title="Insert swf_actionsettarget">swf_actionsettarget(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_actionstop">
<description>
     Stop playing the flash movie at the current frame
    </description>
<return type="void">void</return>
<insert>swf_actionstop();</insert>
<dialog title="Insert swf_actionstop">swf_actionstop();</dialog>
<info title="Info window"></info>
</function>
<function name="swf_actiontogglequality">
<description>
     Toggle between low and high quality
    </description>
<return type="void">void</return>
<insert>swf_actiontogglequality();</insert>
<dialog title="Insert swf_actiontogglequality">swf_actiontogglequality();</dialog>
<info title="Info window"></info>
</function>
<function name="swf_actionwaitforframe">
<description>
     Skip actions if a frame has not been loaded
    </description>
<param name="framenumber" required="1" vallist="0" default="" type="int">framenumber</param>
<param name="skipcount" required="1" vallist="0" default="" type="int">skipcount</param>
<return type="void">void</return>
<insert>swf_actionwaitforframe(int framenumber, int skipcount);</insert>
<dialog title="Insert swf_actionwaitforframe">swf_actionwaitforframe(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_addbuttonrecord">
<description>
     Controls location, appearance and active area of the current button
    </description>
<param name="states" required="1" vallist="0" default="" type="int">states</param>
<param name="shapeid" required="1" vallist="0" default="" type="int">shapeid</param>
<param name="depth" required="1" vallist="0" default="" type="int">depth</param>
<return type="void">void</return>
<insert>swf_addbuttonrecord(int states, int shapeid, int depth);</insert>
<dialog title="Insert swf_addbuttonrecord">swf_addbuttonrecord(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_addcolor">
<description>
     Set the global add color to the rgba value specified
    </description>
<param name="r" required="1" vallist="0" default="" type="float">r</param>
<param name="g" required="1" vallist="0" default="" type="float">g</param>
<param name="b" required="1" vallist="0" default="" type="float">b</param>
<param name="a" required="1" vallist="0" default="" type="float">a</param>
<return type="void">void</return>
<insert>swf_addcolor(float r, float g, float b, float a);</insert>
<dialog title="Insert swf_addcolor">swf_addcolor(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_closefile">
<description>Close the current Shockwave Flash file</description>
<param name="
        return_file
       " required="0" vallist="0" default="" type="int">
        return_file
       </param>
<return type="void">void</return>
<insert>swf_closefile([int 
        return_file
       ]);</insert>
<dialog title="Insert swf_closefile">swf_closefile(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_definebitmap">
<description>Define a bitmap</description>
<param name="objid" required="1" vallist="0" default="" type="int">objid</param>
<param name="image_name" required="1" vallist="0" default="" type="string">image_name</param>
<return type="void">void</return>
<insert>swf_definebitmap(int objid, string image_name);</insert>
<dialog title="Insert swf_definebitmap">swf_definebitmap(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_definefont">
<description>
     Defines a font
    </description>
<param name="fontid" required="1" vallist="0" default="" type="int">fontid</param>
<param name="fontname" required="1" vallist="0" default="" type="string">fontname</param>
<return type="void">void</return>
<insert>swf_definefont(int fontid, string fontname);</insert>
<dialog title="Insert swf_definefont">swf_definefont(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_defineline">
<description>Define a line</description>
<param name="objid" required="1" vallist="0" default="" type="int">objid</param>
<param name="x1" required="1" vallist="0" default="" type="float">x1</param>
<param name="y1" required="1" vallist="0" default="" type="float">y1</param>
<param name="x2" required="1" vallist="0" default="" type="float">x2</param>
<param name="y2" required="1" vallist="0" default="" type="float">y2</param>
<param name="width" required="1" vallist="0" default="" type="float">width</param>
<return type="void">void</return>
<insert>swf_defineline(int objid, float x1, float y1, float x2, float y2, float width);</insert>
<dialog title="Insert swf_defineline">swf_defineline(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_definepoly">
<description>
     Define a polygon
    </description>
<param name="objid" required="1" vallist="0" default="" type="int">objid</param>
<param name="coords" required="1" vallist="0" default="" type="array">coords</param>
<param name="npoints" required="1" vallist="0" default="" type="int">npoints</param>
<param name="width" required="1" vallist="0" default="" type="float">width</param>
<return type="void">void</return>
<insert>swf_definepoly(int objid, array coords, int npoints, float width);</insert>
<dialog title="Insert swf_definepoly">swf_definepoly(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_definerect">
<description>Define a rectangle</description>
<param name="objid" required="1" vallist="0" default="" type="int">objid</param>
<param name="x1" required="1" vallist="0" default="" type="float">x1</param>
<param name="y1" required="1" vallist="0" default="" type="float">y1</param>
<param name="x2" required="1" vallist="0" default="" type="float">x2</param>
<param name="y2" required="1" vallist="0" default="" type="float">y2</param>
<param name="width" required="1" vallist="0" default="" type="float">width</param>
<return type="void">void</return>
<insert>swf_definerect(int objid, float x1, float y1, float x2, float y2, float width);</insert>
<dialog title="Insert swf_definerect">swf_definerect(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_definetext">
<description>Define a text string</description>
<param name="objid" required="1" vallist="0" default="" type="int">objid</param>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="docenter" required="1" vallist="0" default="" type="int">docenter</param>
<return type="void">void</return>
<insert>swf_definetext(int objid, string str, int docenter);</insert>
<dialog title="Insert swf_definetext">swf_definetext(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_endbutton">
<description>
     End the definition of the current button
    </description>
<return type="void">void</return>
<insert>swf_endbutton();</insert>
<dialog title="Insert swf_endbutton">swf_endbutton();</dialog>
<info title="Info window"></info>
</function>
<function name="swf_enddoaction">
<description>End the current action</description>
<return type="void">void</return>
<insert>swf_enddoaction();</insert>
<dialog title="Insert swf_enddoaction">swf_enddoaction();</dialog>
<info title="Info window"></info>
</function>
<function name="swf_endshape">
<description>
     Completes the definition of the current shape
    </description>
<return type="void">void</return>
<insert>swf_endshape();</insert>
<dialog title="Insert swf_endshape">swf_endshape();</dialog>
<info title="Info window"></info>
</function>
<function name="swf_endsymbol">
<description>End the definition of a symbol</description>
<return type="void">void</return>
<insert>swf_endsymbol();</insert>
<dialog title="Insert swf_endsymbol">swf_endsymbol();</dialog>
<info title="Info window"></info>
</function>
<function name="swf_fontsize">
<description>Change the font size</description>
<param name="size" required="1" vallist="0" default="" type="float">size</param>
<return type="void">void</return>
<insert>swf_fontsize(float size);</insert>
<dialog title="Insert swf_fontsize">swf_fontsize(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_fontslant">
<description>Set the font slant</description>
<param name="slant" required="1" vallist="0" default="" type="float">slant</param>
<return type="void">void</return>
<insert>swf_fontslant(float slant);</insert>
<dialog title="Insert swf_fontslant">swf_fontslant(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_fonttracking">
<description>Set the current font tracking</description>
<param name="tracking" required="1" vallist="0" default="" type="float">tracking</param>
<return type="void">void</return>
<insert>swf_fonttracking(float tracking);</insert>
<dialog title="Insert swf_fonttracking">swf_fonttracking(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_getbitmapinfo">
<description>Get information about a bitmap</description>
<param name="bitmapid" required="1" vallist="0" default="" type="int">bitmapid</param>
<return type="array">array</return>
<insert>swf_getbitmapinfo(int bitmapid);</insert>
<dialog title="Insert swf_getbitmapinfo">swf_getbitmapinfo(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_getfontinfo">
<description>
     The height in pixels of a capital A and a lowercase x
    </description>
<return type="array">array</return>
<insert>swf_getfontinfo();</insert>
<dialog title="Insert swf_getfontinfo">swf_getfontinfo();</dialog>
<info title="Info window"></info>
</function>
<function name="swf_getframe">
<description>Get the frame number of the current frame</description>
<return type="int">int</return>
<insert>swf_getframe();</insert>
<dialog title="Insert swf_getframe">swf_getframe();</dialog>
<info title="Info window"></info>
</function>
<function name="swf_labelframe">
<description>Label the current frame</description>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="void">void</return>
<insert>swf_labelframe(string name);</insert>
<dialog title="Insert swf_labelframe">swf_labelframe(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_lookat">
<description>Define a viewing transformation</description>
<param name="view_x" required="1" vallist="0" default="" type="float">view_x</param>
<param name="view_y" required="1" vallist="0" default="" type="float">view_y</param>
<param name="view_z" required="1" vallist="0" default="" type="float">view_z</param>
<param name="reference_x" required="1" vallist="0" default="" type="float">reference_x</param>
<param name="reference_y" required="1" vallist="0" default="" type="float">reference_y</param>
<param name="reference_z" required="1" vallist="0" default="" type="float">reference_z</param>
<param name="twist" required="1" vallist="0" default="" type="float">twist</param>
<return type="void">void</return>
<insert>swf_lookat(float view_x, float view_y, float view_z, float reference_x, float reference_y, float reference_z, float twist);</insert>
<dialog title="Insert swf_lookat">swf_lookat(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_modifyobject">
<description>Modify an object</description>
<param name="depth" required="1" vallist="0" default="" type="int">depth</param>
<param name="how" required="1" vallist="0" default="" type="int">how</param>
<return type="void">void</return>
<insert>swf_modifyobject(int depth, int how);</insert>
<dialog title="Insert swf_modifyobject">swf_modifyobject(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_mulcolor">
<description>
     Sets the global multiply color to the rgba value specified
    </description>
<param name="r" required="1" vallist="0" default="" type="float">r</param>
<param name="g" required="1" vallist="0" default="" type="float">g</param>
<param name="b" required="1" vallist="0" default="" type="float">b</param>
<param name="a" required="1" vallist="0" default="" type="float">a</param>
<return type="void">void</return>
<insert>swf_mulcolor(float r, float g, float b, float a);</insert>
<dialog title="Insert swf_mulcolor">swf_mulcolor(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_nextid">
<description>Returns the next free object id</description>
<return type="int">int</return>
<insert>swf_nextid();</insert>
<dialog title="Insert swf_nextid">swf_nextid();</dialog>
<info title="Info window"></info>
</function>
<function name="swf_oncondition">
<description>
     Describe a transition used to trigger an action list
    </description>
<param name="transition" required="1" vallist="0" default="" type="int">transition</param>
<return type="void">void</return>
<insert>swf_oncondition(int transition);</insert>
<dialog title="Insert swf_oncondition">swf_oncondition(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_openfile">
<description>Open a new Shockwave Flash file</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="width" required="1" vallist="0" default="" type="float">width</param>
<param name="height" required="1" vallist="0" default="" type="float">height</param>
<param name="framerate" required="1" vallist="0" default="" type="float">framerate</param>
<param name="r" required="1" vallist="0" default="" type="float">r</param>
<param name="g" required="1" vallist="0" default="" type="float">g</param>
<param name="b" required="1" vallist="0" default="" type="float">b</param>
<return type="void">void</return>
<insert>swf_openfile(string filename, float width, float height, float framerate, float r, float g, float b);</insert>
<dialog title="Insert swf_openfile">swf_openfile(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_ortho">
<description>
     Defines an orthographic mapping of user coordinates onto the
     current viewport
    </description>
<param name="xmin" required="1" vallist="0" default="" type="float">xmin</param>
<param name="xmax" required="1" vallist="0" default="" type="float">xmax</param>
<param name="ymin" required="1" vallist="0" default="" type="float">ymin</param>
<param name="ymax" required="1" vallist="0" default="" type="float">ymax</param>
<param name="zmin" required="1" vallist="0" default="" type="float">zmin</param>
<param name="zmax" required="1" vallist="0" default="" type="float">zmax</param>
<return type="void">void</return>
<insert>swf_ortho(float xmin, float xmax, float ymin, float ymax, float zmin, float zmax);</insert>
<dialog title="Insert swf_ortho">swf_ortho(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_ortho2">
<description>
     Defines 2D orthographic mapping of user coordinates onto the
     current viewport
    </description>
<param name="xmin" required="1" vallist="0" default="" type="float">xmin</param>
<param name="xmax" required="1" vallist="0" default="" type="float">xmax</param>
<param name="ymin" required="1" vallist="0" default="" type="float">ymin</param>
<param name="ymax" required="1" vallist="0" default="" type="float">ymax</param>
<return type="void">void</return>
<insert>swf_ortho2(float xmin, float xmax, float ymin, float ymax);</insert>
<dialog title="Insert swf_ortho2">swf_ortho2(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_perspective">
<description>
     Define a perspective projection transformation
    </description>
<param name="fovy" required="1" vallist="0" default="" type="float">fovy</param>
<param name="aspect" required="1" vallist="0" default="" type="float">aspect</param>
<param name="near" required="1" vallist="0" default="" type="float">near</param>
<param name="far" required="1" vallist="0" default="" type="float">far</param>
<return type="void">void</return>
<insert>swf_perspective(float fovy, float aspect, float near, float far);</insert>
<dialog title="Insert swf_perspective">swf_perspective(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_placeobject">
<description>Place an object onto the screen</description>
<param name="objid" required="1" vallist="0" default="" type="int">objid</param>
<param name="depth" required="1" vallist="0" default="" type="int">depth</param>
<return type="void">void</return>
<insert>swf_placeobject(int objid, int depth);</insert>
<dialog title="Insert swf_placeobject">swf_placeobject(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_polarview">
<description>
     Define the viewer's position with polar coordinates
    </description>
<param name="dist" required="1" vallist="0" default="" type="float">dist</param>
<param name="azimuth" required="1" vallist="0" default="" type="float">azimuth</param>
<param name="incidence" required="1" vallist="0" default="" type="float">incidence</param>
<param name="twist" required="1" vallist="0" default="" type="float">twist</param>
<return type="void">void</return>
<insert>swf_polarview(float dist, float azimuth, float incidence, float twist);</insert>
<dialog title="Insert swf_polarview">swf_polarview(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_popmatrix">
<description>
     Restore a previous transformation matrix
    </description>
<return type="void">void</return>
<insert>swf_popmatrix();</insert>
<dialog title="Insert swf_popmatrix">swf_popmatrix();</dialog>
<info title="Info window"></info>
</function>
<function name="swf_posround">
<description>
     Enables or Disables the rounding of the translation when objects
     are placed or moved
    </description>
<param name="round" required="1" vallist="0" default="" type="int">round</param>
<return type="void">void</return>
<insert>swf_posround(int round);</insert>
<dialog title="Insert swf_posround">swf_posround(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_pushmatrix">
<description>
     Push the current transformation matrix back unto the stack
    </description>
<return type="void">void</return>
<insert>swf_pushmatrix();</insert>
<dialog title="Insert swf_pushmatrix">swf_pushmatrix();</dialog>
<info title="Info window"></info>
</function>
<function name="swf_removeobject">
<description>Remove an object</description>
<param name="depth" required="1" vallist="0" default="" type="int">depth</param>
<return type="void">void</return>
<insert>swf_removeobject(int depth);</insert>
<dialog title="Insert swf_removeobject">swf_removeobject(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_rotate">
<description>Rotate the current transformation</description>
<param name="angle" required="1" vallist="0" default="" type="float">angle</param>
<param name="axis" required="1" vallist="0" default="" type="string">axis</param>
<return type="void">void</return>
<insert>swf_rotate(float angle, string axis);</insert>
<dialog title="Insert swf_rotate">swf_rotate(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_scale">
<description>Scale the current transformation</description>
<param name="x" required="1" vallist="0" default="" type="float">x</param>
<param name="y" required="1" vallist="0" default="" type="float">y</param>
<param name="z" required="1" vallist="0" default="" type="float">z</param>
<return type="void">void</return>
<insert>swf_scale(float x, float y, float z);</insert>
<dialog title="Insert swf_scale">swf_scale(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_setfont">
<description>Change the current font</description>
<param name="fontid" required="1" vallist="0" default="" type="int">fontid</param>
<return type="void">void</return>
<insert>swf_setfont(int fontid);</insert>
<dialog title="Insert swf_setfont">swf_setfont(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_setframe">
<description>Switch to a specified frame</description>
<param name="framenumber" required="1" vallist="0" default="" type="int">framenumber</param>
<return type="void">void</return>
<insert>swf_setframe(int framenumber);</insert>
<dialog title="Insert swf_setframe">swf_setframe(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_shapearc">
<description>Draw a circular arc</description>
<param name="x" required="1" vallist="0" default="" type="float">x</param>
<param name="y" required="1" vallist="0" default="" type="float">y</param>
<param name="r" required="1" vallist="0" default="" type="float">r</param>
<param name="ang1" required="1" vallist="0" default="" type="float">ang1</param>
<param name="ang2" required="1" vallist="0" default="" type="float">ang2</param>
<return type="void">void</return>
<insert>swf_shapearc(float x, float y, float r, float ang1, float ang2);</insert>
<dialog title="Insert swf_shapearc">swf_shapearc(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_shapecurveto">
<description>
     Draw a quadratic bezier curve between two points
    </description>
<param name="x1" required="1" vallist="0" default="" type="float">x1</param>
<param name="y1" required="1" vallist="0" default="" type="float">y1</param>
<param name="x2" required="1" vallist="0" default="" type="float">x2</param>
<param name="y2" required="1" vallist="0" default="" type="float">y2</param>
<return type="void">void</return>
<insert>swf_shapecurveto(float x1, float y1, float x2, float y2);</insert>
<dialog title="Insert swf_shapecurveto">swf_shapecurveto(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_shapecurveto3">
<description>Draw a cubic bezier curve</description>
<param name="x1" required="1" vallist="0" default="" type="float">x1</param>
<param name="y1" required="1" vallist="0" default="" type="float">y1</param>
<param name="x2" required="1" vallist="0" default="" type="float">x2</param>
<param name="y2" required="1" vallist="0" default="" type="float">y2</param>
<param name="x3" required="1" vallist="0" default="" type="float">x3</param>
<param name="y3" required="1" vallist="0" default="" type="float">y3</param>
<return type="void">void</return>
<insert>swf_shapecurveto3(float x1, float y1, float x2, float y2, float x3, float y3);</insert>
<dialog title="Insert swf_shapecurveto3">swf_shapecurveto3(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_shapefillbitmapclip">
<description>
     Set current fill mode to clipped bitmap
    </description>
<param name="bitmapid" required="1" vallist="0" default="" type="int">bitmapid</param>
<return type="void">void</return>
<insert>swf_shapefillbitmapclip(int bitmapid);</insert>
<dialog title="Insert swf_shapefillbitmapclip">swf_shapefillbitmapclip(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_shapefillbitmaptile">
<description>
     Set current fill mode to tiled bitmap
    </description>
<param name="bitmapid" required="1" vallist="0" default="" type="int">bitmapid</param>
<return type="void">void</return>
<insert>swf_shapefillbitmaptile(int bitmapid);</insert>
<dialog title="Insert swf_shapefillbitmaptile">swf_shapefillbitmaptile(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_shapefilloff">
<description>Turns off filling</description>
<return type="void">void</return>
<insert>swf_shapefilloff();</insert>
<dialog title="Insert swf_shapefilloff">swf_shapefilloff();</dialog>
<info title="Info window"></info>
</function>
<function name="swf_shapefillsolid">
<description>
     Set the current fill style to the specified color
    </description>
<param name="r" required="1" vallist="0" default="" type="float">r</param>
<param name="g" required="1" vallist="0" default="" type="float">g</param>
<param name="b" required="1" vallist="0" default="" type="float">b</param>
<param name="a" required="1" vallist="0" default="" type="float">a</param>
<return type="void">void</return>
<insert>swf_shapefillsolid(float r, float g, float b, float a);</insert>
<dialog title="Insert swf_shapefillsolid">swf_shapefillsolid(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_shapelinesolid">
<description>Set the current line style</description>
<param name="r" required="1" vallist="0" default="" type="float">r</param>
<param name="g" required="1" vallist="0" default="" type="float">g</param>
<param name="b" required="1" vallist="0" default="" type="float">b</param>
<param name="a" required="1" vallist="0" default="" type="float">a</param>
<param name="width" required="1" vallist="0" default="" type="float">width</param>
<return type="void">void</return>
<insert>swf_shapelinesolid(float r, float g, float b, float a, float width);</insert>
<dialog title="Insert swf_shapelinesolid">swf_shapelinesolid(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_shapelineto">
<description>Draw a line</description>
<param name="x" required="1" vallist="0" default="" type="float">x</param>
<param name="y" required="1" vallist="0" default="" type="float">y</param>
<return type="void">void</return>
<insert>swf_shapelineto(float x, float y);</insert>
<dialog title="Insert swf_shapelineto">swf_shapelineto(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_shapemoveto">
<description>Move the current position</description>
<param name="x" required="1" vallist="0" default="" type="float">x</param>
<param name="y" required="1" vallist="0" default="" type="float">y</param>
<return type="void">void</return>
<insert>swf_shapemoveto(float x, float y);</insert>
<dialog title="Insert swf_shapemoveto">swf_shapemoveto(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_showframe">
<description>Display the current frame</description>
<return type="void">void</return>
<insert>swf_showframe();</insert>
<dialog title="Insert swf_showframe">swf_showframe();</dialog>
<info title="Info window"></info>
</function>
<function name="swf_startbutton">
<description>Start the definition of a button</description>
<param name="objid" required="1" vallist="0" default="" type="int">objid</param>
<param name="type" required="1" vallist="0" default="" type="int">type</param>
<return type="void">void</return>
<insert>swf_startbutton(int objid, int type);</insert>
<dialog title="Insert swf_startbutton">swf_startbutton(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_startdoaction">
<description>
     Start a description of an action list for the current frame
    </description>
<return type="void">void</return>
<insert>swf_startdoaction();</insert>
<dialog title="Insert swf_startdoaction">swf_startdoaction();</dialog>
<info title="Info window"></info>
</function>
<function name="swf_startshape">
<description>Start a complex shape</description>
<param name="objid" required="1" vallist="0" default="" type="int">objid</param>
<return type="void">void</return>
<insert>swf_startshape(int objid);</insert>
<dialog title="Insert swf_startshape">swf_startshape(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_startsymbol">
<description>Define a symbol</description>
<param name="objid" required="1" vallist="0" default="" type="int">objid</param>
<return type="void">void</return>
<insert>swf_startsymbol(int objid);</insert>
<dialog title="Insert swf_startsymbol">swf_startsymbol(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_textwidth">
<description>Get the width of a string</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<return type="float">float</return>
<insert>swf_textwidth(string str);</insert>
<dialog title="Insert swf_textwidth">swf_textwidth(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_translate">
<description>Translate the current transformations</description>
<param name="x" required="1" vallist="0" default="" type="float">x</param>
<param name="y" required="1" vallist="0" default="" type="float">y</param>
<param name="z" required="1" vallist="0" default="" type="float">z</param>
<return type="void">void</return>
<insert>swf_translate(float x, float y, float z);</insert>
<dialog title="Insert swf_translate">swf_translate(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="swf_viewport">
<description>Select an area for future drawing</description>
<param name="xmin" required="1" vallist="0" default="" type="float">xmin</param>
<param name="xmax" required="1" vallist="0" default="" type="float">xmax</param>
<param name="ymin" required="1" vallist="0" default="" type="float">ymin</param>
<param name="ymax" required="1" vallist="0" default="" type="float">ymax</param>
<return type="void">void</return>
<insert>swf_viewport(float xmin, float xmax, float ymin, float ymax);</insert>
<dialog title="Insert swf_viewport">swf_viewport(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="sybase">
<function name="sybase_affected_rows">
<description>get number of affected rows in last query</description>
<param name="link_identifier" required="0" vallist="0" default="" type="int">link_identifier</param>
<return type="int">int</return>
<insert>sybase_affected_rows([int link_identifier]);</insert>
<dialog title="Insert sybase_affected_rows">sybase_affected_rows(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sybase_close">
<description>close Sybase connection</description>
<param name="link_identifier" required="0" vallist="0" default="" type="int">link_identifier</param>
<return type="bool">bool</return>
<insert>sybase_close([int link_identifier]);</insert>
<dialog title="Insert sybase_close">sybase_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sybase_connect">
<description>open Sybase server connection</description>
<param name="servername" required="1" vallist="0" default="" type="string">servername</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="charset" required="0" vallist="0" default="" type="string">charset</param>
<return type="int">int</return>
<insert>sybase_connect(string servername, string username, string password [,string charset]);</insert>
<dialog title="Insert sybase_connect">sybase_connect(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="sybase_data_seek">
<description>move internal row pointer</description>
<param name="result_identifier" required="1" vallist="0" default="" type="int">result_identifier</param>
<param name="row_number" required="1" vallist="0" default="" type="int">row_number</param>
<return type="bool">bool</return>
<insert>sybase_data_seek(int result_identifier, int row_number);</insert>
<dialog title="Insert sybase_data_seek">sybase_data_seek(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="sybase_deadlock_retry_count">
<description>set the deadlock retry count</description>
<param name="retry_count" required="1" vallist="0" default="" type="int">retry_count</param>
<return type="void">void</return>
<insert>sybase_deadlock_retry_count(int retry_count);</insert>
<dialog title="Insert sybase_deadlock_retry_count">sybase_deadlock_retry_count(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sybase_fetch_array">
<description>fetch row as array</description>
<param name="result" required="1" vallist="0" default="" type="int">result</param>
<return type="array">array</return>
<insert>sybase_fetch_array(int result);</insert>
<dialog title="Insert sybase_fetch_array">sybase_fetch_array(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sybase_fetch_assoc">
<description>fetch row as associative array</description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<return type="array">array</return>
<insert>sybase_fetch_assoc(resource result);</insert>
<dialog title="Insert sybase_fetch_assoc">sybase_fetch_assoc(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sybase_fetch_field">
<description>get field information</description>
<param name="result" required="1" vallist="0" default="" type="int">result</param>
<param name="field_offset" required="0" vallist="0" default="" type="int">field_offset</param>
<return type="object">object</return>
<insert>sybase_fetch_field(int result [,int field_offset]);</insert>
<dialog title="Insert sybase_fetch_field">sybase_fetch_field(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="sybase_fetch_object">
<description>fetch row as object</description>
<param name="result" required="1" vallist="0" default="" type="int">result</param>
<return type="int">int</return>
<insert>sybase_fetch_object(int result);</insert>
<dialog title="Insert sybase_fetch_object">sybase_fetch_object(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sybase_fetch_row">
<description>get row as enumerated array</description>
<param name="result" required="1" vallist="0" default="" type="int">result</param>
<return type="array">array</return>
<insert>sybase_fetch_row(int result);</insert>
<dialog title="Insert sybase_fetch_row">sybase_fetch_row(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sybase_field_seek">
<description>set field offset</description>
<param name="result" required="1" vallist="0" default="" type="int">result</param>
<param name="field_offset" required="1" vallist="0" default="" type="int">field_offset</param>
<return type="int">int</return>
<insert>sybase_field_seek(int result, int field_offset);</insert>
<dialog title="Insert sybase_field_seek">sybase_field_seek(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="sybase_free_result">
<description>free result memory</description>
<param name="result" required="1" vallist="0" default="" type="int">result</param>
<return type="bool">bool</return>
<insert>sybase_free_result(int result);</insert>
<dialog title="Insert sybase_free_result">sybase_free_result(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sybase_get_last_message">
<description>Returns the last message from the server</description>
<return type="string">string</return>
<insert>sybase_get_last_message();</insert>
<dialog title="Insert sybase_get_last_message">sybase_get_last_message();</dialog>
<info title="Info window"></info>
</function>
<function name="sybase_min_client_severity">
<description>Sets minimum client severity</description>
<param name="severity" required="1" vallist="0" default="" type="int">severity</param>
<return type="void">void</return>
<insert>sybase_min_client_severity(int severity);</insert>
<dialog title="Insert sybase_min_client_severity">sybase_min_client_severity(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sybase_min_error_severity">
<description>Sets minimum error severity</description>
<param name="severity" required="1" vallist="0" default="" type="int">severity</param>
<return type="void">void</return>
<insert>sybase_min_error_severity(int severity);</insert>
<dialog title="Insert sybase_min_error_severity">sybase_min_error_severity(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sybase_min_message_severity">
<description>Sets minimum message severity</description>
<param name="severity" required="1" vallist="0" default="" type="int">severity</param>
<return type="void">void</return>
<insert>sybase_min_message_severity(int severity);</insert>
<dialog title="Insert sybase_min_message_severity">sybase_min_message_severity(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sybase_min_server_severity">
<description>Sets minimum server severity</description>
<param name="severity" required="1" vallist="0" default="" type="int">severity</param>
<return type="void">void</return>
<insert>sybase_min_server_severity(int severity);</insert>
<dialog title="Insert sybase_min_server_severity">sybase_min_server_severity(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sybase_num_fields">
<description>get number of fields in result</description>
<param name="result" required="1" vallist="0" default="" type="int">result</param>
<return type="int">int</return>
<insert>sybase_num_fields(int result);</insert>
<dialog title="Insert sybase_num_fields">sybase_num_fields(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sybase_num_rows">
<description>Get number of rows in result</description>
<param name="result" required="1" vallist="0" default="" type="int">result</param>
<return type="int">int</return>
<insert>sybase_num_rows(int result);</insert>
<dialog title="Insert sybase_num_rows">sybase_num_rows(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sybase_pconnect">
<description>open persistent Sybase connection</description>
<param name="servername" required="1" vallist="0" default="" type="string">servername</param>
<param name="username" required="1" vallist="0" default="" type="string">username</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="charset" required="0" vallist="0" default="" type="string">charset</param>
<return type="int">int</return>
<insert>sybase_pconnect(string servername, string username, string password [,string charset]);</insert>
<dialog title="Insert sybase_pconnect">sybase_pconnect(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="sybase_query">
<description>Send Sybase query</description>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<param name="link_identifier" required="1" vallist="0" default="" type="int">link_identifier</param>
<return type="int">int</return>
<insert>sybase_query(string query, int link_identifier);</insert>
<dialog title="Insert sybase_query">sybase_query(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="sybase_result">
<description>get result data</description>
<param name="result" required="1" vallist="0" default="" type="int">result</param>
<param name="row" required="1" vallist="0" default="" type="int">row</param>
<param name="field" required="1" vallist="0" default="" type="mixed">field</param>
<return type="string">string</return>
<insert>sybase_result(int result, int row, mixed field);</insert>
<dialog title="Insert sybase_result">sybase_result(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="sybase_select_db">
<description>select Sybase database</description>
<param name="database_name" required="1" vallist="0" default="" type="string">database_name</param>
<param name="link_identifier" required="1" vallist="0" default="" type="int">link_identifier</param>
<return type="bool">bool</return>
<insert>sybase_select_db(string database_name, int link_identifier);</insert>
<dialog title="Insert sybase_select_db">sybase_select_db(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="sybase_set_message_handler">
<description>set handler called when a server message is raised</description>
<param name="handler" required="1" vallist="0" default="" type="callback">handler</param>
<return type="bool">bool</return>
<insert>sybase_set_message_handler(callback handler);</insert>
<dialog title="Insert sybase_set_message_handler">sybase_set_message_handler(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="sybase_unbuffered_query">
<description>send Sybase query and do not block</description>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<param name="link_identifier" required="1" vallist="0" default="" type="int">link_identifier</param>
<return type="resource">resource</return>
<insert>sybase_unbuffered_query(string query, int link_identifier);</insert>
<dialog title="Insert sybase_unbuffered_query">sybase_unbuffered_query(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="tokenizer">
<function name="token_get_all">
<description>Split given source into PHP tokens</description>
<param name="source" required="1" vallist="0" default="" type="string">source</param>
<return type="array">array</return>
<insert>token_get_all(string source);</insert>
<dialog title="Insert token_get_all">token_get_all(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="token_name">
<description>Get the symbolic name of a given PHP token</description>
<param name="token" required="1" vallist="0" default="" type="int">token</param>
<return type="string">string</return>
<insert>token_name(int token);</insert>
<dialog title="Insert token_name">token_name(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="uodbc">
<function name="odbc_autocommit">
<description>Toggle autocommit behaviour</description>
<param name="connection_id" required="1" vallist="0" default="" type="resource">connection_id</param>
<param name="OnOff" required="0" vallist="0" default="" type="bool">OnOff</param>
<return type="bool">bool</return>
<insert>odbc_autocommit(resource connection_id [,bool OnOff]);</insert>
<dialog title="Insert odbc_autocommit">odbc_autocommit(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_binmode">
<description>Handling of binary column data</description>
<param name="result_id" required="1" vallist="0" default="" type="resource">result_id</param>
<param name="mode" required="1" vallist="0" default="" type="int">mode</param>
<return type="int">int</return>
<insert>odbc_binmode(resource result_id, int mode);</insert>
<dialog title="Insert odbc_binmode">odbc_binmode(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_close_all">
<description>Close all ODBC connections</description>
<return type="void">void</return>
<insert>odbc_close_all();</insert>
<dialog title="Insert odbc_close_all">odbc_close_all();</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_close">
<description>Close an ODBC connection</description>
<param name="connection_id" required="1" vallist="0" default="" type="resource">connection_id</param>
<return type="void">void</return>
<insert>odbc_close(resource connection_id);</insert>
<dialog title="Insert odbc_close">odbc_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_columnprivileges">
<description>
     Returns a result identifier that can be used to fetch a list of
     columns and associated privileges
    </description>
<param name="connection_id" required="1" vallist="0" default="" type="resource">connection_id</param>
<param name="qualifier" required="0" vallist="0" default="" type="string">qualifier</param>
<param name="owner" required="0" vallist="0" default="" type="string">owner</param>
<param name="table_name" required="0" vallist="0" default="" type="string">table_name</param>
<param name="column_name" required="0" vallist="0" default="" type="string">column_name</param>
<return type="int">int</return>
<insert>odbc_columnprivileges(resource connection_id [,string qualifier] [,string owner] [,string table_name] [,string column_name]);</insert>
<dialog title="Insert odbc_columnprivileges">odbc_columnprivileges(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_columns">
<description>
     Lists the column names in specified tables. Returns a result
     identifier containing the information.
    </description>
<param name="connection_id" required="1" vallist="0" default="" type="resource">connection_id</param>
<param name="qualifier" required="0" vallist="0" default="" type="string">qualifier</param>
<param name="schema" required="0" vallist="0" default="" type="string">schema</param>
<param name="table_name" required="0" vallist="0" default="" type="string">table_name</param>
<param name="column_name" required="0" vallist="0" default="" type="string">column_name</param>
<return type="resource">resource</return>
<insert>odbc_columns(resource connection_id [,string qualifier] [,string schema] [,string table_name] [,string column_name]);</insert>
<dialog title="Insert odbc_columns">odbc_columns(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_commit">
<description>Commit an ODBC transaction</description>
<param name="connection_id" required="1" vallist="0" default="" type="resource">connection_id</param>
<return type="bool">bool</return>
<insert>odbc_commit(resource connection_id);</insert>
<dialog title="Insert odbc_commit">odbc_commit(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_connect">
<description>Connect to a datasource</description>
<param name="dsn" required="1" vallist="0" default="" type="string">dsn</param>
<param name="user" required="1" vallist="0" default="" type="string">user</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="cursor_type" required="0" vallist="0" default="" type="int">cursor_type</param>
<return type="resource">resource</return>
<insert>odbc_connect(string dsn, string user, string password [,int cursor_type]);</insert>
<dialog title="Insert odbc_connect">odbc_connect(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_cursor">
<description>Get cursorname</description>
<param name="result_id" required="1" vallist="0" default="" type="resource">result_id</param>
<return type="string">string</return>
<insert>odbc_cursor(resource result_id);</insert>
<dialog title="Insert odbc_cursor">odbc_cursor(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_data_source">
<description>Returns information about a current connection</description>
<param name="connection_id" required="1" vallist="0" default="" type="resource">connection_id</param>
<param name="fetch_type" required="1" vallist="0" default="" type="constant">fetch_type</param>
<return type="resource">resource</return>
<insert>odbc_data_source(resource connection_id, constant fetch_type);</insert>
<dialog title="Insert odbc_data_source">odbc_data_source(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_do">
<description>Synonym for </description>
<param name="conn_id" required="1" vallist="0" default="" type="resource">conn_id</param>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<return type="resource">resource</return>
<insert>odbc_do(resource conn_id, string query);</insert>
<dialog title="Insert odbc_do">odbc_do(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_error">
<description>Get the last error code</description>
<param name="connection_id" required="0" vallist="0" default="" type="resource">connection_id</param>
<return type="string">string</return>
<insert>odbc_error([resource connection_id]);</insert>
<dialog title="Insert odbc_error">odbc_error(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_errormsg">
<description>Get the last error message</description>
<param name="connection_id" required="0" vallist="0" default="" type="resource">connection_id</param>
<return type="string">string</return>
<insert>odbc_errormsg([resource connection_id]);</insert>
<dialog title="Insert odbc_errormsg">odbc_errormsg(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_exec">
<description>Prepare and execute a SQL statement</description>
<param name="connection_id" required="1" vallist="0" default="" type="resource">connection_id</param>
<param name="query_string" required="1" vallist="0" default="" type="string">query_string</param>
<return type="resource">resource</return>
<insert>odbc_exec(resource connection_id, string query_string);</insert>
<dialog title="Insert odbc_exec">odbc_exec(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_execute">
<description>Execute a prepared statement</description>
<param name="result_id" required="1" vallist="0" default="" type="resource">result_id</param>
<param name="parameters_array" required="0" vallist="0" default="" type="array">parameters_array</param>
<return type="bool">bool</return>
<insert>odbc_execute(resource result_id [,array parameters_array]);</insert>
<dialog title="Insert odbc_execute">odbc_execute(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_fetch_array">
<description>
     Fetch a result row as an associative array
    </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="rownumber" required="0" vallist="0" default="" type="int">rownumber</param>
<return type="array">array</return>
<insert>odbc_fetch_array(resource result [,int rownumber]);</insert>
<dialog title="Insert odbc_fetch_array">odbc_fetch_array(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_fetch_into">
<description>Fetch one result row into array</description>
<param name="result_id" required="1" vallist="0" default="" type="resource">result_id</param>
<param name="rownumber" required="0" vallist="0" default="" type="int">rownumber</param>
<param name="result_array" required="1" vallist="0" default="" type="array">result_array</param>
<return type="bool">bool</return>
<insert>odbc_fetch_into(resource result_id [,int rownumber], array result_array);</insert>
<dialog title="Insert odbc_fetch_into">odbc_fetch_into(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_fetch_object">
<description>
     Fetch a result row as an object
    </description>
<param name="result" required="1" vallist="0" default="" type="resource">result</param>
<param name="rownumber" required="0" vallist="0" default="" type="int">rownumber</param>
<return type="object">object</return>
<insert>odbc_fetch_object(resource result [,int rownumber]);</insert>
<dialog title="Insert odbc_fetch_object">odbc_fetch_object(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_fetch_row">
<description>Fetch a row</description>
<param name="result_id" required="1" vallist="0" default="" type="resource">result_id</param>
<param name="row_number" required="0" vallist="0" default="" type="int">row_number</param>
<return type="bool">bool</return>
<insert>odbc_fetch_row(resource result_id [,int row_number]);</insert>
<dialog title="Insert odbc_fetch_row">odbc_fetch_row(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_field_len">
<description>Get the length (precision) of a field</description>
<param name="result_id" required="1" vallist="0" default="" type="resource">result_id</param>
<param name="field_number" required="1" vallist="0" default="" type="int">field_number</param>
<return type="int">int</return>
<insert>odbc_field_len(resource result_id, int field_number);</insert>
<dialog title="Insert odbc_field_len">odbc_field_len(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_field_name">
<description>Get the columnname</description>
<param name="result_id" required="1" vallist="0" default="" type="resource">result_id</param>
<param name="field_number" required="1" vallist="0" default="" type="int">field_number</param>
<return type="string">string</return>
<insert>odbc_field_name(resource result_id, int field_number);</insert>
<dialog title="Insert odbc_field_name">odbc_field_name(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_field_num">
<description>Return column number</description>
<param name="result_id" required="1" vallist="0" default="" type="resource">result_id</param>
<param name="field_name" required="1" vallist="0" default="" type="string">field_name</param>
<return type="int">int</return>
<insert>odbc_field_num(resource result_id, string field_name);</insert>
<dialog title="Insert odbc_field_num">odbc_field_num(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_field_precision">
<description>Synonym for </description>
<param name="result_id" required="1" vallist="0" default="" type="resource">result_id</param>
<param name="field_number" required="1" vallist="0" default="" type="int">field_number</param>
<return type="string">string</return>
<insert>odbc_field_precision(resource result_id, int field_number);</insert>
<dialog title="Insert odbc_field_precision">odbc_field_precision(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_field_scale">
<description>Get the scale of a field</description>
<param name="result_id" required="1" vallist="0" default="" type="resource">result_id</param>
<param name="field_number" required="1" vallist="0" default="" type="int">field_number</param>
<return type="string">string</return>
<insert>odbc_field_scale(resource result_id, int field_number);</insert>
<dialog title="Insert odbc_field_scale">odbc_field_scale(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_field_type">
<description>Datatype of a field</description>
<param name="result_id" required="1" vallist="0" default="" type="resource">result_id</param>
<param name="field_number" required="1" vallist="0" default="" type="int">field_number</param>
<return type="string">string</return>
<insert>odbc_field_type(resource result_id, int field_number);</insert>
<dialog title="Insert odbc_field_type">odbc_field_type(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_foreignkeys">
<description>
     Returns a list of foreign keys in the specified table or a list
     of foreign keys in other tables that refer to the primary key in
     the specified table
    </description>
<param name="connection_id" required="1" vallist="0" default="" type="resource">connection_id</param>
<param name="pk_qualifier" required="1" vallist="0" default="" type="string">pk_qualifier</param>
<param name="pk_owner" required="1" vallist="0" default="" type="string">pk_owner</param>
<param name="pk_table" required="1" vallist="0" default="" type="string">pk_table</param>
<param name="fk_qualifier" required="1" vallist="0" default="" type="string">fk_qualifier</param>
<param name="fk_owner" required="1" vallist="0" default="" type="string">fk_owner</param>
<param name="fk_table" required="1" vallist="0" default="" type="string">fk_table</param>
<return type="resource">resource</return>
<insert>odbc_foreignkeys(resource connection_id, string pk_qualifier, string pk_owner, string pk_table, string fk_qualifier, string fk_owner, string fk_table);</insert>
<dialog title="Insert odbc_foreignkeys">odbc_foreignkeys(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_free_result">
<description>Free resources associated with a result</description>
<param name="result_id" required="1" vallist="0" default="" type="resource">result_id</param>
<return type="bool">bool</return>
<insert>odbc_free_result(resource result_id);</insert>
<dialog title="Insert odbc_free_result">odbc_free_result(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_gettypeinfo">
<description>
     Returns a result identifier containing information about data
     types supported by the data source.
    </description>
<param name="connection_id" required="1" vallist="0" default="" type="resource">connection_id</param>
<param name="data_type" required="0" vallist="0" default="" type="int">data_type</param>
<return type="int">int</return>
<insert>odbc_gettypeinfo(resource connection_id [,int data_type]);</insert>
<dialog title="Insert odbc_gettypeinfo">odbc_gettypeinfo(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_longreadlen">
<description>Handling of LONG columns</description>
<param name="result_id" required="1" vallist="0" default="" type="resource">result_id</param>
<param name="length" required="1" vallist="0" default="" type="int">length</param>
<return type="int">int</return>
<insert>odbc_longreadlen(resource result_id, int length);</insert>
<dialog title="Insert odbc_longreadlen">odbc_longreadlen(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_next_result">
<description>
     Checks if multiple results are avaiable
    </description>
<param name="result_id" required="1" vallist="0" default="" type="resource">result_id</param>
<return type="bool">bool</return>
<insert>odbc_next_result(resource result_id);</insert>
<dialog title="Insert odbc_next_result">odbc_next_result(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_num_fields">
<description>Number of columns in a result</description>
<param name="result_id" required="1" vallist="0" default="" type="resource">result_id</param>
<return type="int">int</return>
<insert>odbc_num_fields(resource result_id);</insert>
<dialog title="Insert odbc_num_fields">odbc_num_fields(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_num_rows">
<description>Number of rows in a result</description>
<param name="result_id" required="1" vallist="0" default="" type="resource">result_id</param>
<return type="int">int</return>
<insert>odbc_num_rows(resource result_id);</insert>
<dialog title="Insert odbc_num_rows">odbc_num_rows(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_pconnect">
<description>Open a persistent database connection</description>
<param name="dsn" required="1" vallist="0" default="" type="string">dsn</param>
<param name="user" required="1" vallist="0" default="" type="string">user</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="cursor_type" required="0" vallist="0" default="" type="int">cursor_type</param>
<return type="resource">resource</return>
<insert>odbc_pconnect(string dsn, string user, string password [,int cursor_type]);</insert>
<dialog title="Insert odbc_pconnect">odbc_pconnect(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_prepare">
<description>Prepares a statement for execution</description>
<param name="connection_id" required="1" vallist="0" default="" type="resource">connection_id</param>
<param name="query_string" required="1" vallist="0" default="" type="string">query_string</param>
<return type="resource">resource</return>
<insert>odbc_prepare(resource connection_id, string query_string);</insert>
<dialog title="Insert odbc_prepare">odbc_prepare(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_primarykeys">
<description>
     Returns a result identifier that can be used to fetch the column
     names that comprise the primary key for a table
    </description>
<param name="connection_id" required="1" vallist="0" default="" type="resource">connection_id</param>
<param name="qualifier" required="1" vallist="0" default="" type="string">qualifier</param>
<param name="owner" required="1" vallist="0" default="" type="string">owner</param>
<param name="table" required="1" vallist="0" default="" type="string">table</param>
<return type="resource">resource</return>
<insert>odbc_primarykeys(resource connection_id, string qualifier, string owner, string table);</insert>
<dialog title="Insert odbc_primarykeys">odbc_primarykeys(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_procedurecolumns">
<description>
     Retrieve information about parameters to procedures
    </description>
<param name="connection_id" required="1" vallist="0" default="" type="resource">connection_id</param>
<param name="qualifier" required="0" vallist="0" default="" type="string">qualifier</param>
<param name="owner" required="0" vallist="0" default="" type="string">owner</param>
<param name="proc" required="0" vallist="0" default="" type="string">proc</param>
<param name="column" required="0" vallist="0" default="" type="string">column</param>
<return type="resource">resource</return>
<insert>odbc_procedurecolumns(resource connection_id [,string qualifier] [,string owner] [,string proc] [,string column]);</insert>
<dialog title="Insert odbc_procedurecolumns">odbc_procedurecolumns(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_procedures">
<description>
     Get the list of procedures stored in a specific data source.
     Returns a result identifier containing the information.
    </description>
<param name="connection_id" required="1" vallist="0" default="" type="resource">connection_id</param>
<param name="qualifier" required="0" vallist="0" default="" type="string">qualifier</param>
<param name="owner" required="0" vallist="0" default="" type="string">owner</param>
<param name="name" required="0" vallist="0" default="" type="string">name</param>
<return type="resource">resource</return>
<insert>odbc_procedures(resource connection_id [,string qualifier] [,string owner] [,string name]);</insert>
<dialog title="Insert odbc_procedures">odbc_procedures(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_result_all">
<description>Print result as HTML table</description>
<param name="result_id" required="1" vallist="0" default="" type="resource">result_id</param>
<param name="format" required="0" vallist="0" default="" type="string">format</param>
<return type="int">int</return>
<insert>odbc_result_all(resource result_id [,string format]);</insert>
<dialog title="Insert odbc_result_all">odbc_result_all(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_result">
<description>Get result data</description>
<param name="result_id" required="1" vallist="0" default="" type="resource">result_id</param>
<param name="field" required="1" vallist="0" default="" type="mixed">field</param>
<return type="string">string</return>
<insert>odbc_result(resource result_id, mixed field);</insert>
<dialog title="Insert odbc_result">odbc_result(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_rollback">
<description>Rollback a transaction</description>
<param name="connection_id" required="1" vallist="0" default="" type="resource">connection_id</param>
<return type="int">int</return>
<insert>odbc_rollback(resource connection_id);</insert>
<dialog title="Insert odbc_rollback">odbc_rollback(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_setoption">
<description>
     Adjust ODBC settings. Returns </description>
<param name="id" required="1" vallist="0" default="" type="resource">id</param>
<param name="function" required="1" vallist="0" default="" type="int">function</param>
<param name="option" required="1" vallist="0" default="" type="int">option</param>
<param name="param" required="1" vallist="0" default="" type="int">param</param>
<return type="int">int</return>
<insert>odbc_setoption(resource id, int function, int option, int param);</insert>
<dialog title="Insert odbc_setoption">odbc_setoption(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_specialcolumns">
<description>
     Returns either the optimal set of columns that uniquely
     identifies a row in the table or columns that are automatically
     updated when any value in the row is updated by a transaction
    </description>
<param name="connection_id" required="1" vallist="0" default="" type="resource">connection_id</param>
<param name="type" required="1" vallist="0" default="" type="int">type</param>
<param name="qualifier" required="1" vallist="0" default="" type="string">qualifier</param>
<param name="owner" required="1" vallist="0" default="" type="string">owner</param>
<param name="table" required="1" vallist="0" default="" type="string">table</param>
<param name="scope" required="1" vallist="0" default="" type="int">scope</param>
<param name="nullable" required="1" vallist="0" default="" type="int">nullable</param>
<return type="resource">resource</return>
<insert>odbc_specialcolumns(resource connection_id, int type, string qualifier, string owner, string table, int scope, int nullable);</insert>
<dialog title="Insert odbc_specialcolumns">odbc_specialcolumns(%0, %1, %2, %3, %4, %5, %6);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_statistics">
<description>Retrieve statistics about a table</description>
<param name="connection_id" required="1" vallist="0" default="" type="resource">connection_id</param>
<param name="qualifier" required="1" vallist="0" default="" type="string">qualifier</param>
<param name="owner" required="1" vallist="0" default="" type="string">owner</param>
<param name="table_name" required="1" vallist="0" default="" type="string">table_name</param>
<param name="unique" required="1" vallist="0" default="" type="int">unique</param>
<param name="accuracy" required="1" vallist="0" default="" type="int">accuracy</param>
<return type="resource">resource</return>
<insert>odbc_statistics(resource connection_id, string qualifier, string owner, string table_name, int unique, int accuracy);</insert>
<dialog title="Insert odbc_statistics">odbc_statistics(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_tableprivileges">
<description>
     Lists tables and the privileges associated with each table
    </description>
<param name="connection_id" required="1" vallist="0" default="" type="resource">connection_id</param>
<param name="qualifier" required="0" vallist="0" default="" type="string">qualifier</param>
<param name="owner" required="0" vallist="0" default="" type="string">owner</param>
<param name="name" required="0" vallist="0" default="" type="string">name</param>
<return type="int">int</return>
<insert>odbc_tableprivileges(resource connection_id [,string qualifier] [,string owner] [,string name]);</insert>
<dialog title="Insert odbc_tableprivileges">odbc_tableprivileges(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="odbc_tables">
<description>
     Get the list of table names stored in a specific data source.
     Returns a result identifier containing the
     information.
    </description>
<param name="connection_id" required="1" vallist="0" default="" type="resource">connection_id</param>
<param name="qualifier" required="0" vallist="0" default="" type="string">qualifier</param>
<param name="owner" required="0" vallist="0" default="" type="string">owner</param>
<param name="name" required="0" vallist="0" default="" type="string">name</param>
<param name="types" required="0" vallist="0" default="" type="string">types</param>
<return type="int">int</return>
<insert>odbc_tables(resource connection_id [,string qualifier] [,string owner] [,string name] [,string types]);</insert>
<dialog title="Insert odbc_tables">odbc_tables(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="url">
<function name="base64_decode">
<description>Decodes data encoded with MIME base64</description>
<param name="encoded_data" required="1" vallist="0" default="" type="string">encoded_data</param>
<return type="string">string</return>
<insert>base64_decode(string encoded_data);</insert>
<dialog title="Insert base64_decode">base64_decode(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="base64_encode">
<description>Encodes data with MIME base64</description>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<return type="string">string</return>
<insert>base64_encode(string data);</insert>
<dialog title="Insert base64_encode">base64_encode(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="get_meta_tags">
<description>
     Extracts all meta tag content attributes from a file and returns
     an array
    </description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="use_include_path" required="0" vallist="0" default="" type="int">use_include_path</param>
<return type="array">array</return>
<insert>get_meta_tags(string filename [,int use_include_path]);</insert>
<dialog title="Insert get_meta_tags">get_meta_tags(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="parse_url">
<description>Parse a URL and return its components</description>
<param name="url" required="1" vallist="0" default="" type="string">url</param>
<return type="array">array</return>
<insert>parse_url(string url);</insert>
<dialog title="Insert parse_url">parse_url(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="rawurldecode">
<description>Decode URL-encoded strings</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<return type="string">string</return>
<insert>rawurldecode(string str);</insert>
<dialog title="Insert rawurldecode">rawurldecode(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="rawurlencode">
<description>URL-encode according to RFC 1738</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<return type="string">string</return>
<insert>rawurlencode(string str);</insert>
<dialog title="Insert rawurlencode">rawurlencode(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="urldecode">
<description>Decodes URL-encoded string</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<return type="string">string</return>
<insert>urldecode(string str);</insert>
<dialog title="Insert urldecode">urldecode(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="urlencode">
<description>URL-encodes string</description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<return type="string">string</return>
<insert>urlencode(string str);</insert>
<dialog title="Insert urlencode">urlencode(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="var">
<function name="empty">
<description>Determine whether a variable is set</description>
<param name="var" required="1" vallist="0" default="" type="mixed">var</param>
<return type="bool">bool</return>
<insert>empty(mixed var);</insert>
<dialog title="Insert empty">empty(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="floatval">
<description>Get float value of a variable</description>
<param name="var" required="1" vallist="0" default="" type="mixed">var</param>
<return type="float">float</return>
<insert>floatval(mixed var);</insert>
<dialog title="Insert floatval">floatval(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="get_defined_vars">
<description>
     Returns an array of all defined variables
    </description>
<return type="array">array</return>
<insert>get_defined_vars();</insert>
<dialog title="Insert get_defined_vars">get_defined_vars();</dialog>
<info title="Info window"></info>
</function>
<function name="get_resource_type">
<description>
     Returns the resource type
    </description>
<param name="handle" required="1" vallist="0" default="" type="resource">handle</param>
<return type="string">string</return>
<insert>get_resource_type(resource handle);</insert>
<dialog title="Insert get_resource_type">get_resource_type(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="gettype">
<description>Get the type of a variable</description>
<param name="var" required="1" vallist="0" default="" type="mixed">var</param>
<return type="string">string</return>
<insert>gettype(mixed var);</insert>
<dialog title="Insert gettype">gettype(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="import_request_variables">
<description>Import GET/POST/Cookie variables into the global scope</description>
<param name="types" required="1" vallist="0" default="" type="string">types</param>
<param name="prefix" required="0" vallist="0" default="" type="string">prefix</param>
<return type="bool">bool</return>
<insert>import_request_variables(string types [,string prefix]);</insert>
<dialog title="Insert import_request_variables">import_request_variables(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="intval">
<description>Get integer value of a variable</description>
<param name="var" required="1" vallist="0" default="" type="mixed">var</param>
<param name="base" required="0" vallist="0" default="" type="int">base</param>
<return type="int">int</return>
<insert>intval(mixed var [,int base]);</insert>
<dialog title="Insert intval">intval(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="is_array">
<description>Finds whether a variable is an array</description>
<param name="var" required="1" vallist="0" default="" type="mixed">var</param>
<return type="bool">bool</return>
<insert>is_array(mixed var);</insert>
<dialog title="Insert is_array">is_array(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="is_bool">
<description>
      Finds out whether a variable is a boolean
     </description>
<param name="var" required="1" vallist="0" default="" type="mixed">var</param>
<return type="bool">bool</return>
<insert>is_bool(mixed var);</insert>
<dialog title="Insert is_bool">is_bool(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="is_callable">
<description>
     Find out whether the argument is a valid callable construct
    </description>
<param name="var" required="1" vallist="0" default="" type="mixed">var</param>
<param name="syntax_only" required="0" vallist="0" default="" type="bool">syntax_only</param>
<param name="callable_name" required="0" vallist="0" default="" type="string">callable_name</param>
<return type="bool">bool</return>
<insert>is_callable(mixed var [,bool syntax_only] [,string callable_name]);</insert>
<dialog title="Insert is_callable">is_callable(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="is_float">
<description>Finds whether a variable is a float</description>
<param name="var" required="1" vallist="0" default="" type="mixed">var</param>
<return type="bool">bool</return>
<insert>is_float(mixed var);</insert>
<dialog title="Insert is_float">is_float(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="is_int">
<description>Find whether a variable is an integer</description>
<param name="var" required="1" vallist="0" default="" type="mixed">var</param>
<return type="bool">bool</return>
<insert>is_int(mixed var);</insert>
<dialog title="Insert is_int">is_int(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="is_null">
<description>
     Finds whether a variable is </description>
<param name="var" required="1" vallist="0" default="" type="mixed">var</param>
<return type="bool">bool</return>
<insert>is_null(mixed var);</insert>
<dialog title="Insert is_null">is_null(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="is_numeric">
<description>
     Finds whether a variable is a number or a numeric string
    </description>
<param name="var" required="1" vallist="0" default="" type="mixed">var</param>
<return type="bool">bool</return>
<insert>is_numeric(mixed var);</insert>
<dialog title="Insert is_numeric">is_numeric(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="is_object">
<description>Finds whether a variable is an object</description>
<param name="var" required="1" vallist="0" default="" type="mixed">var</param>
<return type="bool">bool</return>
<insert>is_object(mixed var);</insert>
<dialog title="Insert is_object">is_object(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="is_resource">
<description>
     Finds whether a variable is a resource
    </description>
<param name="var" required="1" vallist="0" default="" type="mixed">var</param>
<return type="bool">bool</return>
<insert>is_resource(mixed var);</insert>
<dialog title="Insert is_resource">is_resource(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="is_scalar">
<description>
     Finds whether a variable is a scalar
    </description>
<param name="var" required="1" vallist="0" default="" type="mixed">var</param>
<return type="bool">bool</return>
<insert>is_scalar(mixed var);</insert>
<dialog title="Insert is_scalar">is_scalar(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="is_string">
<description>Finds whether a variable is a string</description>
<param name="var" required="1" vallist="0" default="" type="mixed">var</param>
<return type="bool">bool</return>
<insert>is_string(mixed var);</insert>
<dialog title="Insert is_string">is_string(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="isset">
<description>Determine whether a variable is set</description>
<param name="var" required="1" vallist="0" default="" type="mixed">var</param>
<param name="var" required="0" vallist="0" default="" type="mixed">var</param>
<return type="bool">bool</return>
<insert>isset(mixed var [,mixed var]);</insert>
<dialog title="Insert isset">isset(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="print_r">
<description>
     Prints human-readable information about a variable
    </description>
<param name="expression" required="1" vallist="0" default="" type="mixed">expression</param>
<return type="bool">bool</return>
<insert>print_r(mixed expression);</insert>
<dialog title="Insert print_r">print_r(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="serialize">
<description>
     Generates a storable representation of a value
    </description>
<param name="value" required="1" vallist="0" default="" type="mixed">value</param>
<return type="string">string</return>
<insert>serialize(mixed value);</insert>
<dialog title="Insert serialize">serialize(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="settype">
<description>Set the type of a variable</description>
<param name="var" required="1" vallist="0" default="" type="mixed">var</param>
<param name="type" required="1" vallist="0" default="" type="string">type</param>
<return type="bool">bool</return>
<insert>settype(mixed var, string type);</insert>
<dialog title="Insert settype">settype(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="strval">
<description>Get string value of a variable</description>
<param name="var" required="1" vallist="0" default="" type="mixed">var</param>
<return type="string">string</return>
<insert>strval(mixed var);</insert>
<dialog title="Insert strval">strval(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="unserialize">
<description>
     Creates a PHP value from a stored representation
    </description>
<param name="str" required="1" vallist="0" default="" type="string">str</param>
<param name="callback" required="0" vallist="0" default="" type="string">callback</param>
<return type="mixed">mixed</return>
<insert>unserialize(string str [,string callback]);</insert>
<dialog title="Insert unserialize">unserialize(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="unset">
<description>Unset a given variable</description>
<param name="var" required="1" vallist="0" default="" type="mixed">var</param>
<param name="var" required="0" vallist="0" default="" type="mixed">var</param>
<return type="void">void</return>
<insert>unset(mixed var [,mixed var]);</insert>
<dialog title="Insert unset">unset(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="var_dump">
<description>Dumps information about a variable</description>
<param name="expression" required="1" vallist="0" default="" type="mixed">expression</param>
<param name="expression" required="0" vallist="0" default="" type="mixed">expression</param>
<return type="void">void</return>
<insert>var_dump(mixed expression [,mixed expression]);</insert>
<dialog title="Insert var_dump">var_dump(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="var_export">
<description>Outputs or returns a string representation of a variable</description>
<param name="expression" required="1" vallist="0" default="" type="mixed">expression</param>
<param name="return" required="0" vallist="0" default="" type="bool">return</param>
<return type="mixed">mixed</return>
<insert>var_export(mixed expression [,bool return]);</insert>
<dialog title="Insert var_export">var_export(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="vpopmail">
<function name="vpopmail_add_alias_domain_ex">
<description>Add alias to an existing virtual domain</description>
<param name="olddomain" required="1" vallist="0" default="" type="string">olddomain</param>
<param name="newdomain" required="1" vallist="0" default="" type="string">newdomain</param>
<return type="bool">bool</return>
<insert>vpopmail_add_alias_domain_ex(string olddomain, string newdomain);</insert>
<dialog title="Insert vpopmail_add_alias_domain_ex">vpopmail_add_alias_domain_ex(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="vpopmail_add_alias_domain">
<description>Add an alias for a virtual domain</description>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<param name="aliasdomain" required="1" vallist="0" default="" type="string">aliasdomain</param>
<return type="bool">bool</return>
<insert>vpopmail_add_alias_domain(string domain, string aliasdomain);</insert>
<dialog title="Insert vpopmail_add_alias_domain">vpopmail_add_alias_domain(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="vpopmail_add_domain_ex">
<description>Add a new virtual domain</description>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<param name="passwd" required="1" vallist="0" default="" type="string">passwd</param>
<param name="quota" required="0" vallist="0" default="" type="string">quota</param>
<param name="bounce" required="0" vallist="0" default="" type="string">bounce</param>
<param name="apop" required="0" vallist="0" default="" type="bool">apop</param>
<return type="bool">bool</return>
<insert>vpopmail_add_domain_ex(string domain, string passwd [,string quota] [,string bounce] [,bool apop]);</insert>
<dialog title="Insert vpopmail_add_domain_ex">vpopmail_add_domain_ex(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="vpopmail_add_domain">
<description>Add a new virtual domain</description>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<param name="dir" required="1" vallist="0" default="" type="string">dir</param>
<param name="uid" required="1" vallist="0" default="" type="int">uid</param>
<param name="gid" required="1" vallist="0" default="" type="int">gid</param>
<return type="bool">bool</return>
<insert>vpopmail_add_domain(string domain, string dir, int uid, int gid);</insert>
<dialog title="Insert vpopmail_add_domain">vpopmail_add_domain(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="vpopmail_add_user">
<description>Add a new user to the specified virtual domain</description>
<param name="user" required="1" vallist="0" default="" type="string">user</param>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="gecos" required="0" vallist="0" default="" type="string">gecos</param>
<param name="apop" required="0" vallist="0" default="" type="bool">apop</param>
<return type="bool">bool</return>
<insert>vpopmail_add_user(string user, string domain, string password [,string gecos] [,bool apop]);</insert>
<dialog title="Insert vpopmail_add_user">vpopmail_add_user(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="vpopmail_alias_add">
<description>insert a virtual alias</description>
<param name="user" required="1" vallist="0" default="" type="string">user</param>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<param name="alias" required="1" vallist="0" default="" type="string">alias</param>
<return type="bool">bool</return>
<insert>vpopmail_alias_add(string user, string domain, string alias);</insert>
<dialog title="Insert vpopmail_alias_add">vpopmail_alias_add(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="vpopmail_alias_del_domain">
<description>deletes all virtual aliases of a domain</description>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<return type="bool">bool</return>
<insert>vpopmail_alias_del_domain(string domain);</insert>
<dialog title="Insert vpopmail_alias_del_domain">vpopmail_alias_del_domain(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="vpopmail_alias_del">
<description>deletes all virtual aliases of a user</description>
<param name="user" required="1" vallist="0" default="" type="string">user</param>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<return type="bool">bool</return>
<insert>vpopmail_alias_del(string user, string domain);</insert>
<dialog title="Insert vpopmail_alias_del">vpopmail_alias_del(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="vpopmail_alias_get_all">
<description>get all lines of an alias for a domain</description>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<return type="array">array</return>
<insert>vpopmail_alias_get_all(string domain);</insert>
<dialog title="Insert vpopmail_alias_get_all">vpopmail_alias_get_all(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="vpopmail_alias_get">
<description>get all lines of an alias for a domain</description>
<param name="alias" required="1" vallist="0" default="" type="string">alias</param>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<return type="array">array</return>
<insert>vpopmail_alias_get(string alias, string domain);</insert>
<dialog title="Insert vpopmail_alias_get">vpopmail_alias_get(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="vpopmail_auth_user">
<description>Attempt to validate a username/domain/password. Returns true/false</description>
<param name="user" required="1" vallist="0" default="" type="string">user</param>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<param name="apop" required="0" vallist="0" default="" type="string">apop</param>
<return type="bool">bool</return>
<insert>vpopmail_auth_user(string user, string domain, string password [,string apop]);</insert>
<dialog title="Insert vpopmail_auth_user">vpopmail_auth_user(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="vpopmail_del_domain_ex">
<description>Delete a virtual domain</description>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<return type="bool">bool</return>
<insert>vpopmail_del_domain_ex(string domain);</insert>
<dialog title="Insert vpopmail_del_domain_ex">vpopmail_del_domain_ex(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="vpopmail_del_domain">
<description>Delete a virtual domain</description>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<return type="bool">bool</return>
<insert>vpopmail_del_domain(string domain);</insert>
<dialog title="Insert vpopmail_del_domain">vpopmail_del_domain(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="vpopmail_del_user">
<description>Delete a user from a virtual domain</description>
<param name="user" required="1" vallist="0" default="" type="string">user</param>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<return type="bool">bool</return>
<insert>vpopmail_del_user(string user, string domain);</insert>
<dialog title="Insert vpopmail_del_user">vpopmail_del_user(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="vpopmail_error">
<description>Get text message for last vpopmail error. Returns string</description>
<return type="string">string</return>
<insert>vpopmail_error();</insert>
<dialog title="Insert vpopmail_error">vpopmail_error();</dialog>
<info title="Info window"></info>
</function>
<function name="vpopmail_passwd">
<description>Change a virtual user's password</description>
<param name="user" required="1" vallist="0" default="" type="string">user</param>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<param name="password" required="1" vallist="0" default="" type="string">password</param>
<return type="bool">bool</return>
<insert>vpopmail_passwd(string user, string domain, string password);</insert>
<dialog title="Insert vpopmail_passwd">vpopmail_passwd(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="vpopmail_set_user_quota">
<description>Sets a virtual user's quota</description>
<param name="user" required="1" vallist="0" default="" type="string">user</param>
<param name="domain" required="1" vallist="0" default="" type="string">domain</param>
<param name="quota" required="1" vallist="0" default="" type="string">quota</param>
<return type="bool">bool</return>
<insert>vpopmail_set_user_quota(string user, string domain, string quota);</insert>
<dialog title="Insert vpopmail_set_user_quota">vpopmail_set_user_quota(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="w32api">
<function name="w32api_deftype">
<description>Defines a type for use with other w32api_functions</description>
<param name="typename" required="1" vallist="0" default="" type="string">typename</param>
<param name="member1_type" required="1" vallist="0" default="" type="string">member1_type</param>
<param name="member1_name" required="1" vallist="0" default="" type="string">member1_name</param>
<param name="..." required="0" vallist="0" default="" type="string">...</param>
<param name="..." required="0" vallist="0" default="" type="string">...</param>
<return type="bool">bool</return>
<insert>w32api_deftype(string typename, string member1_type, string member1_name [,string ...] [,string ...]);</insert>
<dialog title="Insert w32api_deftype">w32api_deftype(%0, %1, %2, %3, %4);</dialog>
<info title="Info window"></info>
</function>
<function name="w32api_init_dtype">
<description>
     Creates an instance of the data type typename and fills it with the values passed
    </description>
<param name="typename" required="1" vallist="0" default="" type="string">typename</param>
<param name="value" required="1" vallist="0" default="" type="mixed">value</param>
<param name="..." required="0" vallist="0" default="" type="mixed">...</param>
<return type="resource">resource</return>
<insert>w32api_init_dtype(string typename, mixed value [,mixed ...]);</insert>
<dialog title="Insert w32api_init_dtype">w32api_init_dtype(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="w32api_invoke_function">
<description>Invokes function funcname with the arguments passed after the function name</description>
<param name="funcname" required="1" vallist="0" default="" type="string">funcname</param>
<param name="argument" required="1" vallist="0" default="" type="mixed">argument</param>
<param name="..." required="0" vallist="0" default="" type="mixed">...</param>
<return type="mixed">mixed</return>
<insert>w32api_invoke_function(string funcname, mixed argument [,mixed ...]);</insert>
<dialog title="Insert w32api_invoke_function">w32api_invoke_function(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="w32api_register_function">
<description>Registers function function_name from library with PHP</description>
<param name="libary" required="1" vallist="0" default="" type="string">libary</param>
<param name="function_name" required="1" vallist="0" default="" type="string">function_name</param>
<param name="return_type" required="1" vallist="0" default="" type="string">return_type</param>
<return type="bool">bool</return>
<insert>w32api_register_function(string libary, string function_name, string return_type);</insert>
<dialog title="Insert w32api_register_function">w32api_register_function(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="w32api_set_call_method">
<description>Sets the calling method used</description>
<param name="method" required="1" vallist="0" default="" type="int">method</param>
<return type="void">void</return>
<insert>w32api_set_call_method(int method);</insert>
<dialog title="Insert w32api_set_call_method">w32api_set_call_method(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="wddx">
<function name="wddx_add_vars">
<description>
     Add variables to a WDDX packet with the specified ID
    </description>
<param name="packet_id" required="1" vallist="0" default="" type="int">packet_id</param>
<param name="name_var" required="1" vallist="0" default="" type="mixed">name_var</param>
<param name="..." required="0" vallist="0" default="" type="mixed">...</param>
<return type="bool">bool</return>
<insert>wddx_add_vars(int packet_id, mixed name_var [,mixed ...]);</insert>
<dialog title="Insert wddx_add_vars">wddx_add_vars(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="wddx_deserialize">
<description>Deserializes a WDDX packet</description>
<param name="packet" required="1" vallist="0" default="" type="string">packet</param>
<return type="mixed">mixed</return>
<insert>wddx_deserialize(string packet);</insert>
<dialog title="Insert wddx_deserialize">wddx_deserialize(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="wddx_packet_end">
<description>Ends a WDDX packet with the specified ID</description>
<param name="packet_id" required="1" vallist="0" default="" type="int">packet_id</param>
<return type="string">string</return>
<insert>wddx_packet_end(int packet_id);</insert>
<dialog title="Insert wddx_packet_end">wddx_packet_end(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="wddx_packet_start">
<description>
     Starts a new WDDX packet with structure inside it
    </description>
<param name="comment" required="0" vallist="0" default="" type="string">comment</param>
<return type="int">int</return>
<insert>wddx_packet_start([string comment]);</insert>
<dialog title="Insert wddx_packet_start">wddx_packet_start(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="wddx_serialize_value">
<description>Serialize a single value into a WDDX packet</description>
<param name="var" required="1" vallist="0" default="" type="mixed">var</param>
<param name="comment" required="0" vallist="0" default="" type="string">comment</param>
<return type="string">string</return>
<insert>wddx_serialize_value(mixed var [,string comment]);</insert>
<dialog title="Insert wddx_serialize_value">wddx_serialize_value(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="wddx_serialize_vars">
<description>Serialize variables into a WDDX packet</description>
<param name="var_name" required="1" vallist="0" default="" type="mixed">var_name</param>
<param name="..." required="0" vallist="0" default="" type="mixed">...</param>
<return type="string">string</return>
<insert>wddx_serialize_vars(mixed var_name [,mixed ...]);</insert>
<dialog title="Insert wddx_serialize_vars">wddx_serialize_vars(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="xml">
<function name="utf8_decode">
<description>
     Converts a string with ISO-8859-1 characters encoded with UTF-8
     to single-byte ISO-8859-1.
    </description>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<return type="string">string</return>
<insert>utf8_decode(string data);</insert>
<dialog title="Insert utf8_decode">utf8_decode(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="utf8_encode">
<description>encodes an ISO-8859-1 string to UTF-8</description>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<return type="string">string</return>
<insert>utf8_encode(string data);</insert>
<dialog title="Insert utf8_encode">utf8_encode(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="xml_error_string">
<description>get XML parser error string</description>
<param name="code" required="1" vallist="0" default="" type="int">code</param>
<return type="string">string</return>
<insert>xml_error_string(int code);</insert>
<dialog title="Insert xml_error_string">xml_error_string(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="xml_get_current_byte_index">
<description>get current byte index for an XML parser</description>
<param name="parser" required="1" vallist="0" default="" type="resource">parser</param>
<return type="int">int</return>
<insert>xml_get_current_byte_index(resource parser);</insert>
<dialog title="Insert xml_get_current_byte_index">xml_get_current_byte_index(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="xml_get_current_column_number">
<description>
     Get current column number for an XML parser
    </description>
<param name="parser" required="1" vallist="0" default="" type="resource">parser</param>
<return type="int">int</return>
<insert>xml_get_current_column_number(resource parser);</insert>
<dialog title="Insert xml_get_current_column_number">xml_get_current_column_number(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="xml_get_current_line_number">
<description>get current line number for an XML parser</description>
<param name="parser" required="1" vallist="0" default="" type="resource">parser</param>
<return type="int">int</return>
<insert>xml_get_current_line_number(resource parser);</insert>
<dialog title="Insert xml_get_current_line_number">xml_get_current_line_number(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="xml_get_error_code">
<description>get XML parser error code</description>
<param name="parser" required="1" vallist="0" default="" type="resource">parser</param>
<return type="int">int</return>
<insert>xml_get_error_code(resource parser);</insert>
<dialog title="Insert xml_get_error_code">xml_get_error_code(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="xml_parse_into_struct">
<description>Parse XML data into an array structure</description>
<param name="parser" required="1" vallist="0" default="" type="resource">parser</param>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<param name="&amp;values" required="1" vallist="0" default="" type="array">&amp;values</param>
<param name="&amp;index" required="0" vallist="0" default="" type="array">&amp;index</param>
<return type="int">int</return>
<insert>xml_parse_into_struct(resource parser, string data, array &amp;values [,array &amp;index]);</insert>
<dialog title="Insert xml_parse_into_struct">xml_parse_into_struct(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="xml_parse">
<description>start parsing an XML document</description>
<param name="parser" required="1" vallist="0" default="" type="resource">parser</param>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<param name="is_final" required="0" vallist="0" default="" type="bool">is_final</param>
<return type="bool">bool</return>
<insert>xml_parse(resource parser, string data [,bool is_final]);</insert>
<dialog title="Insert xml_parse">xml_parse(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="xml_parser_create_ns">
<description>
     Create an XML parser
    </description>
<param name="encoding" required="0" vallist="0" default="" type="string">encoding</param>
<param name="separator" required="0" vallist="0" default="" type="string">separator</param>
<return type="resource">resource</return>
<insert>xml_parser_create_ns([string encoding] [,string separator]);</insert>
<dialog title="Insert xml_parser_create_ns">xml_parser_create_ns(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="xml_parser_create">
<description>create an XML parser</description>
<param name="encoding" required="0" vallist="0" default="" type="string">encoding</param>
<return type="resource">resource</return>
<insert>xml_parser_create([string encoding]);</insert>
<dialog title="Insert xml_parser_create">xml_parser_create(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="xml_parser_free">
<description>Free an XML parser</description>
<param name="parser" required="1" vallist="0" default="" type="resource">parser</param>
<return type="bool">bool</return>
<insert>xml_parser_free(resource parser);</insert>
<dialog title="Insert xml_parser_free">xml_parser_free(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="xml_parser_get_option">
<description>get options from an XML parser</description>
<param name="parser" required="1" vallist="0" default="" type="resource">parser</param>
<param name="option" required="1" vallist="0" default="" type="int">option</param>
<return type="mixed">mixed</return>
<insert>xml_parser_get_option(resource parser, int option);</insert>
<dialog title="Insert xml_parser_get_option">xml_parser_get_option(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="xml_parser_set_option">
<description>set options in an XML parser</description>
<param name="parser" required="1" vallist="0" default="" type="resource">parser</param>
<param name="option" required="1" vallist="0" default="" type="int">option</param>
<param name="value" required="1" vallist="0" default="" type="mixed">value</param>
<return type="bool">bool</return>
<insert>xml_parser_set_option(resource parser, int option, mixed value);</insert>
<dialog title="Insert xml_parser_set_option">xml_parser_set_option(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="xml_set_character_data_handler">
<description>set up character data handler</description>
<param name="parser" required="1" vallist="0" default="" type="resource">parser</param>
<param name="handler" required="1" vallist="0" default="" type="callback">handler</param>
<return type="bool">bool</return>
<insert>xml_set_character_data_handler(resource parser, callback handler);</insert>
<dialog title="Insert xml_set_character_data_handler">xml_set_character_data_handler(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="xml_set_default_handler">
<description>set up default handler</description>
<param name="parser" required="1" vallist="0" default="" type="resource">parser</param>
<param name="handler" required="1" vallist="0" default="" type="callback">handler</param>
<return type="bool">bool</return>
<insert>xml_set_default_handler(resource parser, callback handler);</insert>
<dialog title="Insert xml_set_default_handler">xml_set_default_handler(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="xml_set_element_handler">
<description>set up start and end element handlers</description>
<param name="parser" required="1" vallist="0" default="" type="resource">parser</param>
<param name="start_element_handler" required="1" vallist="0" default="" type="callback">start_element_handler</param>
<param name="end_element_handler" required="1" vallist="0" default="" type="callback">end_element_handler</param>
<return type="bool">bool</return>
<insert>xml_set_element_handler(resource parser, callback start_element_handler, callback end_element_handler);</insert>
<dialog title="Insert xml_set_element_handler">xml_set_element_handler(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="xml_set_end_namespace_decl_handler">
<description>
     Set up character data handler
    </description>
<param name="pind" required="1" vallist="0" default="" type="resource">pind</param>
<param name="handler" required="1" vallist="0" default="" type="callback">handler</param>
<return type="bool">bool</return>
<insert>xml_set_end_namespace_decl_handler(resource pind, callback handler);</insert>
<dialog title="Insert xml_set_end_namespace_decl_handler">xml_set_end_namespace_decl_handler(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="xml_set_external_entity_ref_handler">
<description>set up external entity reference handler</description>
<param name="parser" required="1" vallist="0" default="" type="resource">parser</param>
<param name="handler" required="1" vallist="0" default="" type="callback">handler</param>
<return type="bool">bool</return>
<insert>xml_set_external_entity_ref_handler(resource parser, callback handler);</insert>
<dialog title="Insert xml_set_external_entity_ref_handler">xml_set_external_entity_ref_handler(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="xml_set_notation_decl_handler">
<description>set up notation declaration handler</description>
<param name="parser" required="1" vallist="0" default="" type="resource">parser</param>
<param name="handler" required="1" vallist="0" default="" type="callback">handler</param>
<return type="bool">bool</return>
<insert>xml_set_notation_decl_handler(resource parser, callback handler);</insert>
<dialog title="Insert xml_set_notation_decl_handler">xml_set_notation_decl_handler(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="xml_set_object">
<description>Use XML Parser within an object</description>
<param name="parser" required="1" vallist="0" default="" type="resource">parser</param>
<param name="object" required="1" vallist="0" default="" type="object">object</param>
<return type="void">void</return>
<insert>xml_set_object(resource parser, object object);</insert>
<dialog title="Insert xml_set_object">xml_set_object(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="xml_set_processing_instruction_handler">
<description>
     Set up processing instruction (PI) handler
    </description>
<param name="parser" required="1" vallist="0" default="" type="resource">parser</param>
<param name="handler" required="1" vallist="0" default="" type="callback">handler</param>
<return type="bool">bool</return>
<insert>xml_set_processing_instruction_handler(resource parser, callback handler);</insert>
<dialog title="Insert xml_set_processing_instruction_handler">xml_set_processing_instruction_handler(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="xml_set_start_namespace_decl_handler">
<description>
     Set up character data handler
    </description>
<param name="pind" required="1" vallist="0" default="" type="resource">pind</param>
<param name="hdl" required="1" vallist="0" default="" type="callback">hdl</param>
<return type="bool">bool</return>
<insert>xml_set_start_namespace_decl_handler(resource pind, callback hdl);</insert>
<dialog title="Insert xml_set_start_namespace_decl_handler">xml_set_start_namespace_decl_handler(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="xml_set_unparsed_entity_decl_handler">
<description>
     Set up unparsed entity declaration handler
    </description>
<param name="parser" required="1" vallist="0" default="" type="resource">parser</param>
<param name="handler" required="1" vallist="0" default="" type="callback">handler</param>
<return type="bool">bool</return>
<insert>xml_set_unparsed_entity_decl_handler(resource parser, callback handler);</insert>
<dialog title="Insert xml_set_unparsed_entity_decl_handler">xml_set_unparsed_entity_decl_handler(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="xmlrpc">
<function name="xmlrpc_decode_request">
<description>Decodes XML into native PHP types</description>
<param name="xml" required="1" vallist="0" default="" type="string">xml</param>
<param name="method" required="1" vallist="0" default="" type="string">method</param>
<param name="encoding" required="0" vallist="0" default="" type="string">encoding</param>
<return type="array">array</return>
<insert>xmlrpc_decode_request(string xml, string method [,string encoding]);</insert>
<dialog title="Insert xmlrpc_decode_request">xmlrpc_decode_request(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="xmlrpc_decode">
<description>Decodes XML into native PHP types</description>
<param name="xml" required="1" vallist="0" default="" type="string">xml</param>
<param name="encoding" required="0" vallist="0" default="" type="string">encoding</param>
<return type="array">array</return>
<insert>xmlrpc_decode(string xml [,string encoding]);</insert>
<dialog title="Insert xmlrpc_decode">xmlrpc_decode(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="xmlrpc_encode_request">
<description>Generates XML for a method request</description>
<param name="method" required="1" vallist="0" default="" type="string">method</param>
<param name="params" required="1" vallist="0" default="" type="mixed">params</param>
<return type="string">string</return>
<insert>xmlrpc_encode_request(string method, mixed params);</insert>
<dialog title="Insert xmlrpc_encode_request">xmlrpc_encode_request(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="xmlrpc_encode">
<description>Generates XML for a PHP value</description>
<param name="value" required="1" vallist="0" default="" type="mixed">value</param>
<return type="string">string</return>
<insert>xmlrpc_encode(mixed value);</insert>
<dialog title="Insert xmlrpc_encode">xmlrpc_encode(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="xmlrpc_get_type">
<description>Gets xmlrpc type for a PHP value. Especially useful for base64 and datetime strings</description>
<param name="value" required="1" vallist="0" default="" type="mixed">value</param>
<return type="string">string</return>
<insert>xmlrpc_get_type(mixed value);</insert>
<dialog title="Insert xmlrpc_get_type">xmlrpc_get_type(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="xmlrpc_parse_method_descriptions">
<description>Decodes XML into a list of method descriptions</description>
<param name="xml" required="1" vallist="0" default="" type="string">xml</param>
<return type="array">array</return>
<insert>xmlrpc_parse_method_descriptions(string xml);</insert>
<dialog title="Insert xmlrpc_parse_method_descriptions">xmlrpc_parse_method_descriptions(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="xmlrpc_server_add_introspection_data">
<description>Adds introspection documentation</description>
<param name="server" required="1" vallist="0" default="" type="resource">server</param>
<param name="desc" required="1" vallist="0" default="" type="array">desc</param>
<return type="int">int</return>
<insert>xmlrpc_server_add_introspection_data(resource server, array desc);</insert>
<dialog title="Insert xmlrpc_server_add_introspection_data">xmlrpc_server_add_introspection_data(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="xmlrpc_server_call_method">
<description>Parses XML requests and call methods</description>
<param name="server" required="1" vallist="0" default="" type="resource">server</param>
<param name="xml" required="1" vallist="0" default="" type="string">xml</param>
<param name="user_data" required="1" vallist="0" default="" type="mixed">user_data</param>
<param name="output_options" required="0" vallist="0" default="" type="array">output_options</param>
<return type="mixed">mixed</return>
<insert>xmlrpc_server_call_method(resource server, string xml, mixed user_data [,array output_options]);</insert>
<dialog title="Insert xmlrpc_server_call_method">xmlrpc_server_call_method(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="xmlrpc_server_create">
<description>Creates an xmlrpc server</description>
<return type="resource">resource</return>
<insert>xmlrpc_server_create();</insert>
<dialog title="Insert xmlrpc_server_create">xmlrpc_server_create();</dialog>
<info title="Info window"></info>
</function>
<function name="xmlrpc_server_destroy">
<description>Destroys server resources</description>
<param name="server" required="1" vallist="0" default="" type="resource">server</param>
<return type="void">void</return>
<insert>xmlrpc_server_destroy(resource server);</insert>
<dialog title="Insert xmlrpc_server_destroy">xmlrpc_server_destroy(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="xmlrpc_server_register_introspection_callback">
<description>Register a PHP function to generate documentation</description>
<param name="server" required="1" vallist="0" default="" type="resource">server</param>
<param name="function" required="1" vallist="0" default="" type="string">function</param>
<return type="bool">bool</return>
<insert>xmlrpc_server_register_introspection_callback(resource server, string function);</insert>
<dialog title="Insert xmlrpc_server_register_introspection_callback">xmlrpc_server_register_introspection_callback(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="xmlrpc_server_register_method">
<description>Register a PHP function to resource method matching method_name</description>
<param name="server" required="1" vallist="0" default="" type="resource">server</param>
<param name="method_name" required="1" vallist="0" default="" type="string">method_name</param>
<param name="function" required="1" vallist="0" default="" type="string">function</param>
<return type="bool">bool</return>
<insert>xmlrpc_server_register_method(resource server, string method_name, string function);</insert>
<dialog title="Insert xmlrpc_server_register_method">xmlrpc_server_register_method(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="xmlrpc_set_type">
<description>Sets xmlrpc type, base64 or datetime, for a PHP string value</description>
<param name="value" required="1" vallist="0" default="" type="string">value</param>
<param name="type" required="1" vallist="0" default="" type="string">type</param>
<return type="bool">bool</return>
<insert>xmlrpc_set_type(string value, string type);</insert>
<dialog title="Insert xmlrpc_set_type">xmlrpc_set_type(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="xslt">
<function name="xslt_create">
<description>Create a new XSLT processor</description>
<return type="resource">resource</return>
<insert>xslt_create();</insert>
<dialog title="Insert xslt_create">xslt_create();</dialog>
<info title="Info window"></info>
</function>
<function name="xslt_errno">
<description>Return a error number</description>
<param name="xh" required="1" vallist="0" default="" type="resource">xh</param>
<return type="int">int</return>
<insert>xslt_errno(resource xh);</insert>
<dialog title="Insert xslt_errno">xslt_errno(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="xslt_error">
<description>Return a error string</description>
<param name="xh" required="1" vallist="0" default="" type="resource">xh</param>
<return type="mixed">mixed</return>
<insert>xslt_error(resource xh);</insert>
<dialog title="Insert xslt_error">xslt_error(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="xslt_free">
<description>Free XSLT processor</description>
<param name="xh" required="1" vallist="0" default="" type="resource">xh</param>
<return type="void">void</return>
<insert>xslt_free(resource xh);</insert>
<dialog title="Insert xslt_free">xslt_free(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="xslt_process">
<description>Perform an XSLT transformation</description>
<param name="xh" required="1" vallist="0" default="" type="resource">xh</param>
<param name="xmlcontainer" required="1" vallist="0" default="" type="string">xmlcontainer</param>
<param name="xslcontainer" required="1" vallist="0" default="" type="string">xslcontainer</param>
<param name="resultcontainer" required="0" vallist="0" default="" type="string">resultcontainer</param>
<param name="arguments" required="0" vallist="0" default="" type="array">arguments</param>
<param name="parameters" required="0" vallist="0" default="" type="array">parameters</param>
<return type="mixed">mixed</return>
<insert>xslt_process(resource xh, string xmlcontainer, string xslcontainer [,string resultcontainer] [,array arguments] [,array parameters]);</insert>
<dialog title="Insert xslt_process">xslt_process(%0, %1, %2, %3, %4, %5);</dialog>
<info title="Info window"></info>
</function>
<function name="xslt_set_base">
<description>Set the base URI for all XSLT transformations</description>
<param name="xh" required="1" vallist="0" default="" type="resource">xh</param>
<param name="uri" required="1" vallist="0" default="" type="string">uri</param>
<return type="void">void</return>
<insert>xslt_set_base(resource xh, string uri);</insert>
<dialog title="Insert xslt_set_base">xslt_set_base(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="xslt_set_encoding">
<description>Set the encoding for the parsing of XML documents</description>
<param name="xh" required="1" vallist="0" default="" type="resource">xh</param>
<param name="encoding" required="1" vallist="0" default="" type="string">encoding</param>
<return type="void">void</return>
<insert>xslt_set_encoding(resource xh, string encoding);</insert>
<dialog title="Insert xslt_set_encoding">xslt_set_encoding(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="xslt_set_error_handler">
<description>Set an error handler for a XSLT processor</description>
<param name="xh" required="1" vallist="0" default="" type="resource">xh</param>
<param name="handler" required="1" vallist="0" default="" type="mixed">handler</param>
<return type="void">void</return>
<insert>xslt_set_error_handler(resource xh, mixed handler);</insert>
<dialog title="Insert xslt_set_error_handler">xslt_set_error_handler(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="xslt_set_log">
<description>Set the log file to write log messages to</description>
<param name="xh" required="1" vallist="0" default="" type="resource">xh</param>
<param name="log" required="1" vallist="0" default="" type="mixed">log</param>
<return type="void">void</return>
<insert>xslt_set_log(resource xh, mixed log);</insert>
<dialog title="Insert xslt_set_log">xslt_set_log(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="xslt_set_sax_handler">
<description>Set SAX handlers for a XSLT processor</description>
<param name="xh" required="1" vallist="0" default="" type="resource">xh</param>
<param name="handlers" required="1" vallist="0" default="" type="array">handlers</param>
<return type="void">void</return>
<insert>xslt_set_sax_handler(resource xh, array handlers);</insert>
<dialog title="Insert xslt_set_sax_handler">xslt_set_sax_handler(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="xslt_set_sax_handlers">
<description>
     Set the SAX handlers to be called when the XML document gets processed
    </description>
<param name="processor" required="1" vallist="0" default="" type="resource">processor</param>
<param name="handlers" required="1" vallist="0" default="" type="array">handlers</param>
<return type="void">void</return>
<insert>xslt_set_sax_handlers(resource processor, array handlers);</insert>
<dialog title="Insert xslt_set_sax_handlers">xslt_set_sax_handlers(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="xslt_set_scheme_handler">
<description>Set Scheme handlers for a XSLT processor</description>
<param name="xh" required="1" vallist="0" default="" type="resource">xh</param>
<param name="handlers" required="1" vallist="0" default="" type="array">handlers</param>
<return type="void">void</return>
<insert>xslt_set_scheme_handler(resource xh, array handlers);</insert>
<dialog title="Insert xslt_set_scheme_handler">xslt_set_scheme_handler(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="xslt_set_scheme_handlers">
<description>
     Set the scheme handlers for the XSLT processor
    </description>
<param name="processor" required="1" vallist="0" default="" type="resource">processor</param>
<param name="handlers" required="1" vallist="0" default="" type="array">handlers</param>
<return type="void">void</return>
<insert>xslt_set_scheme_handlers(resource processor, array handlers);</insert>
<dialog title="Insert xslt_set_scheme_handlers">xslt_set_scheme_handlers(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="yaz">
<function name="yaz_addinfo">
<description>Returns additional error information</description>
<param name="id" required="1" vallist="0" default="" type="resource">id</param>
<return type="string">string</return>
<insert>yaz_addinfo(resource id);</insert>
<dialog title="Insert yaz_addinfo">yaz_addinfo(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="yaz_ccl_conf">
<description>Configure CCL parser</description>
<param name="id" required="1" vallist="0" default="" type="resource">id</param>
<param name="config" required="1" vallist="0" default="" type="array">config</param>
<return type="int">int</return>
<insert>yaz_ccl_conf(resource id, array config);</insert>
<dialog title="Insert yaz_ccl_conf">yaz_ccl_conf(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="yaz_ccl_parse">
<description>Invoke CCL Parser</description>
<param name="id" required="1" vallist="0" default="" type="resource">id</param>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<param name="result" required="1" vallist="0" default="" type="array &amp;">result</param>
<return type="int">int</return>
<insert>yaz_ccl_parse(resource id, string query, array &amp; result);</insert>
<dialog title="Insert yaz_ccl_parse">yaz_ccl_parse(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="yaz_close">
<description>Close YAZ connection</description>
<param name="id" required="1" vallist="0" default="" type="resource">id</param>
<return type="int">int</return>
<insert>yaz_close(resource id);</insert>
<dialog title="Insert yaz_close">yaz_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="yaz_connect">
<description>
     Prepares for a connection to a Z39.50 target (server).
    </description>
<param name="zurl" required="1" vallist="0" default="" type="string">zurl</param>
<param name="options" required="0" vallist="0" default="" type="mixed">options</param>
<return type="resource">resource</return>
<insert>yaz_connect(string zurl [,mixed options]);</insert>
<dialog title="Insert yaz_connect">yaz_connect(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="yaz_database">
<description>
     Specifies the databases within a session
    </description>
<param name="id" required="1" vallist="0" default="" type="resource">id</param>
<param name="databases" required="1" vallist="0" default="" type="string">databases</param>
<return type="int">int</return>
<insert>yaz_database(resource id, string databases);</insert>
<dialog title="Insert yaz_database">yaz_database(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="yaz_element">
<description>
     Specifies Element-Set Name for retrieval
    </description>
<param name="id" required="1" vallist="0" default="" type="resource">id</param>
<param name="elementset" required="1" vallist="0" default="" type="string">elementset</param>
<return type="int">int</return>
<insert>yaz_element(resource id, string elementset);</insert>
<dialog title="Insert yaz_element">yaz_element(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="yaz_errno">
<description>Returns error number</description>
<param name="id" required="1" vallist="0" default="" type="resource">id</param>
<return type="int">int</return>
<insert>yaz_errno(resource id);</insert>
<dialog title="Insert yaz_errno">yaz_errno(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="yaz_error">
<description>Returns error description</description>
<param name="id" required="1" vallist="0" default="" type="resource">id</param>
<return type="string">string</return>
<insert>yaz_error(resource id);</insert>
<dialog title="Insert yaz_error">yaz_error(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="yaz_get_option">
<description>Returns value of option for connection</description>
<param name="id" required="1" vallist="0" default="" type="resource">id</param>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<return type="string">string</return>
<insert>yaz_get_option(resource id, string name);</insert>
<dialog title="Insert yaz_get_option">yaz_get_option(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="yaz_hits">
<description>Returns number of hits for last search</description>
<param name="id" required="1" vallist="0" default="" type="resource">id</param>
<return type="int">int</return>
<insert>yaz_hits(resource id);</insert>
<dialog title="Insert yaz_hits">yaz_hits(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="yaz_itemorder">
<description>
     Prepares for Z39.50 Item Order with an ILL-Request package
    </description>
<param name="id" required="1" vallist="0" default="" type="resource">id</param>
<param name="args" required="1" vallist="0" default="" type="array">args</param>
<return type="int">int</return>
<insert>yaz_itemorder(resource id, array args);</insert>
<dialog title="Insert yaz_itemorder">yaz_itemorder(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="yaz_present">
<description>
     Prepares for retrieval (Z39.50 present).
    </description>
<param name="id" required="1" vallist="0" default="" type="resource">id</param>
<return type="int">int</return>
<insert>yaz_present(resource id);</insert>
<dialog title="Insert yaz_present">yaz_present(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="yaz_range">
<description>
     Specifies the maximum number of records to retrieve
    </description>
<param name="id" required="1" vallist="0" default="" type="resource">id</param>
<param name="start" required="1" vallist="0" default="" type="int">start</param>
<param name="number" required="1" vallist="0" default="" type="int">number</param>
<return type="int">int</return>
<insert>yaz_range(resource id, int start, int number);</insert>
<dialog title="Insert yaz_range">yaz_range(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="yaz_record">
<description>Returns a record</description>
<param name="id" required="1" vallist="0" default="" type="resource">id</param>
<param name="pos" required="1" vallist="0" default="" type="int">pos</param>
<param name="type" required="1" vallist="0" default="" type="string">type</param>
<return type="string">string</return>
<insert>yaz_record(resource id, int pos, string type);</insert>
<dialog title="Insert yaz_record">yaz_record(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="yaz_scan_result">
<description>Returns Scan Response result</description>
<param name="id" required="1" vallist="0" default="" type="resource">id</param>
<param name="result" required="0" vallist="0" default="" type="array">result</param>
<return type="array">array</return>
<insert>yaz_scan_result(resource id [,array result]);</insert>
<dialog title="Insert yaz_scan_result">yaz_scan_result(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="yaz_scan">
<description>Prepares for a scan</description>
<param name="id" required="1" vallist="0" default="" type="resource">id</param>
<param name="type" required="1" vallist="0" default="" type="string">type</param>
<param name="startterm" required="1" vallist="0" default="" type="string">startterm</param>
<param name="flags" required="0" vallist="0" default="" type="array">flags</param>
<return type="int">int</return>
<insert>yaz_scan(resource id, string type, string startterm [,array flags]);</insert>
<dialog title="Insert yaz_scan">yaz_scan(%0, %1, %2, %3);</dialog>
<info title="Info window"></info>
</function>
<function name="yaz_schema">
<description>
     Specifies schema for retrieval.
    </description>
<param name="id" required="1" vallist="0" default="" type="resource">id</param>
<param name="schema" required="1" vallist="0" default="" type="string">schema</param>
<return type="int">int</return>
<insert>yaz_schema(resource id, string schema);</insert>
<dialog title="Insert yaz_schema">yaz_schema(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="yaz_search">
<description>Prepares for a search</description>
<param name="id" required="1" vallist="0" default="" type="resource">id</param>
<param name="type" required="1" vallist="0" default="" type="string">type</param>
<param name="query" required="1" vallist="0" default="" type="string">query</param>
<return type="int">int</return>
<insert>yaz_search(resource id, string type, string query);</insert>
<dialog title="Insert yaz_search">yaz_search(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="yaz_set_option">
<description>Sets one or more options for connection</description>
<param name="id" required="1" vallist="0" default="" type="resource">id</param>
<param name="name" required="1" vallist="0" default="" type="string">name</param>
<param name="value" required="1" vallist="0" default="" type="string">value</param>
<return type="string">string</return>
<insert>yaz_set_option(resource id, string name, string value);</insert>
<dialog title="Insert yaz_set_option">yaz_set_option(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="yaz_sort">
<description>Sets sorting criteria</description>
<param name="id" required="1" vallist="0" default="" type="resource">id</param>
<param name="criteria" required="1" vallist="0" default="" type="string">criteria</param>
<return type="int">int</return>
<insert>yaz_sort(resource id, string criteria);</insert>
<dialog title="Insert yaz_sort">yaz_sort(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="yaz_syntax">
<description>
     Specifies the preferred record syntax for retrieval.
    </description>
<param name="id" required="1" vallist="0" default="" type="resource">id</param>
<param name="syntax" required="1" vallist="0" default="" type="string">syntax</param>
<return type="int">int</return>
<insert>yaz_syntax(resource id, string syntax);</insert>
<dialog title="Insert yaz_syntax">yaz_syntax(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="yaz_wait">
<description>Wait for Z39.50 requests to complete</description>
<param name="options" required="0" vallist="0" default="" type="array">options</param>
<return type="int">int</return>
<insert>yaz_wait([array options]);</insert>
<dialog title="Insert yaz_wait">yaz_wait(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="zip">
<function name="zip_close">
<description>Close a Zip File Archive</description>
<param name="zip" required="1" vallist="0" default="" type="resource">zip</param>
<return type="void">void</return>
<insert>zip_close(resource zip);</insert>
<dialog title="Insert zip_close">zip_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="zip_entry_close">
<description>Close a Directory Entry</description>
<param name="zip_entry" required="1" vallist="0" default="" type="resource">zip_entry</param>
<return type="void">void</return>
<insert>zip_entry_close(resource zip_entry);</insert>
<dialog title="Insert zip_entry_close">zip_entry_close(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="zip_entry_compressedsize">
<description>Retrieve the Compressed Size of a Directory Entry</description>
<param name="zip_entry" required="1" vallist="0" default="" type="resource">zip_entry</param>
<return type="int">int</return>
<insert>zip_entry_compressedsize(resource zip_entry);</insert>
<dialog title="Insert zip_entry_compressedsize">zip_entry_compressedsize(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="zip_entry_compressionmethod">
<description>Retrieve the Compression Method of a Directory Entry</description>
<param name="zip_entry" required="1" vallist="0" default="" type="resource">zip_entry</param>
<return type="string">string</return>
<insert>zip_entry_compressionmethod(resource zip_entry);</insert>
<dialog title="Insert zip_entry_compressionmethod">zip_entry_compressionmethod(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="zip_entry_filesize">
<description>Retrieve the Actual File Size of a Directory Entry</description>
<param name="zip_entry" required="1" vallist="0" default="" type="resource">zip_entry</param>
<return type="int">int</return>
<insert>zip_entry_filesize(resource zip_entry);</insert>
<dialog title="Insert zip_entry_filesize">zip_entry_filesize(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="zip_entry_name">
<description>Retrieve the Name of a Directory Entry</description>
<param name="zip_entry" required="1" vallist="0" default="" type="resource">zip_entry</param>
<return type="string">string</return>
<insert>zip_entry_name(resource zip_entry);</insert>
<dialog title="Insert zip_entry_name">zip_entry_name(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="zip_entry_open">
<description>Open a Directory Entry for Reading</description>
<param name="zip" required="1" vallist="0" default="" type="resource">zip</param>
<param name="zip_entry" required="1" vallist="0" default="" type="resource">zip_entry</param>
<param name="mode" required="0" vallist="0" default="" type="string">mode</param>
<return type="bool">bool</return>
<insert>zip_entry_open(resource zip, resource zip_entry [,string mode]);</insert>
<dialog title="Insert zip_entry_open">zip_entry_open(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="zip_entry_read">
<description>Read From an Open Directory Entry</description>
<param name="zip_entry" required="1" vallist="0" default="" type="resource">zip_entry</param>
<param name="length" required="0" vallist="0" default="" type="int">length</param>
<return type="string">string</return>
<insert>zip_entry_read(resource zip_entry [,int length]);</insert>
<dialog title="Insert zip_entry_read">zip_entry_read(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="zip_open">
<description>Open a Zip File Archive</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<return type="resource">resource</return>
<insert>zip_open(string filename);</insert>
<dialog title="Insert zip_open">zip_open(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="zip_read">
<description>Read Next Entry in a Zip File Archive</description>
<param name="zip" required="1" vallist="0" default="" type="resource">zip</param>
<return type="resource">resource</return>
<insert>zip_read(resource zip);</insert>
<dialog title="Insert zip_read">zip_read(%0);</dialog>
<info title="Info window"></info>
</function>
</group>
<group name="zlib">
<function name="gzclose">
<description>Close an open gz-file pointer</description>
<param name="zp" required="1" vallist="0" default="" type="resource">zp</param>
<return type="int">int</return>
<insert>gzclose(resource zp);</insert>
<dialog title="Insert gzclose">gzclose(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="gzcompress">
<description>Compress a string</description>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<param name="level" required="0" vallist="0" default="" type="int">level</param>
<return type="string">string</return>
<insert>gzcompress(string data [,int level]);</insert>
<dialog title="Insert gzcompress">gzcompress(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gzdeflate">
<description>Deflate a string</description>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<param name="level" required="0" vallist="0" default="" type="int">level</param>
<return type="string">string</return>
<insert>gzdeflate(string data [,int level]);</insert>
<dialog title="Insert gzdeflate">gzdeflate(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gzencode">
<description>Create a gzip compressed string</description>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<param name="level" required="0" vallist="0" default="" type="int">level</param>
<param name="encoding_mode" required="0" vallist="0" default="" type="int">encoding_mode</param>
<return type="string">string</return>
<insert>gzencode(string data [,int level] [,int encoding_mode]);</insert>
<dialog title="Insert gzencode">gzencode(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="gzeof">
<description>Test for end-of-file on a gz-file pointer</description>
<param name="zp" required="1" vallist="0" default="" type="resource">zp</param>
<return type="int">int</return>
<insert>gzeof(resource zp);</insert>
<dialog title="Insert gzeof">gzeof(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="gzfile">
<description>Read entire gz-file into an array</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="use_include_path" required="0" vallist="0" default="" type="int">use_include_path</param>
<return type="array">array</return>
<insert>gzfile(string filename [,int use_include_path]);</insert>
<dialog title="Insert gzfile">gzfile(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gzgetc">
<description>Get character from gz-file pointer</description>
<param name="zp" required="1" vallist="0" default="" type="resource">zp</param>
<return type="string">string</return>
<insert>gzgetc(resource zp);</insert>
<dialog title="Insert gzgetc">gzgetc(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="gzgets">
<description>Get line from file pointer</description>
<param name="zp" required="1" vallist="0" default="" type="resource">zp</param>
<param name="length" required="1" vallist="0" default="" type="int">length</param>
<return type="string">string</return>
<insert>gzgets(resource zp, int length);</insert>
<dialog title="Insert gzgets">gzgets(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gzgetss">
<description>
     Get line from gz-file pointer and strip HTML tags
    </description>
<param name="zp" required="1" vallist="0" default="" type="resource">zp</param>
<param name="length" required="1" vallist="0" default="" type="int">length</param>
<param name="allowable_tags" required="0" vallist="0" default="" type="string">allowable_tags</param>
<return type="string">string</return>
<insert>gzgetss(resource zp, int length [,string allowable_tags]);</insert>
<dialog title="Insert gzgetss">gzgetss(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="gzinflate">
<description>Inflate a deflated string</description>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<param name="length" required="0" vallist="0" default="" type="int">length</param>
<return type="string">string</return>
<insert>gzinflate(string data [,int length]);</insert>
<dialog title="Insert gzinflate">gzinflate(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gzopen">
<description>Open gz-file</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="mode" required="1" vallist="0" default="" type="string">mode</param>
<param name="use_include_path" required="0" vallist="0" default="" type="int">use_include_path</param>
<return type="resource">resource</return>
<insert>gzopen(string filename, string mode [,int use_include_path]);</insert>
<dialog title="Insert gzopen">gzopen(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="gzpassthru">
<description>
     Output all remaining data on a gz-file pointer
    </description>
<param name="zp" required="1" vallist="0" default="" type="resource">zp</param>
<return type="int">int</return>
<insert>gzpassthru(resource zp);</insert>
<dialog title="Insert gzpassthru">gzpassthru(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="gzread">
<description>Binary-safe gz-file read</description>
<param name="zp" required="1" vallist="0" default="" type="resource">zp</param>
<param name="length" required="1" vallist="0" default="" type="int">length</param>
<return type="string">string</return>
<insert>gzread(resource zp, int length);</insert>
<dialog title="Insert gzread">gzread(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gzrewind">
<description>Rewind the position of a gz-file pointer</description>
<param name="zp" required="1" vallist="0" default="" type="resource">zp</param>
<return type="int">int</return>
<insert>gzrewind(resource zp);</insert>
<dialog title="Insert gzrewind">gzrewind(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="gzseek">
<description>Seek on a gz-file pointer</description>
<param name="zp" required="1" vallist="0" default="" type="resource">zp</param>
<param name="offset" required="1" vallist="0" default="" type="int">offset</param>
<return type="int">int</return>
<insert>gzseek(resource zp, int offset);</insert>
<dialog title="Insert gzseek">gzseek(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gztell">
<description>Tell gz-file pointer read/write position</description>
<param name="zp" required="1" vallist="0" default="" type="resource">zp</param>
<return type="int">int</return>
<insert>gztell(resource zp);</insert>
<dialog title="Insert gztell">gztell(%0);</dialog>
<info title="Info window"></info>
</function>
<function name="gzuncompress">
<description>Uncompress a deflated string</description>
<param name="data" required="1" vallist="0" default="" type="string">data</param>
<param name="length" required="0" vallist="0" default="" type="int">length</param>
<return type="string">string</return>
<insert>gzuncompress(string data [,int length]);</insert>
<dialog title="Insert gzuncompress">gzuncompress(%0, %1);</dialog>
<info title="Info window"></info>
</function>
<function name="gzwrite">
<description>Binary-safe gz-file write</description>
<param name="zp" required="1" vallist="0" default="" type="resource">zp</param>
<param name="string" required="1" vallist="0" default="" type="string">string</param>
<param name="length" required="0" vallist="0" default="" type="int">length</param>
<return type="int">int</return>
<insert>gzwrite(resource zp, string string [,int length]);</insert>
<dialog title="Insert gzwrite">gzwrite(%0, %1, %2);</dialog>
<info title="Info window"></info>
</function>
<function name="readgzfile">
<description>Output a gz-file</description>
<param name="filename" required="1" vallist="0" default="" type="string">filename</param>
<param name="use_include_path" required="0" vallist="0" default="" type="int">use_include_path</param>
<return type="int">int</return>
<insert>readgzfile(string filename [,int use_include_path]);</insert>
<dialog title="Insert readgzfile">readgzfile(%0, %1);</dialog>
<info title="Info window"></info>
</function>
</group>
